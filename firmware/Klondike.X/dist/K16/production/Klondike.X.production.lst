

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Fri Nov 08 22:51:49 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16LF1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	idataBANK4,global,class=CODE,delta=2
     7                           	psect	idataBANK6,global,class=CODE,delta=2
     8                           	psect	strings,global,class=STRING,delta=2
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    20                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	inittext,global,class=CODE,delta=2
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	swtext1,local,class=CONST,delta=2
    67                           	psect	text39,local,class=CODE,merge=1,delta=2
    68                           	psect	text40,local,class=CODE,merge=1,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,delta=2
    70                           	psect	text42,local,class=CODE,merge=1,delta=2
    71                           	psect	text43,local,class=CODE,merge=1,delta=2
    72                           	psect	text44,local,class=CODE,merge=1,delta=2
    73                           	psect	text45,local,class=CODE,merge=1,delta=2
    74                           	psect	text46,local,class=CODE,merge=1,delta=2
    75                           	psect	text47,local,class=CODE,merge=1,delta=2
    76                           	psect	text48,local,class=CODE,merge=1,delta=2
    77                           	psect	text49,local,class=CODE,merge=1,delta=2
    78                           	psect	text50,local,class=CODE,merge=1,delta=2
    79                           	psect	text51,local,class=CODE,merge=1,delta=2
    80                           	psect	text52,local,class=CODE,merge=1,delta=2
    81                           	psect	text53,local,class=CODE,merge=1,delta=2
    82                           	psect	text54,local,class=CODE,merge=1,delta=2
    83                           	psect	text55,local,class=CODE,merge=1,delta=2
    84                           	psect	text56,local,class=CODE,merge=1,delta=2
    85                           	psect	text57,local,class=CODE,merge=1,delta=2
    86                           	psect	text58,local,class=CODE,merge=1,delta=2
    87                           	psect	text59,local,class=CODE,merge=1,delta=2
    88                           	psect	text60,local,class=CODE,merge=1,delta=2
    89                           	psect	text61,local,class=CODE,merge=1,delta=2
    90                           	psect	text62,local,class=CODE,merge=1,delta=2
    91                           	psect	text63,local,class=CODE,merge=1,delta=2
    92                           	psect	text64,local,class=CODE,merge=1,delta=2
    93                           	psect	text65,local,class=CODE,merge=1,delta=2
    94                           	psect	intentry,global,class=CODE,delta=2
    95                           	psect	text67,local,class=CODE,merge=1,delta=2
    96                           	psect	text68,local,class=CODE,merge=1,delta=2
    97                           	psect	text69,local,class=CODE,merge=1,delta=2
    98                           	psect	text70,local,class=CODE,merge=1,delta=2
    99                           	dabs	1,0x620,48
   100                           	dabs	1,0x5A0,80
   101                           	dabs	1,0x53C,52
   102                           	dabs	1,0x20,32,_BDT
   103                           	dabs	1,0x48,8,_CtrlTrfData
   104                           	dabs	1,0x40,8,_SetupPkt
   105                           	dabs	1,0x220,64,_INPacket
   106                           	dabs	1,0x2A0,64,_OUTPacket
   107                           	dabs	1,0x233C,0,_WorkQue
   108                           	dabs	1,0x7E,2
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  0111                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0117                     	;# 
   162  0118                     	;# 
   163  0119                     	;# 
   164  011D                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  018E                     	;# 
   168  0191                     	;# 
   169  0191                     	;# 
   170  0192                     	;# 
   171  0193                     	;# 
   172  0193                     	;# 
   173  0194                     	;# 
   174  0195                     	;# 
   175  0196                     	;# 
   176  0199                     	;# 
   177  019A                     	;# 
   178  019B                     	;# 
   179  019B                     	;# 
   180  019C                     	;# 
   181  019D                     	;# 
   182  019E                     	;# 
   183  019F                     	;# 
   184  020C                     	;# 
   185  020D                     	;# 
   186  0211                     	;# 
   187  0211                     	;# 
   188  0212                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0213                     	;# 
   192  0214                     	;# 
   193  0214                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0216                     	;# 
   198  0216                     	;# 
   199  0217                     	;# 
   200  0217                     	;# 
   201  0391                     	;# 
   202  0392                     	;# 
   203  0393                     	;# 
   204  0394                     	;# 
   205  0395                     	;# 
   206  0396                     	;# 
   207  039A                     	;# 
   208  039B                     	;# 
   209  0611                     	;# 
   210  0612                     	;# 
   211  0613                     	;# 
   212  0613                     	;# 
   213  0614                     	;# 
   214  0615                     	;# 
   215  0616                     	;# 
   216  0616                     	;# 
   217  0691                     	;# 
   218  0692                     	;# 
   219  0693                     	;# 
   220  0694                     	;# 
   221  0695                     	;# 
   222  0E8E                     	;# 
   223  0E8F                     	;# 
   224  0E90                     	;# 
   225  0E91                     	;# 
   226  0E92                     	;# 
   227  0E93                     	;# 
   228  0E94                     	;# 
   229  0E94                     	;# 
   230  0E95                     	;# 
   231  0E96                     	;# 
   232  0E97                     	;# 
   233  0E98                     	;# 
   234  0E99                     	;# 
   235  0E9A                     	;# 
   236  0E9B                     	;# 
   237  0E9C                     	;# 
   238  0E9D                     	;# 
   239  0E9E                     	;# 
   240  0E9F                     	;# 
   241  0FE4                     	;# 
   242  0FE5                     	;# 
   243  0FE6                     	;# 
   244  0FE7                     	;# 
   245  0FE8                     	;# 
   246  0FE9                     	;# 
   247  0FEA                     	;# 
   248  0FEB                     	;# 
   249  0FED                     	;# 
   250  0FEE                     	;# 
   251  0FEF                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0008                     	;# 
   261  0009                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000D                     	;# 
   266  000E                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  0111                     	;# 
   299  0112                     	;# 
   300  0113                     	;# 
   301  0114                     	;# 
   302  0115                     	;# 
   303  0116                     	;# 
   304  0117                     	;# 
   305  0118                     	;# 
   306  0119                     	;# 
   307  011D                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  018E                     	;# 
   311  0191                     	;# 
   312  0191                     	;# 
   313  0192                     	;# 
   314  0193                     	;# 
   315  0193                     	;# 
   316  0194                     	;# 
   317  0195                     	;# 
   318  0196                     	;# 
   319  0199                     	;# 
   320  019A                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019C                     	;# 
   324  019D                     	;# 
   325  019E                     	;# 
   326  019F                     	;# 
   327  020C                     	;# 
   328  020D                     	;# 
   329  0211                     	;# 
   330  0211                     	;# 
   331  0212                     	;# 
   332  0212                     	;# 
   333  0213                     	;# 
   334  0213                     	;# 
   335  0214                     	;# 
   336  0214                     	;# 
   337  0215                     	;# 
   338  0215                     	;# 
   339  0215                     	;# 
   340  0216                     	;# 
   341  0216                     	;# 
   342  0217                     	;# 
   343  0217                     	;# 
   344  0391                     	;# 
   345  0392                     	;# 
   346  0393                     	;# 
   347  0394                     	;# 
   348  0395                     	;# 
   349  0396                     	;# 
   350  039A                     	;# 
   351  039B                     	;# 
   352  0611                     	;# 
   353  0612                     	;# 
   354  0613                     	;# 
   355  0613                     	;# 
   356  0614                     	;# 
   357  0615                     	;# 
   358  0616                     	;# 
   359  0616                     	;# 
   360  0691                     	;# 
   361  0692                     	;# 
   362  0693                     	;# 
   363  0694                     	;# 
   364  0695                     	;# 
   365  0E8E                     	;# 
   366  0E8F                     	;# 
   367  0E90                     	;# 
   368  0E91                     	;# 
   369  0E92                     	;# 
   370  0E93                     	;# 
   371  0E94                     	;# 
   372  0E94                     	;# 
   373  0E95                     	;# 
   374  0E96                     	;# 
   375  0E97                     	;# 
   376  0E98                     	;# 
   377  0E99                     	;# 
   378  0E9A                     	;# 
   379  0E9B                     	;# 
   380  0E9C                     	;# 
   381  0E9D                     	;# 
   382  0E9E                     	;# 
   383  0E9F                     	;# 
   384  0FE4                     	;# 
   385  0FE5                     	;# 
   386  0FE6                     	;# 
   387  0FE7                     	;# 
   388  0FE8                     	;# 
   389  0FE9                     	;# 
   390  0FEA                     	;# 
   391  0FEB                     	;# 
   392  0FED                     	;# 
   393  0FEE                     	;# 
   394  0FEF                     	;# 
   395  0000                     	;# 
   396  0001                     	;# 
   397  0002                     	;# 
   398  0003                     	;# 
   399  0004                     	;# 
   400  0005                     	;# 
   401  0006                     	;# 
   402  0007                     	;# 
   403  0008                     	;# 
   404  0009                     	;# 
   405  000A                     	;# 
   406  000B                     	;# 
   407  000C                     	;# 
   408  000D                     	;# 
   409  000E                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  008E                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  0111                     	;# 
   442  0112                     	;# 
   443  0113                     	;# 
   444  0114                     	;# 
   445  0115                     	;# 
   446  0116                     	;# 
   447  0117                     	;# 
   448  0118                     	;# 
   449  0119                     	;# 
   450  011D                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  018E                     	;# 
   454  0191                     	;# 
   455  0191                     	;# 
   456  0192                     	;# 
   457  0193                     	;# 
   458  0193                     	;# 
   459  0194                     	;# 
   460  0195                     	;# 
   461  0196                     	;# 
   462  0199                     	;# 
   463  019A                     	;# 
   464  019B                     	;# 
   465  019B                     	;# 
   466  019C                     	;# 
   467  019D                     	;# 
   468  019E                     	;# 
   469  019F                     	;# 
   470  020C                     	;# 
   471  020D                     	;# 
   472  0211                     	;# 
   473  0211                     	;# 
   474  0212                     	;# 
   475  0212                     	;# 
   476  0213                     	;# 
   477  0213                     	;# 
   478  0214                     	;# 
   479  0214                     	;# 
   480  0215                     	;# 
   481  0215                     	;# 
   482  0215                     	;# 
   483  0216                     	;# 
   484  0216                     	;# 
   485  0217                     	;# 
   486  0217                     	;# 
   487  0391                     	;# 
   488  0392                     	;# 
   489  0393                     	;# 
   490  0394                     	;# 
   491  0395                     	;# 
   492  0396                     	;# 
   493  039A                     	;# 
   494  039B                     	;# 
   495  0611                     	;# 
   496  0612                     	;# 
   497  0613                     	;# 
   498  0613                     	;# 
   499  0614                     	;# 
   500  0615                     	;# 
   501  0616                     	;# 
   502  0616                     	;# 
   503  0691                     	;# 
   504  0692                     	;# 
   505  0693                     	;# 
   506  0694                     	;# 
   507  0695                     	;# 
   508  0E8E                     	;# 
   509  0E8F                     	;# 
   510  0E90                     	;# 
   511  0E91                     	;# 
   512  0E92                     	;# 
   513  0E93                     	;# 
   514  0E94                     	;# 
   515  0E94                     	;# 
   516  0E95                     	;# 
   517  0E96                     	;# 
   518  0E97                     	;# 
   519  0E98                     	;# 
   520  0E99                     	;# 
   521  0E9A                     	;# 
   522  0E9B                     	;# 
   523  0E9C                     	;# 
   524  0E9D                     	;# 
   525  0E9E                     	;# 
   526  0E9F                     	;# 
   527  0FE4                     	;# 
   528  0FE5                     	;# 
   529  0FE6                     	;# 
   530  0FE7                     	;# 
   531  0FE8                     	;# 
   532  0FE9                     	;# 
   533  0FEA                     	;# 
   534  0FEB                     	;# 
   535  0FED                     	;# 
   536  0FEE                     	;# 
   537  0FEF                     	;# 
   538  0000                     	;# 
   539  0001                     	;# 
   540  0002                     	;# 
   541  0003                     	;# 
   542  0004                     	;# 
   543  0005                     	;# 
   544  0006                     	;# 
   545  0007                     	;# 
   546  0008                     	;# 
   547  0009                     	;# 
   548  000A                     	;# 
   549  000B                     	;# 
   550  000C                     	;# 
   551  000D                     	;# 
   552  000E                     	;# 
   553  0011                     	;# 
   554  0012                     	;# 
   555  0015                     	;# 
   556  0016                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001B                     	;# 
   563  001C                     	;# 
   564  008C                     	;# 
   565  008D                     	;# 
   566  008E                     	;# 
   567  0091                     	;# 
   568  0092                     	;# 
   569  0095                     	;# 
   570  0096                     	;# 
   571  0097                     	;# 
   572  0098                     	;# 
   573  0099                     	;# 
   574  009A                     	;# 
   575  009B                     	;# 
   576  009B                     	;# 
   577  009C                     	;# 
   578  009D                     	;# 
   579  009E                     	;# 
   580  009F                     	;# 
   581  010C                     	;# 
   582  010D                     	;# 
   583  010E                     	;# 
   584  0111                     	;# 
   585  0112                     	;# 
   586  0113                     	;# 
   587  0114                     	;# 
   588  0115                     	;# 
   589  0116                     	;# 
   590  0117                     	;# 
   591  0118                     	;# 
   592  0119                     	;# 
   593  011D                     	;# 
   594  018C                     	;# 
   595  018D                     	;# 
   596  018E                     	;# 
   597  0191                     	;# 
   598  0191                     	;# 
   599  0192                     	;# 
   600  0193                     	;# 
   601  0193                     	;# 
   602  0194                     	;# 
   603  0195                     	;# 
   604  0196                     	;# 
   605  0199                     	;# 
   606  019A                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019C                     	;# 
   610  019D                     	;# 
   611  019E                     	;# 
   612  019F                     	;# 
   613  020C                     	;# 
   614  020D                     	;# 
   615  0211                     	;# 
   616  0211                     	;# 
   617  0212                     	;# 
   618  0212                     	;# 
   619  0213                     	;# 
   620  0213                     	;# 
   621  0214                     	;# 
   622  0214                     	;# 
   623  0215                     	;# 
   624  0215                     	;# 
   625  0215                     	;# 
   626  0216                     	;# 
   627  0216                     	;# 
   628  0217                     	;# 
   629  0217                     	;# 
   630  0391                     	;# 
   631  0392                     	;# 
   632  0393                     	;# 
   633  0394                     	;# 
   634  0395                     	;# 
   635  0396                     	;# 
   636  039A                     	;# 
   637  039B                     	;# 
   638  0611                     	;# 
   639  0612                     	;# 
   640  0613                     	;# 
   641  0613                     	;# 
   642  0614                     	;# 
   643  0615                     	;# 
   644  0616                     	;# 
   645  0616                     	;# 
   646  0691                     	;# 
   647  0692                     	;# 
   648  0693                     	;# 
   649  0694                     	;# 
   650  0695                     	;# 
   651  0E8E                     	;# 
   652  0E8F                     	;# 
   653  0E90                     	;# 
   654  0E91                     	;# 
   655  0E92                     	;# 
   656  0E93                     	;# 
   657  0E94                     	;# 
   658  0E94                     	;# 
   659  0E95                     	;# 
   660  0E96                     	;# 
   661  0E97                     	;# 
   662  0E98                     	;# 
   663  0E99                     	;# 
   664  0E9A                     	;# 
   665  0E9B                     	;# 
   666  0E9C                     	;# 
   667  0E9D                     	;# 
   668  0E9E                     	;# 
   669  0E9F                     	;# 
   670  0FE4                     	;# 
   671  0FE5                     	;# 
   672  0FE6                     	;# 
   673  0FE7                     	;# 
   674  0FE8                     	;# 
   675  0FE9                     	;# 
   676  0FEA                     	;# 
   677  0FEB                     	;# 
   678  0FED                     	;# 
   679  0FEE                     	;# 
   680  0FEF                     	;# 
   681  0000                     	;# 
   682  0001                     	;# 
   683  0002                     	;# 
   684  0003                     	;# 
   685  0004                     	;# 
   686  0005                     	;# 
   687  0006                     	;# 
   688  0007                     	;# 
   689  0008                     	;# 
   690  0009                     	;# 
   691  000A                     	;# 
   692  000B                     	;# 
   693  000C                     	;# 
   694  000D                     	;# 
   695  000E                     	;# 
   696  0011                     	;# 
   697  0012                     	;# 
   698  0015                     	;# 
   699  0016                     	;# 
   700  0016                     	;# 
   701  0017                     	;# 
   702  0018                     	;# 
   703  0019                     	;# 
   704  001A                     	;# 
   705  001B                     	;# 
   706  001C                     	;# 
   707  008C                     	;# 
   708  008D                     	;# 
   709  008E                     	;# 
   710  0091                     	;# 
   711  0092                     	;# 
   712  0095                     	;# 
   713  0096                     	;# 
   714  0097                     	;# 
   715  0098                     	;# 
   716  0099                     	;# 
   717  009A                     	;# 
   718  009B                     	;# 
   719  009B                     	;# 
   720  009C                     	;# 
   721  009D                     	;# 
   722  009E                     	;# 
   723  009F                     	;# 
   724  010C                     	;# 
   725  010D                     	;# 
   726  010E                     	;# 
   727  0111                     	;# 
   728  0112                     	;# 
   729  0113                     	;# 
   730  0114                     	;# 
   731  0115                     	;# 
   732  0116                     	;# 
   733  0117                     	;# 
   734  0118                     	;# 
   735  0119                     	;# 
   736  011D                     	;# 
   737  018C                     	;# 
   738  018D                     	;# 
   739  018E                     	;# 
   740  0191                     	;# 
   741  0191                     	;# 
   742  0192                     	;# 
   743  0193                     	;# 
   744  0193                     	;# 
   745  0194                     	;# 
   746  0195                     	;# 
   747  0196                     	;# 
   748  0199                     	;# 
   749  019A                     	;# 
   750  019B                     	;# 
   751  019B                     	;# 
   752  019C                     	;# 
   753  019D                     	;# 
   754  019E                     	;# 
   755  019F                     	;# 
   756  020C                     	;# 
   757  020D                     	;# 
   758  0211                     	;# 
   759  0211                     	;# 
   760  0212                     	;# 
   761  0212                     	;# 
   762  0213                     	;# 
   763  0213                     	;# 
   764  0214                     	;# 
   765  0214                     	;# 
   766  0215                     	;# 
   767  0215                     	;# 
   768  0215                     	;# 
   769  0216                     	;# 
   770  0216                     	;# 
   771  0217                     	;# 
   772  0217                     	;# 
   773  0391                     	;# 
   774  0392                     	;# 
   775  0393                     	;# 
   776  0394                     	;# 
   777  0395                     	;# 
   778  0396                     	;# 
   779  039A                     	;# 
   780  039B                     	;# 
   781  0611                     	;# 
   782  0612                     	;# 
   783  0613                     	;# 
   784  0613                     	;# 
   785  0614                     	;# 
   786  0615                     	;# 
   787  0616                     	;# 
   788  0616                     	;# 
   789  0691                     	;# 
   790  0692                     	;# 
   791  0693                     	;# 
   792  0694                     	;# 
   793  0695                     	;# 
   794  0E8E                     	;# 
   795  0E8F                     	;# 
   796  0E90                     	;# 
   797  0E91                     	;# 
   798  0E92                     	;# 
   799  0E93                     	;# 
   800  0E94                     	;# 
   801  0E94                     	;# 
   802  0E95                     	;# 
   803  0E96                     	;# 
   804  0E97                     	;# 
   805  0E98                     	;# 
   806  0E99                     	;# 
   807  0E9A                     	;# 
   808  0E9B                     	;# 
   809  0E9C                     	;# 
   810  0E9D                     	;# 
   811  0E9E                     	;# 
   812  0E9F                     	;# 
   813  0FE4                     	;# 
   814  0FE5                     	;# 
   815  0FE6                     	;# 
   816  0FE7                     	;# 
   817  0FE8                     	;# 
   818  0FE9                     	;# 
   819  0FEA                     	;# 
   820  0FEB                     	;# 
   821  0FED                     	;# 
   822  0FEE                     	;# 
   823  0FEF                     	;# 
   824  0000                     	;# 
   825  0001                     	;# 
   826  0002                     	;# 
   827  0003                     	;# 
   828  0004                     	;# 
   829  0005                     	;# 
   830  0006                     	;# 
   831  0007                     	;# 
   832  0008                     	;# 
   833  0009                     	;# 
   834  000A                     	;# 
   835  000B                     	;# 
   836  000C                     	;# 
   837  000D                     	;# 
   838  000E                     	;# 
   839  0011                     	;# 
   840  0012                     	;# 
   841  0015                     	;# 
   842  0016                     	;# 
   843  0016                     	;# 
   844  0017                     	;# 
   845  0018                     	;# 
   846  0019                     	;# 
   847  001A                     	;# 
   848  001B                     	;# 
   849  001C                     	;# 
   850  008C                     	;# 
   851  008D                     	;# 
   852  008E                     	;# 
   853  0091                     	;# 
   854  0092                     	;# 
   855  0095                     	;# 
   856  0096                     	;# 
   857  0097                     	;# 
   858  0098                     	;# 
   859  0099                     	;# 
   860  009A                     	;# 
   861  009B                     	;# 
   862  009B                     	;# 
   863  009C                     	;# 
   864  009D                     	;# 
   865  009E                     	;# 
   866  009F                     	;# 
   867  010C                     	;# 
   868  010D                     	;# 
   869  010E                     	;# 
   870  0111                     	;# 
   871  0112                     	;# 
   872  0113                     	;# 
   873  0114                     	;# 
   874  0115                     	;# 
   875  0116                     	;# 
   876  0117                     	;# 
   877  0118                     	;# 
   878  0119                     	;# 
   879  011D                     	;# 
   880  018C                     	;# 
   881  018D                     	;# 
   882  018E                     	;# 
   883  0191                     	;# 
   884  0191                     	;# 
   885  0192                     	;# 
   886  0193                     	;# 
   887  0193                     	;# 
   888  0194                     	;# 
   889  0195                     	;# 
   890  0196                     	;# 
   891  0199                     	;# 
   892  019A                     	;# 
   893  019B                     	;# 
   894  019B                     	;# 
   895  019C                     	;# 
   896  019D                     	;# 
   897  019E                     	;# 
   898  019F                     	;# 
   899  020C                     	;# 
   900  020D                     	;# 
   901  0211                     	;# 
   902  0211                     	;# 
   903  0212                     	;# 
   904  0212                     	;# 
   905  0213                     	;# 
   906  0213                     	;# 
   907  0214                     	;# 
   908  0214                     	;# 
   909  0215                     	;# 
   910  0215                     	;# 
   911  0215                     	;# 
   912  0216                     	;# 
   913  0216                     	;# 
   914  0217                     	;# 
   915  0217                     	;# 
   916  0391                     	;# 
   917  0392                     	;# 
   918  0393                     	;# 
   919  0394                     	;# 
   920  0395                     	;# 
   921  0396                     	;# 
   922  039A                     	;# 
   923  039B                     	;# 
   924  0611                     	;# 
   925  0612                     	;# 
   926  0613                     	;# 
   927  0613                     	;# 
   928  0614                     	;# 
   929  0615                     	;# 
   930  0616                     	;# 
   931  0616                     	;# 
   932  0691                     	;# 
   933  0692                     	;# 
   934  0693                     	;# 
   935  0694                     	;# 
   936  0695                     	;# 
   937  0E8E                     	;# 
   938  0E8F                     	;# 
   939  0E90                     	;# 
   940  0E91                     	;# 
   941  0E92                     	;# 
   942  0E93                     	;# 
   943  0E94                     	;# 
   944  0E94                     	;# 
   945  0E95                     	;# 
   946  0E96                     	;# 
   947  0E97                     	;# 
   948  0E98                     	;# 
   949  0E99                     	;# 
   950  0E9A                     	;# 
   951  0E9B                     	;# 
   952  0E9C                     	;# 
   953  0E9D                     	;# 
   954  0E9E                     	;# 
   955  0E9F                     	;# 
   956  0FE4                     	;# 
   957  0FE5                     	;# 
   958  0FE6                     	;# 
   959  0FE7                     	;# 
   960  0FE8                     	;# 
   961  0FE9                     	;# 
   962  0FEA                     	;# 
   963  0FEB                     	;# 
   964  0FED                     	;# 
   965  0FEE                     	;# 
   966  0FEF                     	;# 
   967  0000                     	;# 
   968  0001                     	;# 
   969  0002                     	;# 
   970  0003                     	;# 
   971  0004                     	;# 
   972  0005                     	;# 
   973  0006                     	;# 
   974  0007                     	;# 
   975  0008                     	;# 
   976  0009                     	;# 
   977  000A                     	;# 
   978  000B                     	;# 
   979  000C                     	;# 
   980  000D                     	;# 
   981  000E                     	;# 
   982  0011                     	;# 
   983  0012                     	;# 
   984  0015                     	;# 
   985  0016                     	;# 
   986  0016                     	;# 
   987  0017                     	;# 
   988  0018                     	;# 
   989  0019                     	;# 
   990  001A                     	;# 
   991  001B                     	;# 
   992  001C                     	;# 
   993  008C                     	;# 
   994  008D                     	;# 
   995  008E                     	;# 
   996  0091                     	;# 
   997  0092                     	;# 
   998  0095                     	;# 
   999  0096                     	;# 
  1000  0097                     	;# 
  1001  0098                     	;# 
  1002  0099                     	;# 
  1003  009A                     	;# 
  1004  009B                     	;# 
  1005  009B                     	;# 
  1006  009C                     	;# 
  1007  009D                     	;# 
  1008  009E                     	;# 
  1009  009F                     	;# 
  1010  010C                     	;# 
  1011  010D                     	;# 
  1012  010E                     	;# 
  1013  0111                     	;# 
  1014  0112                     	;# 
  1015  0113                     	;# 
  1016  0114                     	;# 
  1017  0115                     	;# 
  1018  0116                     	;# 
  1019  0117                     	;# 
  1020  0118                     	;# 
  1021  0119                     	;# 
  1022  011D                     	;# 
  1023  018C                     	;# 
  1024  018D                     	;# 
  1025  018E                     	;# 
  1026  0191                     	;# 
  1027  0191                     	;# 
  1028  0192                     	;# 
  1029  0193                     	;# 
  1030  0193                     	;# 
  1031  0194                     	;# 
  1032  0195                     	;# 
  1033  0196                     	;# 
  1034  0199                     	;# 
  1035  019A                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019C                     	;# 
  1039  019D                     	;# 
  1040  019E                     	;# 
  1041  019F                     	;# 
  1042  020C                     	;# 
  1043  020D                     	;# 
  1044  0211                     	;# 
  1045  0211                     	;# 
  1046  0212                     	;# 
  1047  0212                     	;# 
  1048  0213                     	;# 
  1049  0213                     	;# 
  1050  0214                     	;# 
  1051  0214                     	;# 
  1052  0215                     	;# 
  1053  0215                     	;# 
  1054  0215                     	;# 
  1055  0216                     	;# 
  1056  0216                     	;# 
  1057  0217                     	;# 
  1058  0217                     	;# 
  1059  0391                     	;# 
  1060  0392                     	;# 
  1061  0393                     	;# 
  1062  0394                     	;# 
  1063  0395                     	;# 
  1064  0396                     	;# 
  1065  039A                     	;# 
  1066  039B                     	;# 
  1067  0611                     	;# 
  1068  0612                     	;# 
  1069  0613                     	;# 
  1070  0613                     	;# 
  1071  0614                     	;# 
  1072  0615                     	;# 
  1073  0616                     	;# 
  1074  0616                     	;# 
  1075  0691                     	;# 
  1076  0692                     	;# 
  1077  0693                     	;# 
  1078  0694                     	;# 
  1079  0695                     	;# 
  1080  0E8E                     	;# 
  1081  0E8F                     	;# 
  1082  0E90                     	;# 
  1083  0E91                     	;# 
  1084  0E92                     	;# 
  1085  0E93                     	;# 
  1086  0E94                     	;# 
  1087  0E94                     	;# 
  1088  0E95                     	;# 
  1089  0E96                     	;# 
  1090  0E97                     	;# 
  1091  0E98                     	;# 
  1092  0E99                     	;# 
  1093  0E9A                     	;# 
  1094  0E9B                     	;# 
  1095  0E9C                     	;# 
  1096  0E9D                     	;# 
  1097  0E9E                     	;# 
  1098  0E9F                     	;# 
  1099  0FE4                     	;# 
  1100  0FE5                     	;# 
  1101  0FE6                     	;# 
  1102  0FE7                     	;# 
  1103  0FE8                     	;# 
  1104  0FE9                     	;# 
  1105  0FEA                     	;# 
  1106  0FEB                     	;# 
  1107  0FED                     	;# 
  1108  0FEE                     	;# 
  1109  0FEF                     	;# 
  1110  0000                     	;# 
  1111  0001                     	;# 
  1112  0002                     	;# 
  1113  0003                     	;# 
  1114  0004                     	;# 
  1115  0005                     	;# 
  1116  0006                     	;# 
  1117  0007                     	;# 
  1118  0008                     	;# 
  1119  0009                     	;# 
  1120  000A                     	;# 
  1121  000B                     	;# 
  1122  000C                     	;# 
  1123  000D                     	;# 
  1124  000E                     	;# 
  1125  0011                     	;# 
  1126  0012                     	;# 
  1127  0015                     	;# 
  1128  0016                     	;# 
  1129  0016                     	;# 
  1130  0017                     	;# 
  1131  0018                     	;# 
  1132  0019                     	;# 
  1133  001A                     	;# 
  1134  001B                     	;# 
  1135  001C                     	;# 
  1136  008C                     	;# 
  1137  008D                     	;# 
  1138  008E                     	;# 
  1139  0091                     	;# 
  1140  0092                     	;# 
  1141  0095                     	;# 
  1142  0096                     	;# 
  1143  0097                     	;# 
  1144  0098                     	;# 
  1145  0099                     	;# 
  1146  009A                     	;# 
  1147  009B                     	;# 
  1148  009B                     	;# 
  1149  009C                     	;# 
  1150  009D                     	;# 
  1151  009E                     	;# 
  1152  009F                     	;# 
  1153  010C                     	;# 
  1154  010D                     	;# 
  1155  010E                     	;# 
  1156  0111                     	;# 
  1157  0112                     	;# 
  1158  0113                     	;# 
  1159  0114                     	;# 
  1160  0115                     	;# 
  1161  0116                     	;# 
  1162  0117                     	;# 
  1163  0118                     	;# 
  1164  0119                     	;# 
  1165  011D                     	;# 
  1166  018C                     	;# 
  1167  018D                     	;# 
  1168  018E                     	;# 
  1169  0191                     	;# 
  1170  0191                     	;# 
  1171  0192                     	;# 
  1172  0193                     	;# 
  1173  0193                     	;# 
  1174  0194                     	;# 
  1175  0195                     	;# 
  1176  0196                     	;# 
  1177  0199                     	;# 
  1178  019A                     	;# 
  1179  019B                     	;# 
  1180  019B                     	;# 
  1181  019C                     	;# 
  1182  019D                     	;# 
  1183  019E                     	;# 
  1184  019F                     	;# 
  1185  020C                     	;# 
  1186  020D                     	;# 
  1187  0211                     	;# 
  1188  0211                     	;# 
  1189  0212                     	;# 
  1190  0212                     	;# 
  1191  0213                     	;# 
  1192  0213                     	;# 
  1193  0214                     	;# 
  1194  0214                     	;# 
  1195  0215                     	;# 
  1196  0215                     	;# 
  1197  0215                     	;# 
  1198  0216                     	;# 
  1199  0216                     	;# 
  1200  0217                     	;# 
  1201  0217                     	;# 
  1202  0391                     	;# 
  1203  0392                     	;# 
  1204  0393                     	;# 
  1205  0394                     	;# 
  1206  0395                     	;# 
  1207  0396                     	;# 
  1208  039A                     	;# 
  1209  039B                     	;# 
  1210  0611                     	;# 
  1211  0612                     	;# 
  1212  0613                     	;# 
  1213  0613                     	;# 
  1214  0614                     	;# 
  1215  0615                     	;# 
  1216  0616                     	;# 
  1217  0616                     	;# 
  1218  0691                     	;# 
  1219  0692                     	;# 
  1220  0693                     	;# 
  1221  0694                     	;# 
  1222  0695                     	;# 
  1223  0E8E                     	;# 
  1224  0E8F                     	;# 
  1225  0E90                     	;# 
  1226  0E91                     	;# 
  1227  0E92                     	;# 
  1228  0E93                     	;# 
  1229  0E94                     	;# 
  1230  0E94                     	;# 
  1231  0E95                     	;# 
  1232  0E96                     	;# 
  1233  0E97                     	;# 
  1234  0E98                     	;# 
  1235  0E99                     	;# 
  1236  0E9A                     	;# 
  1237  0E9B                     	;# 
  1238  0E9C                     	;# 
  1239  0E9D                     	;# 
  1240  0E9E                     	;# 
  1241  0E9F                     	;# 
  1242  0FE4                     	;# 
  1243  0FE5                     	;# 
  1244  0FE6                     	;# 
  1245  0FE7                     	;# 
  1246  0FE8                     	;# 
  1247  0FE9                     	;# 
  1248  0FEA                     	;# 
  1249  0FEB                     	;# 
  1250  0FED                     	;# 
  1251  0FEE                     	;# 
  1252  0FEF                     	;_WorkQue
  1253                           
  1254                           	psect	idataBANK2
  1255  07EF                     __pidataBANK2:	
  1256                           
  1257                           ;initializer for _Status
  1258  07EF  3449               	retlw	73
  1259  07F0  3400               	retlw	0
  1260  07F1  3400               	retlw	0
  1261  07F2  3400               	retlw	0
  1262  07F3  3400               	retlw	0
  1263  07F4  3400               	retlw	0
  1264  07F5  3400               	retlw	0
  1265  07F6  3400               	retlw	0
  1266  07F7  3400               	retlw	0
  1267  07F8  3400               	retlw	0
  1268  07F9  3400               	retlw	0
  1269  07FA  3440               	retlw	64
  1270  07FB  3400               	retlw	0
  1271                           
  1272                           	psect	idataBANK3
  1273  18F5                     __pidataBANK3:	
  1274                           
  1275                           ;initializer for _Cfg
  1276  18F5  34F4               	retlw	244
  1277  18F6  3401               	retlw	1
  1278  18F7  348F               	retlw	143
  1279  18F8  3400               	retlw	0
  1280  18F9  3400               	retlw	0
  1281  18FA  3400               	retlw	0
  1282                           
  1283                           	psect	idataBANK4
  1284  191C                     __pidataBANK4:	
  1285                           
  1286                           ;initializer for AsicPreCalc@F3344
  1287  191C  3498               	retlw	152
  1288  191D  342F               	retlw	47
  1289  191E  348A               	retlw	138
  1290  191F  3442               	retlw	66
  1291  1920  3491               	retlw	145
  1292  1921  3444               	retlw	68
  1293  1922  3437               	retlw	55
  1294  1923  3471               	retlw	113
  1295  1924  34CF               	retlw	207
  1296  1925  34FB               	retlw	251
  1297  1926  34C0               	retlw	192
  1298  1927  34B5               	retlw	181
  1299                           
  1300                           	psect	idataBANK6
  1301  1A84                     __pidataBANK6:	
  1302                           
  1303                           ;initializer for _BankRanges
  1304  1A84  3400               	retlw	0
  1305  1A85  3400               	retlw	0
  1306  1A86  3400               	retlw	0
  1307  1A87  3400               	retlw	0
  1308  1A88  3400               	retlw	0
  1309  1A89  3400               	retlw	0
  1310  1A8A  3400               	retlw	0
  1311  1A8B  3440               	retlw	64
  1312  1A8C  34AA               	retlw	170
  1313  1A8D  34AA               	retlw	170
  1314  1A8E  34AA               	retlw	170
  1315  1A8F  342A               	retlw	42
  1316  1A90  3400               	retlw	0
  1317  1A91  3400               	retlw	0
  1318  1A92  3400               	retlw	0
  1319  1A93  3420               	retlw	32
  1320  1A94  3499               	retlw	153
  1321  1A95  3499               	retlw	153
  1322  1A96  3499               	retlw	153
  1323  1A97  3419               	retlw	25
  1324  1A98  3455               	retlw	85
  1325  1A99  3455               	retlw	85
  1326  1A9A  3455               	retlw	85
  1327  1A9B  3415               	retlw	21
  1328  1A9C  3492               	retlw	146
  1329  1A9D  3424               	retlw	36
  1330  1A9E  3449               	retlw	73
  1331  1A9F  3412               	retlw	18
  1332  1AA0  3400               	retlw	0
  1333  1AA1  3400               	retlw	0
  1334  1AA2  3400               	retlw	0
  1335  1AA3  3410               	retlw	16
  1336                           
  1337                           	psect	strings
  1338  0800                     __pstrings:	
  1339  0800                     __stringtab:	
  1340  0800  3400               	retlw	0
  1341  0801                     __end_of__stringtab:	
  1342  0801                     _USB_SD_Ptr:	
  1343  0801  34AB               	retlw	(_sd000| (0+32768))& (0+255)
  1344  0802  3405               	retlw	(_sd001| (0+32768))& (0+255)
  1345  0803  3439               	retlw	(_sd002| (0+32768))& (0+255)
  1346  0804                     __end_of_USB_SD_Ptr:	
  1347  0804                     _USB_CD_Ptr:	
  1348  0804  346D               	retlw	(_configDescriptor1| (0+32768))& (0+255)
  1349  0805                     __end_of_USB_CD_Ptr:	
  1350  0805                     _sd001:	
  1351  0805  3434               	retlw	52
  1352  0806  3403               	retlw	3
  1353  0807  344B               	retlw	75
  1354  0808  3400               	retlw	0
  1355  0809  346C               	retlw	108
  1356  080A  3400               	retlw	0
  1357  080B  346F               	retlw	111
  1358  080C  3400               	retlw	0
  1359  080D  346E               	retlw	110
  1360  080E  3400               	retlw	0
  1361  080F  3464               	retlw	100
  1362  0810  3400               	retlw	0
  1363  0811  3469               	retlw	105
  1364  0812  3400               	retlw	0
  1365  0813  346B               	retlw	107
  1366  0814  3400               	retlw	0
  1367  0815  3465               	retlw	101
  1368  0816  3400               	retlw	0
  1369  0817  3420               	retlw	32
  1370  0818  3400               	retlw	0
  1371  0819  3450               	retlw	80
  1372  081A  3400               	retlw	0
  1373  081B  3472               	retlw	114
  1374  081C  3400               	retlw	0
  1375  081D  346F               	retlw	111
  1376  081E  3400               	retlw	0
  1377  081F  346A               	retlw	106
  1378  0820  3400               	retlw	0
  1379  0821  3465               	retlw	101
  1380  0822  3400               	retlw	0
  1381  0823  3463               	retlw	99
  1382  0824  3400               	retlw	0
  1383  0825  3474               	retlw	116
  1384  0826  3400               	retlw	0
  1385  0827  3400               	retlw	0
  1386  0828  3400               	retlw	0
  1387  0829  3400               	retlw	0
  1388  082A  3400               	retlw	0
  1389  082B  3400               	retlw	0
  1390  082C  3400               	retlw	0
  1391  082D  3400               	retlw	0
  1392  082E  3400               	retlw	0
  1393  082F  3400               	retlw	0
  1394  0830  3400               	retlw	0
  1395  0831  3400               	retlw	0
  1396  0832  3400               	retlw	0
  1397  0833  3400               	retlw	0
  1398  0834  3400               	retlw	0
  1399  0835  3400               	retlw	0
  1400  0836  3400               	retlw	0
  1401  0837  3400               	retlw	0
  1402  0838  3400               	retlw	0
  1403  0839                     __end_of_sd001:	
  1404  0839                     _sd002:	
  1405  0839  3434               	retlw	52
  1406  083A  3403               	retlw	3
  1407  083B  344B               	retlw	75
  1408  083C  3400               	retlw	0
  1409  083D  3431               	retlw	49
  1410  083E  3400               	retlw	0
  1411  083F  3436               	retlw	54
  1412  0840  3400               	retlw	0
  1413  0841  3400               	retlw	0
  1414  0842  3400               	retlw	0
  1415  0843  3400               	retlw	0
  1416  0844  3400               	retlw	0
  1417  0845  3400               	retlw	0
  1418  0846  3400               	retlw	0
  1419  0847  3400               	retlw	0
  1420  0848  3400               	retlw	0
  1421  0849  3400               	retlw	0
  1422  084A  3400               	retlw	0
  1423  084B  3400               	retlw	0
  1424  084C  3400               	retlw	0
  1425  084D  3400               	retlw	0
  1426  084E  3400               	retlw	0
  1427  084F  3400               	retlw	0
  1428  0850  3400               	retlw	0
  1429  0851  3400               	retlw	0
  1430  0852  3400               	retlw	0
  1431  0853  3400               	retlw	0
  1432  0854  3400               	retlw	0
  1433  0855  3400               	retlw	0
  1434  0856  3400               	retlw	0
  1435  0857  3400               	retlw	0
  1436  0858  3400               	retlw	0
  1437  0859  3400               	retlw	0
  1438  085A  3400               	retlw	0
  1439  085B  3400               	retlw	0
  1440  085C  3400               	retlw	0
  1441  085D  3400               	retlw	0
  1442  085E  3400               	retlw	0
  1443  085F  3400               	retlw	0
  1444  0860  3400               	retlw	0
  1445  0861  3400               	retlw	0
  1446  0862  3400               	retlw	0
  1447  0863  3400               	retlw	0
  1448  0864  3400               	retlw	0
  1449  0865  3400               	retlw	0
  1450  0866  3400               	retlw	0
  1451  0867  3400               	retlw	0
  1452  0868  3400               	retlw	0
  1453  0869  3400               	retlw	0
  1454  086A  3400               	retlw	0
  1455  086B  3400               	retlw	0
  1456  086C  3400               	retlw	0
  1457  086D                     __end_of_sd002:	
  1458  086D                     _configDescriptor1:	
  1459  086D  3409               	retlw	9
  1460  086E  3402               	retlw	2
  1461  086F  3420               	retlw	32
  1462  0870  3400               	retlw	0
  1463  0871  3401               	retlw	1
  1464  0872  3401               	retlw	1
  1465  0873  3400               	retlw	0
  1466  0874  34C0               	retlw	192
  1467  0875  3432               	retlw	50
  1468  0876  3409               	retlw	9
  1469  0877  3404               	retlw	4
  1470  0878  3400               	retlw	0
  1471  0879  3400               	retlw	0
  1472  087A  3402               	retlw	2
  1473  087B  34FF               	retlw	255
  1474  087C  34FF               	retlw	255
  1475  087D  34FF               	retlw	255
  1476  087E  3400               	retlw	0
  1477  087F  3407               	retlw	7
  1478  0880  3405               	retlw	5
  1479  0881  3401               	retlw	1
  1480  0882  3402               	retlw	2
  1481  0883  3440               	retlw	64
  1482  0884  3400               	retlw	0
  1483  0885  3401               	retlw	1
  1484  0886  3407               	retlw	7
  1485  0887  3405               	retlw	5
  1486  0888  3481               	retlw	129
  1487  0889  3402               	retlw	2
  1488  088A  3440               	retlw	64
  1489  088B  3400               	retlw	0
  1490  088C  3401               	retlw	1
  1491  088D                     __end_of_configDescriptor1:	
  1492  088D                     _device_dsc:	
  1493  088D  3412               	retlw	18
  1494  088E  3401               	retlw	1
  1495  088F  3400               	retlw	0
  1496  0890  3402               	retlw	2
  1497  0891  3400               	retlw	0
  1498  0892  3400               	retlw	0
  1499  0893  3400               	retlw	0
  1500  0894  3408               	retlw	8
  1501  0895  34D8               	retlw	216
  1502  0896  3404               	retlw	4
  1503  0897  340A               	retlw	10
  1504  0898  34F6               	retlw	246
  1505  0899  3400               	retlw	0
  1506  089A  3400               	retlw	0
  1507  089B  3401               	retlw	1
  1508  089C  3402               	retlw	2
  1509  089D  3400               	retlw	0
  1510  089E  3401               	retlw	1
  1511  089F                     __end_of_device_dsc:	
  1512  089F                     _ID:	
  1513  089F  3410               	retlw	16
  1514  08A0  344B               	retlw	75
  1515  08A1  3431               	retlw	49
  1516  08A2  3436               	retlw	54
  1517  08A3  3400               	retlw	0
  1518  08A4  3400               	retlw	0
  1519  08A5  3400               	retlw	0
  1520  08A6  3400               	retlw	0
  1521  08A7  34EF               	retlw	239
  1522  08A8  34BE               	retlw	190
  1523  08A9  34AD               	retlw	173
  1524  08AA  34DE               	retlw	222
  1525  08AB                     __end_of_ID:	
  1526  08AB                     _sd000:	
  1527  08AB  3404               	retlw	4
  1528  08AC  3403               	retlw	3
  1529  08AD  3409               	retlw	9
  1530  08AE  3404               	retlw	4
  1531  08AF                     __end_of_sd000:	
  1532                           
  1533                           	psect	nvBANK3
  1534  01E8                     __pnvBANK3:	
  1535  01E8                     _FanLevel:	
  1536  01E8                     	ds	1
  1537  01E9                     _TempTarget:	
  1538  01E9                     	ds	1
  1539  000B                     _INTCONbits	set	11
  1540  0012                     _PIR2bits	set	18
  1541  001B                     _PR2	set	27
  1542  001C                     _T2CONbits	set	28
  1543  0015                     _TMR0	set	21
  1544  005F                     _GIE	set	95
  1545  008D                     _RCIF	set	141
  1546  008B                     _SSP1IF	set	139
  1547  005A                     _TMR0IF	set	90
  1548  0089                     _TMR2IF	set	137
  1549  00E2                     _TMR2ON	set	226
  1550  009D                     _ADCON0bits	set	157
  1551  009E                     _ADCON1bits	set	158
  1552  009F                     _ADCON2bits	set	159
  1553  009C                     _ADRESH	set	156
  1554  0095                     _OPTION_REGbits	set	149
  1555  0099                     _OSCCON	set	153
  1556  0098                     _OSCTUNE	set	152
  1557  0092                     _PIE2bits	set	146
  1558  008C                     _TRISAbits	set	140
  1559  008D                     _TRISBbits	set	141
  1560  008E                     _TRISCbits	set	142
  1561  04AD                     _TMR0CS	set	1197
  1562  010C                     _LATAbits	set	268
  1563  010E                     _LATC	set	270
  1564  018C                     _ANSELA	set	396
  1565  018D                     _ANSELB	set	397
  1566  018D                     _ANSELBbits	set	397
  1567  018E                     _ANSELC	set	398
  1568  019F                     _BAUDCONbits	set	415
  1569  0199                     _RCREG	set	409
  1570  019D                     _RCSTAbits	set	413
  1571  019E                     _TXSTAbits	set	414
  1572  0212                     _SSPADD	set	530
  1573  0211                     _SSPBUF	set	529
  1574  0215                     _SSPCON1bits	set	533
  1575  0216                     _SSPCON2bits	set	534
  1576  0217                     _SSPCON3bits	set	535
  1577  0214                     _SSPSTATbits	set	532
  1578  10AD                     _SSP1EN	set	4269
  1579  039B                     _ACTCON	set	923
  1580  0396                     _IOCBF	set	918
  1581  0394                     _IOCBPbits	set	916
  1582  0613                     _PWM1CON	set	1555
  1583  0612                     _PWM1DCH	set	1554
  1584  0611                     _PWM1DCL	set	1553
  1585  309E                     _PWM1OE	set	12446
  1586  0E96                     _UADDR	set	3734
  1587  0E91                     _UCFG	set	3729
  1588  0E8E                     _UCON	set	3726
  1589  0E8E                     _UCONbits	set	3726
  1590  0E97                     _UEIE	set	3735
  1591  0E93                     _UEIR	set	3731
  1592  0E98                     _UEP0bits	set	3736
  1593  0E92                     _UIE	set	3730
  1594  0E92                     _UIEbits	set	3730
  1595  0E90                     _UIR	set	3728
  1596  0E90                     _UIRbits	set	3728
  1597  0E8F                     _USTAT	set	3727
  1598  0E98                     _UEP0	set	3736
  1599  0E99                     _UEP1	set	3737
  1600                           
  1601                           ; #config settings
  1602  0000                     
  1603                           	psect	cinit
  1604  0015                     start_initialization:	
  1605  0015                     __initialization:		;BIGRAM
  1606                           
  1607                           ; Clear objects allocated to BIGRAM
  1608  0015  303C               	movlw	low (0+9020)
  1609  0016  0084               	movwf	4
  1610  0017  3023               	movlw	high (0+9020)
  1611  0018  0085               	movwf	5
  1612  0019  30B4               	movlw	180
  1613  001A  00FE               	movwf	btemp
  1614  001B  3000               	movlw	0
  1615  001C  00FF               	movwf	btemp+1
  1616  001D  3199  2110  3180   	fcall	clear_ram0
  1617                           
  1618                           ; Clear objects allocated to BANK0
  1619  0020  01E8               	clrf	__pbssBANK0& (0+127)
  1620  0021  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  1621  0022  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  1622  0023  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  1623  0024  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  1624  0025  01ED               	clrf	(__pbssBANK0+5)& (0+127)
  1625  0026  01EE               	clrf	(__pbssBANK0+6)& (0+127)
  1626  0027  01EF               	clrf	(__pbssBANK0+7)& (0+127)
  1627                           
  1628                           ; Clear objects allocated to BANK1
  1629  0028  0021               	movlb	1	; select bank1
  1630  0029  01EE               	clrf	__pbssBANK1& (0+127)
  1631  002A  01EF               	clrf	(__pbssBANK1+1)& (0+127)
  1632                           
  1633                           ; Clear objects allocated to BANK2
  1634  002B  3020               	movlw	low __pbssBANK2
  1635  002C  0084               	movwf	4
  1636  002D  3001               	movlw	high __pbssBANK2
  1637  002E  0085               	movwf	5
  1638  002F  3024               	movlw	36
  1639  0030  00FE               	movwf	btemp
  1640  0031  3000               	movlw	0
  1641  0032  00FF               	movwf	btemp+1
  1642  0033  3199  2110  3180   	fcall	clear_ram0
  1643                           
  1644                           ; Clear objects allocated to BANK3
  1645  0036  30A0               	movlw	low __pbssBANK3
  1646  0037  0084               	movwf	4
  1647  0038  3001               	movlw	high __pbssBANK3
  1648  0039  0085               	movwf	5
  1649  003A  3042               	movlw	66
  1650  003B  00FE               	movwf	btemp
  1651  003C  3000               	movlw	0
  1652  003D  00FF               	movwf	btemp+1
  1653  003E  3199  2110  3180   	fcall	clear_ram0
  1654                           
  1655                           ; Clear objects allocated to BANK5
  1656  0041  30E0               	movlw	low __pbssBANK5
  1657  0042  0084               	movwf	4
  1658  0043  3002               	movlw	high __pbssBANK5
  1659  0044  0085               	movwf	5
  1660  0045  3010               	movlw	16
  1661  0046  00FE               	movwf	btemp
  1662  0047  3000               	movlw	0
  1663  0048  00FF               	movwf	btemp+1
  1664  0049  3199  2110  3180   	fcall	clear_ram0
  1665                           
  1666                           ; Clear objects allocated to BANK6
  1667  004C  3020               	movlw	low __pbssBANK6
  1668  004D  0084               	movwf	4
  1669  004E  3003               	movlw	high __pbssBANK6
  1670  004F  0085               	movwf	5
  1671  0050  3020               	movlw	32
  1672  0051  00FE               	movwf	btemp
  1673  0052  3000               	movlw	0
  1674  0053  00FF               	movwf	btemp+1
  1675  0054  3199  2110  3180   	fcall	clear_ram0
  1676                           
  1677                           ; Initialize objects allocated to BANK2
  1678  0057  30EF               	movlw	low __pidataBANK2
  1679  0058  0084               	movwf	4
  1680  0059  3087               	movlw	(high __pidataBANK2)| (0+128)
  1681  005A  0085               	movwf	5
  1682  005B  3063               	movlw	low __pdataBANK2
  1683  005C  0086               	movwf	6
  1684  005D  3001               	movlw	high __pdataBANK2
  1685  005E  0087               	movwf	7
  1686  005F  3000               	movlw	0
  1687  0060  00FF               	movwf	btemp+1
  1688  0061  300D               	movlw	13
  1689  0062  3199  2104  3180   	fcall	init_ram
  1690                           
  1691                           ; Initialize objects allocated to BANK3
  1692  0065  30F5               	movlw	low __pidataBANK3
  1693  0066  0084               	movwf	4
  1694  0067  3098               	movlw	(high __pidataBANK3)| (0+128)
  1695  0068  0085               	movwf	5
  1696  0069  30E2               	movlw	low __pdataBANK3
  1697  006A  0086               	movwf	6
  1698  006B  3001               	movlw	high __pdataBANK3
  1699  006C  0087               	movwf	7
  1700  006D  3000               	movlw	0
  1701  006E  00FF               	movwf	btemp+1
  1702  006F  3006               	movlw	6
  1703  0070  3199  2104  3180   	fcall	init_ram
  1704                           
  1705                           ; Initialize objects allocated to BANK4
  1706  0073  301C               	movlw	low __pidataBANK4
  1707  0074  0084               	movwf	4
  1708  0075  3099               	movlw	(high __pidataBANK4)| (0+128)
  1709  0076  0085               	movwf	5
  1710  0077  3060               	movlw	low __pdataBANK4
  1711  0078  0086               	movwf	6
  1712  0079  3002               	movlw	high __pdataBANK4
  1713  007A  0087               	movwf	7
  1714  007B  3000               	movlw	0
  1715  007C  00FF               	movwf	btemp+1
  1716  007D  300C               	movlw	12
  1717  007E  3199  2104  3180   	fcall	init_ram
  1718                           
  1719                           ; Initialize objects allocated to BANK6
  1720  0081  3084               	movlw	low __pidataBANK6
  1721  0082  0084               	movwf	4
  1722  0083  309A               	movlw	(high __pidataBANK6)| (0+128)
  1723  0084  0085               	movwf	5
  1724  0085  3040               	movlw	low __pdataBANK6
  1725  0086  0086               	movwf	6
  1726  0087  3003               	movlw	high __pdataBANK6
  1727  0088  0087               	movwf	7
  1728  0089  3000               	movlw	0
  1729  008A  00FF               	movwf	btemp+1
  1730  008B  3020               	movlw	32
  1731  008C  3199  2104         	fcall	init_ram
  1732  008E                     end_of_initialization:	
  1733                           ;End of C runtime variable initialization code
  1734                           
  1735  008E                     __end_of__initialization:	
  1736  008E  0020               	movlb	0
  1737  008F  3199  29A0         	ljmp	_main	;jump to C main() function
  1738                           
  1739                           	psect	bssBANK0
  1740  0068                     __pbssBANK0:	
  1741  0068                     _pBDTEntryIn:	
  1742  0068                     	ds	2
  1743  006A                     _I2CCmd:	
  1744  006A                     	ds	1
  1745  006B                     _USBDeferStatusStagePacket:	
  1746  006B                     	ds	1
  1747  006C                     _controlTransferState:	
  1748  006C                     	ds	1
  1749  006D                     _pBDTEntryEP0OutCurrent:	
  1750  006D                     	ds	1
  1751  006E                     _pBDTEntryEP0OutNext:	
  1752  006E                     	ds	1
  1753  006F                     _ptr:	
  1754  006F                     	ds	1
  1755                           
  1756                           	psect	bssBANK1
  1757  00EE                     __pbssBANK1:	
  1758  00EE                     _USBDeviceState:	
  1759  00EE                     	ds	1
  1760  00EF                     _USTATcopy:	
  1761  00EF                     	ds	1
  1762                           
  1763                           	psect	bssBANK2
  1764  0120                     __pbssBANK2:	
  1765  0120                     _Step:	
  1766  0120                     	ds	2
  1767  0122                     _pBDTEntryOut:	
  1768  0122                     	ds	2
  1769  0124                     _send32_data:	
  1770  0124                     	ds	2
  1771  0126                     _HashTime:	
  1772  0126                     	ds	1
  1773  0127                     _I2CCount:	
  1774  0127                     	ds	1
  1775  0128                     _I2CState:	
  1776  0128                     	ds	1
  1777  0129                     _RemoteWakeup:	
  1778  0129                     	ds	1
  1779  012A                     _ResultQC:	
  1780  012A                     	ds	1
  1781  012B                     _SlaveAddress:	
  1782  012B                     	ds	1
  1783  012C                     _USBDeferINDataStagePackets:	
  1784  012C                     	ds	1
  1785  012D                     _USBDeferOUTDataStagePackets:	
  1786  012D                     	ds	1
  1787  012E                     _USBGenericInHandle:	
  1788  012E                     	ds	1
  1789  012F                     _USBGenericOutHandle:	
  1790  012F                     	ds	1
  1791  0130                     _USBStatusStageEnabledFlag1:	
  1792  0130                     	ds	1
  1793  0131                     _USBStatusStageEnabledFlag2:	
  1794  0131                     	ds	1
  1795  0132                     _USBStatusStageTimeoutCounter:	
  1796  0132                     	ds	1
  1797  0133                     _WorkNow:	
  1798  0133                     	ds	1
  1799  0134                     _endpoint_number:	
  1800  0134                     	ds	1
  1801  0135                     _last_bit0:	
  1802  0135                     	ds	1
  1803  0136                     _last_bit1:	
  1804  0136                     	ds	1
  1805  0137                     _pDst:	
  1806  0137                     	ds	1
  1807  0138                     _send32_count:	
  1808  0138                     	ds	1
  1809  0139                     _shortPacketStatus:	
  1810  0139                     	ds	1
  1811  013A                     _inPipes:	
  1812  013A                     	ds	5
  1813  013F                     _BankSize:	
  1814  013F                     	ds	1
  1815  0140                     _USBActiveConfiguration:	
  1816  0140                     	ds	1
  1817  0141                     _USBAlternateInterface:	
  1818  0141                     	ds	1
  1819  0142                     _WQI:	
  1820  0142                     	ds	1
  1821  0143                     _WQX:	
  1822  0143                     	ds	1
  1823                           
  1824                           	psect	dataBANK2
  1825  0163                     __pdataBANK2:	
  1826  0163                     _Status:	
  1827  0163                     	ds	13
  1828                           
  1829                           	psect	bssBANK3
  1830  01A0                     __pbssBANK3:	
  1831  01A0                     _outPipes:	
  1832  01A0                     	ds	6
  1833  01A6                     _CLOCK_LOW_CHG:	
  1834  01A6                     	ds	4
  1835  01AA                     USBCBSendResume@delay_count:	
  1836  01AA                     	ds	2
  1837  01AC                     _LastError:	
  1838  01AC                     	ds	2
  1839  01AE                     _ep_data_in:	
  1840  01AE                     	ds	2
  1841  01B0                     _ep_data_out:	
  1842  01B0                     	ds	2
  1843  01B2                     _BothEP0OutUOWNsSet:	
  1844  01B2                     	ds	1
  1845  01B3                     _I2CAddr:	
  1846  01B3                     	ds	1
  1847  01B4                     _I2CInBuf:	
  1848  01B4                     	ds	1
  1849  01B5                     _LastTemp:	
  1850  01B5                     	ds	1
  1851  01B6                     _SlowTick:	
  1852  01B6                     	ds	1
  1853  01B7                     _TimeOut:	
  1854  01B7                     	ds	1
  1855  01B8                     _USBBusIsSuspended:	
  1856  01B8                     	ds	1
  1857  01B9                     _VerySlowTick:	
  1858  01B9                     	ds	1
  1859  01BA                     _PrecalcHashes:	
  1860  01BA                     	ds	24
  1861  01D2                     _ClockCfg:	
  1862  01D2                     	ds	8
  1863  01DA                     _ResultQue:	
  1864  01DA                     	ds	6
  1865  01E0                     _Error:	
  1866  01E0                     	ds	2
  1867                           
  1868                           	psect	dataBANK3
  1869  01E2                     __pdataBANK3:	
  1870  01E2                     _Cfg:	
  1871  01E2                     	ds	6
  1872                           
  1873                           	psect	dataBANK4
  1874  0260                     __pdataBANK4:	
  1875  0260                     AsicPreCalc@F3344:	
  1876  0260                     	ds	12
  1877                           
  1878                           	psect	bssBANK5
  1879  02E0                     __pbssBANK5:	
  1880  02E0                     _buf:	
  1881  02E0                     	ds	16
  1882                           
  1883                           	psect	bssBANK6
  1884  0320                     __pbssBANK6:	
  1885  0320                     _NonceRanges:	
  1886  0320                     	ds	32
  1887                           
  1888                           	psect	dataBANK6
  1889  0340                     __pdataBANK6:	
  1890  0340                     _BankRanges:	
  1891  0340                     	ds	32
  1892                           
  1893                           	psect	clrtext
  1894  1910                     clear_ram0:	
  1895                           ;	Called with FSR0 containing the base address, and
  1896                           ;	btemp/btemp+1 has the size to clear
  1897                           
  1898  1910  0064               	clrwdt	;clear the watchdog before getting into this loop
  1899  1911                     clrloop0:	
  1900  1911  0180               	clrf	0	;clear RAM location pointed to by FSR
  1901  1912  3101               	addfsr 0,1
  1902  1913  3001               	movlw	1
  1903  1914  02FE               	subwf	126,f
  1904  1915  3000               	movlw	0
  1905  1916  3BFF               	subwfb	127,f
  1906  1917  087F               	movf	127,w
  1907  1918  047E               	iorwf	126,w
  1908  1919  1903               	btfsc	3,2
  1909  191A  3400               	retlw	0	;all done for this memory range, return
  1910  191B  2911               	goto	clrloop0	;have we reached the end yet?
  1911                           
  1912                           	psect	inittext
  1913  1904                     init_ram:	
  1914  1904  00FE               	movwf	126
  1915  1905                     initloop:	
  1916  1905  0012               	moviw fsr0++
  1917  1906  001E               	movwi fsr1++
  1918  1907  3001               	movlw	1
  1919  1908  02FE               	subwf	126,f
  1920  1909  3000               	movlw	0
  1921  190A  3BFF               	subwfb	127,f
  1922  190B  087F               	movf	127,w
  1923  190C  047E               	iorwf	126,w
  1924  190D  1903               	btfsc	3,2
  1925  190E  3400               	retlw	0
  1926  190F  2905               	goto	initloop
  1927                           
  1928                           	psect	cstackBANK2
  1929  0144                     __pcstackBANK2:	
  1930  0144                     _UpdateClock$2776:	
  1931                           
  1932                           ; 4 bytes @ 0x0
  1933  0144                     	ds	4
  1934  0148                     UpdateClock@CLOCK_R_VALUE:	
  1935                           
  1936                           ; 4 bytes @ 0x4
  1937  0148                     	ds	4
  1938  014C                     UpdateClock@CLOCK_F_VALUE:	
  1939                           
  1940                           ; 4 bytes @ 0x8
  1941  014C                     	ds	4
  1942  0150                     UpdateClock@CLOCK_OD_VALUE:	
  1943                           
  1944                           ; 4 bytes @ 0xC
  1945  0150                     	ds	4
  1946  0154                     ??_ProcessCmd:	
  1947                           
  1948                           ; 0 bytes @ 0x10
  1949  0154                     	ds	4
  1950  0158                     _ProcessCmd$1977:	
  1951                           
  1952                           ; 2 bytes @ 0x14
  1953  0158                     	ds	2
  1954  015A                     ProcessCmd@cmd:	
  1955                           
  1956                           ; 1 bytes @ 0x16
  1957  015A                     	ds	1
  1958  015B                     ??_ProcessIO:	
  1959                           
  1960                           ; 0 bytes @ 0x17
  1961  015B                     	ds	4
  1962  015F                     _ProcessIO$2277:	
  1963                           
  1964                           ; 2 bytes @ 0x1B
  1965  015F                     	ds	2
  1966  0161                     _ProcessIO$2311:	
  1967                           
  1968                           ; 2 bytes @ 0x1D
  1969  0161                     	ds	2
  1970                           
  1971                           	psect	cstackBANK1
  1972  00A0                     __pcstackBANK1:	
  1973  00A0                     ??_SendCmdReply:	
  1974  00A0                     ?_AsicPreCalc:	
  1975                           ; 0 bytes @ 0x0
  1976                           
  1977  00A0                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  1978                           ; 0 bytes @ 0x0
  1979                           
  1980  00A0                     ?___ftmul:	
  1981                           ; 1 bytes @ 0x0
  1982                           
  1983  00A0                     ?___lldiv:	
  1984                           ; 3 bytes @ 0x0
  1985                           
  1986  00A0                     AsicPreCalc@work:	
  1987                           ; 4 bytes @ 0x0
  1988                           
  1989  00A0                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  1990                           ; 2 bytes @ 0x0
  1991                           
  1992  00A0                     _DetectAsics$2774:	
  1993                           ; 2 bytes @ 0x0
  1994                           
  1995  00A0                     ___ftmul@f1:	
  1996                           ; 2 bytes @ 0x0
  1997                           
  1998  00A0                     ___lldiv@divisor:	
  1999                           ; 3 bytes @ 0x0
  2000                           
  2001                           
  2002                           ; 4 bytes @ 0x0
  2003  00A0                     	ds	2
  2004  00A2                     ??_AsicPreCalc:	
  2005  00A2                     DetectAsics@x:	
  2006                           ; 0 bytes @ 0x2
  2007                           
  2008  00A2                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2009                           ; 1 bytes @ 0x2
  2010                           
  2011                           
  2012                           ; 2 bytes @ 0x2
  2013  00A2                     	ds	1
  2014  00A3                     ___ftmul@f2:	
  2015                           
  2016                           ; 3 bytes @ 0x3
  2017  00A3                     	ds	1
  2018  00A4                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2019  00A4                     ___lldiv@dividend:	
  2020                           ; 2 bytes @ 0x4
  2021                           
  2022                           
  2023                           ; 4 bytes @ 0x4
  2024  00A4                     	ds	2
  2025  00A6                     ??_USBWakeFromSuspend:	
  2026  00A6                     ??_USBSuspend:	
  2027                           ; 0 bytes @ 0x6
  2028                           
  2029  00A6                     ??_USBStdFeatureReqHandler:	
  2030                           ; 0 bytes @ 0x6
  2031                           
  2032  00A6                     ??_USBStdSetCfgHandler:	
  2033                           ; 0 bytes @ 0x6
  2034                           
  2035  00A6                     ??___ftmul:	
  2036                           ; 0 bytes @ 0x6
  2037                           
  2038                           
  2039                           ; 0 bytes @ 0x6
  2040  00A6                     	ds	1
  2041  00A7                     USBStdSetCfgHandler@p:	
  2042                           
  2043                           ; 2 bytes @ 0x7
  2044  00A7                     	ds	1
  2045  00A8                     USBStdFeatureReqHandler@pUEP:	
  2046  00A8                     ___lldiv@quotient:	
  2047                           ; 2 bytes @ 0x8
  2048                           
  2049                           
  2050                           ; 4 bytes @ 0x8
  2051  00A8                     	ds	1
  2052  00A9                     USBStdSetCfgHandler@i_1089:	
  2053                           
  2054                           ; 1 bytes @ 0x9
  2055  00A9                     	ds	1
  2056  00AA                     USBStdSetCfgHandler@i:	
  2057  00AA                     USBStdFeatureReqHandler@current_ep_data:	
  2058                           ; 1 bytes @ 0xA
  2059                           
  2060  00AA                     ___ftmul@exp:	
  2061                           ; 1 bytes @ 0xA
  2062                           
  2063                           
  2064                           ; 1 bytes @ 0xA
  2065  00AA                     	ds	1
  2066  00AB                     USBStdFeatureReqHandler@p:	
  2067  00AB                     ___ftmul@f3_as_product:	
  2068                           ; 1 bytes @ 0xB
  2069                           
  2070                           
  2071                           ; 3 bytes @ 0xB
  2072  00AB                     	ds	1
  2073  00AC                     ??_USBCheckStdRequest:	
  2074  00AC                     ___lldiv@counter:	
  2075                           ; 0 bytes @ 0xC
  2076                           
  2077  00AC                     AsicPreCalc@K:	
  2078                           ; 1 bytes @ 0xC
  2079                           
  2080                           
  2081                           ; 12 bytes @ 0xC
  2082  00AC                     	ds	1
  2083  00AD                     ??_USBCtrlTrfSetupHandler:	
  2084                           
  2085                           ; 0 bytes @ 0xD
  2086  00AD                     	ds	1
  2087  00AE                     ??_USBCtrlEPService:	
  2088  00AE                     ___ftmul@cntr:	
  2089                           ; 0 bytes @ 0xE
  2090                           
  2091                           
  2092                           ; 1 bytes @ 0xE
  2093  00AE                     	ds	1
  2094  00AF                     ___ftmul@sign:	
  2095                           
  2096                           ; 1 bytes @ 0xF
  2097  00AF                     	ds	1
  2098  00B0                     ?___ftneg:	
  2099  00B0                     ___ftneg@f1:	
  2100                           ; 3 bytes @ 0x10
  2101                           
  2102                           
  2103                           ; 3 bytes @ 0x10
  2104  00B0                     	ds	1
  2105  00B1                     USBCtrlEPService@setup_cnt:	
  2106                           
  2107                           ; 1 bytes @ 0x11
  2108  00B1                     	ds	1
  2109  00B2                     ??_USBDeviceTasks:	
  2110                           
  2111                           ; 0 bytes @ 0x12
  2112  00B2                     	ds	1
  2113  00B3                     ?___ftadd:	
  2114  00B3                     ___ftadd@f1:	
  2115                           ; 3 bytes @ 0x13
  2116                           
  2117                           
  2118                           ; 3 bytes @ 0x13
  2119  00B3                     	ds	1
  2120  00B4                     USBDeviceTasks@i:	
  2121                           
  2122                           ; 1 bytes @ 0x14
  2123  00B4                     	ds	2
  2124  00B6                     ___ftadd@f2:	
  2125                           
  2126                           ; 3 bytes @ 0x16
  2127  00B6                     	ds	2
  2128  00B8                     AsicPreCalc@m:	
  2129                           
  2130                           ; 32 bytes @ 0x18
  2131  00B8                     	ds	1
  2132  00B9                     ??___ftadd:	
  2133                           
  2134                           ; 0 bytes @ 0x19
  2135  00B9                     	ds	4
  2136  00BD                     ___ftadd@sign:	
  2137                           
  2138                           ; 1 bytes @ 0x1D
  2139  00BD                     	ds	1
  2140  00BE                     ___ftadd@exp2:	
  2141                           
  2142                           ; 1 bytes @ 0x1E
  2143  00BE                     	ds	1
  2144  00BF                     ___ftadd@exp1:	
  2145                           
  2146                           ; 1 bytes @ 0x1F
  2147  00BF                     	ds	1
  2148  00C0                     ?___ftdiv:	
  2149  00C0                     ___ftdiv@f2:	
  2150                           ; 3 bytes @ 0x20
  2151                           
  2152                           
  2153                           ; 3 bytes @ 0x20
  2154  00C0                     	ds	3
  2155  00C3                     ___ftdiv@f1:	
  2156                           
  2157                           ; 3 bytes @ 0x23
  2158  00C3                     	ds	3
  2159  00C6                     ??___ftdiv:	
  2160                           
  2161                           ; 0 bytes @ 0x26
  2162  00C6                     	ds	4
  2163  00CA                     ___ftdiv@cntr:	
  2164                           
  2165                           ; 1 bytes @ 0x2A
  2166  00CA                     	ds	1
  2167  00CB                     ___ftdiv@f3:	
  2168                           
  2169                           ; 3 bytes @ 0x2B
  2170  00CB                     	ds	3
  2171  00CE                     ___ftdiv@exp:	
  2172                           
  2173                           ; 1 bytes @ 0x2E
  2174  00CE                     	ds	1
  2175  00CF                     ___ftdiv@sign:	
  2176                           
  2177                           ; 1 bytes @ 0x2F
  2178  00CF                     	ds	1
  2179  00D0                     ?___fttol:	
  2180  00D0                     ___fttol@f1:	
  2181                           ; 4 bytes @ 0x30
  2182                           
  2183                           
  2184                           ; 3 bytes @ 0x30
  2185  00D0                     	ds	4
  2186  00D4                     ??___fttol:	
  2187                           
  2188                           ; 0 bytes @ 0x34
  2189  00D4                     	ds	4
  2190  00D8                     ___fttol@sign1:	
  2191  00D8                     AsicPreCalc@z:	
  2192                           ; 1 bytes @ 0x38
  2193                           
  2194                           
  2195                           ; 4 bytes @ 0x38
  2196  00D8                     	ds	1
  2197  00D9                     ___fttol@lval:	
  2198                           
  2199                           ; 4 bytes @ 0x39
  2200  00D9                     	ds	3
  2201  00DC                     AsicPreCalc@y:	
  2202                           
  2203                           ; 4 bytes @ 0x3C
  2204  00DC                     	ds	1
  2205  00DD                     ___fttol@exp1:	
  2206                           
  2207                           ; 1 bytes @ 0x3D
  2208  00DD                     	ds	1
  2209  00DE                     ?_UpdateClock:	
  2210  00DE                     ??_UpdateFanLevel:	
  2211                           ; 0 bytes @ 0x3E
  2212                           
  2213  00DE                     UpdateClock@SPEED:	
  2214                           ; 0 bytes @ 0x3E
  2215                           
  2216                           
  2217                           ; 4 bytes @ 0x3E
  2218  00DE                     	ds	2
  2219  00E0                     AsicPreCalc@x:	
  2220                           
  2221                           ; 4 bytes @ 0x40
  2222  00E0                     	ds	2
  2223  00E2                     ??_UpdateClock:	
  2224  00E2                     _UpdateFanLevel$2775:	
  2225                           ; 0 bytes @ 0x42
  2226                           
  2227                           
  2228                           ; 3 bytes @ 0x42
  2229  00E2                     	ds	2
  2230  00E4                     AsicPreCalc@n:	
  2231                           
  2232                           ; 1 bytes @ 0x44
  2233  00E4                     	ds	1
  2234  00E5                     ??_AsicPushWork:	
  2235  00E5                     ??_WorkTick:	
  2236                           ; 0 bytes @ 0x45
  2237                           
  2238                           
  2239                           ; 0 bytes @ 0x45
  2240  00E5                     	ds	9
  2241                           
  2242                           	psect	cstackCOMMON
  2243  0070                     __pcstackCOMMON:	
  2244  0070                     ?_USBWakeFromSuspend:	
  2245  0070                     ?_USBSuspend:	
  2246                           ; 0 bytes @ 0x0
  2247                           
  2248  0070                     ?_USBCtrlEPAllowStatusStage:	
  2249                           ; 0 bytes @ 0x0
  2250                           
  2251  0070                     ?_USBStallHandler:	
  2252                           ; 0 bytes @ 0x0
  2253                           
  2254  0070                     ?_USBCtrlEPService:	
  2255                           ; 0 bytes @ 0x0
  2256                           
  2257  0070                     ?_USBCtrlTrfTxService:	
  2258                           ; 0 bytes @ 0x0
  2259                           
  2260  0070                     ?_USBCtrlTrfSetupHandler:	
  2261                           ; 0 bytes @ 0x0
  2262                           
  2263  0070                     ?_USBCtrlTrfOutHandler:	
  2264                           ; 0 bytes @ 0x0
  2265                           
  2266  0070                     ?_USBCtrlTrfInHandler:	
  2267                           ; 0 bytes @ 0x0
  2268                           
  2269  0070                     ?_USBCheckStdRequest:	
  2270                           ; 0 bytes @ 0x0
  2271                           
  2272  0070                     ?_USBStdFeatureReqHandler:	
  2273                           ; 0 bytes @ 0x0
  2274                           
  2275  0070                     ?_Send32:	
  2276                           ; 0 bytes @ 0x0
  2277                           
  2278  0070                     ?_AsicPushWork:	
  2279                           ; 0 bytes @ 0x0
  2280                           
  2281  0070                     ?_UpdateFanLevel:	
  2282                           ; 0 bytes @ 0x0
  2283                           
  2284  0070                     ?_InitializeSystem:	
  2285                           ; 0 bytes @ 0x0
  2286                           
  2287  0070                     ?_ProcessIO:	
  2288                           ; 0 bytes @ 0x0
  2289                           
  2290  0070                     ?_UserInit:	
  2291                           ; 0 bytes @ 0x0
  2292                           
  2293  0070                     ?_USBDeviceInit:	
  2294                           ; 0 bytes @ 0x0
  2295                           
  2296  0070                     ?_USBDeviceTasks:	
  2297                           ; 0 bytes @ 0x0
  2298                           
  2299  0070                     ?_USBCtrlEPAllowDataStage:	
  2300                           ; 0 bytes @ 0x0
  2301                           
  2302  0070                     ?_USBCtrlEPServiceComplete:	
  2303                           ; 0 bytes @ 0x0
  2304                           
  2305  0070                     ?_USBCtrlTrfRxService:	
  2306                           ; 0 bytes @ 0x0
  2307                           
  2308  0070                     ?_USBStdSetCfgHandler:	
  2309                           ; 0 bytes @ 0x0
  2310                           
  2311  0070                     ?_USBStdGetDscHandler:	
  2312                           ; 0 bytes @ 0x0
  2313                           
  2314  0070                     ?_USBStdGetStatusHandler:	
  2315                           ; 0 bytes @ 0x0
  2316                           
  2317  0070                     ?_USBCheckVendorRequest:	
  2318                           ; 0 bytes @ 0x0
  2319                           
  2320  0070                     ?_ProcessCmd:	
  2321                           ; 0 bytes @ 0x0
  2322                           
  2323  0070                     ?_DetectAsics:	
  2324                           ; 0 bytes @ 0x0
  2325                           
  2326  0070                     ?_WorkTick:	
  2327                           ; 0 bytes @ 0x0
  2328                           
  2329  0070                     ?_ResultRx:	
  2330                           ; 0 bytes @ 0x0
  2331                           
  2332  0070                     ?_InitFAN:	
  2333                           ; 0 bytes @ 0x0
  2334                           
  2335  0070                     ?_InitTempSensor:	
  2336                           ; 0 bytes @ 0x0
  2337                           
  2338  0070                     ?_InitWorkTick:	
  2339                           ; 0 bytes @ 0x0
  2340                           
  2341  0070                     ?_InitResultRx:	
  2342                           ; 0 bytes @ 0x0
  2343                           
  2344  0070                     ?_ISRCode:	
  2345                           ; 0 bytes @ 0x0
  2346                           
  2347  0070                     ?_USBCBSuspend:	
  2348                           ; 0 bytes @ 0x0
  2349                           
  2350  0070                     ?_USBCBWakeFromSuspend:	
  2351                           ; 0 bytes @ 0x0
  2352                           
  2353  0070                     ?_USBCB_SOF_Handler:	
  2354                           ; 0 bytes @ 0x0
  2355                           
  2356  0070                     ?_USBCBErrorHandler:	
  2357                           ; 0 bytes @ 0x0
  2358                           
  2359  0070                     ?_USBCBCheckOtherReq:	
  2360                           ; 0 bytes @ 0x0
  2361                           
  2362  0070                     ?_USBCBStdSetDscHandler:	
  2363                           ; 0 bytes @ 0x0
  2364                           
  2365  0070                     ?_USBCBInitEP:	
  2366                           ; 0 bytes @ 0x0
  2367                           
  2368  0070                     ?i1___bmul:	
  2369                           ; 0 bytes @ 0x0
  2370                           
  2371  0070                     ?_main:	
  2372                           ; 1 bytes @ 0x0
  2373                           
  2374  0070                     ?i1___wmul:	
  2375                           ; 2 bytes @ 0x0
  2376                           
  2377  0070                     i1___bmul@multiplicand:	
  2378                           ; 2 bytes @ 0x0
  2379                           
  2380  0070                     i1___wmul@multiplier:	
  2381                           ; 1 bytes @ 0x0
  2382                           
  2383                           
  2384                           ; 2 bytes @ 0x0
  2385  0070                     	ds	1
  2386  0071                     ??i1___bmul:	
  2387                           
  2388                           ; 0 bytes @ 0x1
  2389  0071                     	ds	1
  2390  0072                     i1___bmul@multiplier:	
  2391  0072                     i1___wmul@multiplicand:	
  2392                           ; 1 bytes @ 0x2
  2393                           
  2394                           
  2395                           ; 2 bytes @ 0x2
  2396  0072                     	ds	1
  2397  0073                     i1___bmul@product:	
  2398                           
  2399                           ; 1 bytes @ 0x3
  2400  0073                     	ds	1
  2401  0074                     ??i1___wmul:	
  2402  0074                     i1___wmul@product:	
  2403                           ; 0 bytes @ 0x4
  2404                           
  2405                           
  2406                           ; 2 bytes @ 0x4
  2407  0074                     	ds	2
  2408  0076                     ?i1_SendCmdReply:	
  2409  0076                     i1SendCmdReply@cmd:	
  2410                           ; 0 bytes @ 0x6
  2411                           
  2412                           
  2413                           ; 2 bytes @ 0x6
  2414  0076                     	ds	2
  2415  0078                     i1SendCmdReply@data:	
  2416                           
  2417                           ; 2 bytes @ 0x8
  2418  0078                     	ds	2
  2419  007A                     i1SendCmdReply@count:	
  2420                           
  2421                           ; 1 bytes @ 0xA
  2422  007A                     	ds	1
  2423  007B                     i1SendCmdReply@n:	
  2424                           
  2425                           ; 1 bytes @ 0xB
  2426  007B                     	ds	1
  2427  007C                     ??_ResultRx:	
  2428                           
  2429                           ; 0 bytes @ 0xC
  2430  007C                     	ds	1
  2431  007D                     ??_ISRCode:	
  2432                           
  2433                           ; 0 bytes @ 0xD
  2434  007D                     	ds	1
  2435                           
  2436                           	psect	cstackBANK0
  2437  0050                     __pcstackBANK0:	
  2438  0050                     ??i1_SendCmdReply:	
  2439                           
  2440                           ; 0 bytes @ 0x0
  2441  0050                     	ds	8
  2442  0058                     ??_USBCtrlEPAllowStatusStage:	
  2443  0058                     ??_USBStallHandler:	
  2444                           ; 0 bytes @ 0x8
  2445                           
  2446  0058                     ?_USBConfigureEndpoint:	
  2447                           ; 0 bytes @ 0x8
  2448                           
  2449  0058                     ??_USBCtrlTrfTxService:	
  2450                           ; 0 bytes @ 0x8
  2451                           
  2452  0058                     ??_Send32:	
  2453                           ; 0 bytes @ 0x8
  2454                           
  2455  0058                     ??_USBDeviceInit:	
  2456                           ; 0 bytes @ 0x8
  2457                           
  2458  0058                     ??_USBStdGetDscHandler:	
  2459                           ; 0 bytes @ 0x8
  2460                           
  2461  0058                     ??_USBStdGetStatusHandler:	
  2462                           ; 0 bytes @ 0x8
  2463                           
  2464  0058                     ??_USBCheckVendorRequest:	
  2465                           ; 0 bytes @ 0x8
  2466                           
  2467  0058                     ??_InitFAN:	
  2468                           ; 0 bytes @ 0x8
  2469                           
  2470  0058                     ??_InitTempSensor:	
  2471                           ; 0 bytes @ 0x8
  2472                           
  2473  0058                     ??_InitResultRx:	
  2474                           ; 0 bytes @ 0x8
  2475                           
  2476  0058                     ??_USBCBSuspend:	
  2477                           ; 0 bytes @ 0x8
  2478                           
  2479  0058                     ??_USBCBWakeFromSuspend:	
  2480                           ; 0 bytes @ 0x8
  2481                           
  2482  0058                     ??_USBCB_SOF_Handler:	
  2483                           ; 0 bytes @ 0x8
  2484                           
  2485  0058                     ??_USBCBErrorHandler:	
  2486                           ; 0 bytes @ 0x8
  2487                           
  2488  0058                     ??_USBCBCheckOtherReq:	
  2489                           ; 0 bytes @ 0x8
  2490                           
  2491  0058                     ??_USBCBStdSetDscHandler:	
  2492                           ; 0 bytes @ 0x8
  2493                           
  2494  0058                     ?___bmul:	
  2495                           ; 0 bytes @ 0x8
  2496                           
  2497  0058                     ?_memset:	
  2498                           ; 1 bytes @ 0x8
  2499                           
  2500  0058                     ?___awdiv:	
  2501                           ; 2 bytes @ 0x8
  2502                           
  2503  0058                     ?___awmod:	
  2504                           ; 2 bytes @ 0x8
  2505                           
  2506  0058                     ?___lwdiv:	
  2507                           ; 2 bytes @ 0x8
  2508                           
  2509  0058                     ?___wmul:	
  2510                           ; 2 bytes @ 0x8
  2511                           
  2512  0058                     ?___ftpack:	
  2513                           ; 2 bytes @ 0x8
  2514                           
  2515  0058                     ?_rotate:	
  2516                           ; 3 bytes @ 0x8
  2517                           
  2518  0058                     ?___lmul:	
  2519                           ; 4 bytes @ 0x8
  2520                           
  2521  0058                     USBConfigureEndpoint@direction:	
  2522                           ; 4 bytes @ 0x8
  2523                           
  2524  0058                     ___bmul@multiplicand:	
  2525                           ; 1 bytes @ 0x8
  2526                           
  2527  0058                     ___awdiv@divisor:	
  2528                           ; 1 bytes @ 0x8
  2529                           
  2530  0058                     ___awmod@divisor:	
  2531                           ; 2 bytes @ 0x8
  2532                           
  2533  0058                     ___lwdiv@divisor:	
  2534                           ; 2 bytes @ 0x8
  2535                           
  2536  0058                     memset@p1:	
  2537                           ; 2 bytes @ 0x8
  2538                           
  2539  0058                     ___wmul@multiplier:	
  2540                           ; 2 bytes @ 0x8
  2541                           
  2542  0058                     ___ftpack@arg:	
  2543                           ; 2 bytes @ 0x8
  2544                           
  2545  0058                     rotate@x:	
  2546                           ; 3 bytes @ 0x8
  2547                           
  2548  0058                     ___lmul@multiplier:	
  2549                           ; 4 bytes @ 0x8
  2550                           
  2551                           
  2552                           ; 4 bytes @ 0x8
  2553  0058                     	ds	1
  2554  0059                     ??_USBConfigureEndpoint:	
  2555  0059                     ??___bmul:	
  2556                           ; 0 bytes @ 0x9
  2557                           
  2558  0059                     USBStdGetStatusHandler@p:	
  2559                           ; 0 bytes @ 0x9
  2560                           
  2561                           
  2562                           ; 1 bytes @ 0x9
  2563  0059                     	ds	1
  2564  005A                     ??_USBCtrlTrfRxService:	
  2565  005A                     USBCtrlTrfTxService@byteToSend:	
  2566                           ; 0 bytes @ 0xA
  2567                           
  2568  005A                     ___bmul@product:	
  2569                           ; 1 bytes @ 0xA
  2570                           
  2571  005A                     USBDeviceInit@p:	
  2572                           ; 1 bytes @ 0xA
  2573                           
  2574  005A                     ___awdiv@dividend:	
  2575                           ; 2 bytes @ 0xA
  2576                           
  2577  005A                     ___awmod@dividend:	
  2578                           ; 2 bytes @ 0xA
  2579                           
  2580  005A                     ___lwdiv@dividend:	
  2581                           ; 2 bytes @ 0xA
  2582                           
  2583  005A                     memset@c:	
  2584                           ; 2 bytes @ 0xA
  2585                           
  2586  005A                     ___wmul@multiplicand:	
  2587                           ; 2 bytes @ 0xA
  2588                           
  2589                           
  2590                           ; 2 bytes @ 0xA
  2591  005A                     	ds	1
  2592  005B                     ??_USBCtrlTrfInHandler:	
  2593  005B                     ??_USBCtrlEPAllowDataStage:	
  2594                           ; 0 bytes @ 0xB
  2595                           
  2596  005B                     ___bmul@multiplier:	
  2597                           ; 0 bytes @ 0xB
  2598                           
  2599  005B                     ___ftpack@exp:	
  2600                           ; 1 bytes @ 0xB
  2601                           
  2602                           
  2603                           ; 1 bytes @ 0xB
  2604  005B                     	ds	1
  2605  005C                     ??___awdiv:	
  2606  005C                     ??___awmod:	
  2607                           ; 0 bytes @ 0xC
  2608                           
  2609  005C                     ??___lwdiv:	
  2610                           ; 0 bytes @ 0xC
  2611                           
  2612  005C                     ??___wmul:	
  2613                           ; 0 bytes @ 0xC
  2614                           
  2615  005C                     ?_USBTransferOnePacket:	
  2616                           ; 0 bytes @ 0xC
  2617                           
  2618  005C                     USBDeviceInit@i_718:	
  2619                           ; 1 bytes @ 0xC
  2620                           
  2621  005C                     USBTransferOnePacket@dir:	
  2622                           ; 1 bytes @ 0xC
  2623                           
  2624  005C                     USBCtrlTrfRxService@i:	
  2625                           ; 1 bytes @ 0xC
  2626                           
  2627  005C                     rotate@y:	
  2628                           ; 1 bytes @ 0xC
  2629                           
  2630  005C                     ___ftpack@sign:	
  2631                           ; 1 bytes @ 0xC
  2632                           
  2633  005C                     memset@n:	
  2634                           ; 1 bytes @ 0xC
  2635                           
  2636  005C                     ___wmul@product:	
  2637                           ; 2 bytes @ 0xC
  2638                           
  2639  005C                     ___lmul@multiplicand:	
  2640                           ; 2 bytes @ 0xC
  2641                           
  2642                           
  2643                           ; 4 bytes @ 0xC
  2644  005C                     	ds	1
  2645  005D                     ??___ftpack:	
  2646  005D                     ??_USBCtrlEPServiceComplete:	
  2647                           ; 0 bytes @ 0xD
  2648                           
  2649  005D                     ??_rotate:	
  2650                           ; 0 bytes @ 0xD
  2651                           
  2652  005D                     USBDeviceInit@i:	
  2653                           ; 0 bytes @ 0xD
  2654                           
  2655  005D                     USBTransferOnePacket@data:	
  2656                           ; 1 bytes @ 0xD
  2657                           
  2658  005D                     USBConfigureEndpoint@EPNum:	
  2659                           ; 1 bytes @ 0xD
  2660                           
  2661  005D                     USBCtrlTrfRxService@byteToRead:	
  2662                           ; 1 bytes @ 0xD
  2663                           
  2664  005D                     USBCtrlTrfInHandler@lastDTS:	
  2665                           ; 1 bytes @ 0xD
  2666                           
  2667  005D                     ___awdiv@counter:	
  2668                           ; 1 bytes @ 0xD
  2669                           
  2670  005D                     ___awmod@counter:	
  2671                           ; 1 bytes @ 0xD
  2672                           
  2673  005D                     ___lwdiv@quotient:	
  2674                           ; 1 bytes @ 0xD
  2675                           
  2676                           
  2677                           ; 2 bytes @ 0xD
  2678  005D                     	ds	1
  2679  005E                     ??_memset:	
  2680  005E                     ??_USBCtrlTrfOutHandler:	
  2681                           ; 0 bytes @ 0xE
  2682                           
  2683  005E                     ?_SendCmdReply:	
  2684                           ; 0 bytes @ 0xE
  2685                           
  2686  005E                     ?_SendAsicData:	
  2687                           ; 0 bytes @ 0xE
  2688                           
  2689  005E                     USBTransferOnePacket@len:	
  2690                           ; 0 bytes @ 0xE
  2691                           
  2692  005E                     USBConfigureEndpoint@handle:	
  2693                           ; 1 bytes @ 0xE
  2694                           
  2695  005E                     ___awdiv@sign:	
  2696                           ; 1 bytes @ 0xE
  2697                           
  2698  005E                     ___awmod@sign:	
  2699                           ; 1 bytes @ 0xE
  2700                           
  2701  005E                     SendAsicData@work:	
  2702                           ; 1 bytes @ 0xE
  2703                           
  2704  005E                     SendCmdReply@cmd:	
  2705                           ; 2 bytes @ 0xE
  2706                           
  2707                           
  2708                           ; 2 bytes @ 0xE
  2709  005E                     	ds	1
  2710  005F                     ?_USBEnableEndpoint:	
  2711  005F                     ??_USBTransferOnePacket:	
  2712                           ; 0 bytes @ 0xF
  2713                           
  2714  005F                     USBEnableEndpoint@options:	
  2715                           ; 0 bytes @ 0xF
  2716                           
  2717  005F                     ___lwdiv@counter:	
  2718                           ; 1 bytes @ 0xF
  2719                           
  2720  005F                     ___awdiv@quotient:	
  2721                           ; 1 bytes @ 0xF
  2722                           
  2723  005F                     memset@p:	
  2724                           ; 2 bytes @ 0xF
  2725                           
  2726                           
  2727                           ; 2 bytes @ 0xF
  2728  005F                     	ds	1
  2729  0060                     ??_USBEnableEndpoint:	
  2730  0060                     ??_SendAsicData:	
  2731                           ; 0 bytes @ 0x10
  2732                           
  2733  0060                     ??___lmul:	
  2734                           ; 0 bytes @ 0x10
  2735                           
  2736  0060                     ?___awtoft:	
  2737                           ; 0 bytes @ 0x10
  2738                           
  2739  0060                     ?___lltoft:	
  2740                           ; 3 bytes @ 0x10
  2741                           
  2742  0060                     SendCmdReply@data:	
  2743                           ; 3 bytes @ 0x10
  2744                           
  2745  0060                     ___awtoft@c:	
  2746                           ; 2 bytes @ 0x10
  2747                           
  2748  0060                     ___lltoft@c:	
  2749                           ; 2 bytes @ 0x10
  2750                           
  2751  0060                     ___lmul@product:	
  2752                           ; 4 bytes @ 0x10
  2753                           
  2754                           
  2755                           ; 4 bytes @ 0x10
  2756  0060                     	ds	1
  2757  0061                     ??_DetectAsics:	
  2758  0061                     USBTransferOnePacket@ep:	
  2759                           ; 0 bytes @ 0x11
  2760                           
  2761                           
  2762                           ; 1 bytes @ 0x11
  2763  0061                     	ds	1
  2764  0062                     USBTransferOnePacket@handle:	
  2765  0062                     SendCmdReply@count:	
  2766                           ; 1 bytes @ 0x12
  2767                           
  2768  0062                     USBEnableEndpoint@p:	
  2769                           ; 1 bytes @ 0x12
  2770                           
  2771                           
  2772                           ; 2 bytes @ 0x12
  2773  0062                     	ds	1
  2774  0063                     ??___awtoft:	
  2775  0063                     SendCmdReply@n:	
  2776                           ; 0 bytes @ 0x13
  2777                           
  2778                           
  2779                           ; 1 bytes @ 0x13
  2780  0063                     	ds	1
  2781  0064                     ??___lldiv:	
  2782  0064                     ??___lltoft:	
  2783                           ; 0 bytes @ 0x14
  2784                           
  2785  0064                     USBEnableEndpoint@ep:	
  2786                           ; 0 bytes @ 0x14
  2787                           
  2788                           
  2789                           ; 1 bytes @ 0x14
  2790  0064                     	ds	1
  2791  0065                     ??_USBCBInitEP:	
  2792  0065                     ___awtoft@sign:	
  2793                           ; 0 bytes @ 0x15
  2794                           
  2795  0065                     ___lltoft@exp:	
  2796                           ; 1 bytes @ 0x15
  2797                           
  2798                           
  2799                           ; 1 bytes @ 0x15
  2800  0065                     	ds	1
  2801  0066                     ??_InitWorkTick:	
  2802  0066                     ??___ftneg:	
  2803                           ; 0 bytes @ 0x16
  2804                           
  2805                           
  2806                           ; 0 bytes @ 0x16
  2807  0066                     	ds	2
  2808  0068                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2809  0068                     ??_InitializeSystem:	
  2810                           ; 0 bytes @ 0x18
  2811                           
  2812  0068                     ??_UserInit:	
  2813                           ; 0 bytes @ 0x18
  2814                           
  2815  0068                     ??_main:	
  2816                           ; 0 bytes @ 0x18
  2817                           
  2818                           
  2819                           	psect	maintext
  2820  19A0                     __pmaintext:	
  2821                           ; 0 bytes @ 0x18
  2822 ;;
  2823 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2824 ;;
  2825 ;; *************** function _main *****************
  2826 ;; Defined at:
  2827 ;;		line 98 in file "main.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;		None
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  2  828[COMMON] int 
  2834 ;; Registers used:
  2835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 17F/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;Total ram usage:        0 bytes
  2846 ;; Hardware stack levels required when called:   13
  2847 ;; This function calls:
  2848 ;;		_USBDeviceTasks
  2849 ;;		_AsicPushWork
  2850 ;;		_WorkTick
  2851 ;;		_InitializeSystem
  2852 ;;		_ProcessIO
  2853 ;; This function is called by:
  2854 ;;		Startup code after reset
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           
  2859                           ;psect for function _main
  2860  19A0                     _main:	
  2861                           
  2862                           ;main.c: 99: InitializeSystem();
  2863                           
  2864                           ;incstack = 0
  2865                           ; Regs used in _main: [allreg]
  2866  19A0  3199  2189  3199   	fcall	_InitializeSystem
  2867  19A3                     l829:	
  2868                           ;main.c: 101: while(1)
  2869                           
  2870                           
  2871                           ;main.c: 102: {
  2872                           ;main.c: 119: USBDeviceTasks();
  2873  19A3  318B  23D9  3199   	fcall	_USBDeviceTasks
  2874                           
  2875                           ;main.c: 133: if(TMR0IF)
  2876  19A6  1D0B               	btfss	11,2	;volatile
  2877  19A7  29AB               	goto	l7755
  2878                           
  2879                           ;main.c: 134: WorkTick();
  2880  19A8  319F  2741  3199   	fcall	_WorkTick
  2881  19AB                     l7755:	
  2882                           
  2883                           ;main.c: 136: if(Status.State == 'P'){
  2884  19AB  0022               	movlb	2	; select bank2
  2885  19AC  0863               	movf	_Status^(0+256),w	;volatile
  2886  19AD  3A50               	xorlw	80
  2887  19AE  1D03               	skipz
  2888  19AF  29B3               	goto	l7759
  2889                           
  2890                           ;main.c: 137: AsicPushWork();
  2891  19B0  3192  22B6  3199   	fcall	_AsicPushWork
  2892  19B3                     l7759:	
  2893                           
  2894                           ;main.c: 138: }
  2895                           ;main.c: 140: ProcessIO();
  2896  19B3  3191  2141  3199   	fcall	_ProcessIO
  2897  19B6  29A3               	goto	l829
  2898  19B7                     __end_of_main:	
  2899                           
  2900                           	psect	text1
  2901  1141                     __ptext1:	
  2902 ;; *************** function _ProcessIO *****************
  2903 ;; Defined at:
  2904 ;;		line 182 in file "main.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;		None
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;		None
  2909 ;; Return value:  Size  Location     Type
  2910 ;;		None               void
  2911 ;; Registers used:
  2912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2919 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2920 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2921 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  2922 ;;Total ram usage:        8 bytes
  2923 ;; Hardware stack levels used:    1
  2924 ;; Hardware stack levels required when called:    8
  2925 ;; This function calls:
  2926 ;;		_USBTransferOnePacket
  2927 ;;		_ProcessCmd
  2928 ;;		___bmul
  2929 ;; This function is called by:
  2930 ;;		_main
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           
  2935                           ;psect for function _ProcessIO
  2936  1141                     _ProcessIO:	
  2937                           
  2938                           ;main.c: 184: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  2939                           
  2940                           ;incstack = 0
  2941                           ; Regs used in _ProcessIO: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  2942  1141  3020               	movlw	32
  2943  1142  0021               	movlb	1	; select bank1
  2944  1143  026E               	subwf	_USBDeviceState^(0+128),w
  2945  1144  1C03               	skipc
  2946  1145  0008               	return
  2947  1146  003D               	movlb	29	; select bank29
  2948  1147  188E               	btfsc	14,1	;volatile
  2949  1148  0008               	return
  2950                           
  2951                           ;main.c: 193: if(!(USBGenericOutHandle==0?0:((volatile BDT_ENTRY*)USBGenericOutHandle)->
      +                          STAT.UOWN)) {
  2952  1149  0022               	movlb	2	; select bank2
  2953  114A  082F               	movf	_USBGenericOutHandle^(0+256),w
  2954  114B  1903               	btfsc	3,2
  2955  114C  295A               	goto	l7785
  2956  114D  082F               	movf	_USBGenericOutHandle^(0+256),w
  2957  114E  0086               	movwf	6
  2958  114F  0187               	clrf	7
  2959  1150  0D01               	rlf	1,w
  2960  1151  0D01               	rlf	1,w
  2961  1152  3901               	andlw	1
  2962  1153  00DB               	movwf	??_ProcessIO^(0+256)
  2963  1154  01DC               	clrf	(??_ProcessIO^(0+256)+1)
  2964  1155  085B               	movf	??_ProcessIO^(0+256),w
  2965  1156  00DF               	movwf	_ProcessIO$2277^(0+256)
  2966  1157  085C               	movf	(??_ProcessIO+1)^(0+256),w
  2967  1158  00E0               	movwf	(_ProcessIO$2277+1)^(0+256)
  2968  1159  295C               	goto	l7787
  2969  115A                     l7785:	
  2970  115A  01DF               	clrf	_ProcessIO$2277^(0+256)
  2971  115B  01E0               	clrf	(_ProcessIO$2277+1)^(0+256)
  2972  115C                     l7787:	
  2973  115C  0860               	movf	(_ProcessIO$2277+1)^(0+256),w
  2974  115D  045F               	iorwf	_ProcessIO$2277^(0+256),w
  2975  115E  1D03               	skipz
  2976  115F  297A               	goto	l7793
  2977                           
  2978                           ;main.c: 197: ProcessCmd(OUTPacket);
  2979  1160  30A0               	movlw	160
  2980  1161  318D  25D4  3191   	fcall	_ProcessCmd
  2981                           
  2982                           ;main.c: 198: USBGenericOutHandle = USBTransferOnePacket(1,0,(BYTE*)&OUTPacket,64);
  2983  1164  0020               	movlb	0	; select bank0
  2984  1165  01DC               	clrf	?_USBTransferOnePacket
  2985  1166  30A0               	movlw	160
  2986  1167  0022               	movlb	2	; select bank2
  2987  1168  00DB               	movwf	??_ProcessIO^(0+256)
  2988  1169  085B               	movf	??_ProcessIO^(0+256),w
  2989  116A  0020               	movlb	0	; select bank0
  2990  116B  00DD               	movwf	?_USBTransferOnePacket+1
  2991  116C  3040               	movlw	64
  2992  116D  0022               	movlb	2	; select bank2
  2993  116E  00DC               	movwf	(??_ProcessIO+1)^(0+256)
  2994  116F  085C               	movf	(??_ProcessIO+1)^(0+256),w
  2995  1170  0020               	movlb	0	; select bank0
  2996  1171  00DE               	movwf	?_USBTransferOnePacket+2
  2997  1172  3001               	movlw	1
  2998  1173  3188  20AF  3191   	fcall	_USBTransferOnePacket
  2999  1176  0022               	movlb	2	; select bank2
  3000  1177  00DD               	movwf	(??_ProcessIO+2)^(0+256)
  3001  1178  085D               	movf	(??_ProcessIO+2)^(0+256),w
  3002  1179  00AF               	movwf	_USBGenericOutHandle^(0+256)
  3003  117A                     l7793:	
  3004                           
  3005                           ;main.c: 199: }
  3006                           ;main.c: 201: if(WQI != WQX && !(USBGenericInHandle==0?0:((volatile BDT_ENTRY*)USBGeneri
      +                          cInHandle)->STAT.UOWN)) {
  3007  117A  0842               	movf	_WQI^(0+256),w
  3008  117B  0643               	xorwf	_WQX^(0+256),w
  3009  117C  1903               	skipnz
  3010  117D  0008               	return
  3011  117E  082E               	movf	_USBGenericInHandle^(0+256),w
  3012  117F  1903               	btfsc	3,2
  3013  1180  298E               	goto	l7799
  3014  1181  082E               	movf	_USBGenericInHandle^(0+256),w
  3015  1182  0086               	movwf	6
  3016  1183  0187               	clrf	7
  3017  1184  0D01               	rlf	1,w
  3018  1185  0D01               	rlf	1,w
  3019  1186  3901               	andlw	1
  3020  1187  00DB               	movwf	??_ProcessIO^(0+256)
  3021  1188  01DC               	clrf	(??_ProcessIO^(0+256)+1)
  3022  1189  085B               	movf	??_ProcessIO^(0+256),w
  3023  118A  00E1               	movwf	_ProcessIO$2311^(0+256)
  3024  118B  085C               	movf	(??_ProcessIO+1)^(0+256),w
  3025  118C  00E2               	movwf	(_ProcessIO$2311+1)^(0+256)
  3026  118D  2990               	goto	l7801
  3027  118E                     l7799:	
  3028  118E  01E1               	clrf	_ProcessIO$2311^(0+256)
  3029  118F  01E2               	clrf	(_ProcessIO$2311+1)^(0+256)
  3030  1190                     l7801:	
  3031  1190  0862               	movf	(_ProcessIO$2311+1)^(0+256),w
  3032  1191  0461               	iorwf	_ProcessIO$2311^(0+256),w
  3033  1192  1D03               	skipz
  3034  1193  0008               	return
  3035                           
  3036                           ;main.c: 202: USBGenericInHandle = USBTransferOnePacket(1,1,(BYTE*)&INPacket[WQX*15],15);
  3037  1194  0020               	movlb	0	; select bank0
  3038  1195  01DC               	clrf	?_USBTransferOnePacket
  3039  1196  0ADC               	incf	?_USBTransferOnePacket,f
  3040  1197  300F               	movlw	15
  3041  1198  0022               	movlb	2	; select bank2
  3042  1199  00DB               	movwf	??_ProcessIO^(0+256)
  3043  119A  085B               	movf	??_ProcessIO^(0+256),w
  3044  119B  0020               	movlb	0	; select bank0
  3045  119C  00D8               	movwf	?___bmul
  3046  119D  0022               	movlb	2	; select bank2
  3047  119E  0843               	movf	_WQX^(0+256),w
  3048  119F  3199  213A  3191   	fcall	___bmul
  3049  11A2  3E20               	addlw	32
  3050  11A3  0022               	movlb	2	; select bank2
  3051  11A4  00DC               	movwf	(??_ProcessIO+1)^(0+256)
  3052  11A5  085C               	movf	(??_ProcessIO+1)^(0+256),w
  3053  11A6  0020               	movlb	0	; select bank0
  3054  11A7  00DD               	movwf	?_USBTransferOnePacket+1
  3055  11A8  300F               	movlw	15
  3056  11A9  0022               	movlb	2	; select bank2
  3057  11AA  00DD               	movwf	(??_ProcessIO+2)^(0+256)
  3058  11AB  085D               	movf	(??_ProcessIO+2)^(0+256),w
  3059  11AC  0020               	movlb	0	; select bank0
  3060  11AD  00DE               	movwf	?_USBTransferOnePacket+2
  3061  11AE  3001               	movlw	1
  3062  11AF  3188  20AF         	fcall	_USBTransferOnePacket
  3063  11B1  0022               	movlb	2	; select bank2
  3064  11B2  00DE               	movwf	(??_ProcessIO+3)^(0+256)
  3065  11B3  085E               	movf	(??_ProcessIO+3)^(0+256),w
  3066  11B4  00AE               	movwf	_USBGenericInHandle^(0+256)
  3067                           
  3068                           ;main.c: 203: WQX = (WQX+1) & 3;
  3069  11B5  0A43               	incf	_WQX^(0+256),w
  3070  11B6  3903               	andlw	3
  3071  11B7  00DB               	movwf	??_ProcessIO^(0+256)
  3072  11B8  085B               	movf	??_ProcessIO^(0+256),w
  3073  11B9  00C3               	movwf	_WQX^(0+256)
  3074  11BA  0008               	return
  3075  11BB                     __end_of_ProcessIO:	
  3076                           
  3077                           	psect	text2
  3078  0DD4                     __ptext2:	
  3079 ;; *************** function _ProcessCmd *****************
  3080 ;; Defined at:
  3081 ;;		line 47 in file "klondike.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;  cmd             1    wreg     PTR unsigned char 
  3084 ;;		 -> OUTPacket(64), 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  cmd             1   22[BANK2 ] PTR unsigned char 
  3087 ;;		 -> OUTPacket(64), 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;		None               void
  3090 ;; Registers used:
  3091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3098 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3099 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3100 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  3101 ;;Total ram usage:        7 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:    7
  3104 ;; This function calls:
  3105 ;;		_AsicPushWork
  3106 ;;		_SendCmdReply
  3107 ;;		_UpdateClock
  3108 ;;		___wmul
  3109 ;; This function is called by:
  3110 ;;		_ProcessIO
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           
  3115                           ;psect for function _ProcessCmd
  3116  0DD4                     _ProcessCmd:	
  3117                           
  3118                           ;incstack = 0
  3119                           ; Regs used in _ProcessCmd: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3120                           ;ProcessCmd@cmd stored from wreg
  3121  0DD4  0022               	movlb	2	; select bank2
  3122  0DD5  00DA               	movwf	ProcessCmd@cmd^(0+256)
  3123                           
  3124                           ;klondike.c: 50: switch(cmd[0]) {
  3125  0DD6  2ECA               	goto	l7695
  3126  0DD7                     l7635:	
  3127                           ;klondike.c: 51: case 'W':
  3128                           
  3129                           
  3130                           ;klondike.c: 52: if( Status.WorkQC < 4-1 ) {
  3131  0DD7  3003               	movlw	3
  3132  0DD8  0266               	subwf	(_Status^(0+256)+3),w	;volatile
  3133  0DD9  1803               	skipnc
  3134  0DDA  2E2D               	goto	l7657
  3135                           
  3136                           ;klondike.c: 53: WorkQue[ (WorkNow + Status.WorkQC++) & 4-1 ] = *(WORKTASK *)(cmd+2);
  3137  0DDB  085A               	movf	ProcessCmd@cmd^(0+256),w
  3138  0DDC  3E02               	addlw	2
  3139  0DDD  0086               	movwf	6
  3140  0DDE  3002               	movlw	2	; select bank4/5
  3141  0DDF  0087               	movwf	7
  3142  0DE0  0833               	movf	_WorkNow^(0+256),w
  3143  0DE1  0766               	addwf	(_Status^(0+256)+3),w	;volatile
  3144  0DE2  00D4               	movwf	??_ProcessCmd^(0+256)
  3145  0DE3  01D5               	clrf	(??_ProcessCmd^(0+256)+1)
  3146  0DE4  0DD5               	rlf	(??_ProcessCmd+1)^(0+256),f
  3147  0DE5  3003               	movlw	3
  3148  0DE6  0554               	andwf	??_ProcessCmd^(0+256),w
  3149  0DE7  0020               	movlb	0	; select bank0
  3150  0DE8  00D8               	movwf	?___wmul
  3151  0DE9  3000               	movlw	0
  3152  0DEA  0022               	movlb	2	; select bank2
  3153  0DEB  0555               	andwf	(??_ProcessCmd+1)^(0+256),w
  3154  0DEC  0020               	movlb	0	; select bank0
  3155  0DED  00D9               	movwf	?___wmul+1
  3156  0DEE  302D               	movlw	45
  3157  0DEF  00DA               	movwf	?___wmul+2
  3158  0DF0  3000               	movlw	0
  3159  0DF1  00DB               	movwf	?___wmul+3
  3160  0DF2  319A  2226  318D   	fcall	___wmul
  3161  0DF5  303C               	movlw	60
  3162  0DF6  0022               	movlb	2	; select bank2
  3163  0DF7  00D6               	movwf	(??_ProcessCmd+2)^(0+256)
  3164  0DF8  3023               	movlw	35
  3165  0DF9  00D7               	movwf	((??_ProcessCmd+2)^(0+256)+1)
  3166  0DFA  0020               	movlb	0	; select bank0
  3167  0DFB  0858               	movf	?___wmul,w
  3168  0DFC  0022               	movlb	2	; select bank2
  3169  0DFD  0756               	addwf	(??_ProcessCmd+2)^(0+256),w
  3170  0DFE  0084               	movwf	4
  3171  0DFF  0020               	movlb	0	; select bank0
  3172  0E00  0859               	movf	?___wmul+1,w
  3173  0E01  0022               	movlb	2	; select bank2
  3174  0E02  3D57               	addwfc	(??_ProcessCmd+3)^(0+256),w
  3175  0E03  0085               	movwf	5
  3176  0E04  302D               	movlw	45
  3177  0E05  00FF               	movwf	127
  3178  0E06                     u8420:	
  3179  0E06  0016               	moviw fsr1++
  3180  0E07  001A               	movwi fsr0++
  3181  0E08  0BFF               	decfsz	127,f
  3182  0E09  2E06               	goto	u8420
  3183  0E0A  3001               	movlw	1
  3184  0E0B  00D4               	movwf	??_ProcessCmd^(0+256)
  3185  0E0C  0854               	movf	??_ProcessCmd^(0+256),w
  3186  0E0D  07E6               	addwf	(_Status^(0+256)+3),f	;volatile
  3187                           
  3188                           ;klondike.c: 54: if(Status.State == 'R') {
  3189  0E0E  0863               	movf	_Status^(0+256),w	;volatile
  3190  0E0F  3A52               	xorlw	82
  3191  0E10  1D03               	skipz
  3192  0E11  2E2D               	goto	l7657
  3193                           
  3194                           ;klondike.c: 55: AsicPushWork();
  3195  0E12  3192  22B6  318D   	fcall	_AsicPushWork
  3196  0E15  2E2D               	goto	l7657
  3197  0E16                     l7647:	
  3198                           ;klondike.c: 61: case 'A':
  3199                           
  3200                           ;klondike.c: 60: break;
  3201                           
  3202                           ;klondike.c: 59: Status.Noise = Status.ErrorCount = 0;
  3203                           
  3204                           ;klondike.c: 56: }
  3205                           ;klondike.c: 57: }
  3206                           ;klondike.c: 58: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3207                           
  3208                           
  3209                           ;klondike.c: 62: Status.WorkQC = WorkNow = 0;
  3210  0E16  01B3               	clrf	_WorkNow^(0+256)
  3211  0E17  01E6               	clrf	(_Status^(0+256)+3)	;volatile
  3212                           
  3213                           ;klondike.c: 63: Status.State = 'R';
  3214  0E18  3052               	movlw	82
  3215  0E19  2EB1               	goto	L2
  3216  0E1A                     l7655:	
  3217                           ;klondike.c: 67: case 'I':
  3218                           
  3219                           ;klondike.c: 66: break;
  3220                           
  3221                           ;klondike.c: 65: Status.Noise = Status.ErrorCount = 0;
  3222                           
  3223                           ;klondike.c: 64: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3224                           
  3225                           
  3226                           ;klondike.c: 68: SendCmdReply(cmd, (char *)&ID, sizeof(ID));
  3227  0E1A  085A               	movf	ProcessCmd@cmd^(0+256),w
  3228  0E1B  0020               	movlb	0	; select bank0
  3229  0E1C  00DE               	movwf	?_SendCmdReply
  3230  0E1D  3002               	movlw	2
  3231  0E1E  00DF               	movwf	?_SendCmdReply+1
  3232  0E1F  309F               	movlw	low (_ID| (0+32768))
  3233  0E20  00E0               	movwf	?_SendCmdReply+2
  3234  0E21  3088               	movlw	high (_ID| (0+32768))
  3235  0E22  00E1               	movwf	?_SendCmdReply+3
  3236  0E23  300C               	movlw	12
  3237  0E24  0022               	movlb	2	; select bank2
  3238  0E25  00D4               	movwf	??_ProcessCmd^(0+256)
  3239  0E26  0854               	movf	??_ProcessCmd^(0+256),w
  3240  0E27  0020               	movlb	0	; select bank0
  3241  0E28  00E2               	movwf	?_SendCmdReply+4
  3242  0E29  3196  26AE  318D   	fcall	_SendCmdReply
  3243                           
  3244                           ;klondike.c: 69: break;
  3245  0E2C  2EE2               	goto	l673
  3246  0E2D                     l7657:	
  3247                           ;klondike.c: 70: case 'S':
  3248                           
  3249                           
  3250                           ;klondike.c: 71: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3251  0E2D  0022               	movlb	2	; select bank2
  3252  0E2E  2EB4               	goto	L3
  3253  0E2F                     l7661:	
  3254                           ;klondike.c: 74: case 'C':
  3255                           
  3256                           ;klondike.c: 73: break;
  3257                           
  3258                           ;klondike.c: 72: Status.Noise = Status.ErrorCount = 0;
  3259                           
  3260                           
  3261                           ;klondike.c: 75: if( *(WORD *)&cmd[2] != 0 ) {
  3262  0E2F  085A               	movf	ProcessCmd@cmd^(0+256),w
  3263  0E30  3E02               	addlw	2
  3264  0E31  0086               	movwf	6
  3265  0E32  3002               	movlw	2	; select bank4/5
  3266  0E33  0087               	movwf	7
  3267  0E34  0016               	moviw fsr1++
  3268  0E35  0401               	iorwf	1,w
  3269  0E36  1903               	skipnz
  3270  0E37  2E7B               	goto	l7679
  3271                           
  3272                           ;klondike.c: 76: Cfg = *(WORKCFG *)(cmd+2);
  3273  0E38  085A               	movf	ProcessCmd@cmd^(0+256),w
  3274  0E39  3E02               	addlw	2
  3275  0E3A  0086               	movwf	6
  3276  0E3B  3002               	movlw	2	; select bank4/5
  3277  0E3C  0087               	movwf	7
  3278  0E3D  30E2               	movlw	low _Cfg
  3279  0E3E  0084               	movwf	4
  3280  0E3F  3001               	movlw	high _Cfg
  3281  0E40  0085               	movwf	5
  3282  0E41  3006               	movlw	6
  3283  0E42  00FF               	movwf	127
  3284  0E43                     u8450:	
  3285  0E43  0016               	moviw fsr1++
  3286  0E44  001A               	movwi fsr0++
  3287  0E45  0BFF               	decfsz	127,f
  3288  0E46  2E43               	goto	u8450
  3289                           
  3290                           ;klondike.c: 77: if(Cfg.HashClock < 62)
  3291  0E47  3000               	movlw	0
  3292  0E48  0023               	movlb	3	; select bank3
  3293  0E49  0263               	subwf	(_Cfg+1)^(0+384),w
  3294  0E4A  303E               	movlw	62
  3295  0E4B  1903               	skipnz
  3296  0E4C  0262               	subwf	_Cfg^(0+384),w
  3297  0E4D  1803               	skipnc
  3298  0E4E  2E53               	goto	l679
  3299                           
  3300                           ;klondike.c: 78: Cfg.HashClock = 62;
  3301  0E4F  303E               	movlw	62
  3302  0E50  00E2               	movwf	_Cfg^(0+384)
  3303  0E51  3000               	movlw	0
  3304  0E52  00E3               	movwf	(_Cfg^(0+384)+1)
  3305  0E53                     l679:	
  3306                           
  3307                           ;klondike.c: 79: if(Cfg.HashClock > 1337)
  3308  0E53  3005               	movlw	5
  3309  0E54  0263               	subwf	(_Cfg+1)^(0+384),w
  3310  0E55  303A               	movlw	58
  3311  0E56  1903               	skipnz
  3312  0E57  0262               	subwf	_Cfg^(0+384),w
  3313  0E58  1C03               	skipc
  3314  0E59  2E5E               	goto	l7671
  3315                           
  3316                           ;klondike.c: 80: Cfg.HashClock = 1337;
  3317  0E5A  3039               	movlw	57
  3318  0E5B  00E2               	movwf	_Cfg^(0+384)
  3319  0E5C  3005               	movlw	5
  3320  0E5D  00E3               	movwf	(_Cfg^(0+384)+1)
  3321  0E5E                     l7671:	
  3322                           
  3323                           ;klondike.c: 81: UpdateClock(Cfg.HashClock);
  3324  0E5E  0862               	movf	_Cfg^(0+384),w
  3325  0E5F  0021               	movlb	1	; select bank1
  3326  0E60  00DE               	movwf	?_UpdateClock^(0+128)
  3327  0E61  0023               	movlb	3	; select bank3
  3328  0E62  0863               	movf	(_Cfg+1)^(0+384),w
  3329  0E63  0021               	movlb	1	; select bank1
  3330  0E64  00DF               	movwf	(?_UpdateClock^(0+128)+1)
  3331  0E65  01E0               	clrf	(?_UpdateClock^(0+128)+2)
  3332  0E66  01E1               	clrf	(?_UpdateClock^(0+128)+3)
  3333  0E67  3184  2491  318D   	fcall	_UpdateClock
  3334                           
  3335                           ;klondike.c: 82: if(Cfg.TempTarget != 0)
  3336  0E6A  0023               	movlb	3	; select bank3
  3337  0E6B  0864               	movf	(_Cfg^(0+384)+2),w
  3338  0E6C  1903               	btfsc	3,2
  3339  0E6D  2E75               	goto	l7677
  3340                           
  3341                           ;klondike.c: 83: TempTarget = Cfg.TempTarget;
  3342  0E6E  0864               	movf	(_Cfg^(0+384)+2),w
  3343  0E6F  0022               	movlb	2	; select bank2
  3344  0E70  00D4               	movwf	??_ProcessCmd^(0+256)
  3345  0E71  0854               	movf	??_ProcessCmd^(0+256),w
  3346  0E72  0023               	movlb	3	; select bank3
  3347  0E73  00E9               	movwf	_TempTarget^(0+384)
  3348  0E74  2E7B               	goto	l7679
  3349  0E75                     l7677:	
  3350                           
  3351                           ;klondike.c: 84: else
  3352                           ;klondike.c: 85: Cfg.TempTarget = 143;
  3353  0E75  308F               	movlw	143
  3354  0E76  0022               	movlb	2	; select bank2
  3355  0E77  00D4               	movwf	??_ProcessCmd^(0+256)
  3356  0E78  0854               	movf	??_ProcessCmd^(0+256),w
  3357  0E79  0023               	movlb	3	; select bank3
  3358  0E7A  00E4               	movwf	(_Cfg^(0+384)+2)
  3359  0E7B                     l7679:	
  3360                           
  3361                           ;klondike.c: 86: }
  3362                           ;klondike.c: 87: SendCmdReply(cmd, (char *)&Cfg, sizeof(Cfg));
  3363  0E7B  0022               	movlb	2	; select bank2
  3364  0E7C  085A               	movf	ProcessCmd@cmd^(0+256),w
  3365  0E7D  0020               	movlb	0	; select bank0
  3366  0E7E  00DE               	movwf	?_SendCmdReply
  3367  0E7F  3002               	movlw	2
  3368  0E80  00DF               	movwf	?_SendCmdReply+1
  3369  0E81  30E2               	movlw	low _Cfg
  3370  0E82  00E0               	movwf	?_SendCmdReply+2
  3371  0E83  3001               	movlw	high _Cfg
  3372  0E84  00E1               	movwf	?_SendCmdReply+3
  3373  0E85  3006               	movlw	6
  3374  0E86  0022               	movlb	2	; select bank2
  3375  0E87  00D4               	movwf	??_ProcessCmd^(0+256)
  3376  0E88  0854               	movf	??_ProcessCmd^(0+256),w
  3377  0E89  0020               	movlb	0	; select bank0
  3378  0E8A  00E2               	movwf	?_SendCmdReply+4
  3379  0E8B  3196  26AE  318D   	fcall	_SendCmdReply
  3380                           
  3381                           ;klondike.c: 88: break;
  3382  0E8E  2EE2               	goto	l673
  3383  0E8F                     l7681:	
  3384                           ;klondike.c: 89: case 'E':
  3385                           
  3386                           
  3387                           ;klondike.c: 90: LATAbits.LATA4 = (cmd[2] == '1');
  3388  0E8F  0022               	movlb	2	; select bank2
  3389  0E90  085A               	movf	ProcessCmd@cmd^(0+256),w
  3390  0E91  3E02               	addlw	2
  3391  0E92  0086               	movwf	6
  3392  0E93  3002               	movlw	2	; select bank4/5
  3393  0E94  0087               	movwf	7
  3394  0E95  0801               	movf	1,w
  3395  0E96  3A31               	xorlw	49
  3396  0E97  3000               	movlw	0
  3397  0E98  1903               	skipnz
  3398  0E99  3001               	movlw	1
  3399  0E9A  00D4               	movwf	??_ProcessCmd^(0+256)
  3400  0E9B  0ED4               	swapf	??_ProcessCmd^(0+256),f
  3401  0E9C  080C               	movf	12,w	;volatile
  3402  0E9D  0654               	xorwf	??_ProcessCmd^(0+256),w
  3403  0E9E  39EF               	andlw	-17
  3404  0E9F  0654               	xorwf	??_ProcessCmd^(0+256),w
  3405  0EA0  008C               	movwf	12	;volatile
  3406                           
  3407                           ;klondike.c: 91: Status.State = (cmd[2] == '1') ? 'R' : 'D';
  3408  0EA1  085A               	movf	ProcessCmd@cmd^(0+256),w
  3409  0EA2  3E02               	addlw	2
  3410  0EA3  0086               	movwf	6
  3411  0EA4  3002               	movlw	2	; select bank4/5
  3412  0EA5  0087               	movwf	7
  3413  0EA6  0801               	movf	1,w
  3414  0EA7  3A31               	xorlw	49
  3415  0EA8  1903               	skipnz
  3416  0EA9  2EAC               	goto	l7687
  3417  0EAA  3044               	movlw	68
  3418  0EAB  2EAD               	goto	L1
  3419  0EAC                     l7687:	
  3420  0EAC  3052               	movlw	82
  3421  0EAD                     L1:	
  3422  0EAD  00D8               	movwf	_ProcessCmd$1977^(0+256)
  3423  0EAE  3000               	movlw	0
  3424  0EAF  00D9               	movwf	(_ProcessCmd$1977^(0+256)+1)
  3425  0EB0  0858               	movf	_ProcessCmd$1977^(0+256),w
  3426  0EB1                     L2:	
  3427  0EB1  00D4               	movwf	??_ProcessCmd^(0+256)
  3428  0EB2  0854               	movf	??_ProcessCmd^(0+256),w
  3429  0EB3  00E3               	movwf	_Status^(0+256)	;volatile
  3430  0EB4                     L3:	
  3431                           
  3432                           ;klondike.c: 92: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3433  0EB4  085A               	movf	ProcessCmd@cmd^(0+256),w
  3434  0EB5  0020               	movlb	0	; select bank0
  3435  0EB6  00DE               	movwf	?_SendCmdReply
  3436  0EB7  3002               	movlw	2
  3437  0EB8  00DF               	movwf	?_SendCmdReply+1
  3438  0EB9  3063               	movlw	low _Status
  3439  0EBA  00E0               	movwf	?_SendCmdReply+2
  3440  0EBB  3001               	movlw	high _Status
  3441  0EBC  00E1               	movwf	?_SendCmdReply+3
  3442  0EBD  300D               	movlw	13
  3443  0EBE  0022               	movlb	2	; select bank2
  3444  0EBF  00D4               	movwf	??_ProcessCmd^(0+256)
  3445  0EC0  0854               	movf	??_ProcessCmd^(0+256),w
  3446  0EC1  0020               	movlb	0	; select bank0
  3447  0EC2  00E2               	movwf	?_SendCmdReply+4
  3448  0EC3  3196  26AE  318D   	fcall	_SendCmdReply
  3449                           
  3450                           ;klondike.c: 93: Status.Noise = Status.ErrorCount = 0;
  3451  0EC6  0022               	movlb	2	; select bank2
  3452  0EC7  01EA               	clrf	(_Status^(0+256)+7)	;volatile
  3453  0EC8  01EF               	clrf	(_Status^(0+256)+12)	;volatile
  3454                           
  3455                           ;klondike.c: 103: }
  3456                           
  3457                           ;klondike.c: 102: break;
  3458                           
  3459                           ;klondike.c: 101: default:
  3460                           
  3461                           ;klondike.c: 94: break;
  3462  0EC9  2EE2               	goto	l673
  3463  0ECA                     l7695:	
  3464  0ECA  085A               	movf	ProcessCmd@cmd^(0+256),w
  3465  0ECB  0086               	movwf	6
  3466  0ECC  3002               	movlw	2	; select bank4/5
  3467  0ECD  0087               	movwf	7
  3468  0ECE  0801               	movf	1,w
  3469                           
  3470                           ; Switch size 1, requested type "space"
  3471                           ; Number of cases is 6, Range of values is 65 to 87
  3472                           ; switch strategies available:
  3473                           ; Name         Instructions Cycles
  3474                           ; simple_byte           19    10 (average)
  3475                           ; direct_byte           55     9 (fixed)
  3476                           ; jumptable            263     9 (fixed)
  3477                           ;	Chosen strategy is simple_byte
  3478  0ECF  3A41               	xorlw	65	; case 65
  3479  0ED0  1903               	skipnz
  3480  0ED1  2E16               	goto	l7647
  3481  0ED2  3A02               	xorlw	2	; case 67
  3482  0ED3  1903               	skipnz
  3483  0ED4  2E2F               	goto	l7661
  3484  0ED5  3A06               	xorlw	6	; case 69
  3485  0ED6  1903               	skipnz
  3486  0ED7  2E8F               	goto	l7681
  3487  0ED8  3A0C               	xorlw	12	; case 73
  3488  0ED9  1903               	skipnz
  3489  0EDA  2E1A               	goto	l7655
  3490  0EDB  3A1A               	xorlw	26	; case 83
  3491  0EDC  1903               	skipnz
  3492  0EDD  2E2D               	goto	l7657
  3493  0EDE  3A04               	xorlw	4	; case 87
  3494  0EDF  1903               	skipnz
  3495  0EE0  2DD7               	goto	l7635
  3496  0EE1  2EE2               	goto	l673
  3497  0EE2                     l673:	
  3498                           
  3499                           ;klondike.c: 104: LATAbits.LATA5 = 1;;
  3500  0EE2  0022               	movlb	2	; select bank2
  3501  0EE3  168C               	bsf	12,5	;volatile
  3502  0EE4  0008               	return
  3503  0EE5                     __end_of_ProcessCmd:	
  3504                           
  3505                           	psect	text3
  3506  16AE                     __ptext3:	
  3507 ;; *************** function _SendCmdReply *****************
  3508 ;; Defined at:
  3509 ;;		line 208 in file "main.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  cmd             2   14[BANK0 ] PTR unsigned char 
  3512 ;;		 -> ResultQue(6), OUTPacket(64), 
  3513 ;;  data            2   16[BANK0 ] PTR unsigned char 
  3514 ;;		 -> ResultQue(6), Cfg(6), ID(12), Status(13), 
  3515 ;;  count           1   18[BANK0 ] unsigned char 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  n               1   19[BANK0 ] unsigned char 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;		None               void
  3520 ;; Registers used:
  3521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3527 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3528 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3529 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3530 ;;      Totals:         0       6       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3531 ;;Total ram usage:       14 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    5
  3534 ;; This function calls:
  3535 ;;		___bmul
  3536 ;;		___wmul
  3537 ;; This function is called by:
  3538 ;;		_ProcessCmd
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           
  3543                           ;psect for function _SendCmdReply
  3544  16AE                     _SendCmdReply:	
  3545                           
  3546                           ;main.c: 209: if(WQI*15 + count + 2 < 64) {
  3547                           
  3548                           ;incstack = 0
  3549                           ; Regs used in _SendCmdReply: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3550  16AE  0020               	movlb	0	; select bank0
  3551  16AF  0862               	movf	SendCmdReply@count,w
  3552  16B0  0021               	movlb	1	; select bank1
  3553  16B1  00A0               	movwf	??_SendCmdReply^(0+128)
  3554  16B2  01A1               	clrf	(??_SendCmdReply^(0+128)+1)
  3555  16B3  0022               	movlb	2	; select bank2
  3556  16B4  0842               	movf	_WQI^(0+256),w
  3557  16B5  0021               	movlb	1	; select bank1
  3558  16B6  00A2               	movwf	(??_SendCmdReply+2)^(0+128)
  3559  16B7  01A3               	clrf	((??_SendCmdReply+2)^(0+128)+1)
  3560  16B8  0822               	movf	(??_SendCmdReply+2)^(0+128),w
  3561  16B9  0020               	movlb	0	; select bank0
  3562  16BA  00D8               	movwf	?___wmul
  3563  16BB  0021               	movlb	1	; select bank1
  3564  16BC  0823               	movf	(??_SendCmdReply+3)^(0+128),w
  3565  16BD  0020               	movlb	0	; select bank0
  3566  16BE  00D9               	movwf	?___wmul+1
  3567  16BF  300F               	movlw	15
  3568  16C0  00DA               	movwf	?___wmul+2
  3569  16C1  3000               	movlw	0
  3570  16C2  00DB               	movwf	?___wmul+3
  3571  16C3  319A  2226  3196   	fcall	___wmul
  3572  16C6  0021               	movlb	1	; select bank1
  3573  16C7  0820               	movf	??_SendCmdReply^(0+128),w
  3574  16C8  0020               	movlb	0	; select bank0
  3575  16C9  0758               	addwf	?___wmul,w
  3576  16CA  0021               	movlb	1	; select bank1
  3577  16CB  00A4               	movwf	(??_SendCmdReply+4)^(0+128)
  3578  16CC  0821               	movf	(??_SendCmdReply+1)^(0+128),w
  3579  16CD  0020               	movlb	0	; select bank0
  3580  16CE  3D59               	addwfc	?___wmul+1,w
  3581  16CF  0021               	movlb	1	; select bank1
  3582  16D0  00A5               	movwf	(??_SendCmdReply+5)^(0+128)
  3583  16D1  0824               	movf	(??_SendCmdReply+4)^(0+128),w
  3584  16D2  3E02               	addlw	2
  3585  16D3  00A6               	movwf	(??_SendCmdReply+6)^(0+128)
  3586  16D4  3000               	movlw	0
  3587  16D5  3D25               	addwfc	(??_SendCmdReply+5)^(0+128),w
  3588  16D6  00A7               	movwf	(??_SendCmdReply+7)^(0+128)
  3589  16D7  0827               	movf	(??_SendCmdReply+7)^(0+128),w
  3590  16D8  3A80               	xorlw	128
  3591  16D9  00FF               	movwf	127
  3592  16DA  3080               	movlw	128
  3593  16DB  027F               	subwf	127,w
  3594  16DC  1D03               	skipz
  3595  16DD  2EE0               	goto	u8505
  3596  16DE  3040               	movlw	64
  3597  16DF  0226               	subwf	(??_SendCmdReply+6)^(0+128),w
  3598  16E0                     u8505:	
  3599  16E0  1803               	skipnc
  3600  16E1  0008               	return
  3601                           
  3602                           ;main.c: 210: INPacket[WQI*15] = cmd[0];
  3603  16E2  0020               	movlb	0	; select bank0
  3604  16E3  085E               	movf	SendCmdReply@cmd,w
  3605  16E4  0086               	movwf	6
  3606  16E5  085F               	movf	SendCmdReply@cmd+1,w
  3607  16E6  0087               	movwf	7
  3608  16E7  0801               	movf	1,w
  3609  16E8  0021               	movlb	1	; select bank1
  3610  16E9  00A0               	movwf	??_SendCmdReply^(0+128)
  3611  16EA  300F               	movlw	15
  3612  16EB  00A1               	movwf	(??_SendCmdReply+1)^(0+128)
  3613  16EC  0821               	movf	(??_SendCmdReply+1)^(0+128),w
  3614  16ED  0020               	movlb	0	; select bank0
  3615  16EE  00D8               	movwf	?___bmul
  3616  16EF  0022               	movlb	2	; select bank2
  3617  16F0  0842               	movf	_WQI^(0+256),w
  3618  16F1  3199  213A  3196   	fcall	___bmul
  3619  16F4  3E20               	addlw	32
  3620  16F5  0086               	movwf	6
  3621  16F6  3002               	movlw	2	; select bank4/5
  3622  16F7  0087               	movwf	7
  3623  16F8  0021               	movlb	1	; select bank1
  3624  16F9  0820               	movf	??_SendCmdReply^(0+128),w
  3625  16FA  0081               	movwf	1
  3626                           
  3627                           ;main.c: 211: INPacket[WQI*15 + 1] = SlaveAddress;
  3628  16FB  0022               	movlb	2	; select bank2
  3629  16FC  082B               	movf	_SlaveAddress^(0+256),w
  3630  16FD  0021               	movlb	1	; select bank1
  3631  16FE  00A0               	movwf	??_SendCmdReply^(0+128)
  3632  16FF  300F               	movlw	15
  3633  1700  00A1               	movwf	(??_SendCmdReply+1)^(0+128)
  3634  1701  0821               	movf	(??_SendCmdReply+1)^(0+128),w
  3635  1702  0020               	movlb	0	; select bank0
  3636  1703  00D8               	movwf	?___bmul
  3637  1704  0022               	movlb	2	; select bank2
  3638  1705  0842               	movf	_WQI^(0+256),w
  3639  1706  3199  213A  3196   	fcall	___bmul
  3640  1709  3E01               	addlw	1
  3641  170A  3E20               	addlw	32
  3642  170B  0086               	movwf	6
  3643  170C  3002               	movlw	2	; select bank4/5
  3644  170D  0087               	movwf	7
  3645  170E  0021               	movlb	1	; select bank1
  3646  170F  0820               	movf	??_SendCmdReply^(0+128),w
  3647  1710  0081               	movwf	1
  3648                           
  3649                           ;main.c: 212: for(BYTE n = 0; n < count; n++)
  3650  1711  0020               	movlb	0	; select bank0
  3651  1712  01E3               	clrf	SendCmdReply@n
  3652  1713                     l7723:	
  3653  1713  0862               	movf	SendCmdReply@count,w
  3654  1714  0263               	subwf	SendCmdReply@n,w
  3655  1715  1803               	btfsc	3,0
  3656  1716  2F4D               	goto	l7725
  3657                           
  3658                           ;main.c: 213: INPacket[WQI*15 + n + 2] = data[n];
  3659  1717  0861               	movf	SendCmdReply@data+1,w
  3660  1718  0021               	movlb	1	; select bank1
  3661  1719  00A1               	movwf	(??_SendCmdReply^(0+128)+1)
  3662  171A  0020               	movlb	0	; select bank0
  3663  171B  0860               	movf	SendCmdReply@data,w
  3664  171C  0021               	movlb	1	; select bank1
  3665  171D  00A0               	movwf	??_SendCmdReply^(0+128)
  3666  171E  0020               	movlb	0	; select bank0
  3667  171F  0863               	movf	SendCmdReply@n,w
  3668  1720  0021               	movlb	1	; select bank1
  3669  1721  0720               	addwf	??_SendCmdReply^(0+128),w
  3670  1722  0084               	movwf	4
  3671  1723  0821               	movf	(??_SendCmdReply^(0+128)+1),w
  3672  1724  1803               	skipnc
  3673  1725  0A21               	incf	(??_SendCmdReply^(0+128)+1),w
  3674  1726  0085               	movwf	5
  3675  1727  0800               	movf	0,w	;code access
  3676  1728  00A2               	movwf	(??_SendCmdReply+2)^(0+128)
  3677  1729  0022               	movlb	2	; select bank2
  3678  172A  0842               	movf	_WQI^(0+256),w
  3679  172B  0021               	movlb	1	; select bank1
  3680  172C  00A3               	movwf	(??_SendCmdReply+3)^(0+128)
  3681  172D  01A4               	clrf	((??_SendCmdReply+3)^(0+128)+1)
  3682  172E  0823               	movf	(??_SendCmdReply+3)^(0+128),w
  3683  172F  0020               	movlb	0	; select bank0
  3684  1730  00D8               	movwf	?___wmul
  3685  1731  0021               	movlb	1	; select bank1
  3686  1732  0824               	movf	(??_SendCmdReply+4)^(0+128),w
  3687  1733  0020               	movlb	0	; select bank0
  3688  1734  00D9               	movwf	?___wmul+1
  3689  1735  300F               	movlw	15
  3690  1736  00DA               	movwf	?___wmul+2
  3691  1737  3000               	movlw	0
  3692  1738  00DB               	movwf	?___wmul+3
  3693  1739  319A  2226  3196   	fcall	___wmul
  3694  173C  0020               	movlb	0	; select bank0
  3695  173D  0858               	movf	?___wmul,w
  3696  173E  0763               	addwf	SendCmdReply@n,w
  3697  173F  3E02               	addlw	2
  3698  1740  3E20               	addlw	32
  3699  1741  0086               	movwf	6
  3700  1742  3002               	movlw	2	; select bank4/5
  3701  1743  0087               	movwf	7
  3702  1744  0021               	movlb	1	; select bank1
  3703  1745  0822               	movf	(??_SendCmdReply+2)^(0+128),w
  3704  1746  0081               	movwf	1
  3705  1747  3001               	movlw	1
  3706  1748  00A0               	movwf	??_SendCmdReply^(0+128)
  3707  1749  0820               	movf	??_SendCmdReply^(0+128),w
  3708  174A  0020               	movlb	0	; select bank0
  3709  174B  07E3               	addwf	SendCmdReply@n,f
  3710  174C  2F13               	goto	l7723
  3711  174D                     l7725:	
  3712                           
  3713                           ;main.c: 214: WQI = (WQI+1) & 3;
  3714  174D  0022               	movlb	2	; select bank2
  3715  174E  0A42               	incf	_WQI^(0+256),w
  3716  174F  3903               	andlw	3
  3717  1750  0021               	movlb	1	; select bank1
  3718  1751  00A0               	movwf	??_SendCmdReply^(0+128)
  3719  1752  0820               	movf	??_SendCmdReply^(0+128),w
  3720  1753  0022               	movlb	2	; select bank2
  3721  1754  00C2               	movwf	_WQI^(0+256)
  3722  1755  0008               	return
  3723  1756                     __end_of_SendCmdReply:	
  3724                           
  3725                           	psect	text4
  3726  193A                     __ptext4:	
  3727 ;; *************** function ___bmul *****************
  3728 ;; Defined at:
  3729 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\bmul.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  multiplier      1    wreg     unsigned char 
  3732 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  multiplier      1   11[BANK0 ] unsigned char 
  3735 ;;  product         1   10[BANK0 ] unsigned char 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      unsigned char 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3745 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3746 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3747 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3748 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;Total ram usage:        4 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    4
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_ProcessIO
  3756 ;;		_SendCmdReply
  3757 ;;		i1_SendCmdReply
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           
  3762                           ;psect for function ___bmul
  3763  193A                     ___bmul:	
  3764                           
  3765                           ;incstack = 0
  3766                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3767                           ;___bmul@multiplier stored from wreg
  3768  193A  0020               	movlb	0	; select bank0
  3769  193B  00DB               	movwf	___bmul@multiplier
  3770  193C  01DA               	clrf	___bmul@product
  3771  193D                     l7883:	
  3772  193D  1C5B               	btfss	___bmul@multiplier,0
  3773  193E  2943               	goto	l7887
  3774  193F  0858               	movf	___bmul@multiplicand,w
  3775  1940  00D9               	movwf	??___bmul
  3776  1941  0859               	movf	??___bmul,w
  3777  1942  07DA               	addwf	___bmul@product,f
  3778  1943                     l7887:	
  3779  1943  1003               	clrc
  3780  1944  0DD8               	rlf	___bmul@multiplicand,f
  3781  1945  1003               	clrc
  3782  1946  0CDB               	rrf	___bmul@multiplier,f
  3783  1947  08DB               	movf	___bmul@multiplier,f
  3784  1948  1D03               	skipz
  3785  1949  293D               	goto	l7883
  3786  194A  085A               	movf	___bmul@product,w
  3787  194B  0008               	return
  3788  194C                     __end_of___bmul:	
  3789                           
  3790                           	psect	text5
  3791  12B6                     __ptext5:	
  3792 ;; *************** function _AsicPushWork *****************
  3793 ;; Defined at:
  3794 ;;		line 108 in file "klondike.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;		None               void
  3801 ;; Registers used:
  3802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3810 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3811 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3812 ;;Total ram usage:        5 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    6
  3815 ;; This function calls:
  3816 ;;		_SendAsicData
  3817 ;;		_AsicPreCalc
  3818 ;;		___wmul
  3819 ;; This function is called by:
  3820 ;;		_ProcessCmd
  3821 ;;		_main
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           
  3826                           ;psect for function _AsicPushWork
  3827  12B6                     _AsicPushWork:	
  3828                           
  3829                           ;klondike.c: 109: AsicPreCalc(&WorkQue[WorkNow]);
  3830                           
  3831                           ;incstack = 0
  3832                           ; Regs used in _AsicPushWork: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3833  12B6  0022               	movlb	2	; select bank2
  3834  12B7  0833               	movf	_WorkNow^(0+256),w
  3835  12B8  0021               	movlb	1	; select bank1
  3836  12B9  00E5               	movwf	??_AsicPushWork^(0+128)
  3837  12BA  01E6               	clrf	(??_AsicPushWork^(0+128)+1)
  3838  12BB  0865               	movf	??_AsicPushWork^(0+128),w
  3839  12BC  0020               	movlb	0	; select bank0
  3840  12BD  00D8               	movwf	?___wmul
  3841  12BE  0021               	movlb	1	; select bank1
  3842  12BF  0866               	movf	(??_AsicPushWork+1)^(0+128),w
  3843  12C0  0020               	movlb	0	; select bank0
  3844  12C1  00D9               	movwf	?___wmul+1
  3845  12C2  302D               	movlw	45
  3846  12C3  00DA               	movwf	?___wmul+2
  3847  12C4  3000               	movlw	0
  3848  12C5  00DB               	movwf	?___wmul+3
  3849  12C6  319A  2226  3192   	fcall	___wmul
  3850  12C9  303C               	movlw	60
  3851  12CA  0021               	movlb	1	; select bank1
  3852  12CB  00E7               	movwf	(??_AsicPushWork+2)^(0+128)
  3853  12CC  3023               	movlw	35
  3854  12CD  00E8               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  3855  12CE  0020               	movlb	0	; select bank0
  3856  12CF  0858               	movf	?___wmul,w
  3857  12D0  0021               	movlb	1	; select bank1
  3858  12D1  0767               	addwf	(??_AsicPushWork+2)^(0+128),w
  3859  12D2  00A0               	movwf	?_AsicPreCalc^(0+128)
  3860  12D3  0020               	movlb	0	; select bank0
  3861  12D4  0859               	movf	?___wmul+1,w
  3862  12D5  0021               	movlb	1	; select bank1
  3863  12D6  3D68               	addwfc	(??_AsicPushWork+3)^(0+128),w
  3864  12D7  00A1               	movwf	(?_AsicPreCalc+1)^(0+128)
  3865  12D8  3180  2091  3192   	fcall	_AsicPreCalc
  3866                           
  3867                           ;klondike.c: 110: Status.WorkID = WorkQue[WorkNow].WorkID;
  3868  12DB  0022               	movlb	2	; select bank2
  3869  12DC  0833               	movf	_WorkNow^(0+256),w
  3870  12DD  0021               	movlb	1	; select bank1
  3871  12DE  00E5               	movwf	??_AsicPushWork^(0+128)
  3872  12DF  01E6               	clrf	(??_AsicPushWork^(0+128)+1)
  3873  12E0  0865               	movf	??_AsicPushWork^(0+128),w
  3874  12E1  0020               	movlb	0	; select bank0
  3875  12E2  00D8               	movwf	?___wmul
  3876  12E3  0021               	movlb	1	; select bank1
  3877  12E4  0866               	movf	(??_AsicPushWork+1)^(0+128),w
  3878  12E5  0020               	movlb	0	; select bank0
  3879  12E6  00D9               	movwf	?___wmul+1
  3880  12E7  302D               	movlw	45
  3881  12E8  00DA               	movwf	?___wmul+2
  3882  12E9  3000               	movlw	0
  3883  12EA  00DB               	movwf	?___wmul+3
  3884  12EB  319A  2226  3192   	fcall	___wmul
  3885  12EE  303C               	movlw	60
  3886  12EF  0021               	movlb	1	; select bank1
  3887  12F0  00E7               	movwf	(??_AsicPushWork+2)^(0+128)
  3888  12F1  3023               	movlw	35
  3889  12F2  00E8               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  3890  12F3  0020               	movlb	0	; select bank0
  3891  12F4  0858               	movf	?___wmul,w
  3892  12F5  0021               	movlb	1	; select bank1
  3893  12F6  0767               	addwf	(??_AsicPushWork+2)^(0+128),w
  3894  12F7  0086               	movwf	6
  3895  12F8  0020               	movlb	0	; select bank0
  3896  12F9  0859               	movf	?___wmul+1,w
  3897  12FA  0021               	movlb	1	; select bank1
  3898  12FB  3D68               	addwfc	(??_AsicPushWork+3)^(0+128),w
  3899  12FC  0087               	movwf	7
  3900  12FD  0801               	movf	1,w
  3901  12FE  00E9               	movwf	(??_AsicPushWork+4)^(0+128)
  3902  12FF  0869               	movf	(??_AsicPushWork+4)^(0+128),w
  3903  1300  0022               	movlb	2	; select bank2
  3904  1301  00E7               	movwf	(_Status^(0+256)+4)	;volatile
  3905                           
  3906                           ;klondike.c: 111: SendAsicData(&WorkQue[WorkNow]);
  3907  1302  0833               	movf	_WorkNow^(0+256),w
  3908  1303  0021               	movlb	1	; select bank1
  3909  1304  00E5               	movwf	??_AsicPushWork^(0+128)
  3910  1305  01E6               	clrf	(??_AsicPushWork^(0+128)+1)
  3911  1306  0865               	movf	??_AsicPushWork^(0+128),w
  3912  1307  0020               	movlb	0	; select bank0
  3913  1308  00D8               	movwf	?___wmul
  3914  1309  0021               	movlb	1	; select bank1
  3915  130A  0866               	movf	(??_AsicPushWork+1)^(0+128),w
  3916  130B  0020               	movlb	0	; select bank0
  3917  130C  00D9               	movwf	?___wmul+1
  3918  130D  302D               	movlw	45
  3919  130E  00DA               	movwf	?___wmul+2
  3920  130F  3000               	movlw	0
  3921  1310  00DB               	movwf	?___wmul+3
  3922  1311  319A  2226  3192   	fcall	___wmul
  3923  1314  303C               	movlw	60
  3924  1315  0021               	movlb	1	; select bank1
  3925  1316  00E7               	movwf	(??_AsicPushWork+2)^(0+128)
  3926  1317  3023               	movlw	35
  3927  1318  00E8               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  3928  1319  0020               	movlb	0	; select bank0
  3929  131A  0858               	movf	?___wmul,w
  3930  131B  0021               	movlb	1	; select bank1
  3931  131C  0767               	addwf	(??_AsicPushWork+2)^(0+128),w
  3932  131D  0020               	movlb	0	; select bank0
  3933  131E  00DE               	movwf	?_SendAsicData
  3934  131F  0859               	movf	?___wmul+1,w
  3935  1320  0021               	movlb	1	; select bank1
  3936  1321  3D68               	addwfc	(??_AsicPushWork+3)^(0+128),w
  3937  1322  0020               	movlb	0	; select bank0
  3938  1323  00DF               	movwf	?_SendAsicData+1
  3939  1324  3195  2572         	fcall	_SendAsicData
  3940                           
  3941                           ;klondike.c: 112: WorkNow = (WorkNow+1) & 4-1;
  3942  1326  0022               	movlb	2	; select bank2
  3943  1327  0A33               	incf	_WorkNow^(0+256),w
  3944  1328  3903               	andlw	3
  3945  1329  0021               	movlb	1	; select bank1
  3946  132A  00E5               	movwf	??_AsicPushWork^(0+128)
  3947  132B  0865               	movf	??_AsicPushWork^(0+128),w
  3948  132C  0022               	movlb	2	; select bank2
  3949  132D  00B3               	movwf	_WorkNow^(0+256)
  3950                           
  3951                           ;klondike.c: 113: Status.HashCount = 0;
  3952  132E  01EB               	clrf	(_Status^(0+256)+8)	;volatile
  3953  132F  01EC               	clrf	((_Status+1)^(0+256)+8)	;volatile
  3954                           
  3955                           ;klondike.c: 114: TMR0 = HashTime;
  3956  1330  0826               	movf	_HashTime^(0+256),w
  3957  1331  0020               	movlb	0	; select bank0
  3958  1332  0095               	movwf	21	;volatile
  3959                           
  3960                           ;klondike.c: 115: Status.State = 'W';
  3961  1333  3057               	movlw	87
  3962  1334  0021               	movlb	1	; select bank1
  3963  1335  00E5               	movwf	??_AsicPushWork^(0+128)
  3964  1336  0865               	movf	??_AsicPushWork^(0+128),w
  3965  1337  0022               	movlb	2	; select bank2
  3966  1338  00E3               	movwf	_Status^(0+256)	;volatile
  3967                           
  3968                           ;klondike.c: 116: Status.WorkQC--;
  3969  1339  3001               	movlw	1
  3970  133A  02E6               	subwf	(_Status^(0+256)+3),f	;volatile
  3971  133B  0008               	return
  3972  133C                     __end_of_AsicPushWork:	
  3973                           
  3974                           	psect	text6
  3975  1A26                     __ptext6:	
  3976 ;; *************** function ___wmul *****************
  3977 ;; Defined at:
  3978 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\wmul.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  multiplier      2    8[BANK0 ] unsigned int 
  3981 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;  product         2   12[BANK0 ] unsigned int 
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  2    8[BANK0 ] unsigned int 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3993 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3994 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3996 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3997 ;;Total ram usage:        6 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; Hardware stack levels required when called:    4
  4000 ;; This function calls:
  4001 ;;		Nothing
  4002 ;; This function is called by:
  4003 ;;		_ProcessCmd
  4004 ;;		_AsicPushWork
  4005 ;;		_SendCmdReply
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           
  4010                           ;psect for function ___wmul
  4011  1A26                     ___wmul:	
  4012                           
  4013                           ;incstack = 0
  4014                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4015  1A26  0020               	movlb	0	; select bank0
  4016  1A27  01DC               	clrf	___wmul@product
  4017  1A28  01DD               	clrf	___wmul@product+1
  4018  1A29                     l7899:	
  4019  1A29  1C58               	btfss	___wmul@multiplier,0
  4020  1A2A  2A2F               	goto	l1269
  4021  1A2B  085A               	movf	___wmul@multiplicand,w
  4022  1A2C  07DC               	addwf	___wmul@product,f
  4023  1A2D  085B               	movf	___wmul@multiplicand+1,w
  4024  1A2E  3DDD               	addwfc	___wmul@product+1,f
  4025  1A2F                     l1269:	
  4026  1A2F  3001               	movlw	1
  4027  1A30                     u8825:	
  4028  1A30  35DA               	lslf	___wmul@multiplicand,f
  4029  1A31  0DDB               	rlf	___wmul@multiplicand+1,f
  4030  1A32  0B89               	decfsz	9,f
  4031  1A33  2A30               	goto	u8825
  4032  1A34  3001               	movlw	1
  4033  1A35                     u8835:	
  4034  1A35  36D9               	lsrf	___wmul@multiplier+1,f
  4035  1A36  0CD8               	rrf	___wmul@multiplier,f
  4036  1A37  0B89               	decfsz	9,f
  4037  1A38  2A35               	goto	u8835
  4038  1A39  0859               	movf	___wmul@multiplier+1,w
  4039  1A3A  0458               	iorwf	___wmul@multiplier,w
  4040  1A3B  1D03               	skipz
  4041  1A3C  2A29               	goto	l7899
  4042  1A3D  085D               	movf	___wmul@product+1,w
  4043  1A3E  01D9               	clrf	?___wmul+1
  4044  1A3F  07D9               	addwf	?___wmul+1,f
  4045  1A40  085C               	movf	___wmul@product,w
  4046  1A41  01D8               	clrf	?___wmul
  4047  1A42  07D8               	addwf	?___wmul,f
  4048  1A43  0008               	return
  4049  1A44                     __end_of___wmul:	
  4050                           
  4051                           	psect	text7
  4052  0091                     __ptext7:	
  4053 ;; *************** function _AsicPreCalc *****************
  4054 ;; Defined at:
  4055 ;;		line 318 in file "asic.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  work            2    0[BANK1 ] PTR struct _worktask
  4058 ;;		 -> WorkQue(180), 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  m              32   24[BANK1 ] unsigned long [8]
  4061 ;;  K              12   12[BANK1 ] unsigned long [3]
  4062 ;;  x               4   64[BANK1 ] unsigned long 
  4063 ;;  y               4   60[BANK1 ] unsigned long 
  4064 ;;  z               4   56[BANK1 ] unsigned long 
  4065 ;;  n               1   68[BANK1 ] unsigned char 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;		None               void
  4068 ;; Registers used:
  4069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4075 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;      Totals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;Total ram usage:       69 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    5
  4082 ;; This function calls:
  4083 ;;		_rotate
  4084 ;; This function is called by:
  4085 ;;		_AsicPushWork
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           
  4090                           ;psect for function _AsicPreCalc
  4091  0091                     _AsicPreCalc:	
  4092                           
  4093                           ;asic.c: 319: DWORD K[3] = { 0x428a2f98, 0x71374491, 0xb5c0fbcf };
  4094                           
  4095                           ;incstack = 0
  4096                           ; Regs used in _AsicPreCalc: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  4097  0091  3060               	movlw	low AsicPreCalc@F3344
  4098  0092  0086               	movwf	6
  4099  0093  3002               	movlw	high AsicPreCalc@F3344
  4100  0094  0087               	movwf	7
  4101  0095  30AC               	movlw	low AsicPreCalc@K
  4102  0096  0084               	movwf	4
  4103  0097  3000               	movlw	high AsicPreCalc@K
  4104  0098  0085               	movwf	5
  4105  0099  300C               	movlw	12
  4106  009A  00FF               	movwf	127
  4107  009B                     u4860:	
  4108  009B  0016               	moviw fsr1++
  4109  009C  001A               	movwi fsr0++
  4110  009D  0BFF               	decfsz	127,f
  4111  009E  289B               	goto	u4860
  4112                           
  4113                           ;asic.c: 320: DWORD x, y, z;
  4114                           ;asic.c: 321: DWORD m[8];
  4115                           ;asic.c: 322: BYTE n;
  4116                           ;asic.c: 324: for(n = 0; n < 8; n++)
  4117  009F  0021               	movlb	1	; select bank1
  4118  00A0  01E4               	clrf	AsicPreCalc@n^(0+128)
  4119  00A1  3008               	movlw	8
  4120  00A2  0264               	subwf	AsicPreCalc@n^(0+128),w
  4121  00A3  1803               	btfsc	3,0
  4122  00A4  28DB               	goto	l5283
  4123  00A5                     l5277:	
  4124                           
  4125                           ;asic.c: 325: m[n] = work->MidState[n];
  4126  00A5  0864               	movf	AsicPreCalc@n^(0+128),w
  4127  00A6  00A2               	movwf	??_AsicPreCalc^(0+128)
  4128  00A7  01A3               	clrf	(??_AsicPreCalc^(0+128)+1)
  4129  00A8  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4130  00A9  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4131  00AA  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4132  00AB  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4133  00AC  0822               	movf	??_AsicPreCalc^(0+128),w
  4134  00AD  3E01               	addlw	1
  4135  00AE  00A4               	movwf	(??_AsicPreCalc+2)^(0+128)
  4136  00AF  3000               	movlw	0
  4137  00B0  3D23               	addwfc	(??_AsicPreCalc+1)^(0+128),w
  4138  00B1  00A5               	movwf	(??_AsicPreCalc+3)^(0+128)
  4139  00B2  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4140  00B3  0720               	addwf	AsicPreCalc@work^(0+128),w
  4141  00B4  0086               	movwf	6
  4142  00B5  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4143  00B6  3D21               	addwfc	(AsicPreCalc@work+1)^(0+128),w
  4144  00B7  0087               	movwf	7
  4145  00B8  3F40               	moviw [0]fsr1
  4146  00B9  00A6               	movwf	(??_AsicPreCalc+4)^(0+128)
  4147  00BA  3F41               	moviw [1]fsr1
  4148  00BB  00A7               	movwf	((??_AsicPreCalc+4)^(0+128)+1)
  4149  00BC  3F42               	moviw [2]fsr1
  4150  00BD  00A8               	movwf	((??_AsicPreCalc+4)^(0+128)+2)
  4151  00BE  3F43               	moviw [3]fsr1
  4152  00BF  00A9               	movwf	((??_AsicPreCalc+4)^(0+128)+3)
  4153  00C0  0864               	movf	AsicPreCalc@n^(0+128),w
  4154  00C1  00AA               	movwf	(??_AsicPreCalc+8)^(0+128)
  4155  00C2  3001               	movlw	1
  4156  00C3                     u4885:	
  4157  00C3  35AA               	lslf	(??_AsicPreCalc+8)^(0+128),f
  4158  00C4  3EFF               	addlw	-1
  4159  00C5  1D03               	skipz
  4160  00C6  28C3               	goto	u4885
  4161  00C7  352A               	lslf	(??_AsicPreCalc+8)^(0+128),w
  4162  00C8  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4163  00C9  0086               	movwf	6
  4164  00CA  0187               	clrf	7
  4165  00CB  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4166  00CC  3FC0               	movwi [0]fsr1
  4167  00CD  0827               	movf	(??_AsicPreCalc+5)^(0+128),w
  4168  00CE  3FC1               	movwi [1]fsr1
  4169  00CF  0828               	movf	(??_AsicPreCalc+6)^(0+128),w
  4170  00D0  3FC2               	movwi [2]fsr1
  4171  00D1  0829               	movf	(??_AsicPreCalc+7)^(0+128),w
  4172  00D2  3FC3               	movwi [3]fsr1
  4173  00D3  3001               	movlw	1
  4174  00D4  00A2               	movwf	??_AsicPreCalc^(0+128)
  4175  00D5  0822               	movf	??_AsicPreCalc^(0+128),w
  4176  00D6  07E4               	addwf	AsicPreCalc@n^(0+128),f
  4177  00D7  3008               	movlw	8
  4178  00D8  0264               	subwf	AsicPreCalc@n^(0+128),w
  4179  00D9  1C03               	skipc
  4180  00DA  28A5               	goto	l5277
  4181  00DB                     l5283:	
  4182                           
  4183                           ;asic.c: 327: for(n = 0; n < 3; n++) {
  4184  00DB  01E4               	clrf	AsicPreCalc@n^(0+128)
  4185  00DC                     L4:	
  4186  00DC  3003               	movlw	3
  4187  00DD  0264               	subwf	AsicPreCalc@n^(0+128),w
  4188  00DE  1803               	btfsc	3,0
  4189  00DF  0008               	return
  4190                           
  4191                           ;asic.c: 329: x = m[5-n] ^ m[6-n];
  4192  00E0  0364               	decf	AsicPreCalc@n^(0+128),w
  4193  00E1  3AFF               	xorlw	255
  4194  00E2  00A2               	movwf	??_AsicPreCalc^(0+128)
  4195  00E3  3001               	movlw	1
  4196  00E4                     u4915:	
  4197  00E4  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4198  00E5  3EFF               	addlw	-1
  4199  00E6  1D03               	skipz
  4200  00E7  28E4               	goto	u4915
  4201  00E8  3522               	lslf	??_AsicPreCalc^(0+128),w
  4202  00E9  3E18               	addlw	24
  4203  00EA  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4204  00EB  0086               	movwf	6
  4205  00EC  0187               	clrf	7
  4206  00ED  3F40               	moviw [0]fsr1
  4207  00EE  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4208  00EF  3F41               	moviw [1]fsr1
  4209  00F0  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4210  00F1  3F42               	moviw [2]fsr1
  4211  00F2  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4212  00F3  3F43               	moviw [3]fsr1
  4213  00F4  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4214  00F5  0364               	decf	AsicPreCalc@n^(0+128),w
  4215  00F6  3AFF               	xorlw	255
  4216  00F7  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  4217  00F8  3001               	movlw	1
  4218  00F9                     u4925:	
  4219  00F9  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4220  00FA  3EFF               	addlw	-1
  4221  00FB  1D03               	skipz
  4222  00FC  28F9               	goto	u4925
  4223  00FD  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4224  00FE  3E14               	addlw	20
  4225  00FF  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4226  0100  0086               	movwf	6
  4227  0101  0187               	clrf	7
  4228  0102  3F40               	moviw [0]fsr1
  4229  0103  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  4230  0104  3F41               	moviw [1]fsr1
  4231  0105  00A9               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  4232  0106  3F42               	moviw [2]fsr1
  4233  0107  00AA               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  4234  0108  3F43               	moviw [3]fsr1
  4235  0109  00AB               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  4236  010A  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4237  010B  0628               	xorwf	(??_AsicPreCalc+6)^(0+128),w
  4238  010C  00E0               	movwf	AsicPreCalc@x^(0+128)
  4239  010D  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4240  010E  0629               	xorwf	(??_AsicPreCalc+7)^(0+128),w
  4241  010F  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4242  0110  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4243  0111  062A               	xorwf	(??_AsicPreCalc+8)^(0+128),w
  4244  0112  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4245  0113  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4246  0114  062B               	xorwf	(??_AsicPreCalc+9)^(0+128),w
  4247  0115  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4248                           
  4249                           ;asic.c: 330: x = x & m[4-n];
  4250  0116  0364               	decf	AsicPreCalc@n^(0+128),w
  4251  0117  3AFF               	xorlw	255
  4252  0118  00A2               	movwf	??_AsicPreCalc^(0+128)
  4253  0119  3001               	movlw	1
  4254  011A                     u4935:	
  4255  011A  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4256  011B  3EFF               	addlw	-1
  4257  011C  1D03               	skipz
  4258  011D  291A               	goto	u4935
  4259  011E  3522               	lslf	??_AsicPreCalc^(0+128),w
  4260  011F  3E10               	addlw	16
  4261  0120  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4262  0121  0086               	movwf	6
  4263  0122  0187               	clrf	7
  4264  0123  0860               	movf	AsicPreCalc@x^(0+128),w
  4265  0124  0501               	andwf	1,w
  4266  0125  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4267  0126  3141               	addfsr 1,1
  4268  0127  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4269  0128  0501               	andwf	1,w
  4270  0129  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4271  012A  3141               	addfsr 1,1
  4272  012B  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  4273  012C  0501               	andwf	1,w
  4274  012D  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4275  012E  3141               	addfsr 1,1
  4276  012F  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  4277  0130  0501               	andwf	1,w
  4278  0131  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4279  0132  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4280  0133  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4281  0134  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4282  0135  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4283  0136  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4284  0137  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4285  0138  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4286  0139  00E0               	movwf	AsicPreCalc@x^(0+128)
  4287                           
  4288                           ;asic.c: 331: x = m[6-n] ^ x;
  4289  013A  0364               	decf	AsicPreCalc@n^(0+128),w
  4290  013B  3AFF               	xorlw	255
  4291  013C  00A2               	movwf	??_AsicPreCalc^(0+128)
  4292  013D  3001               	movlw	1
  4293  013E                     u4945:	
  4294  013E  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4295  013F  3EFF               	addlw	-1
  4296  0140  1D03               	skipz
  4297  0141  293E               	goto	u4945
  4298  0142  3522               	lslf	??_AsicPreCalc^(0+128),w
  4299  0143  3E18               	addlw	24
  4300  0144  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4301  0145  0086               	movwf	6
  4302  0146  0187               	clrf	7
  4303  0147  0860               	movf	AsicPreCalc@x^(0+128),w
  4304  0148  0601               	xorwf	1,w
  4305  0149  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4306  014A  3141               	addfsr 1,1
  4307  014B  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4308  014C  0601               	xorwf	1,w
  4309  014D  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4310  014E  3141               	addfsr 1,1
  4311  014F  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  4312  0150  0601               	xorwf	1,w
  4313  0151  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4314  0152  3141               	addfsr 1,1
  4315  0153  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  4316  0154  0601               	xorwf	1,w
  4317  0155  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4318  0156  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4319  0157  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4320  0158  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4321  0159  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4322  015A  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4323  015B  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4324  015C  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4325  015D  00E0               	movwf	AsicPreCalc@x^(0+128)
  4326                           
  4327                           ;asic.c: 332: x += K[n];
  4328  015E  0864               	movf	AsicPreCalc@n^(0+128),w
  4329  015F  00A2               	movwf	??_AsicPreCalc^(0+128)
  4330  0160  3001               	movlw	1
  4331  0161                     u4955:	
  4332  0161  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4333  0162  3EFF               	addlw	-1
  4334  0163  1D03               	skipz
  4335  0164  2961               	goto	u4955
  4336  0165  3522               	lslf	??_AsicPreCalc^(0+128),w
  4337  0166  3EAC               	addlw	AsicPreCalc@K& (0+255)
  4338  0167  0086               	movwf	6
  4339  0168  0187               	clrf	7
  4340  0169  3F40               	moviw [0]fsr1
  4341  016A  07E0               	addwf	AsicPreCalc@x^(0+128),f
  4342  016B  3F41               	moviw [1]fsr1
  4343  016C  3DE1               	addwfc	(AsicPreCalc@x+1)^(0+128),f
  4344  016D  3F42               	moviw [2]fsr1
  4345  016E  3DE2               	addwfc	(AsicPreCalc@x+2)^(0+128),f
  4346  016F  3F43               	moviw [3]fsr1
  4347  0170  3DE3               	addwfc	(AsicPreCalc@x+3)^(0+128),f
  4348                           
  4349                           ;asic.c: 333: x += work->Merkle[n];
  4350  0171  0864               	movf	AsicPreCalc@n^(0+128),w
  4351  0172  00A2               	movwf	??_AsicPreCalc^(0+128)
  4352  0173  01A3               	clrf	(??_AsicPreCalc^(0+128)+1)
  4353  0174  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4354  0175  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4355  0176  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4356  0177  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4357  0178  0822               	movf	??_AsicPreCalc^(0+128),w
  4358  0179  3E21               	addlw	33
  4359  017A  00A4               	movwf	(??_AsicPreCalc+2)^(0+128)
  4360  017B  3000               	movlw	0
  4361  017C  3D23               	addwfc	(??_AsicPreCalc+1)^(0+128),w
  4362  017D  00A5               	movwf	(??_AsicPreCalc+3)^(0+128)
  4363  017E  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4364  017F  0720               	addwf	AsicPreCalc@work^(0+128),w
  4365  0180  0086               	movwf	6
  4366  0181  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4367  0182  3D21               	addwfc	(AsicPreCalc@work+1)^(0+128),w
  4368  0183  0087               	movwf	7
  4369  0184  3F40               	moviw [0]fsr1
  4370  0185  07E0               	addwf	AsicPreCalc@x^(0+128),f
  4371  0186  3F41               	moviw [1]fsr1
  4372  0187  3DE1               	addwfc	(AsicPreCalc@x+1)^(0+128),f
  4373  0188  3F42               	moviw [2]fsr1
  4374  0189  3DE2               	addwfc	(AsicPreCalc@x+2)^(0+128),f
  4375  018A  3F43               	moviw [3]fsr1
  4376  018B  3DE3               	addwfc	(AsicPreCalc@x+3)^(0+128),f
  4377                           
  4378                           ;asic.c: 334: x += m[7-n];
  4379  018C  0364               	decf	AsicPreCalc@n^(0+128),w
  4380  018D  3AFF               	xorlw	255
  4381  018E  00A2               	movwf	??_AsicPreCalc^(0+128)
  4382  018F  3001               	movlw	1
  4383  0190                     u4965:	
  4384  0190  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4385  0191  3EFF               	addlw	-1
  4386  0192  1D03               	skipz
  4387  0193  2990               	goto	u4965
  4388  0194  3522               	lslf	??_AsicPreCalc^(0+128),w
  4389  0195  3E1C               	addlw	28
  4390  0196  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4391  0197  0086               	movwf	6
  4392  0198  0187               	clrf	7
  4393  0199  3F40               	moviw [0]fsr1
  4394  019A  07E0               	addwf	AsicPreCalc@x^(0+128),f
  4395  019B  3F41               	moviw [1]fsr1
  4396  019C  3DE1               	addwfc	(AsicPreCalc@x+1)^(0+128),f
  4397  019D  3F42               	moviw [2]fsr1
  4398  019E  3DE2               	addwfc	(AsicPreCalc@x+2)^(0+128),f
  4399  019F  3F43               	moviw [3]fsr1
  4400  01A0  3DE3               	addwfc	(AsicPreCalc@x+3)^(0+128),f
  4401                           
  4402                           ;asic.c: 335: y = rotate(m[4-n], 26);
  4403  01A1  0364               	decf	AsicPreCalc@n^(0+128),w
  4404  01A2  3AFF               	xorlw	255
  4405  01A3  00A2               	movwf	??_AsicPreCalc^(0+128)
  4406  01A4  3001               	movlw	1
  4407  01A5                     u4975:	
  4408  01A5  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4409  01A6  3EFF               	addlw	-1
  4410  01A7  1D03               	skipz
  4411  01A8  29A5               	goto	u4975
  4412  01A9  3522               	lslf	??_AsicPreCalc^(0+128),w
  4413  01AA  3E10               	addlw	16
  4414  01AB  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4415  01AC  0086               	movwf	6
  4416  01AD  0187               	clrf	7
  4417  01AE  3F40               	moviw [0]fsr1
  4418  01AF  0020               	movlb	0	; select bank0
  4419  01B0  00D8               	movwf	?_rotate
  4420  01B1  3F41               	moviw [1]fsr1
  4421  01B2  00D9               	movwf	?_rotate+1
  4422  01B3  3F42               	moviw [2]fsr1
  4423  01B4  00DA               	movwf	?_rotate+2
  4424  01B5  3F43               	moviw [3]fsr1
  4425  01B6  00DB               	movwf	?_rotate+3
  4426  01B7  301A               	movlw	26
  4427  01B8  0021               	movlb	1	; select bank1
  4428  01B9  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4429  01BA  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4430  01BB  0020               	movlb	0	; select bank0
  4431  01BC  00DC               	movwf	?_rotate+4
  4432  01BD  319B  23EC  3180   	fcall	_rotate
  4433  01C0  0020               	movlb	0	; select bank0
  4434  01C1  085B               	movf	?_rotate+3,w
  4435  01C2  0021               	movlb	1	; select bank1
  4436  01C3  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4437  01C4  0020               	movlb	0	; select bank0
  4438  01C5  085A               	movf	?_rotate+2,w
  4439  01C6  0021               	movlb	1	; select bank1
  4440  01C7  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4441  01C8  0020               	movlb	0	; select bank0
  4442  01C9  0859               	movf	?_rotate+1,w
  4443  01CA  0021               	movlb	1	; select bank1
  4444  01CB  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4445  01CC  0020               	movlb	0	; select bank0
  4446  01CD  0858               	movf	?_rotate,w
  4447  01CE  0021               	movlb	1	; select bank1
  4448  01CF  00DC               	movwf	AsicPreCalc@y^(0+128)
  4449                           
  4450                           ;asic.c: 336: z = rotate(m[4-n], 21);
  4451  01D0  0364               	decf	AsicPreCalc@n^(0+128),w
  4452  01D1  3AFF               	xorlw	255
  4453  01D2  00A2               	movwf	??_AsicPreCalc^(0+128)
  4454  01D3  3001               	movlw	1
  4455  01D4                     u4985:	
  4456  01D4  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4457  01D5  3EFF               	addlw	-1
  4458  01D6  1D03               	skipz
  4459  01D7  29D4               	goto	u4985
  4460  01D8  3522               	lslf	??_AsicPreCalc^(0+128),w
  4461  01D9  3E10               	addlw	16
  4462  01DA  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4463  01DB  0086               	movwf	6
  4464  01DC  0187               	clrf	7
  4465  01DD  3F40               	moviw [0]fsr1
  4466  01DE  0020               	movlb	0	; select bank0
  4467  01DF  00D8               	movwf	?_rotate
  4468  01E0  3F41               	moviw [1]fsr1
  4469  01E1  00D9               	movwf	?_rotate+1
  4470  01E2  3F42               	moviw [2]fsr1
  4471  01E3  00DA               	movwf	?_rotate+2
  4472  01E4  3F43               	moviw [3]fsr1
  4473  01E5  00DB               	movwf	?_rotate+3
  4474  01E6  3015               	movlw	21
  4475  01E7  0021               	movlb	1	; select bank1
  4476  01E8  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4477  01E9  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4478  01EA  0020               	movlb	0	; select bank0
  4479  01EB  00DC               	movwf	?_rotate+4
  4480  01EC  319B  23EC  3180   	fcall	_rotate
  4481  01EF  0020               	movlb	0	; select bank0
  4482  01F0  085B               	movf	?_rotate+3,w
  4483  01F1  0021               	movlb	1	; select bank1
  4484  01F2  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  4485  01F3  0020               	movlb	0	; select bank0
  4486  01F4  085A               	movf	?_rotate+2,w
  4487  01F5  0021               	movlb	1	; select bank1
  4488  01F6  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  4489  01F7  0020               	movlb	0	; select bank0
  4490  01F8  0859               	movf	?_rotate+1,w
  4491  01F9  0021               	movlb	1	; select bank1
  4492  01FA  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  4493  01FB  0020               	movlb	0	; select bank0
  4494  01FC  0858               	movf	?_rotate,w
  4495  01FD  0021               	movlb	1	; select bank1
  4496  01FE  00D8               	movwf	AsicPreCalc@z^(0+128)
  4497                           
  4498                           ;asic.c: 337: z = y^z;
  4499  01FF  085C               	movf	AsicPreCalc@y^(0+128),w
  4500  0200  0658               	xorwf	AsicPreCalc@z^(0+128),w
  4501  0201  00A2               	movwf	??_AsicPreCalc^(0+128)
  4502  0202  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  4503  0203  0659               	xorwf	(AsicPreCalc@z+1)^(0+128),w
  4504  0204  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4505  0205  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  4506  0206  065A               	xorwf	(AsicPreCalc@z+2)^(0+128),w
  4507  0207  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4508  0208  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  4509  0209  065B               	xorwf	(AsicPreCalc@z+3)^(0+128),w
  4510  020A  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4511  020B  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4512  020C  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  4513  020D  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4514  020E  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  4515  020F  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4516  0210  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  4517  0211  0822               	movf	??_AsicPreCalc^(0+128),w
  4518  0212  00D8               	movwf	AsicPreCalc@z^(0+128)
  4519                           
  4520                           ;asic.c: 338: y = rotate(m[4-n], 7);
  4521  0213  0364               	decf	AsicPreCalc@n^(0+128),w
  4522  0214  3AFF               	xorlw	255
  4523  0215  00A2               	movwf	??_AsicPreCalc^(0+128)
  4524  0216  3001               	movlw	1
  4525  0217                     u4995:	
  4526  0217  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4527  0218  3EFF               	addlw	-1
  4528  0219  1D03               	skipz
  4529  021A  2A17               	goto	u4995
  4530  021B  3522               	lslf	??_AsicPreCalc^(0+128),w
  4531  021C  3E10               	addlw	16
  4532  021D  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4533  021E  0086               	movwf	6
  4534  021F  0187               	clrf	7
  4535  0220  3F40               	moviw [0]fsr1
  4536  0221  0020               	movlb	0	; select bank0
  4537  0222  00D8               	movwf	?_rotate
  4538  0223  3F41               	moviw [1]fsr1
  4539  0224  00D9               	movwf	?_rotate+1
  4540  0225  3F42               	moviw [2]fsr1
  4541  0226  00DA               	movwf	?_rotate+2
  4542  0227  3F43               	moviw [3]fsr1
  4543  0228  00DB               	movwf	?_rotate+3
  4544  0229  3007               	movlw	7
  4545  022A  0021               	movlb	1	; select bank1
  4546  022B  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4547  022C  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4548  022D  0020               	movlb	0	; select bank0
  4549  022E  00DC               	movwf	?_rotate+4
  4550  022F  319B  23EC  3180   	fcall	_rotate
  4551  0232  0020               	movlb	0	; select bank0
  4552  0233  085B               	movf	?_rotate+3,w
  4553  0234  0021               	movlb	1	; select bank1
  4554  0235  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4555  0236  0020               	movlb	0	; select bank0
  4556  0237  085A               	movf	?_rotate+2,w
  4557  0238  0021               	movlb	1	; select bank1
  4558  0239  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4559  023A  0020               	movlb	0	; select bank0
  4560  023B  0859               	movf	?_rotate+1,w
  4561  023C  0021               	movlb	1	; select bank1
  4562  023D  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4563  023E  0020               	movlb	0	; select bank0
  4564  023F  0858               	movf	?_rotate,w
  4565  0240  0021               	movlb	1	; select bank1
  4566  0241  00DC               	movwf	AsicPreCalc@y^(0+128)
  4567                           
  4568                           ;asic.c: 339: z = y^z;
  4569  0242  085C               	movf	AsicPreCalc@y^(0+128),w
  4570  0243  0658               	xorwf	AsicPreCalc@z^(0+128),w
  4571  0244  00A2               	movwf	??_AsicPreCalc^(0+128)
  4572  0245  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  4573  0246  0659               	xorwf	(AsicPreCalc@z+1)^(0+128),w
  4574  0247  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4575  0248  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  4576  0249  065A               	xorwf	(AsicPreCalc@z+2)^(0+128),w
  4577  024A  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4578  024B  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  4579  024C  065B               	xorwf	(AsicPreCalc@z+3)^(0+128),w
  4580  024D  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4581  024E  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4582  024F  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  4583  0250  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4584  0251  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  4585  0252  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4586  0253  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  4587  0254  0822               	movf	??_AsicPreCalc^(0+128),w
  4588  0255  00D8               	movwf	AsicPreCalc@z^(0+128)
  4589                           
  4590                           ;asic.c: 340: m[7-n] = z+x;
  4591  0256  0858               	movf	AsicPreCalc@z^(0+128),w
  4592  0257  0760               	addwf	AsicPreCalc@x^(0+128),w
  4593  0258  00A2               	movwf	??_AsicPreCalc^(0+128)
  4594  0259  0859               	movf	(AsicPreCalc@z+1)^(0+128),w
  4595  025A  3D61               	addwfc	(AsicPreCalc@x+1)^(0+128),w
  4596  025B  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4597  025C  085A               	movf	(AsicPreCalc@z+2)^(0+128),w
  4598  025D  3D62               	addwfc	(AsicPreCalc@x+2)^(0+128),w
  4599  025E  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4600  025F  085B               	movf	(AsicPreCalc@z+3)^(0+128),w
  4601  0260  3D63               	addwfc	(AsicPreCalc@x+3)^(0+128),w
  4602  0261  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4603  0262  0364               	decf	AsicPreCalc@n^(0+128),w
  4604  0263  3AFF               	xorlw	255
  4605  0264  00A6               	movwf	(??_AsicPreCalc+4)^(0+128)
  4606  0265  3001               	movlw	1
  4607  0266                     u5005:	
  4608  0266  35A6               	lslf	(??_AsicPreCalc+4)^(0+128),f
  4609  0267  3EFF               	addlw	-1
  4610  0268  1D03               	skipz
  4611  0269  2A66               	goto	u5005
  4612  026A  3526               	lslf	(??_AsicPreCalc+4)^(0+128),w
  4613  026B  3E1C               	addlw	28
  4614  026C  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4615  026D  0086               	movwf	6
  4616  026E  0187               	clrf	7
  4617  026F  0822               	movf	??_AsicPreCalc^(0+128),w
  4618  0270  3FC0               	movwi [0]fsr1
  4619  0271  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4620  0272  3FC1               	movwi [1]fsr1
  4621  0273  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4622  0274  3FC2               	movwi [2]fsr1
  4623  0275  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4624  0276  3FC3               	movwi [3]fsr1
  4625                           
  4626                           ;asic.c: 341: m[3-n] = m[3-n] + m[7-n];
  4627  0277  0364               	decf	AsicPreCalc@n^(0+128),w
  4628  0278  3AFF               	xorlw	255
  4629  0279  00A2               	movwf	??_AsicPreCalc^(0+128)
  4630  027A  3001               	movlw	1
  4631  027B                     u5015:	
  4632  027B  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4633  027C  3EFF               	addlw	-1
  4634  027D  1D03               	skipz
  4635  027E  2A7B               	goto	u5015
  4636  027F  3522               	lslf	??_AsicPreCalc^(0+128),w
  4637  0280  3E1C               	addlw	28
  4638  0281  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4639  0282  0086               	movwf	6
  4640  0283  0187               	clrf	7
  4641  0284  3F40               	moviw [0]fsr1
  4642  0285  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4643  0286  3F41               	moviw [1]fsr1
  4644  0287  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4645  0288  3F42               	moviw [2]fsr1
  4646  0289  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4647  028A  3F43               	moviw [3]fsr1
  4648  028B  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4649  028C  0364               	decf	AsicPreCalc@n^(0+128),w
  4650  028D  3AFF               	xorlw	255
  4651  028E  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  4652  028F  3001               	movlw	1
  4653  0290                     u5025:	
  4654  0290  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4655  0291  3EFF               	addlw	-1
  4656  0292  1D03               	skipz
  4657  0293  2A90               	goto	u5025
  4658  0294  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4659  0295  3E0C               	addlw	12
  4660  0296  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4661  0297  0086               	movwf	6
  4662  0298  0187               	clrf	7
  4663  0299  3F40               	moviw [0]fsr1
  4664  029A  07A3               	addwf	(??_AsicPreCalc+1)^(0+128),f
  4665  029B  3F41               	moviw [1]fsr1
  4666  029C  3DA4               	addwfc	((??_AsicPreCalc+1)^(0+128)+1),f
  4667  029D  3F42               	moviw [2]fsr1
  4668  029E  3DA5               	addwfc	((??_AsicPreCalc+1)^(0+128)+2),f
  4669  029F  3F43               	moviw [3]fsr1
  4670  02A0  3DA6               	addwfc	((??_AsicPreCalc+1)^(0+128)+3),f
  4671  02A1  0364               	decf	AsicPreCalc@n^(0+128),w
  4672  02A2  3AFF               	xorlw	255
  4673  02A3  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  4674  02A4  3001               	movlw	1
  4675  02A5                     u5035:	
  4676  02A5  35A8               	lslf	(??_AsicPreCalc+6)^(0+128),f
  4677  02A6  3EFF               	addlw	-1
  4678  02A7  1D03               	skipz
  4679  02A8  2AA5               	goto	u5035
  4680  02A9  3528               	lslf	(??_AsicPreCalc+6)^(0+128),w
  4681  02AA  3E0C               	addlw	12
  4682  02AB  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4683  02AC  0086               	movwf	6
  4684  02AD  0187               	clrf	7
  4685  02AE  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4686  02AF  3FC0               	movwi [0]fsr1
  4687  02B0  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4688  02B1  3FC1               	movwi [1]fsr1
  4689  02B2  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4690  02B3  3FC2               	movwi [2]fsr1
  4691  02B4  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4692  02B5  3FC3               	movwi [3]fsr1
  4693                           
  4694                           ;asic.c: 342: x = rotate(m[((0-n)&7)], 30);
  4695  02B6  0364               	decf	AsicPreCalc@n^(0+128),w
  4696  02B7  3AFF               	xorlw	255
  4697  02B8  3907               	andlw	7
  4698  02B9  00A2               	movwf	??_AsicPreCalc^(0+128)
  4699  02BA  3001               	movlw	1
  4700  02BB                     u5045:	
  4701  02BB  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4702  02BC  3EFF               	addlw	-1
  4703  02BD  1D03               	skipz
  4704  02BE  2ABB               	goto	u5045
  4705  02BF  3522               	lslf	??_AsicPreCalc^(0+128),w
  4706  02C0  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4707  02C1  0086               	movwf	6
  4708  02C2  0187               	clrf	7
  4709  02C3  3F40               	moviw [0]fsr1
  4710  02C4  0020               	movlb	0	; select bank0
  4711  02C5  00D8               	movwf	?_rotate
  4712  02C6  3F41               	moviw [1]fsr1
  4713  02C7  00D9               	movwf	?_rotate+1
  4714  02C8  3F42               	moviw [2]fsr1
  4715  02C9  00DA               	movwf	?_rotate+2
  4716  02CA  3F43               	moviw [3]fsr1
  4717  02CB  00DB               	movwf	?_rotate+3
  4718  02CC  301E               	movlw	30
  4719  02CD  0021               	movlb	1	; select bank1
  4720  02CE  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4721  02CF  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4722  02D0  0020               	movlb	0	; select bank0
  4723  02D1  00DC               	movwf	?_rotate+4
  4724  02D2  319B  23EC  3180   	fcall	_rotate
  4725  02D5  0020               	movlb	0	; select bank0
  4726  02D6  085B               	movf	?_rotate+3,w
  4727  02D7  0021               	movlb	1	; select bank1
  4728  02D8  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4729  02D9  0020               	movlb	0	; select bank0
  4730  02DA  085A               	movf	?_rotate+2,w
  4731  02DB  0021               	movlb	1	; select bank1
  4732  02DC  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4733  02DD  0020               	movlb	0	; select bank0
  4734  02DE  0859               	movf	?_rotate+1,w
  4735  02DF  0021               	movlb	1	; select bank1
  4736  02E0  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4737  02E1  0020               	movlb	0	; select bank0
  4738  02E2  0858               	movf	?_rotate,w
  4739  02E3  0021               	movlb	1	; select bank1
  4740  02E4  00E0               	movwf	AsicPreCalc@x^(0+128)
  4741                           
  4742                           ;asic.c: 343: y = rotate(m[((0-n)&7)], 19);
  4743  02E5  0364               	decf	AsicPreCalc@n^(0+128),w
  4744  02E6  3AFF               	xorlw	255
  4745  02E7  3907               	andlw	7
  4746  02E8  00A2               	movwf	??_AsicPreCalc^(0+128)
  4747  02E9  3001               	movlw	1
  4748  02EA                     u5055:	
  4749  02EA  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4750  02EB  3EFF               	addlw	-1
  4751  02EC  1D03               	skipz
  4752  02ED  2AEA               	goto	u5055
  4753  02EE  3522               	lslf	??_AsicPreCalc^(0+128),w
  4754  02EF  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4755  02F0  0086               	movwf	6
  4756  02F1  0187               	clrf	7
  4757  02F2  3F40               	moviw [0]fsr1
  4758  02F3  0020               	movlb	0	; select bank0
  4759  02F4  00D8               	movwf	?_rotate
  4760  02F5  3F41               	moviw [1]fsr1
  4761  02F6  00D9               	movwf	?_rotate+1
  4762  02F7  3F42               	moviw [2]fsr1
  4763  02F8  00DA               	movwf	?_rotate+2
  4764  02F9  3F43               	moviw [3]fsr1
  4765  02FA  00DB               	movwf	?_rotate+3
  4766  02FB  3013               	movlw	19
  4767  02FC  0021               	movlb	1	; select bank1
  4768  02FD  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4769  02FE  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4770  02FF  0020               	movlb	0	; select bank0
  4771  0300  00DC               	movwf	?_rotate+4
  4772  0301  319B  23EC  3180   	fcall	_rotate
  4773  0304  0020               	movlb	0	; select bank0
  4774  0305  085B               	movf	?_rotate+3,w
  4775  0306  0021               	movlb	1	; select bank1
  4776  0307  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4777  0308  0020               	movlb	0	; select bank0
  4778  0309  085A               	movf	?_rotate+2,w
  4779  030A  0021               	movlb	1	; select bank1
  4780  030B  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4781  030C  0020               	movlb	0	; select bank0
  4782  030D  0859               	movf	?_rotate+1,w
  4783  030E  0021               	movlb	1	; select bank1
  4784  030F  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4785  0310  0020               	movlb	0	; select bank0
  4786  0311  0858               	movf	?_rotate,w
  4787  0312  0021               	movlb	1	; select bank1
  4788  0313  00DC               	movwf	AsicPreCalc@y^(0+128)
  4789                           
  4790                           ;asic.c: 344: y = y^x;
  4791  0314  085C               	movf	AsicPreCalc@y^(0+128),w
  4792  0315  0660               	xorwf	AsicPreCalc@x^(0+128),w
  4793  0316  00A2               	movwf	??_AsicPreCalc^(0+128)
  4794  0317  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  4795  0318  0661               	xorwf	(AsicPreCalc@x+1)^(0+128),w
  4796  0319  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4797  031A  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  4798  031B  0662               	xorwf	(AsicPreCalc@x+2)^(0+128),w
  4799  031C  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4800  031D  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  4801  031E  0663               	xorwf	(AsicPreCalc@x+3)^(0+128),w
  4802  031F  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4803  0320  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4804  0321  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4805  0322  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4806  0323  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4807  0324  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4808  0325  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4809  0326  0822               	movf	??_AsicPreCalc^(0+128),w
  4810  0327  00DC               	movwf	AsicPreCalc@y^(0+128)
  4811                           
  4812                           ;asic.c: 345: x = rotate(m[((0-n)&7)], 10);
  4813  0328  0364               	decf	AsicPreCalc@n^(0+128),w
  4814  0329  3AFF               	xorlw	255
  4815  032A  3907               	andlw	7
  4816  032B  00A2               	movwf	??_AsicPreCalc^(0+128)
  4817  032C  3001               	movlw	1
  4818  032D                     u5065:	
  4819  032D  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4820  032E  3EFF               	addlw	-1
  4821  032F  1D03               	skipz
  4822  0330  2B2D               	goto	u5065
  4823  0331  3522               	lslf	??_AsicPreCalc^(0+128),w
  4824  0332  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4825  0333  0086               	movwf	6
  4826  0334  0187               	clrf	7
  4827  0335  3F40               	moviw [0]fsr1
  4828  0336  0020               	movlb	0	; select bank0
  4829  0337  00D8               	movwf	?_rotate
  4830  0338  3F41               	moviw [1]fsr1
  4831  0339  00D9               	movwf	?_rotate+1
  4832  033A  3F42               	moviw [2]fsr1
  4833  033B  00DA               	movwf	?_rotate+2
  4834  033C  3F43               	moviw [3]fsr1
  4835  033D  00DB               	movwf	?_rotate+3
  4836  033E  300A               	movlw	10
  4837  033F  0021               	movlb	1	; select bank1
  4838  0340  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4839  0341  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4840  0342  0020               	movlb	0	; select bank0
  4841  0343  00DC               	movwf	?_rotate+4
  4842  0344  319B  23EC  3180   	fcall	_rotate
  4843  0347  0020               	movlb	0	; select bank0
  4844  0348  085B               	movf	?_rotate+3,w
  4845  0349  0021               	movlb	1	; select bank1
  4846  034A  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4847  034B  0020               	movlb	0	; select bank0
  4848  034C  085A               	movf	?_rotate+2,w
  4849  034D  0021               	movlb	1	; select bank1
  4850  034E  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4851  034F  0020               	movlb	0	; select bank0
  4852  0350  0859               	movf	?_rotate+1,w
  4853  0351  0021               	movlb	1	; select bank1
  4854  0352  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4855  0353  0020               	movlb	0	; select bank0
  4856  0354  0858               	movf	?_rotate,w
  4857  0355  0021               	movlb	1	; select bank1
  4858  0356  00E0               	movwf	AsicPreCalc@x^(0+128)
  4859                           
  4860                           ;asic.c: 346: y = x^y;
  4861  0357  0860               	movf	AsicPreCalc@x^(0+128),w
  4862  0358  065C               	xorwf	AsicPreCalc@y^(0+128),w
  4863  0359  00A2               	movwf	??_AsicPreCalc^(0+128)
  4864  035A  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4865  035B  065D               	xorwf	(AsicPreCalc@y+1)^(0+128),w
  4866  035C  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4867  035D  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  4868  035E  065E               	xorwf	(AsicPreCalc@y+2)^(0+128),w
  4869  035F  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4870  0360  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  4871  0361  065F               	xorwf	(AsicPreCalc@y+3)^(0+128),w
  4872  0362  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4873  0363  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4874  0364  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4875  0365  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4876  0366  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4877  0367  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4878  0368  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4879  0369  0822               	movf	??_AsicPreCalc^(0+128),w
  4880  036A  00DC               	movwf	AsicPreCalc@y^(0+128)
  4881                           
  4882                           ;asic.c: 347: x = m[((0-n)&7)] | m[((1-n)&7)];
  4883  036B  0364               	decf	AsicPreCalc@n^(0+128),w
  4884  036C  3AFF               	xorlw	255
  4885  036D  3E01               	addlw	1
  4886  036E  3907               	andlw	7
  4887  036F  00A2               	movwf	??_AsicPreCalc^(0+128)
  4888  0370  3001               	movlw	1
  4889  0371                     u5075:	
  4890  0371  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4891  0372  3EFF               	addlw	-1
  4892  0373  1D03               	skipz
  4893  0374  2B71               	goto	u5075
  4894  0375  3522               	lslf	??_AsicPreCalc^(0+128),w
  4895  0376  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4896  0377  0086               	movwf	6
  4897  0378  0187               	clrf	7
  4898  0379  3F40               	moviw [0]fsr1
  4899  037A  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4900  037B  3F41               	moviw [1]fsr1
  4901  037C  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4902  037D  3F42               	moviw [2]fsr1
  4903  037E  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4904  037F  3F43               	moviw [3]fsr1
  4905  0380  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4906  0381  0364               	decf	AsicPreCalc@n^(0+128),w
  4907  0382  3AFF               	xorlw	255
  4908  0383  3907               	andlw	7
  4909  0384  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  4910  0385  3001               	movlw	1
  4911  0386                     u5085:	
  4912  0386  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4913  0387  3EFF               	addlw	-1
  4914  0388  1D03               	skipz
  4915  0389  2B86               	goto	u5085
  4916  038A  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4917  038B  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4918  038C  0086               	movwf	6
  4919  038D  0187               	clrf	7
  4920  038E  3F40               	moviw [0]fsr1
  4921  038F  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  4922  0390  3F41               	moviw [1]fsr1
  4923  0391  00A9               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  4924  0392  3F42               	moviw [2]fsr1
  4925  0393  00AA               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  4926  0394  3F43               	moviw [3]fsr1
  4927  0395  00AB               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  4928  0396  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4929  0397  0428               	iorwf	(??_AsicPreCalc+6)^(0+128),w
  4930  0398  00E0               	movwf	AsicPreCalc@x^(0+128)
  4931  0399  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4932  039A  0429               	iorwf	(??_AsicPreCalc+7)^(0+128),w
  4933  039B  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4934  039C  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4935  039D  042A               	iorwf	(??_AsicPreCalc+8)^(0+128),w
  4936  039E  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4937  039F  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4938  03A0  042B               	iorwf	(??_AsicPreCalc+9)^(0+128),w
  4939  03A1  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4940                           
  4941                           ;asic.c: 348: x = m[((2-n)&7)] & x;
  4942  03A2  0364               	decf	AsicPreCalc@n^(0+128),w
  4943  03A3  3AFF               	xorlw	255
  4944  03A4  3E02               	addlw	2
  4945  03A5  3907               	andlw	7
  4946  03A6  00A2               	movwf	??_AsicPreCalc^(0+128)
  4947  03A7  3001               	movlw	1
  4948  03A8                     u5095:	
  4949  03A8  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4950  03A9  3EFF               	addlw	-1
  4951  03AA  1D03               	skipz
  4952  03AB  2BA8               	goto	u5095
  4953  03AC  3522               	lslf	??_AsicPreCalc^(0+128),w
  4954  03AD  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4955  03AE  0086               	movwf	6
  4956  03AF  0187               	clrf	7
  4957  03B0  0860               	movf	AsicPreCalc@x^(0+128),w
  4958  03B1  0501               	andwf	1,w
  4959  03B2  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4960  03B3  3141               	addfsr 1,1
  4961  03B4  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4962  03B5  0501               	andwf	1,w
  4963  03B6  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4964  03B7  3141               	addfsr 1,1
  4965  03B8  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  4966  03B9  0501               	andwf	1,w
  4967  03BA  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4968  03BB  3141               	addfsr 1,1
  4969  03BC  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  4970  03BD  0501               	andwf	1,w
  4971  03BE  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4972  03BF  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4973  03C0  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4974  03C1  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4975  03C2  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4976  03C3  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4977  03C4  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4978  03C5  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4979  03C6  00E0               	movwf	AsicPreCalc@x^(0+128)
  4980                           
  4981                           ;asic.c: 349: z = m[((0-n)&7)] & m[((1-n)&7)];
  4982  03C7  0364               	decf	AsicPreCalc@n^(0+128),w
  4983  03C8  3AFF               	xorlw	255
  4984  03C9  3E01               	addlw	1
  4985  03CA  3907               	andlw	7
  4986  03CB  00A2               	movwf	??_AsicPreCalc^(0+128)
  4987  03CC  3001               	movlw	1
  4988  03CD                     u5105:	
  4989  03CD  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4990  03CE  3EFF               	addlw	-1
  4991  03CF  1D03               	skipz
  4992  03D0  2BCD               	goto	u5105
  4993  03D1  3522               	lslf	??_AsicPreCalc^(0+128),w
  4994  03D2  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4995  03D3  0086               	movwf	6
  4996  03D4  0187               	clrf	7
  4997  03D5  3F40               	moviw [0]fsr1
  4998  03D6  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4999  03D7  3F41               	moviw [1]fsr1
  5000  03D8  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5001  03D9  3F42               	moviw [2]fsr1
  5002  03DA  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5003  03DB  3F43               	moviw [3]fsr1
  5004  03DC  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5005  03DD  0364               	decf	AsicPreCalc@n^(0+128),w
  5006  03DE  3AFF               	xorlw	255
  5007  03DF  3907               	andlw	7
  5008  03E0  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  5009  03E1  3001               	movlw	1
  5010  03E2                     u5115:	
  5011  03E2  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5012  03E3  3EFF               	addlw	-1
  5013  03E4  1D03               	skipz
  5014  03E5  2BE2               	goto	u5115
  5015  03E6  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5016  03E7  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5017  03E8  0086               	movwf	6
  5018  03E9  0187               	clrf	7
  5019  03EA  3F40               	moviw [0]fsr1
  5020  03EB  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  5021  03EC  3F41               	moviw [1]fsr1
  5022  03ED  00A9               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  5023  03EE  3F42               	moviw [2]fsr1
  5024  03EF  00AA               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  5025  03F0  3F43               	moviw [3]fsr1
  5026  03F1  00AB               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  5027  03F2  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5028  03F3  0528               	andwf	(??_AsicPreCalc+6)^(0+128),w
  5029  03F4  00D8               	movwf	AsicPreCalc@z^(0+128)
  5030  03F5  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5031  03F6  0529               	andwf	(??_AsicPreCalc+7)^(0+128),w
  5032  03F7  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  5033  03F8  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5034  03F9  052A               	andwf	(??_AsicPreCalc+8)^(0+128),w
  5035  03FA  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  5036  03FB  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  5037  03FC  052B               	andwf	(??_AsicPreCalc+9)^(0+128),w
  5038  03FD  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  5039                           
  5040                           ;asic.c: 350: x = x | z;
  5041  03FE  0860               	movf	AsicPreCalc@x^(0+128),w
  5042  03FF  0458               	iorwf	AsicPreCalc@z^(0+128),w
  5043  0400  00A2               	movwf	??_AsicPreCalc^(0+128)
  5044  0401  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  5045  0402  0459               	iorwf	(AsicPreCalc@z+1)^(0+128),w
  5046  0403  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  5047  0404  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  5048  0405  045A               	iorwf	(AsicPreCalc@z+2)^(0+128),w
  5049  0406  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  5050  0407  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  5051  0408  045B               	iorwf	(AsicPreCalc@z+3)^(0+128),w
  5052  0409  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  5053  040A  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5054  040B  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  5055  040C  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5056  040D  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  5057  040E  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5058  040F  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  5059  0410  0822               	movf	??_AsicPreCalc^(0+128),w
  5060  0411  00E0               	movwf	AsicPreCalc@x^(0+128)
  5061                           
  5062                           ;asic.c: 351: m[7-n] += y + x;
  5063  0412  085C               	movf	AsicPreCalc@y^(0+128),w
  5064  0413  0760               	addwf	AsicPreCalc@x^(0+128),w
  5065  0414  00A2               	movwf	??_AsicPreCalc^(0+128)
  5066  0415  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  5067  0416  3D61               	addwfc	(AsicPreCalc@x+1)^(0+128),w
  5068  0417  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  5069  0418  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  5070  0419  3D62               	addwfc	(AsicPreCalc@x+2)^(0+128),w
  5071  041A  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  5072  041B  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  5073  041C  3D63               	addwfc	(AsicPreCalc@x+3)^(0+128),w
  5074  041D  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  5075  041E  0364               	decf	AsicPreCalc@n^(0+128),w
  5076  041F  3AFF               	xorlw	255
  5077  0420  00A6               	movwf	(??_AsicPreCalc+4)^(0+128)
  5078  0421  3001               	movlw	1
  5079  0422                     u5125:	
  5080  0422  35A6               	lslf	(??_AsicPreCalc+4)^(0+128),f
  5081  0423  3EFF               	addlw	-1
  5082  0424  1D03               	skipz
  5083  0425  2C22               	goto	u5125
  5084  0426  3526               	lslf	(??_AsicPreCalc+4)^(0+128),w
  5085  0427  3E1C               	addlw	28
  5086  0428  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5087  0429  0086               	movwf	6
  5088  042A  0187               	clrf	7
  5089  042B  0822               	movf	??_AsicPreCalc^(0+128),w
  5090  042C  0781               	addwf	1,f
  5091  042D  3141               	addfsr 1,1
  5092  042E  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5093  042F  3D81               	addwfc	1,f
  5094  0430  3141               	addfsr 1,1
  5095  0431  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5096  0432  3D81               	addwfc	1,f
  5097  0433  3141               	addfsr 1,1
  5098  0434  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5099  0435  3D81               	addwfc	1,f
  5100                           
  5101                           ;asic.c: 353: PrecalcHashes[2-n] = m[7-n];
  5102  0436  0364               	decf	AsicPreCalc@n^(0+128),w
  5103  0437  3AFF               	xorlw	255
  5104  0438  00A2               	movwf	??_AsicPreCalc^(0+128)
  5105  0439  3001               	movlw	1
  5106  043A                     u5135:	
  5107  043A  35A2               	lslf	??_AsicPreCalc^(0+128),f
  5108  043B  3EFF               	addlw	-1
  5109  043C  1D03               	skipz
  5110  043D  2C3A               	goto	u5135
  5111  043E  3522               	lslf	??_AsicPreCalc^(0+128),w
  5112  043F  3E1C               	addlw	28
  5113  0440  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5114  0441  0086               	movwf	6
  5115  0442  0187               	clrf	7
  5116  0443  3F40               	moviw [0]fsr1
  5117  0444  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  5118  0445  3F41               	moviw [1]fsr1
  5119  0446  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5120  0447  3F42               	moviw [2]fsr1
  5121  0448  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5122  0449  3F43               	moviw [3]fsr1
  5123  044A  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5124  044B  0364               	decf	AsicPreCalc@n^(0+128),w
  5125  044C  3AFF               	xorlw	255
  5126  044D  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  5127  044E  3001               	movlw	1
  5128  044F                     u5145:	
  5129  044F  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5130  0450  3EFF               	addlw	-1
  5131  0451  1D03               	skipz
  5132  0452  2C4F               	goto	u5145
  5133  0453  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5134  0454  3E08               	addlw	8
  5135  0455  3EBA               	addlw	_PrecalcHashes& (0+255)
  5136  0456  0086               	movwf	6
  5137  0457  3001               	movlw	1	; select bank3/4
  5138  0458  0087               	movwf	7
  5139  0459  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5140  045A  3FC0               	movwi [0]fsr1
  5141  045B  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5142  045C  3FC1               	movwi [1]fsr1
  5143  045D  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5144  045E  3FC2               	movwi [2]fsr1
  5145  045F  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  5146  0460  3FC3               	movwi [3]fsr1
  5147                           
  5148                           ;asic.c: 354: PrecalcHashes[5-n] = m[3-n];
  5149  0461  0364               	decf	AsicPreCalc@n^(0+128),w
  5150  0462  3AFF               	xorlw	255
  5151  0463  00A2               	movwf	??_AsicPreCalc^(0+128)
  5152  0464  3001               	movlw	1
  5153  0465                     u5155:	
  5154  0465  35A2               	lslf	??_AsicPreCalc^(0+128),f
  5155  0466  3EFF               	addlw	-1
  5156  0467  1D03               	skipz
  5157  0468  2C65               	goto	u5155
  5158  0469  3522               	lslf	??_AsicPreCalc^(0+128),w
  5159  046A  3E0C               	addlw	12
  5160  046B  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5161  046C  0086               	movwf	6
  5162  046D  0187               	clrf	7
  5163  046E  3F40               	moviw [0]fsr1
  5164  046F  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  5165  0470  3F41               	moviw [1]fsr1
  5166  0471  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5167  0472  3F42               	moviw [2]fsr1
  5168  0473  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5169  0474  3F43               	moviw [3]fsr1
  5170  0475  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5171  0476  0364               	decf	AsicPreCalc@n^(0+128),w
  5172  0477  3AFF               	xorlw	255
  5173  0478  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  5174  0479  3001               	movlw	1
  5175  047A                     u5165:	
  5176  047A  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5177  047B  3EFF               	addlw	-1
  5178  047C  1D03               	skipz
  5179  047D  2C7A               	goto	u5165
  5180  047E  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5181  047F  3E14               	addlw	20
  5182  0480  3EBA               	addlw	_PrecalcHashes& (0+255)
  5183  0481  0086               	movwf	6
  5184  0482  3001               	movlw	1	; select bank3/4
  5185  0483  0087               	movwf	7
  5186  0484  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5187  0485  3FC0               	movwi [0]fsr1
  5188  0486  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5189  0487  3FC1               	movwi [1]fsr1
  5190  0488  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5191  0489  3FC2               	movwi [2]fsr1
  5192  048A  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  5193  048B  3FC3               	movwi [3]fsr1
  5194  048C  3001               	movlw	1
  5195  048D  00A2               	movwf	??_AsicPreCalc^(0+128)
  5196  048E  0822               	movf	??_AsicPreCalc^(0+128),w
  5197  048F  07E4               	addwf	AsicPreCalc@n^(0+128),f
  5198  0490  28DC               	goto	L4
  5199  0491                     __end_of_AsicPreCalc:	
  5200                           
  5201                           	psect	text8
  5202  1BEC                     __ptext8:	
  5203 ;; *************** function _rotate *****************
  5204 ;; Defined at:
  5205 ;;		line 313 in file "asic.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;  x               4    8[BANK0 ] unsigned long 
  5208 ;;  y               1   12[BANK0 ] unsigned char 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;		None
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  4    8[BANK0 ] unsigned long 
  5213 ;; Registers used:
  5214 ;;		wreg, status,2, status,0
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5220 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5224 ;;Total ram usage:       13 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:    4
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_AsicPreCalc
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           
  5235                           ;psect for function _rotate
  5236  1BEC                     _rotate:	
  5237                           
  5238                           ;asic.c: 314: return ((x<<y) | (x>>(32-y)));
  5239                           
  5240                           ;incstack = 0
  5241                           ; Regs used in _rotate: [wreg+status,2+status,0]
  5242  1BEC  0020               	movlb	0	; select bank0
  5243  1BED  0858               	movf	rotate@x,w
  5244  1BEE  00DD               	movwf	??_rotate
  5245  1BEF  0859               	movf	rotate@x+1,w
  5246  1BF0  00DE               	movwf	??_rotate+1
  5247  1BF1  085A               	movf	rotate@x+2,w
  5248  1BF2  00DF               	movwf	??_rotate+2
  5249  1BF3  085B               	movf	rotate@x+3,w
  5250  1BF4  00E0               	movwf	??_rotate+3
  5251  1BF5  035C               	decf	rotate@y,w
  5252  1BF6  3AFF               	xorlw	255
  5253  1BF7  3E20               	addlw	32
  5254  1BF8  0A89               	incf	9,f
  5255  1BF9  2BFF               	goto	u4840
  5256  1BFA                     u4845:	
  5257  1BFA  1003               	clrc
  5258  1BFB  0CE0               	rrf	??_rotate+3,f
  5259  1BFC  0CDF               	rrf	??_rotate+2,f
  5260  1BFD  0CDE               	rrf	??_rotate+1,f
  5261  1BFE  0CDD               	rrf	??_rotate,f
  5262  1BFF                     u4840:	
  5263  1BFF  3EFF               	addlw	-1
  5264  1C00  1D03               	skipz
  5265  1C01  2BFA               	goto	u4845
  5266  1C02  0858               	movf	rotate@x,w
  5267  1C03  00E1               	movwf	??_rotate+4
  5268  1C04  0859               	movf	rotate@x+1,w
  5269  1C05  00E2               	movwf	??_rotate+5
  5270  1C06  085A               	movf	rotate@x+2,w
  5271  1C07  00E3               	movwf	??_rotate+6
  5272  1C08  085B               	movf	rotate@x+3,w
  5273  1C09  00E4               	movwf	??_rotate+7
  5274  1C0A  0A5C               	incf	rotate@y,w
  5275  1C0B  2C10               	goto	u4850
  5276  1C0C                     u4855:	
  5277  1C0C  35E1               	lslf	??_rotate+4,f
  5278  1C0D  0DE2               	rlf	??_rotate+5,f
  5279  1C0E  0DE3               	rlf	??_rotate+6,f
  5280  1C0F  0DE4               	rlf	??_rotate+7,f
  5281  1C10                     u4850:	
  5282  1C10  0B89               	decfsz	9,f
  5283  1C11  2C0C               	goto	u4855
  5284  1C12  0861               	movf	??_rotate+4,w
  5285  1C13  04DD               	iorwf	??_rotate,f
  5286  1C14  0862               	movf	??_rotate+5,w
  5287  1C15  04DE               	iorwf	??_rotate+1,f
  5288  1C16  0863               	movf	??_rotate+6,w
  5289  1C17  04DF               	iorwf	??_rotate+2,f
  5290  1C18  0864               	movf	??_rotate+7,w
  5291  1C19  04E0               	iorwf	??_rotate+3,f
  5292  1C1A  0860               	movf	??_rotate+3,w
  5293  1C1B  00DB               	movwf	?_rotate+3
  5294  1C1C  085F               	movf	??_rotate+2,w
  5295  1C1D  00DA               	movwf	?_rotate+2
  5296  1C1E  085E               	movf	??_rotate+1,w
  5297  1C1F  00D9               	movwf	?_rotate+1
  5298  1C20  085D               	movf	??_rotate,w
  5299  1C21  00D8               	movwf	?_rotate
  5300  1C22  0008               	return
  5301  1C23                     __end_of_rotate:	
  5302                           
  5303                           	psect	text9
  5304  1572                     __ptext9:	
  5305 ;; *************** function _SendAsicData *****************
  5306 ;; Defined at:
  5307 ;;		line 36 in file "asic.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  work            2   14[BANK0 ] PTR struct _worktask
  5310 ;;		 -> WorkQue(180), 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;		None
  5313 ;; Return value:  Size  Location     Type
  5314 ;;		None               void
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, status,0, pclath, cstack
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5324 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5326 ;;Total ram usage:        6 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:    5
  5329 ;; This function calls:
  5330 ;;		_Send32
  5331 ;; This function is called by:
  5332 ;;		_AsicPushWork
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           
  5337                           ;psect for function _SendAsicData
  5338  1572                     _SendAsicData:	
  5339                           
  5340                           ;asic.c: 37: GIE = 0;
  5341                           
  5342                           ;incstack = 0
  5343                           ; Regs used in _SendAsicData: [wreg+status,2+status,0+pclath+cstack]
  5344  1572  138B               	bcf	11,7	;volatile
  5345                           
  5346                           ;asic.c: 38: last_bit0 = 0x48; last_bit1 = 0x90;
  5347  1573  3048               	movlw	72
  5348  1574  0020               	movlb	0	; select bank0
  5349  1575  00E0               	movwf	??_SendAsicData
  5350  1576  0860               	movf	??_SendAsicData,w
  5351  1577  0022               	movlb	2	; select bank2
  5352  1578  00B5               	movwf	_last_bit0^(0+256)
  5353  1579  3090               	movlw	144
  5354  157A  0020               	movlb	0	; select bank0
  5355  157B  00E0               	movwf	??_SendAsicData
  5356  157C  0860               	movf	??_SendAsicData,w
  5357  157D  0022               	movlb	2	; select bank2
  5358  157E  00B6               	movwf	_last_bit1^(0+256)
  5359                           
  5360                           ;asic.c: 39: send32_data = (WORD)&ClockCfg; send32_count = 2;
  5361  157F  30D2               	movlw	low _ClockCfg
  5362  1580  00A4               	movwf	_send32_data^(0+256)
  5363  1581  3001               	movlw	high _ClockCfg
  5364  1582  00A5               	movwf	(_send32_data+1)^(0+256)
  5365  1583  3002               	movlw	2
  5366  1584  0020               	movlb	0	; select bank0
  5367  1585  00E0               	movwf	??_SendAsicData
  5368  1586  0860               	movf	??_SendAsicData,w
  5369  1587  0022               	movlb	2	; select bank2
  5370  1588  00B8               	movwf	_send32_count^(0+256)
  5371                           
  5372                           ;asic.c: 40: Send32();
  5373  1589  3188  20FD  3195   	fcall	_Send32
  5374                           
  5375                           ;asic.c: 41: send32_data = (WORD)&work->Merkle; send32_count = 3;
  5376  158C  0020               	movlb	0	; select bank0
  5377  158D  085E               	movf	SendAsicData@work,w
  5378  158E  3E21               	addlw	33
  5379  158F  0022               	movlb	2	; select bank2
  5380  1590  00A4               	movwf	_send32_data^(0+256)
  5381  1591  3000               	movlw	0
  5382  1592  0020               	movlb	0	; select bank0
  5383  1593  3D5F               	addwfc	SendAsicData@work+1,w
  5384  1594  0022               	movlb	2	; select bank2
  5385  1595  00A5               	movwf	(_send32_data+1)^(0+256)
  5386  1596  3003               	movlw	3
  5387  1597  0020               	movlb	0	; select bank0
  5388  1598  00E0               	movwf	??_SendAsicData
  5389  1599  0860               	movf	??_SendAsicData,w
  5390  159A  0022               	movlb	2	; select bank2
  5391  159B  00B8               	movwf	_send32_count^(0+256)
  5392                           
  5393                           ;asic.c: 42: Send32();
  5394  159C  3188  20FD  3195   	fcall	_Send32
  5395                           
  5396                           ;asic.c: 43: send32_data = (WORD)&PrecalcHashes[1]; send32_count = 5;
  5397  159F  30BE               	movlw	low (_PrecalcHashes+4)
  5398  15A0  0022               	movlb	2	; select bank2
  5399  15A1  00A4               	movwf	_send32_data^(0+256)
  5400  15A2  3001               	movlw	high (_PrecalcHashes+4)
  5401  15A3  00A5               	movwf	(_send32_data+1)^(0+256)
  5402  15A4  3005               	movlw	5
  5403  15A5  0020               	movlb	0	; select bank0
  5404  15A6  00E0               	movwf	??_SendAsicData
  5405  15A7  0860               	movf	??_SendAsicData,w
  5406  15A8  0022               	movlb	2	; select bank2
  5407  15A9  00B8               	movwf	_send32_count^(0+256)
  5408                           
  5409                           ;asic.c: 44: Send32();
  5410  15AA  3188  20FD  3195   	fcall	_Send32
  5411                           
  5412                           ;asic.c: 45: send32_data = (WORD)&work->MidState; send32_count = 8;
  5413  15AD  0020               	movlb	0	; select bank0
  5414  15AE  085E               	movf	SendAsicData@work,w
  5415  15AF  3E01               	addlw	1
  5416  15B0  0022               	movlb	2	; select bank2
  5417  15B1  00A4               	movwf	_send32_data^(0+256)
  5418  15B2  3000               	movlw	0
  5419  15B3  0020               	movlb	0	; select bank0
  5420  15B4  3D5F               	addwfc	SendAsicData@work+1,w
  5421  15B5  0022               	movlb	2	; select bank2
  5422  15B6  00A5               	movwf	(_send32_data+1)^(0+256)
  5423  15B7  3008               	movlw	8
  5424  15B8  0020               	movlb	0	; select bank0
  5425  15B9  00E0               	movwf	??_SendAsicData
  5426  15BA  0860               	movf	??_SendAsicData,w
  5427  15BB  0022               	movlb	2	; select bank2
  5428  15BC  00B8               	movwf	_send32_count^(0+256)
  5429                           
  5430                           ;asic.c: 46: Send32();
  5431  15BD  3188  20FD  3195   	fcall	_Send32
  5432                           
  5433                           ;asic.c: 47: send32_data = (WORD)&PrecalcHashes; send32_count = 1;
  5434  15C0  30BA               	movlw	low _PrecalcHashes
  5435  15C1  0022               	movlb	2	; select bank2
  5436  15C2  00A4               	movwf	_send32_data^(0+256)
  5437  15C3  3001               	movlw	high _PrecalcHashes
  5438  15C4  00A5               	movwf	(_send32_data+1)^(0+256)
  5439  15C5  01B8               	clrf	_send32_count^(0+256)
  5440  15C6  0AB8               	incf	_send32_count^(0+256),f
  5441                           
  5442                           ;asic.c: 48: Send32();
  5443  15C7  3188  20FD  3195   	fcall	_Send32
  5444                           
  5445                           ;asic.c: 49: last_bit0 = last_bit1 = 0x50;
  5446  15CA  3050               	movlw	80
  5447  15CB  0022               	movlb	2	; select bank2
  5448  15CC  00B6               	movwf	_last_bit1^(0+256)
  5449  15CD  0020               	movlb	0	; select bank0
  5450  15CE  00E0               	movwf	??_SendAsicData
  5451  15CF  0860               	movf	??_SendAsicData,w
  5452  15D0  0022               	movlb	2	; select bank2
  5453  15D1  00B5               	movwf	_last_bit0^(0+256)
  5454                           
  5455                           ;asic.c: 50: send32_data = (WORD)&NonceRanges; send32_count = BankSize;
  5456  15D2  3020               	movlw	low _NonceRanges
  5457  15D3  00A4               	movwf	_send32_data^(0+256)
  5458  15D4  3003               	movlw	high _NonceRanges
  5459  15D5  00A5               	movwf	(_send32_data+1)^(0+256)
  5460  15D6  083F               	movf	_BankSize^(0+256),w
  5461  15D7  0020               	movlb	0	; select bank0
  5462  15D8  00E0               	movwf	??_SendAsicData
  5463  15D9  0860               	movf	??_SendAsicData,w
  5464  15DA  0022               	movlb	2	; select bank2
  5465  15DB  00B8               	movwf	_send32_count^(0+256)
  5466                           
  5467                           ;asic.c: 51: Send32();
  5468  15DC  3188  20FD         	fcall	_Send32
  5469                           
  5470                           ;asic.c: 52: LATC = 0xD8;;
  5471  15DE  30D8               	movlw	216
  5472  15DF  0022               	movlb	2	; select bank2
  5473  15E0  008E               	movwf	14	;volatile
  5474                           
  5475                           ;asic.c: 53: GIE = 1;
  5476  15E1  178B               	bsf	11,7	;volatile
  5477                           
  5478                           ;asic.c: 54: ClockCfg[0] = ClockCfg[0] & ~0x00000002;
  5479  15E2  30FD               	movlw	253
  5480  15E3  0023               	movlb	3	; select bank3
  5481  15E4  0552               	andwf	_ClockCfg^(0+384),w
  5482  15E5  0020               	movlb	0	; select bank0
  5483  15E6  00E0               	movwf	??_SendAsicData
  5484  15E7  30FF               	movlw	255
  5485  15E8  0023               	movlb	3	; select bank3
  5486  15E9  0553               	andwf	(_ClockCfg+1)^(0+384),w
  5487  15EA  0020               	movlb	0	; select bank0
  5488  15EB  00E1               	movwf	??_SendAsicData+1
  5489  15EC  30FF               	movlw	255
  5490  15ED  0023               	movlb	3	; select bank3
  5491  15EE  0554               	andwf	(_ClockCfg+2)^(0+384),w
  5492  15EF  0020               	movlb	0	; select bank0
  5493  15F0  00E2               	movwf	??_SendAsicData+2
  5494  15F1  30FF               	movlw	255
  5495  15F2  0023               	movlb	3	; select bank3
  5496  15F3  0555               	andwf	(_ClockCfg+3)^(0+384),w
  5497  15F4  0020               	movlb	0	; select bank0
  5498  15F5  00E3               	movwf	??_SendAsicData+3
  5499  15F6  0863               	movf	??_SendAsicData+3,w
  5500  15F7  0023               	movlb	3	; select bank3
  5501  15F8  00D5               	movwf	(_ClockCfg+3)^(0+384)
  5502  15F9  0020               	movlb	0	; select bank0
  5503  15FA  0862               	movf	??_SendAsicData+2,w
  5504  15FB  0023               	movlb	3	; select bank3
  5505  15FC  00D4               	movwf	(_ClockCfg+2)^(0+384)
  5506  15FD  0020               	movlb	0	; select bank0
  5507  15FE  0861               	movf	??_SendAsicData+1,w
  5508  15FF  0023               	movlb	3	; select bank3
  5509  1600  00D3               	movwf	(_ClockCfg+1)^(0+384)
  5510  1601  0020               	movlb	0	; select bank0
  5511  1602  0860               	movf	??_SendAsicData,w
  5512  1603  0023               	movlb	3	; select bank3
  5513  1604  00D2               	movwf	_ClockCfg^(0+384)
  5514  1605  0008               	return
  5515  1606                     __end_of_SendAsicData:	
  5516                           
  5517                           	psect	text10
  5518  08FD                     __ptext10:	
  5519 ;; *************** function _Send32 *****************
  5520 ;; Defined at:
  5521 ;;		line 58 in file "asic.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;		None               void
  5528 ;; Registers used:
  5529 ;;		None
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5539 ;;Total ram usage:        0 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; Hardware stack levels required when called:    4
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_SendAsicData
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           
  5550                           ;psect for function _Send32
  5551  08FD                     _Send32:	
  5552                           
  5553                           ;incstack = 0
  5554                           ; Regs used in _Send32: []
  5555  08FD  0022               	banksel	270	;# 
  5556  08FE  0824               	movf	_send32_data& (0+127),w	;# 
  5557  08FF  0086               	movwf	6	;# 
  5558  0900  0825               	movf	(_send32_data+1)& (0+127),w	;# 
  5559  0901  0087               	movwf	7	;# 
  5560  0902                     next_word:	
  5561                           
  5562                           ;# 
  5563  0902  3048               	movlw	72	;# 
  5564  0903  018E               	clrf	14	;# 
  5565  0904  1801               	btfsc	1,0	;# 
  5566  0905  3090               	movlw	144	;# 
  5567  0906  008E               	movwf	14	;# 
  5568  0907  3048               	movlw	72	;# 
  5569  0908  018E               	clrf	14	;# 
  5570  0909  1881               	btfsc	1,1	;# 
  5571  090A  3090               	movlw	144	;# 
  5572  090B  008E               	movwf	14	;# 
  5573  090C  3048               	movlw	72	;# 
  5574  090D  018E               	clrf	14	;# 
  5575  090E  1901               	btfsc	1,2	;# 
  5576  090F  3090               	movlw	144	;# 
  5577  0910  008E               	movwf	14	;# 
  5578  0911  3048               	movlw	72	;# 
  5579  0912  018E               	clrf	14	;# 
  5580  0913  1981               	btfsc	1,3	;# 
  5581  0914  3090               	movlw	144	;# 
  5582  0915  008E               	movwf	14	;# 
  5583  0916  3048               	movlw	72	;# 
  5584  0917  018E               	clrf	14	;# 
  5585  0918  1A01               	btfsc	1,4	;# 
  5586  0919  3090               	movlw	144	;# 
  5587  091A  008E               	movwf	14	;# 
  5588  091B  3048               	movlw	72	;# 
  5589  091C  018E               	clrf	14	;# 
  5590  091D  1A81               	btfsc	1,5	;# 
  5591  091E  3090               	movlw	144	;# 
  5592  091F  008E               	movwf	14	;# 
  5593  0920  3048               	movlw	72	;# 
  5594  0921  018E               	clrf	14	;# 
  5595  0922  1B01               	btfsc	1,6	;# 
  5596  0923  3090               	movlw	144	;# 
  5597  0924  008E               	movwf	14	;# 
  5598  0925  3048               	movlw	72	;# 
  5599  0926  018E               	clrf	14	;# 
  5600  0927  1B81               	btfsc	1,7	;# 
  5601  0928  3090               	movlw	144	;# 
  5602  0929  008E               	movwf	14	;# 
  5603  092A  3141               	addfsr 1,1	;# 
  5604  092B  3048               	movlw	72	;# 
  5605  092C  018E               	clrf	14	;# 
  5606  092D  1801               	btfsc	1,0	;# 
  5607  092E  3090               	movlw	144	;# 
  5608  092F  008E               	movwf	14	;# 
  5609  0930  3048               	movlw	72	;# 
  5610  0931  018E               	clrf	14	;# 
  5611  0932  1881               	btfsc	1,1	;# 
  5612  0933  3090               	movlw	144	;# 
  5613  0934  008E               	movwf	14	;# 
  5614  0935  3048               	movlw	72	;# 
  5615  0936  018E               	clrf	14	;# 
  5616  0937  1901               	btfsc	1,2	;# 
  5617  0938  3090               	movlw	144	;# 
  5618  0939  008E               	movwf	14	;# 
  5619  093A  3048               	movlw	72	;# 
  5620  093B  018E               	clrf	14	;# 
  5621  093C  1981               	btfsc	1,3	;# 
  5622  093D  3090               	movlw	144	;# 
  5623  093E  008E               	movwf	14	;# 
  5624  093F  3048               	movlw	72	;# 
  5625  0940  018E               	clrf	14	;# 
  5626  0941  1A01               	btfsc	1,4	;# 
  5627  0942  3090               	movlw	144	;# 
  5628  0943  008E               	movwf	14	;# 
  5629  0944  3048               	movlw	72	;# 
  5630  0945  018E               	clrf	14	;# 
  5631  0946  1A81               	btfsc	1,5	;# 
  5632  0947  3090               	movlw	144	;# 
  5633  0948  008E               	movwf	14	;# 
  5634  0949  3048               	movlw	72	;# 
  5635  094A  018E               	clrf	14	;# 
  5636  094B  1B01               	btfsc	1,6	;# 
  5637  094C  3090               	movlw	144	;# 
  5638  094D  008E               	movwf	14	;# 
  5639  094E  3048               	movlw	72	;# 
  5640  094F  018E               	clrf	14	;# 
  5641  0950  1B81               	btfsc	1,7	;# 
  5642  0951  3090               	movlw	144	;# 
  5643  0952  008E               	movwf	14	;# 
  5644  0953  3141               	addfsr 1,1	;# 
  5645  0954  3048               	movlw	72	;# 
  5646  0955  018E               	clrf	14	;# 
  5647  0956  1801               	btfsc	1,0	;# 
  5648  0957  3090               	movlw	144	;# 
  5649  0958  008E               	movwf	14	;# 
  5650  0959  3048               	movlw	72	;# 
  5651  095A  018E               	clrf	14	;# 
  5652  095B  1881               	btfsc	1,1	;# 
  5653  095C  3090               	movlw	144	;# 
  5654  095D  008E               	movwf	14	;# 
  5655  095E  3048               	movlw	72	;# 
  5656  095F  018E               	clrf	14	;# 
  5657  0960  1901               	btfsc	1,2	;# 
  5658  0961  3090               	movlw	144	;# 
  5659  0962  008E               	movwf	14	;# 
  5660  0963  3048               	movlw	72	;# 
  5661  0964  018E               	clrf	14	;# 
  5662  0965  1981               	btfsc	1,3	;# 
  5663  0966  3090               	movlw	144	;# 
  5664  0967  008E               	movwf	14	;# 
  5665  0968  3048               	movlw	72	;# 
  5666  0969  018E               	clrf	14	;# 
  5667  096A  1A01               	btfsc	1,4	;# 
  5668  096B  3090               	movlw	144	;# 
  5669  096C  008E               	movwf	14	;# 
  5670  096D  3048               	movlw	72	;# 
  5671  096E  018E               	clrf	14	;# 
  5672  096F  1A81               	btfsc	1,5	;# 
  5673  0970  3090               	movlw	144	;# 
  5674  0971  008E               	movwf	14	;# 
  5675  0972  3048               	movlw	72	;# 
  5676  0973  018E               	clrf	14	;# 
  5677  0974  1B01               	btfsc	1,6	;# 
  5678  0975  3090               	movlw	144	;# 
  5679  0976  008E               	movwf	14	;# 
  5680  0977  3048               	movlw	72	;# 
  5681  0978  018E               	clrf	14	;# 
  5682  0979  1B81               	btfsc	1,7	;# 
  5683  097A  3090               	movlw	144	;# 
  5684  097B  008E               	movwf	14	;# 
  5685  097C  3141               	addfsr 1,1	;# 
  5686  097D  3048               	movlw	72	;# 
  5687  097E  018E               	clrf	14	;# 
  5688  097F  1801               	btfsc	1,0	;# 
  5689  0980  3090               	movlw	144	;# 
  5690  0981  008E               	movwf	14	;# 
  5691  0982  3048               	movlw	72	;# 
  5692  0983  018E               	clrf	14	;# 
  5693  0984  1881               	btfsc	1,1	;# 
  5694  0985  3090               	movlw	144	;# 
  5695  0986  008E               	movwf	14	;# 
  5696  0987  3048               	movlw	72	;# 
  5697  0988  018E               	clrf	14	;# 
  5698  0989  1901               	btfsc	1,2	;# 
  5699  098A  3090               	movlw	144	;# 
  5700  098B  008E               	movwf	14	;# 
  5701  098C  3048               	movlw	72	;# 
  5702  098D  018E               	clrf	14	;# 
  5703  098E  1981               	btfsc	1,3	;# 
  5704  098F  3090               	movlw	144	;# 
  5705  0990  008E               	movwf	14	;# 
  5706  0991  3048               	movlw	72	;# 
  5707  0992  018E               	clrf	14	;# 
  5708  0993  1A01               	btfsc	1,4	;# 
  5709  0994  3090               	movlw	144	;# 
  5710  0995  008E               	movwf	14	;# 
  5711  0996  3048               	movlw	72	;# 
  5712  0997  018E               	clrf	14	;# 
  5713  0998  1A81               	btfsc	1,5	;# 
  5714  0999  3090               	movlw	144	;# 
  5715  099A  008E               	movwf	14	;# 
  5716  099B  3048               	movlw	72	;# 
  5717  099C  018E               	clrf	14	;# 
  5718  099D  1B01               	btfsc	1,6	;# 
  5719  099E  3090               	movlw	144	;# 
  5720  099F  008E               	movwf	14	;# 
  5721  09A0  0835               	movf	_last_bit0& (0+127),w	;# 
  5722  09A1  018E               	clrf	14	;# 
  5723  09A2  1B81               	btfsc	1,7	;# 
  5724  09A3  0836               	movf	_last_bit1& (0+127),w	;# 
  5725  09A4  008E               	movwf	14	;# 
  5726  09A5  3141               	addfsr 1,1	;# 
  5727  09A6  0BB8               	decfsz	_send32_count& (0+127),f	;# 
  5728  09A7  2902               	goto	next_word	;# 
  5729  09A8  0008               	return
  5730  09A9                     __end_of_Send32:	
  5731                           
  5732                           	psect	text11
  5733  1989                     __ptext11:	
  5734 ;; *************** function _InitializeSystem *****************
  5735 ;; Defined at:
  5736 ;;		line 146 in file "main.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;		None
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;		None
  5741 ;; Return value:  Size  Location     Type
  5742 ;;		None               void
  5743 ;; Registers used:
  5744 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5754 ;;Total ram usage:        0 bytes
  5755 ;; Hardware stack levels used:    1
  5756 ;; Hardware stack levels required when called:    9
  5757 ;; This function calls:
  5758 ;;		_USBDeviceInit
  5759 ;;		_UserInit
  5760 ;; This function is called by:
  5761 ;;		_main
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764                           
  5765                           
  5766                           ;psect for function _InitializeSystem
  5767  1989                     _InitializeSystem:	
  5768                           
  5769                           ;main.c: 148: ANSELA = 0x00;
  5770                           
  5771                           ;incstack = 0
  5772                           ; Regs used in _InitializeSystem: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5773  1989  0023               	movlb	3	; select bank3
  5774  198A  018C               	clrf	12	;volatile
  5775                           
  5776                           ;main.c: 149: ANSELB = 0x00;
  5777  198B  018D               	clrf	13	;volatile
  5778                           
  5779                           ;main.c: 150: ANSELC = 0x04;
  5780  198C  3004               	movlw	4
  5781  198D  008E               	movwf	14	;volatile
  5782                           
  5783                           ;main.c: 153: OSCTUNE = 0;
  5784  198E  0021               	movlb	1	; select bank1
  5785  198F  0198               	clrf	24	;volatile
  5786                           
  5787                           ;main.c: 154: OSCCON = 0xFC;
  5788  1990  30FC               	movlw	252
  5789  1991  0099               	movwf	25	;volatile
  5790                           
  5791                           ;main.c: 155: ACTCON = 0x90;
  5792  1992  3090               	movlw	144
  5793  1993  0027               	movlb	7	; select bank7
  5794  1994  009B               	movwf	27	;volatile
  5795                           
  5796                           ;main.c: 158: USBGenericOutHandle = 0;
  5797  1995  0022               	movlb	2	; select bank2
  5798  1996  01AF               	clrf	_USBGenericOutHandle^(0+256)
  5799                           
  5800                           ;main.c: 159: USBGenericInHandle = 0;
  5801  1997  01AE               	clrf	_USBGenericInHandle^(0+256)
  5802                           
  5803                           ;main.c: 160: WQI = WQX = 0;
  5804  1998  01C3               	clrf	_WQX^(0+256)
  5805  1999  01C2               	clrf	_WQI^(0+256)
  5806                           
  5807                           ;main.c: 162: UserInit();
  5808  199A  3199  215F  3199   	fcall	_UserInit
  5809                           
  5810                           ;main.c: 164: USBDeviceInit();
  5811  199D  3197  2756         	fcall	_USBDeviceInit
  5812  199F  0008               	return
  5813  19A0                     __end_of_InitializeSystem:	
  5814                           
  5815                           	psect	text12
  5816  195F                     __ptext12:	
  5817 ;; *************** function _UserInit *****************
  5818 ;; Defined at:
  5819 ;;		line 170 in file "main.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;		None
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;		None
  5824 ;; Return value:  Size  Location     Type
  5825 ;;		None               void
  5826 ;; Registers used:
  5827 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5837 ;;Total ram usage:        0 bytes
  5838 ;; Hardware stack levels used:    1
  5839 ;; Hardware stack levels required when called:    8
  5840 ;; This function calls:
  5841 ;;		_DetectAsics
  5842 ;;		_InitFAN
  5843 ;;		_InitTempSensor
  5844 ;;		_InitWorkTick
  5845 ;;		_InitResultRx
  5846 ;; This function is called by:
  5847 ;;		_InitializeSystem
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           
  5852                           ;psect for function _UserInit
  5853  195F                     _UserInit:	
  5854                           
  5855                           ;main.c: 171: TRISAbits.TRISA5 = 0; LATAbits.LATA5 = 1;;
  5856                           
  5857                           ;incstack = 0
  5858                           ; Regs used in _UserInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5859  195F  0021               	movlb	1	; select bank1
  5860  1960  128C               	bcf	12,5	;volatile
  5861  1961  0022               	movlb	2	; select bank2
  5862  1962  168C               	bsf	12,5	;volatile
  5863                           
  5864                           ;main.c: 172: InitTempSensor();
  5865  1963  3199  2172  3199   	fcall	_InitTempSensor
  5866                           
  5867                           ;main.c: 173: InitFAN();
  5868  1966  319A  220A  3199   	fcall	_InitFAN
  5869                           
  5870                           ;main.c: 174: InitWorkTick();
  5871  1969  319A  22A4  3199   	fcall	_InitWorkTick
  5872                           
  5873                           ;main.c: 176: InitResultRx();
  5874  196C  3199  214C  3199   	fcall	_InitResultRx
  5875                           
  5876                           ;main.c: 177: DetectAsics();
  5877  196F  3189  21A9         	fcall	_DetectAsics
  5878  1971  0008               	return
  5879  1972                     __end_of_UserInit:	
  5880                           
  5881                           	psect	text13
  5882  194C                     __ptext13:	
  5883 ;; *************** function _InitResultRx *****************
  5884 ;; Defined at:
  5885 ;;		line 272 in file "klondike.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;		None
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;		None
  5890 ;; Return value:  Size  Location     Type
  5891 ;;		None               void
  5892 ;; Registers used:
  5893 ;;		wreg, status,2
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5903 ;;Total ram usage:        0 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:    4
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_UserInit
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           
  5914                           ;psect for function _InitResultRx
  5915  194C                     _InitResultRx:	
  5916                           
  5917                           ;klondike.c: 273: ResultQC = 0;
  5918                           
  5919                           ;incstack = 0
  5920                           ; Regs used in _InitResultRx: [wreg+status,2]
  5921  194C  0022               	movlb	2	; select bank2
  5922  194D  01AA               	clrf	_ResultQC^(0+256)
  5923                           
  5924                           ;klondike.c: 274: TXSTAbits.SYNC = 1;
  5925  194E  0023               	movlb	3	; select bank3
  5926  194F  161E               	bsf	30,4	;volatile
  5927                           
  5928                           ;klondike.c: 275: RCSTAbits.SPEN = 1;
  5929  1950  179D               	bsf	29,7	;volatile
  5930                           
  5931                           ;klondike.c: 276: TXSTAbits.CSRC = 0;
  5932  1951  139E               	bcf	30,7	;volatile
  5933                           
  5934                           ;klondike.c: 277: BAUDCONbits.SCKP = 0;
  5935  1952  121F               	bcf	31,4	;volatile
  5936                           
  5937                           ;klondike.c: 278: BAUDCONbits.BRG16 = 1;
  5938  1953  159F               	bsf	31,3	;volatile
  5939                           
  5940                           ;klondike.c: 279: ANSELBbits.ANSB5 = 0;
  5941  1954  128D               	bcf	13,5	;volatile
  5942                           
  5943                           ;klondike.c: 280: IOCBPbits.IOCBP7 = 1;
  5944  1955  0027               	movlb	7	; select bank7
  5945  1956  1794               	bsf	20,7	;volatile
  5946                           
  5947                           ;klondike.c: 281: INTCONbits.IOCIE = 1;
  5948  1957  158B               	bsf	11,3	;volatile
  5949                           
  5950                           ;klondike.c: 282: IOCBF = 0;
  5951  1958  0196               	clrf	22	;volatile
  5952                           
  5953                           ;klondike.c: 283: INTCONbits.GIE = 1;
  5954  1959  178B               	bsf	11,7	;volatile
  5955                           
  5956                           ;klondike.c: 284: RCSTAbits.CREN = 1;
  5957  195A  0023               	movlb	3	; select bank3
  5958  195B  161D               	bsf	29,4	;volatile
  5959                           
  5960                           ;klondike.c: 285: RCREG = 0xFF;
  5961  195C  30FF               	movlw	255
  5962  195D  0099               	movwf	25	;volatile
  5963  195E  0008               	return
  5964  195F                     __end_of_InitResultRx:	
  5965                           
  5966                           	psect	text14
  5967  1AA4                     __ptext14:	
  5968 ;; *************** function _InitWorkTick *****************
  5969 ;; Defined at:
  5970 ;;		line 255 in file "klondike.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;		None
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;		None               void
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0, pclath, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5988 ;;Total ram usage:        0 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    7
  5991 ;; This function calls:
  5992 ;;		_UpdateClock
  5993 ;; This function is called by:
  5994 ;;		_UserInit
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           
  5999                           ;psect for function _InitWorkTick
  6000  1AA4                     _InitWorkTick:	
  6001                           
  6002                           ;klondike.c: 256: UpdateClock(500);
  6003                           
  6004                           ;incstack = 0
  6005                           ; Regs used in _InitWorkTick: [wreg+status,2+status,0+pclath+cstack]
  6006  1AA4  3000               	movlw	0
  6007  1AA5  0021               	movlb	1	; select bank1
  6008  1AA6  00E1               	movwf	(?_UpdateClock+3)^(0+128)
  6009  1AA7  3000               	movlw	0
  6010  1AA8  00E0               	movwf	(?_UpdateClock+2)^(0+128)
  6011  1AA9  3001               	movlw	1
  6012  1AAA  00DF               	movwf	(?_UpdateClock+1)^(0+128)
  6013  1AAB  30F4               	movlw	244
  6014  1AAC  00DE               	movwf	?_UpdateClock^(0+128)
  6015  1AAD  3184  2491         	fcall	_UpdateClock
  6016                           
  6017                           ;klondike.c: 257: TMR0CS = 0;
  6018  1AAF  0021               	movlb	1	; select bank1
  6019  1AB0  1295               	bcf	21,5	;volatile
  6020                           
  6021                           ;klondike.c: 258: OPTION_REGbits.PSA = 0;
  6022  1AB1  1195               	bcf	21,3	;volatile
  6023                           
  6024                           ;klondike.c: 259: OPTION_REGbits.PS = 7;
  6025  1AB2  3007               	movlw	7
  6026  1AB3  0495               	iorwf	21,f	;volatile
  6027                           
  6028                           ;klondike.c: 260: TMR0 = HashTime;
  6029  1AB4  0022               	movlb	2	; select bank2
  6030  1AB5  0826               	movf	_HashTime^(0+256),w
  6031  1AB6  0020               	movlb	0	; select bank0
  6032  1AB7  0095               	movwf	21	;volatile
  6033                           
  6034                           ;klondike.c: 262: TRISCbits.TRISC7 = 0;
  6035  1AB8  0021               	movlb	1	; select bank1
  6036  1AB9  138E               	bcf	14,7	;volatile
  6037                           
  6038                           ;klondike.c: 263: TRISCbits.TRISC6 = 0;
  6039  1ABA  130E               	bcf	14,6	;volatile
  6040                           
  6041                           ;klondike.c: 264: TRISCbits.TRISC4 = 0;
  6042  1ABB  120E               	bcf	14,4	;volatile
  6043                           
  6044                           ;klondike.c: 265: TRISCbits.TRISC3 = 0;
  6045  1ABC  118E               	bcf	14,3	;volatile
  6046                           
  6047                           ;klondike.c: 266: LATC = 0xD8;;
  6048  1ABD  30D8               	movlw	216
  6049  1ABE  0022               	movlb	2	; select bank2
  6050  1ABF  008E               	movwf	14	;volatile
  6051                           
  6052                           ;klondike.c: 267: TRISAbits.TRISA4 = 0;
  6053  1AC0  0021               	movlb	1	; select bank1
  6054  1AC1  120C               	bcf	12,4	;volatile
  6055                           
  6056                           ;klondike.c: 268: LATAbits.LATA4 = 0;
  6057  1AC2  0022               	movlb	2	; select bank2
  6058  1AC3  120C               	bcf	12,4	;volatile
  6059  1AC4  0008               	return
  6060  1AC5                     __end_of_InitWorkTick:	
  6061                           
  6062                           	psect	text15
  6063  0491                     __ptext15:	
  6064 ;; *************** function _UpdateClock *****************
  6065 ;; Defined at:
  6066 ;;		line 289 in file "klondike.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  SPEED           4   62[BANK1 ] unsigned long 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  CLOCK_OD_VAL    4   12[BANK2 ] unsigned long 
  6071 ;;  CLOCK_F_VALU    4    8[BANK2 ] unsigned long 
  6072 ;;  CLOCK_R_VALU    4    4[BANK2 ] unsigned long 
  6073 ;; Return value:  Size  Location     Type
  6074 ;;		None               void
  6075 ;; Registers used:
  6076 ;;		wreg, status,2, status,0, pclath, cstack
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6082 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6083 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0
  6084 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  6085 ;;      Totals:         0       0      16      16       0       0       0       0       0       0       0       0       
      +0       0
  6086 ;;Total ram usage:       32 bytes
  6087 ;; Hardware stack levels used:    1
  6088 ;; Hardware stack levels required when called:    6
  6089 ;; This function calls:
  6090 ;;		___ftadd
  6091 ;;		___ftdiv
  6092 ;;		___fttol
  6093 ;;		___lldiv
  6094 ;;		___lltoft
  6095 ;;		___lmul
  6096 ;;		___lwdiv
  6097 ;; This function is called by:
  6098 ;;		_ProcessCmd
  6099 ;;		_InitWorkTick
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           
  6104                           ;psect for function _UpdateClock
  6105  0491                     _UpdateClock:	
  6106                           
  6107                           ;klondike.c: 290: DWORD CLOCK_R_VALUE, CLOCK_F_VALUE, CLOCK_OD_VALUE;
  6108                           ;klondike.c: 307: if (SPEED > 250 && SPEED <= 500)
  6109                           
  6110                           ;incstack = 0
  6111                           ; Regs used in _UpdateClock: [wreg+status,2+status,0+pclath+cstack]
  6112  0491  3000               	movlw	0
  6113  0492  0021               	movlb	1	; select bank1
  6114  0493  0261               	subwf	(UpdateClock@SPEED+3)^(0+128),w
  6115  0494  1D03               	skipz
  6116  0495  2CA0               	goto	u5485
  6117  0496  3000               	movlw	0
  6118  0497  0260               	subwf	(UpdateClock@SPEED+2)^(0+128),w
  6119  0498  1D03               	skipz
  6120  0499  2CA0               	goto	u5485
  6121  049A  3000               	movlw	0
  6122  049B  025F               	subwf	(UpdateClock@SPEED+1)^(0+128),w
  6123  049C  1D03               	skipz
  6124  049D  2CA0               	goto	u5485
  6125  049E  30FB               	movlw	251
  6126  049F  025E               	subwf	UpdateClock@SPEED^(0+128),w
  6127  04A0                     u5485:	
  6128  04A0  1C03               	skipc
  6129  04A1  2D15               	goto	l5671
  6130  04A2  3000               	movlw	0
  6131  04A3  0261               	subwf	(UpdateClock@SPEED+3)^(0+128),w
  6132  04A4  1D03               	skipz
  6133  04A5  2CB0               	goto	u5495
  6134  04A6  3000               	movlw	0
  6135  04A7  0260               	subwf	(UpdateClock@SPEED+2)^(0+128),w
  6136  04A8  1D03               	skipz
  6137  04A9  2CB0               	goto	u5495
  6138  04AA  3001               	movlw	1
  6139  04AB  025F               	subwf	(UpdateClock@SPEED+1)^(0+128),w
  6140  04AC  1D03               	skipz
  6141  04AD  2CB0               	goto	u5495
  6142  04AE  30F5               	movlw	245
  6143  04AF  025E               	subwf	UpdateClock@SPEED^(0+128),w
  6144  04B0                     u5495:	
  6145  04B0  1803               	skipnc
  6146  04B1  2D15               	goto	l5671
  6147                           
  6148                           ;klondike.c: 308: {
  6149                           ;klondike.c: 309: CLOCK_R_VALUE = 2;
  6150  04B2  3000               	movlw	0
  6151  04B3  0022               	movlb	2	; select bank2
  6152  04B4  00CB               	movwf	(UpdateClock@CLOCK_R_VALUE+3)^(0+256)
  6153  04B5  3000               	movlw	0
  6154  04B6  00CA               	movwf	(UpdateClock@CLOCK_R_VALUE+2)^(0+256)
  6155  04B7  3000               	movlw	0
  6156  04B8  00C9               	movwf	(UpdateClock@CLOCK_R_VALUE+1)^(0+256)
  6157  04B9  3002               	movlw	2
  6158  04BA  00C8               	movwf	UpdateClock@CLOCK_R_VALUE^(0+256)
  6159                           
  6160                           ;klondike.c: 310: CLOCK_F_VALUE = (SPEED + 3.125) / 6.25;
  6161  04BB  0021               	movlb	1	; select bank1
  6162  04BC  0861               	movf	(UpdateClock@SPEED+3)^(0+128),w
  6163  04BD  0020               	movlb	0	; select bank0
  6164  04BE  00E3               	movwf	?___lltoft+3
  6165  04BF  0021               	movlb	1	; select bank1
  6166  04C0  0860               	movf	(UpdateClock@SPEED+2)^(0+128),w
  6167  04C1  0020               	movlb	0	; select bank0
  6168  04C2  00E2               	movwf	?___lltoft+2
  6169  04C3  0021               	movlb	1	; select bank1
  6170  04C4  085F               	movf	(UpdateClock@SPEED+1)^(0+128),w
  6171  04C5  0020               	movlb	0	; select bank0
  6172  04C6  00E1               	movwf	?___lltoft+1
  6173  04C7  0021               	movlb	1	; select bank1
  6174  04C8  085E               	movf	UpdateClock@SPEED^(0+128),w
  6175  04C9  0020               	movlb	0	; select bank0
  6176  04CA  00E0               	movwf	?___lltoft
  6177  04CB  319B  232E  3184   	fcall	___lltoft
  6178  04CE  0020               	movlb	0	; select bank0
  6179  04CF  0860               	movf	?___lltoft,w
  6180  04D0  0021               	movlb	1	; select bank1
  6181  04D1  00B6               	movwf	(?___ftadd^(0+128)+3)
  6182  04D2  0020               	movlb	0	; select bank0
  6183  04D3  0861               	movf	?___lltoft+1,w
  6184  04D4  0021               	movlb	1	; select bank1
  6185  04D5  00B7               	movwf	((?___ftadd+1)^(0+128)+3)
  6186  04D6  0020               	movlb	0	; select bank0
  6187  04D7  0862               	movf	?___lltoft+2,w
  6188  04D8  0021               	movlb	1	; select bank1
  6189  04D9  00B8               	movwf	((?___ftadd+2)^(0+128)+3)
  6190  04DA  3000               	movlw	0
  6191  04DB  00B3               	movwf	?___ftadd^(0+128)
  6192  04DC  3048               	movlw	72
  6193  04DD  00B4               	movwf	(?___ftadd+1)^(0+128)
  6194  04DE  3040               	movlw	64
  6195  04DF  00B5               	movwf	(?___ftadd+2)^(0+128)
  6196  04E0  318C  24D0  3184   	fcall	___ftadd
  6197  04E3  0021               	movlb	1	; select bank1
  6198  04E4  0833               	movf	?___ftadd^(0+128),w
  6199  04E5  00C3               	movwf	(?___ftdiv^(0+128)+3)
  6200  04E6  0834               	movf	(?___ftadd+1)^(0+128),w
  6201  04E7  00C4               	movwf	((?___ftdiv+1)^(0+128)+3)
  6202  04E8  0835               	movf	(?___ftadd+2)^(0+128),w
  6203  04E9  00C5               	movwf	((?___ftdiv+2)^(0+128)+3)
  6204  04EA  3000               	movlw	0
  6205  04EB  00C0               	movwf	?___ftdiv^(0+128)
  6206  04EC  30C8               	movlw	200
  6207  04ED  00C1               	movwf	(?___ftdiv+1)^(0+128)
  6208  04EE  3040               	movlw	64
  6209  04EF  00C2               	movwf	(?___ftdiv+2)^(0+128)
  6210  04F0  318A  2260  3184   	fcall	___ftdiv
  6211  04F3  0021               	movlb	1	; select bank1
  6212  04F4  0840               	movf	?___ftdiv^(0+128),w
  6213  04F5  00D0               	movwf	?___fttol^(0+128)
  6214  04F6  0841               	movf	(?___ftdiv+1)^(0+128),w
  6215  04F7  00D1               	movwf	(?___fttol+1)^(0+128)
  6216  04F8  0842               	movf	(?___ftdiv+2)^(0+128),w
  6217  04F9  00D2               	movwf	(?___fttol+2)^(0+128)
  6218  04FA  3193  233C  3184   	fcall	___fttol
  6219  04FD  0021               	movlb	1	; select bank1
  6220  04FE  0853               	movf	(?___fttol+3)^(0+128),w
  6221  04FF  0022               	movlb	2	; select bank2
  6222  0500  00CF               	movwf	(UpdateClock@CLOCK_F_VALUE+3)^(0+256)
  6223  0501  0021               	movlb	1	; select bank1
  6224  0502  0852               	movf	(?___fttol+2)^(0+128),w
  6225  0503  0022               	movlb	2	; select bank2
  6226  0504  00CE               	movwf	(UpdateClock@CLOCK_F_VALUE+2)^(0+256)
  6227  0505  0021               	movlb	1	; select bank1
  6228  0506  0851               	movf	(?___fttol+1)^(0+128),w
  6229  0507  0022               	movlb	2	; select bank2
  6230  0508  00CD               	movwf	(UpdateClock@CLOCK_F_VALUE+1)^(0+256)
  6231  0509  0021               	movlb	1	; select bank1
  6232  050A  0850               	movf	?___fttol^(0+128),w
  6233  050B  0022               	movlb	2	; select bank2
  6234  050C  00CC               	movwf	UpdateClock@CLOCK_F_VALUE^(0+256)
  6235                           
  6236                           ;klondike.c: 311: CLOCK_OD_VALUE = 1;
  6237  050D  3000               	movlw	0
  6238  050E  00D3               	movwf	(UpdateClock@CLOCK_OD_VALUE+3)^(0+256)
  6239  050F  3000               	movlw	0
  6240  0510  00D2               	movwf	(UpdateClock@CLOCK_OD_VALUE+2)^(0+256)
  6241  0511  3000               	movlw	0
  6242  0512  00D1               	movwf	(UpdateClock@CLOCK_OD_VALUE+1)^(0+256)
  6243  0513  3001               	movlw	1
  6244  0514  2D88               	goto	L5
  6245  0515                     l5671:	
  6246                           ;klondike.c: 312: }
  6247                           
  6248                           
  6249                           ;klondike.c: 314: else if (SPEED > 500)
  6250  0515  3000               	movlw	0
  6251  0516  0021               	movlb	1	; select bank1
  6252  0517  0261               	subwf	(UpdateClock@SPEED+3)^(0+128),w
  6253  0518  1D03               	skipz
  6254  0519  2D24               	goto	u5505
  6255  051A  3000               	movlw	0
  6256  051B  0260               	subwf	(UpdateClock@SPEED+2)^(0+128),w
  6257  051C  1D03               	skipz
  6258  051D  2D24               	goto	u5505
  6259  051E  3001               	movlw	1
  6260  051F  025F               	subwf	(UpdateClock@SPEED+1)^(0+128),w
  6261  0520  1D03               	skipz
  6262  0521  2D24               	goto	u5505
  6263  0522  30F5               	movlw	245
  6264  0523  025E               	subwf	UpdateClock@SPEED^(0+128),w
  6265  0524                     u5505:	
  6266  0524  1C03               	skipc
  6267  0525  2D89               	goto	l742
  6268                           
  6269                           ;klondike.c: 315: {
  6270                           ;klondike.c: 316: CLOCK_R_VALUE = 2;
  6271  0526  3000               	movlw	0
  6272  0527  0022               	movlb	2	; select bank2
  6273  0528  00CB               	movwf	(UpdateClock@CLOCK_R_VALUE+3)^(0+256)
  6274  0529  3000               	movlw	0
  6275  052A  00CA               	movwf	(UpdateClock@CLOCK_R_VALUE+2)^(0+256)
  6276  052B  3000               	movlw	0
  6277  052C  00C9               	movwf	(UpdateClock@CLOCK_R_VALUE+1)^(0+256)
  6278  052D  3002               	movlw	2
  6279  052E  00C8               	movwf	UpdateClock@CLOCK_R_VALUE^(0+256)
  6280                           
  6281                           ;klondike.c: 317: CLOCK_F_VALUE = (SPEED + 6.25) / 12.5;
  6282  052F  0021               	movlb	1	; select bank1
  6283  0530  0861               	movf	(UpdateClock@SPEED+3)^(0+128),w
  6284  0531  0020               	movlb	0	; select bank0
  6285  0532  00E3               	movwf	?___lltoft+3
  6286  0533  0021               	movlb	1	; select bank1
  6287  0534  0860               	movf	(UpdateClock@SPEED+2)^(0+128),w
  6288  0535  0020               	movlb	0	; select bank0
  6289  0536  00E2               	movwf	?___lltoft+2
  6290  0537  0021               	movlb	1	; select bank1
  6291  0538  085F               	movf	(UpdateClock@SPEED+1)^(0+128),w
  6292  0539  0020               	movlb	0	; select bank0
  6293  053A  00E1               	movwf	?___lltoft+1
  6294  053B  0021               	movlb	1	; select bank1
  6295  053C  085E               	movf	UpdateClock@SPEED^(0+128),w
  6296  053D  0020               	movlb	0	; select bank0
  6297  053E  00E0               	movwf	?___lltoft
  6298  053F  319B  232E  3184   	fcall	___lltoft
  6299  0542  0020               	movlb	0	; select bank0
  6300  0543  0860               	movf	?___lltoft,w
  6301  0544  0021               	movlb	1	; select bank1
  6302  0545  00B6               	movwf	(?___ftadd^(0+128)+3)
  6303  0546  0020               	movlb	0	; select bank0
  6304  0547  0861               	movf	?___lltoft+1,w
  6305  0548  0021               	movlb	1	; select bank1
  6306  0549  00B7               	movwf	((?___ftadd+1)^(0+128)+3)
  6307  054A  0020               	movlb	0	; select bank0
  6308  054B  0862               	movf	?___lltoft+2,w
  6309  054C  0021               	movlb	1	; select bank1
  6310  054D  00B8               	movwf	((?___ftadd+2)^(0+128)+3)
  6311  054E  3000               	movlw	0
  6312  054F  00B3               	movwf	?___ftadd^(0+128)
  6313  0550  30C8               	movlw	200
  6314  0551  00B4               	movwf	(?___ftadd+1)^(0+128)
  6315  0552  3040               	movlw	64
  6316  0553  00B5               	movwf	(?___ftadd+2)^(0+128)
  6317  0554  318C  24D0  3184   	fcall	___ftadd
  6318  0557  0021               	movlb	1	; select bank1
  6319  0558  0833               	movf	?___ftadd^(0+128),w
  6320  0559  00C3               	movwf	(?___ftdiv^(0+128)+3)
  6321  055A  0834               	movf	(?___ftadd+1)^(0+128),w
  6322  055B  00C4               	movwf	((?___ftdiv+1)^(0+128)+3)
  6323  055C  0835               	movf	(?___ftadd+2)^(0+128),w
  6324  055D  00C5               	movwf	((?___ftdiv+2)^(0+128)+3)
  6325  055E  3000               	movlw	0
  6326  055F  00C0               	movwf	?___ftdiv^(0+128)
  6327  0560  3048               	movlw	72
  6328  0561  00C1               	movwf	(?___ftdiv+1)^(0+128)
  6329  0562  3041               	movlw	65
  6330  0563  00C2               	movwf	(?___ftdiv+2)^(0+128)
  6331  0564  318A  2260  3184   	fcall	___ftdiv
  6332  0567  0021               	movlb	1	; select bank1
  6333  0568  0840               	movf	?___ftdiv^(0+128),w
  6334  0569  00D0               	movwf	?___fttol^(0+128)
  6335  056A  0841               	movf	(?___ftdiv+1)^(0+128),w
  6336  056B  00D1               	movwf	(?___fttol+1)^(0+128)
  6337  056C  0842               	movf	(?___ftdiv+2)^(0+128),w
  6338  056D  00D2               	movwf	(?___fttol+2)^(0+128)
  6339  056E  3193  233C  3184   	fcall	___fttol
  6340  0571  0021               	movlb	1	; select bank1
  6341  0572  0853               	movf	(?___fttol+3)^(0+128),w
  6342  0573  0022               	movlb	2	; select bank2
  6343  0574  00CF               	movwf	(UpdateClock@CLOCK_F_VALUE+3)^(0+256)
  6344  0575  0021               	movlb	1	; select bank1
  6345  0576  0852               	movf	(?___fttol+2)^(0+128),w
  6346  0577  0022               	movlb	2	; select bank2
  6347  0578  00CE               	movwf	(UpdateClock@CLOCK_F_VALUE+2)^(0+256)
  6348  0579  0021               	movlb	1	; select bank1
  6349  057A  0851               	movf	(?___fttol+1)^(0+128),w
  6350  057B  0022               	movlb	2	; select bank2
  6351  057C  00CD               	movwf	(UpdateClock@CLOCK_F_VALUE+1)^(0+256)
  6352  057D  0021               	movlb	1	; select bank1
  6353  057E  0850               	movf	?___fttol^(0+128),w
  6354  057F  0022               	movlb	2	; select bank2
  6355  0580  00CC               	movwf	UpdateClock@CLOCK_F_VALUE^(0+256)
  6356                           
  6357                           ;klondike.c: 318: CLOCK_OD_VALUE = 0;
  6358  0581  3000               	movlw	0
  6359  0582  00D3               	movwf	(UpdateClock@CLOCK_OD_VALUE+3)^(0+256)
  6360  0583  3000               	movlw	0
  6361  0584  00D2               	movwf	(UpdateClock@CLOCK_OD_VALUE+2)^(0+256)
  6362  0585  3000               	movlw	0
  6363  0586  00D1               	movwf	(UpdateClock@CLOCK_OD_VALUE+1)^(0+256)
  6364  0587  3000               	movlw	0
  6365  0588                     L5:	
  6366  0588  00D0               	movwf	UpdateClock@CLOCK_OD_VALUE^(0+256)
  6367  0589                     l742:	
  6368                           
  6369                           ;klondike.c: 319: }
  6370                           ;klondike.c: 322: Cfg.HashClock = 25 * CLOCK_F_VALUE / CLOCK_R_VALUE / (1 << CLOCK_OD_VA
      +                          LUE);
  6371  0589  0022               	movlb	2	; select bank2
  6372  058A  084B               	movf	(UpdateClock@CLOCK_R_VALUE+3)^(0+256),w
  6373  058B  0021               	movlb	1	; select bank1
  6374  058C  00A3               	movwf	(?___lldiv+3)^(0+128)
  6375  058D  0022               	movlb	2	; select bank2
  6376  058E  084A               	movf	(UpdateClock@CLOCK_R_VALUE+2)^(0+256),w
  6377  058F  0021               	movlb	1	; select bank1
  6378  0590  00A2               	movwf	(?___lldiv+2)^(0+128)
  6379  0591  0022               	movlb	2	; select bank2
  6380  0592  0849               	movf	(UpdateClock@CLOCK_R_VALUE+1)^(0+256),w
  6381  0593  0021               	movlb	1	; select bank1
  6382  0594  00A1               	movwf	(?___lldiv+1)^(0+128)
  6383  0595  0022               	movlb	2	; select bank2
  6384  0596  0848               	movf	UpdateClock@CLOCK_R_VALUE^(0+256),w
  6385  0597  0021               	movlb	1	; select bank1
  6386  0598  00A0               	movwf	?___lldiv^(0+128)
  6387  0599  0022               	movlb	2	; select bank2
  6388  059A  084F               	movf	(UpdateClock@CLOCK_F_VALUE+3)^(0+256),w
  6389  059B  0020               	movlb	0	; select bank0
  6390  059C  00DB               	movwf	?___lmul+3
  6391  059D  0022               	movlb	2	; select bank2
  6392  059E  084E               	movf	(UpdateClock@CLOCK_F_VALUE+2)^(0+256),w
  6393  059F  0020               	movlb	0	; select bank0
  6394  05A0  00DA               	movwf	?___lmul+2
  6395  05A1  0022               	movlb	2	; select bank2
  6396  05A2  084D               	movf	(UpdateClock@CLOCK_F_VALUE+1)^(0+256),w
  6397  05A3  0020               	movlb	0	; select bank0
  6398  05A4  00D9               	movwf	?___lmul+1
  6399  05A5  0022               	movlb	2	; select bank2
  6400  05A6  084C               	movf	UpdateClock@CLOCK_F_VALUE^(0+256),w
  6401  05A7  0020               	movlb	0	; select bank0
  6402  05A8  00D8               	movwf	?___lmul
  6403  05A9  3000               	movlw	0
  6404  05AA  00DF               	movwf	?___lmul+7
  6405  05AB  3000               	movlw	0
  6406  05AC  00DE               	movwf	?___lmul+6
  6407  05AD  3000               	movlw	0
  6408  05AE  00DD               	movwf	?___lmul+5
  6409  05AF  3019               	movlw	25
  6410  05B0  00DC               	movwf	?___lmul+4
  6411  05B1  319B  2385  3184   	fcall	___lmul
  6412  05B4  0020               	movlb	0	; select bank0
  6413  05B5  085B               	movf	?___lmul+3,w
  6414  05B6  0021               	movlb	1	; select bank1
  6415  05B7  00A7               	movwf	((?___lldiv+3)^(0+128)+4)
  6416  05B8  0020               	movlb	0	; select bank0
  6417  05B9  085A               	movf	?___lmul+2,w
  6418  05BA  0021               	movlb	1	; select bank1
  6419  05BB  00A6               	movwf	((?___lldiv+2)^(0+128)+4)
  6420  05BC  0020               	movlb	0	; select bank0
  6421  05BD  0859               	movf	?___lmul+1,w
  6422  05BE  0021               	movlb	1	; select bank1
  6423  05BF  00A5               	movwf	((?___lldiv+1)^(0+128)+4)
  6424  05C0  0020               	movlb	0	; select bank0
  6425  05C1  0858               	movf	?___lmul,w
  6426  05C2  0021               	movlb	1	; select bank1
  6427  05C3  00A4               	movwf	(?___lldiv^(0+128)+4)
  6428  05C4  319E  2632  3184   	fcall	___lldiv
  6429  05C7  0021               	movlb	1	; select bank1
  6430  05C8  0823               	movf	(?___lldiv+3)^(0+128),w
  6431  05C9  0022               	movlb	2	; select bank2
  6432  05CA  00C7               	movwf	(_UpdateClock$2776+3)^(0+256)
  6433  05CB  0021               	movlb	1	; select bank1
  6434  05CC  0822               	movf	(?___lldiv+2)^(0+128),w
  6435  05CD  0022               	movlb	2	; select bank2
  6436  05CE  00C6               	movwf	(_UpdateClock$2776+2)^(0+256)
  6437  05CF  0021               	movlb	1	; select bank1
  6438  05D0  0821               	movf	(?___lldiv+1)^(0+128),w
  6439  05D1  0022               	movlb	2	; select bank2
  6440  05D2  00C5               	movwf	(_UpdateClock$2776+1)^(0+256)
  6441  05D3  0021               	movlb	1	; select bank1
  6442  05D4  0820               	movf	?___lldiv^(0+128),w
  6443  05D5  0022               	movlb	2	; select bank2
  6444  05D6  00C4               	movwf	_UpdateClock$2776^(0+256)
  6445                           
  6446                           ;klondike.c: 319: }
  6447                           ;klondike.c: 322: Cfg.HashClock = 25 * CLOCK_F_VALUE / CLOCK_R_VALUE / (1 << CLOCK_OD_VA
      +                          LUE);
  6448  05D7  3001               	movlw	1
  6449  05D8  0021               	movlb	1	; select bank1
  6450  05D9  00E2               	movwf	??_UpdateClock^(0+128)
  6451  05DA  3000               	movlw	0
  6452  05DB  00E3               	movwf	(??_UpdateClock^(0+128)+1)
  6453  05DC  0022               	movlb	2	; select bank2
  6454  05DD  0A50               	incf	UpdateClock@CLOCK_OD_VALUE^(0+256),w
  6455  05DE  0021               	movlb	1	; select bank1
  6456  05DF  2DE2               	goto	u5514
  6457  05E0                     u5515:	
  6458  05E0  35E2               	lslf	??_UpdateClock^(0+128),f
  6459  05E1  0DE3               	rlf	(??_UpdateClock^(0+128)+1),f
  6460  05E2                     u5514:	
  6461  05E2  0B89               	decfsz	9,f
  6462  05E3  2DE0               	goto	u5515
  6463  05E4  0862               	movf	??_UpdateClock^(0+128),w
  6464  05E5  00A0               	movwf	?___lldiv^(0+128)
  6465  05E6  0863               	movf	(??_UpdateClock+1)^(0+128),w
  6466  05E7  00A1               	movwf	(?___lldiv+1)^(0+128)
  6467  05E8  0D89               	rlf	9,f
  6468  05E9  3B89               	subwfb	9,f
  6469  05EA  0989               	comf	9,f
  6470  05EB  00A2               	movwf	(?___lldiv+2)^(0+128)
  6471  05EC  00A3               	movwf	(?___lldiv+3)^(0+128)
  6472  05ED  0022               	movlb	2	; select bank2
  6473  05EE  0847               	movf	(_UpdateClock$2776+3)^(0+256),w
  6474  05EF  0021               	movlb	1	; select bank1
  6475  05F0  00A7               	movwf	((?___lldiv+3)^(0+128)+4)
  6476  05F1  0022               	movlb	2	; select bank2
  6477  05F2  0846               	movf	(_UpdateClock$2776+2)^(0+256),w
  6478  05F3  0021               	movlb	1	; select bank1
  6479  05F4  00A6               	movwf	((?___lldiv+2)^(0+128)+4)
  6480  05F5  0022               	movlb	2	; select bank2
  6481  05F6  0845               	movf	(_UpdateClock$2776+1)^(0+256),w
  6482  05F7  0021               	movlb	1	; select bank1
  6483  05F8  00A5               	movwf	((?___lldiv+1)^(0+128)+4)
  6484  05F9  0022               	movlb	2	; select bank2
  6485  05FA  0844               	movf	_UpdateClock$2776^(0+256),w
  6486  05FB  0021               	movlb	1	; select bank1
  6487  05FC  00A4               	movwf	(?___lldiv^(0+128)+4)
  6488  05FD  319E  2632  3184   	fcall	___lldiv
  6489  0600  0021               	movlb	1	; select bank1
  6490  0601  0821               	movf	(?___lldiv^(0+128)+1),w
  6491  0602  0023               	movlb	3	; select bank3
  6492  0603  01E3               	clrf	(_Cfg+1)^(0+384)
  6493  0604  07E3               	addwf	(_Cfg+1)^(0+384),f
  6494  0605  0021               	movlb	1	; select bank1
  6495  0606  0820               	movf	?___lldiv^(0+128),w
  6496  0607  0023               	movlb	3	; select bank3
  6497  0608  01E2               	clrf	_Cfg^(0+384)
  6498  0609  07E2               	addwf	_Cfg^(0+384),f
  6499                           
  6500                           ;klondike.c: 324: CLOCK_LOW_CHG = 0b00000000000000000000000001000111 | ((CLOCK_R_VALUE &
      +                           0b11111) << 16) | ((CLOCK_F_VALUE & 0b1111111) << 21) | ((CLOCK_OD_VALUE & 0b11) << 28);
  6501  060A  3003               	movlw	3
  6502  060B  0022               	movlb	2	; select bank2
  6503  060C  0550               	andwf	UpdateClock@CLOCK_OD_VALUE^(0+256),w
  6504  060D  0021               	movlb	1	; select bank1
  6505  060E  00E2               	movwf	??_UpdateClock^(0+128)
  6506  060F  3000               	movlw	0
  6507  0610  0022               	movlb	2	; select bank2
  6508  0611  0551               	andwf	(UpdateClock@CLOCK_OD_VALUE+1)^(0+256),w
  6509  0612  0021               	movlb	1	; select bank1
  6510  0613  00E3               	movwf	(??_UpdateClock^(0+128)+1)
  6511  0614  3000               	movlw	0
  6512  0615  0022               	movlb	2	; select bank2
  6513  0616  0552               	andwf	(UpdateClock@CLOCK_OD_VALUE+2)^(0+256),w
  6514  0617  0021               	movlb	1	; select bank1
  6515  0618  00E4               	movwf	(??_UpdateClock^(0+128)+2)
  6516  0619  3000               	movlw	0
  6517  061A  0022               	movlb	2	; select bank2
  6518  061B  0553               	andwf	(UpdateClock@CLOCK_OD_VALUE+3)^(0+256),w
  6519  061C  0021               	movlb	1	; select bank1
  6520  061D  00E5               	movwf	(??_UpdateClock^(0+128)+3)
  6521  061E  301C               	movlw	28
  6522  061F                     u5525:	
  6523  061F  35E2               	lslf	??_UpdateClock^(0+128),f
  6524  0620  0DE3               	rlf	(??_UpdateClock^(0+128)+1),f
  6525  0621  0DE4               	rlf	(??_UpdateClock^(0+128)+2),f
  6526  0622  0DE5               	rlf	(??_UpdateClock^(0+128)+3),f
  6527  0623  0B89               	decfsz	9,f
  6528  0624  2E1F               	goto	u5525
  6529  0625  307F               	movlw	127
  6530  0626  0022               	movlb	2	; select bank2
  6531  0627  054C               	andwf	UpdateClock@CLOCK_F_VALUE^(0+256),w
  6532  0628  0021               	movlb	1	; select bank1
  6533  0629  00E6               	movwf	(??_UpdateClock+4)^(0+128)
  6534  062A  3000               	movlw	0
  6535  062B  0022               	movlb	2	; select bank2
  6536  062C  054D               	andwf	(UpdateClock@CLOCK_F_VALUE+1)^(0+256),w
  6537  062D  0021               	movlb	1	; select bank1
  6538  062E  00E7               	movwf	((??_UpdateClock+4)^(0+128)+1)
  6539  062F  3000               	movlw	0
  6540  0630  0022               	movlb	2	; select bank2
  6541  0631  054E               	andwf	(UpdateClock@CLOCK_F_VALUE+2)^(0+256),w
  6542  0632  0021               	movlb	1	; select bank1
  6543  0633  00E8               	movwf	((??_UpdateClock+4)^(0+128)+2)
  6544  0634  3000               	movlw	0
  6545  0635  0022               	movlb	2	; select bank2
  6546  0636  054F               	andwf	(UpdateClock@CLOCK_F_VALUE+3)^(0+256),w
  6547  0637  0021               	movlb	1	; select bank1
  6548  0638  00E9               	movwf	((??_UpdateClock+4)^(0+128)+3)
  6549  0639  3015               	movlw	21
  6550  063A                     u5535:	
  6551  063A  35E6               	lslf	(??_UpdateClock+4)^(0+128),f
  6552  063B  0DE7               	rlf	((??_UpdateClock+4)^(0+128)+1),f
  6553  063C  0DE8               	rlf	((??_UpdateClock+4)^(0+128)+2),f
  6554  063D  0DE9               	rlf	((??_UpdateClock+4)^(0+128)+3),f
  6555  063E  0B89               	decfsz	9,f
  6556  063F  2E3A               	goto	u5535
  6557  0640  301F               	movlw	31
  6558  0641  0022               	movlb	2	; select bank2
  6559  0642  0548               	andwf	UpdateClock@CLOCK_R_VALUE^(0+256),w
  6560  0643  0021               	movlb	1	; select bank1
  6561  0644  00EA               	movwf	(??_UpdateClock+8)^(0+128)
  6562  0645  3000               	movlw	0
  6563  0646  0022               	movlb	2	; select bank2
  6564  0647  0549               	andwf	(UpdateClock@CLOCK_R_VALUE+1)^(0+256),w
  6565  0648  0021               	movlb	1	; select bank1
  6566  0649  00EB               	movwf	((??_UpdateClock+8)^(0+128)+1)
  6567  064A  3000               	movlw	0
  6568  064B  0022               	movlb	2	; select bank2
  6569  064C  054A               	andwf	(UpdateClock@CLOCK_R_VALUE+2)^(0+256),w
  6570  064D  0021               	movlb	1	; select bank1
  6571  064E  00EC               	movwf	((??_UpdateClock+8)^(0+128)+2)
  6572  064F  3000               	movlw	0
  6573  0650  0022               	movlb	2	; select bank2
  6574  0651  054B               	andwf	(UpdateClock@CLOCK_R_VALUE+3)^(0+256),w
  6575  0652  0021               	movlb	1	; select bank1
  6576  0653  00ED               	movwf	((??_UpdateClock+8)^(0+128)+3)
  6577  0654  3010               	movlw	16
  6578  0655                     u5545:	
  6579  0655  35EA               	lslf	(??_UpdateClock+8)^(0+128),f
  6580  0656  0DEB               	rlf	((??_UpdateClock+8)^(0+128)+1),f
  6581  0657  0DEC               	rlf	((??_UpdateClock+8)^(0+128)+2),f
  6582  0658  0DED               	rlf	((??_UpdateClock+8)^(0+128)+3),f
  6583  0659  0B89               	decfsz	9,f
  6584  065A  2E55               	goto	u5545
  6585  065B  086A               	movf	(??_UpdateClock+8)^(0+128),w
  6586  065C  04E6               	iorwf	(??_UpdateClock+4)^(0+128),f
  6587  065D  086B               	movf	(??_UpdateClock+9)^(0+128),w
  6588  065E  04E7               	iorwf	((??_UpdateClock+4)^(0+128)+1),f
  6589  065F  086C               	movf	(??_UpdateClock+10)^(0+128),w
  6590  0660  04E8               	iorwf	((??_UpdateClock+4)^(0+128)+2),f
  6591  0661  086D               	movf	(??_UpdateClock+11)^(0+128),w
  6592  0662  04E9               	iorwf	((??_UpdateClock+4)^(0+128)+3),f
  6593  0663  0866               	movf	(??_UpdateClock+4)^(0+128),w
  6594  0664  04E2               	iorwf	??_UpdateClock^(0+128),f
  6595  0665  0867               	movf	(??_UpdateClock+5)^(0+128),w
  6596  0666  04E3               	iorwf	(??_UpdateClock^(0+128)+1),f
  6597  0667  0868               	movf	(??_UpdateClock+6)^(0+128),w
  6598  0668  04E4               	iorwf	(??_UpdateClock^(0+128)+2),f
  6599  0669  0869               	movf	(??_UpdateClock+7)^(0+128),w
  6600  066A  04E5               	iorwf	(??_UpdateClock^(0+128)+3),f
  6601  066B  3047               	movlw	71
  6602  066C  0462               	iorwf	??_UpdateClock^(0+128),w
  6603  066D  0023               	movlb	3	; select bank3
  6604  066E  00A6               	movwf	_CLOCK_LOW_CHG^(0+384)
  6605  066F  3000               	movlw	0
  6606  0670  0021               	movlb	1	; select bank1
  6607  0671  0463               	iorwf	(??_UpdateClock+1)^(0+128),w
  6608  0672  0023               	movlb	3	; select bank3
  6609  0673  00A7               	movwf	(_CLOCK_LOW_CHG+1)^(0+384)
  6610  0674  3000               	movlw	0
  6611  0675  0021               	movlb	1	; select bank1
  6612  0676  0464               	iorwf	(??_UpdateClock+2)^(0+128),w
  6613  0677  0023               	movlb	3	; select bank3
  6614  0678  00A8               	movwf	(_CLOCK_LOW_CHG+2)^(0+384)
  6615  0679  3000               	movlw	0
  6616  067A  0021               	movlb	1	; select bank1
  6617  067B  0465               	iorwf	(??_UpdateClock+3)^(0+128),w
  6618  067C  0023               	movlb	3	; select bank3
  6619  067D  00A9               	movwf	(_CLOCK_LOW_CHG+3)^(0+384)
  6620                           
  6621                           ;klondike.c: 326: ClockCfg[0] = CLOCK_LOW_CHG;
  6622  067E  0829               	movf	(_CLOCK_LOW_CHG+3)^(0+384),w
  6623  067F  00D5               	movwf	(_ClockCfg+3)^(0+384)
  6624  0680  0828               	movf	(_CLOCK_LOW_CHG+2)^(0+384),w
  6625  0681  00D4               	movwf	(_ClockCfg+2)^(0+384)
  6626  0682  0827               	movf	(_CLOCK_LOW_CHG+1)^(0+384),w
  6627  0683  00D3               	movwf	(_ClockCfg+1)^(0+384)
  6628  0684  0826               	movf	_CLOCK_LOW_CHG^(0+384),w
  6629  0685  00D2               	movwf	_ClockCfg^(0+384)
  6630                           
  6631                           ;klondike.c: 327: ClockCfg[1] = 0x00;
  6632  0686  3000               	movlw	0
  6633  0687  00D9               	movwf	((_ClockCfg+3)^(0+384)+4)
  6634  0688  3000               	movlw	0
  6635  0689  00D8               	movwf	((_ClockCfg+2)^(0+384)+4)
  6636  068A  3000               	movlw	0
  6637  068B  00D7               	movwf	((_ClockCfg+1)^(0+384)+4)
  6638  068C  3000               	movlw	0
  6639  068D  00D6               	movwf	(_ClockCfg^(0+384)+4)
  6640                           
  6641                           ;klondike.c: 328: HashTime = 256 - ((WORD)40000/Cfg.HashClock);
  6642  068E  0863               	movf	(_Cfg+1)^(0+384),w
  6643  068F  0020               	movlb	0	; select bank0
  6644  0690  01D9               	clrf	?___lwdiv+1
  6645  0691  07D9               	addwf	?___lwdiv+1,f
  6646  0692  0023               	movlb	3	; select bank3
  6647  0693  0862               	movf	_Cfg^(0+384),w
  6648  0694  0020               	movlb	0	; select bank0
  6649  0695  01D8               	clrf	?___lwdiv
  6650  0696  07D8               	addwf	?___lwdiv,f
  6651  0697  3040               	movlw	64
  6652  0698  00DA               	movwf	?___lwdiv+2
  6653  0699  309C               	movlw	156
  6654  069A  00DB               	movwf	?___lwdiv+3
  6655  069B  319B  23B5         	fcall	___lwdiv
  6656  069D  0020               	movlb	0	; select bank0
  6657  069E  0858               	movf	?___lwdiv,w
  6658  069F  3AFF               	xorlw	255
  6659  06A0  3E01               	addlw	1
  6660  06A1  0021               	movlb	1	; select bank1
  6661  06A2  00E2               	movwf	??_UpdateClock^(0+128)
  6662  06A3  0862               	movf	??_UpdateClock^(0+128),w
  6663  06A4  0022               	movlb	2	; select bank2
  6664  06A5  00A6               	movwf	_HashTime^(0+256)
  6665  06A6  0008               	return
  6666  06A7                     __end_of_UpdateClock:	
  6667                           
  6668                           	psect	text16
  6669  1BB5                     __ptext16:	
  6670 ;; *************** function ___lwdiv *****************
  6671 ;; Defined at:
  6672 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lwdiv.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;  divisor         2    8[BANK0 ] unsigned int 
  6675 ;;  dividend        2   10[BANK0 ] unsigned int 
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;  quotient        2   13[BANK0 ] unsigned int 
  6678 ;;  counter         1   15[BANK0 ] unsigned char 
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  2    8[BANK0 ] unsigned int 
  6681 ;; Registers used:
  6682 ;;		wreg, status,2, status,0
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6688 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;Total ram usage:        8 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; Hardware stack levels required when called:    4
  6695 ;; This function calls:
  6696 ;;		Nothing
  6697 ;; This function is called by:
  6698 ;;		_UpdateClock
  6699 ;; This function uses a non-reentrant model
  6700 ;;
  6701                           
  6702                           
  6703                           ;psect for function ___lwdiv
  6704  1BB5                     ___lwdiv:	
  6705                           
  6706                           ;incstack = 0
  6707                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6708  1BB5  0020               	movlb	0	; select bank0
  6709  1BB6  01DD               	clrf	___lwdiv@quotient
  6710  1BB7  01DE               	clrf	___lwdiv@quotient+1
  6711  1BB8  0859               	movf	___lwdiv@divisor+1,w
  6712  1BB9  0458               	iorwf	___lwdiv@divisor,w
  6713  1BBA  1903               	skipnz
  6714  1BBB  2BE5               	goto	l6353
  6715  1BBC  01DF               	clrf	___lwdiv@counter
  6716  1BBD  0ADF               	incf	___lwdiv@counter,f
  6717  1BBE                     l6341:	
  6718  1BBE  1BD9               	btfsc	___lwdiv@divisor+1,7
  6719  1BBF  2BCA               	goto	l6343
  6720  1BC0  3001               	movlw	1
  6721  1BC1                     u6825:	
  6722  1BC1  35D8               	lslf	___lwdiv@divisor,f
  6723  1BC2  0DD9               	rlf	___lwdiv@divisor+1,f
  6724  1BC3  0B89               	decfsz	9,f
  6725  1BC4  2BC1               	goto	u6825
  6726  1BC5  3001               	movlw	1
  6727  1BC6  00DC               	movwf	??___lwdiv
  6728  1BC7  085C               	movf	??___lwdiv,w
  6729  1BC8  07DF               	addwf	___lwdiv@counter,f
  6730  1BC9  2BBE               	goto	l6341
  6731  1BCA                     l6343:	
  6732  1BCA  3001               	movlw	1
  6733  1BCB                     u6845:	
  6734  1BCB  35DD               	lslf	___lwdiv@quotient,f
  6735  1BCC  0DDE               	rlf	___lwdiv@quotient+1,f
  6736  1BCD  0B89               	decfsz	9,f
  6737  1BCE  2BCB               	goto	u6845
  6738  1BCF  0859               	movf	___lwdiv@divisor+1,w
  6739  1BD0  025B               	subwf	___lwdiv@dividend+1,w
  6740  1BD1  1D03               	skipz
  6741  1BD2  2BD5               	goto	u6855
  6742  1BD3  0858               	movf	___lwdiv@divisor,w
  6743  1BD4  025A               	subwf	___lwdiv@dividend,w
  6744  1BD5                     u6855:	
  6745  1BD5  1C03               	skipc
  6746  1BD6  2BDC               	goto	l6349
  6747  1BD7  0858               	movf	___lwdiv@divisor,w
  6748  1BD8  02DA               	subwf	___lwdiv@dividend,f
  6749  1BD9  0859               	movf	___lwdiv@divisor+1,w
  6750  1BDA  3BDB               	subwfb	___lwdiv@dividend+1,f
  6751  1BDB  145D               	bsf	___lwdiv@quotient,0
  6752  1BDC                     l6349:	
  6753  1BDC  3001               	movlw	1
  6754  1BDD                     u6865:	
  6755  1BDD  36D9               	lsrf	___lwdiv@divisor+1,f
  6756  1BDE  0CD8               	rrf	___lwdiv@divisor,f
  6757  1BDF  0B89               	decfsz	9,f
  6758  1BE0  2BDD               	goto	u6865
  6759  1BE1  3001               	movlw	1
  6760  1BE2  02DF               	subwf	___lwdiv@counter,f
  6761  1BE3  1D03               	btfss	3,2
  6762  1BE4  2BCA               	goto	l6343
  6763  1BE5                     l6353:	
  6764  1BE5  085E               	movf	___lwdiv@quotient+1,w
  6765  1BE6  01D9               	clrf	?___lwdiv+1
  6766  1BE7  07D9               	addwf	?___lwdiv+1,f
  6767  1BE8  085D               	movf	___lwdiv@quotient,w
  6768  1BE9  01D8               	clrf	?___lwdiv
  6769  1BEA  07D8               	addwf	?___lwdiv,f
  6770  1BEB  0008               	return
  6771  1BEC                     __end_of___lwdiv:	
  6772                           
  6773                           	psect	text17
  6774  1B85                     __ptext17:	
  6775 ;; *************** function ___lmul *****************
  6776 ;; Defined at:
  6777 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lmul.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;  multiplier      4    8[BANK0 ] unsigned long 
  6780 ;;  multiplicand    4   12[BANK0 ] unsigned long 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;  product         4   16[BANK0 ] unsigned long 
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  4    8[BANK0 ] unsigned long 
  6785 ;; Registers used:
  6786 ;;		wreg, status,2, status,0
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6792 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6793 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6795 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6796 ;;Total ram usage:       12 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; Hardware stack levels required when called:    4
  6799 ;; This function calls:
  6800 ;;		Nothing
  6801 ;; This function is called by:
  6802 ;;		_UpdateClock
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           
  6807                           ;psect for function ___lmul
  6808  1B85                     ___lmul:	
  6809                           
  6810                           ;incstack = 0
  6811                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6812  1B85  3000               	movlw	0
  6813  1B86  0020               	movlb	0	; select bank0
  6814  1B87  00E3               	movwf	___lmul@product+3
  6815  1B88  3000               	movlw	0
  6816  1B89  00E2               	movwf	___lmul@product+2
  6817  1B8A  3000               	movlw	0
  6818  1B8B  00E1               	movwf	___lmul@product+1
  6819  1B8C  3000               	movlw	0
  6820  1B8D  00E0               	movwf	___lmul@product
  6821  1B8E                     l6319:	
  6822  1B8E  1C58               	btfss	___lmul@multiplier,0
  6823  1B8F  2B98               	goto	l6323
  6824  1B90  085C               	movf	___lmul@multiplicand,w
  6825  1B91  07E0               	addwf	___lmul@product,f
  6826  1B92  085D               	movf	___lmul@multiplicand+1,w
  6827  1B93  3DE1               	addwfc	___lmul@product+1,f
  6828  1B94  085E               	movf	___lmul@multiplicand+2,w
  6829  1B95  3DE2               	addwfc	___lmul@product+2,f
  6830  1B96  085F               	movf	___lmul@multiplicand+3,w
  6831  1B97  3DE3               	addwfc	___lmul@product+3,f
  6832  1B98                     l6323:	
  6833  1B98  3001               	movlw	1
  6834  1B99                     u6785:	
  6835  1B99  35DC               	lslf	___lmul@multiplicand,f
  6836  1B9A  0DDD               	rlf	___lmul@multiplicand+1,f
  6837  1B9B  0DDE               	rlf	___lmul@multiplicand+2,f
  6838  1B9C  0DDF               	rlf	___lmul@multiplicand+3,f
  6839  1B9D  0B89               	decfsz	9,f
  6840  1B9E  2B99               	goto	u6785
  6841  1B9F  3001               	movlw	1
  6842  1BA0                     u6795:	
  6843  1BA0  36DB               	lsrf	___lmul@multiplier+3,f
  6844  1BA1  0CDA               	rrf	___lmul@multiplier+2,f
  6845  1BA2  0CD9               	rrf	___lmul@multiplier+1,f
  6846  1BA3  0CD8               	rrf	___lmul@multiplier,f
  6847  1BA4  0B89               	decfsz	9,f
  6848  1BA5  2BA0               	goto	u6795
  6849  1BA6  085B               	movf	___lmul@multiplier+3,w
  6850  1BA7  045A               	iorwf	___lmul@multiplier+2,w
  6851  1BA8  0459               	iorwf	___lmul@multiplier+1,w
  6852  1BA9  0458               	iorwf	___lmul@multiplier,w
  6853  1BAA  1D03               	skipz
  6854  1BAB  2B8E               	goto	l6319
  6855  1BAC  0863               	movf	___lmul@product+3,w
  6856  1BAD  00DB               	movwf	?___lmul+3
  6857  1BAE  0862               	movf	___lmul@product+2,w
  6858  1BAF  00DA               	movwf	?___lmul+2
  6859  1BB0  0861               	movf	___lmul@product+1,w
  6860  1BB1  00D9               	movwf	?___lmul+1
  6861  1BB2  0860               	movf	___lmul@product,w
  6862  1BB3  00D8               	movwf	?___lmul
  6863  1BB4  0008               	return
  6864  1BB5                     __end_of___lmul:	
  6865                           
  6866                           	psect	text18
  6867  1B2E                     __ptext18:	
  6868 ;; *************** function ___lltoft *****************
  6869 ;; Defined at:
  6870 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lltoft.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  c               4   16[BANK0 ] unsigned long 
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;  exp             1   21[BANK0 ] unsigned char 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  3   16[BANK0 ] float 
  6877 ;; Registers used:
  6878 ;;		wreg, status,2, status,0, pclath, cstack
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6884 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6886 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6887 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6888 ;;Total ram usage:        6 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; Hardware stack levels required when called:    5
  6891 ;; This function calls:
  6892 ;;		___ftpack
  6893 ;; This function is called by:
  6894 ;;		_UpdateClock
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           
  6899                           ;psect for function ___lltoft
  6900  1B2E                     ___lltoft:	
  6901                           
  6902                           ;incstack = 0
  6903                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  6904  1B2E  308E               	movlw	142
  6905  1B2F  0020               	movlb	0	; select bank0
  6906  1B30  00E4               	movwf	??___lltoft
  6907  1B31  0864               	movf	??___lltoft,w
  6908  1B32  00E5               	movwf	___lltoft@exp
  6909  1B33                     l6311:	
  6910  1B33  30FF               	movlw	255
  6911  1B34  0563               	andwf	___lltoft@c+3,w
  6912  1B35  1903               	btfsc	3,2
  6913  1B36  2B43               	goto	l6313
  6914  1B37  3001               	movlw	1
  6915  1B38                     u6755:	
  6916  1B38  36E3               	lsrf	___lltoft@c+3,f
  6917  1B39  0CE2               	rrf	___lltoft@c+2,f
  6918  1B3A  0CE1               	rrf	___lltoft@c+1,f
  6919  1B3B  0CE0               	rrf	___lltoft@c,f
  6920  1B3C  0B89               	decfsz	9,f
  6921  1B3D  2B38               	goto	u6755
  6922  1B3E  3001               	movlw	1
  6923  1B3F  00E4               	movwf	??___lltoft
  6924  1B40  0864               	movf	??___lltoft,w
  6925  1B41  07E5               	addwf	___lltoft@exp,f
  6926  1B42  2B33               	goto	l6311
  6927  1B43                     l6313:	
  6928  1B43  0860               	movf	___lltoft@c,w
  6929  1B44  00D8               	movwf	?___ftpack
  6930  1B45  0861               	movf	___lltoft@c+1,w
  6931  1B46  00D9               	movwf	?___ftpack+1
  6932  1B47  0862               	movf	___lltoft@c+2,w
  6933  1B48  00DA               	movwf	?___ftpack+2
  6934  1B49  0865               	movf	___lltoft@exp,w
  6935  1B4A  00E4               	movwf	??___lltoft
  6936  1B4B  0864               	movf	??___lltoft,w
  6937  1B4C  00DB               	movwf	?___ftpack+3
  6938  1B4D  01DC               	clrf	?___ftpack+4
  6939  1B4E  319F  279F         	fcall	___ftpack
  6940  1B50  0020               	movlb	0	; select bank0
  6941  1B51  0858               	movf	?___ftpack,w
  6942  1B52  00E0               	movwf	?___lltoft
  6943  1B53  0859               	movf	?___ftpack+1,w
  6944  1B54  00E1               	movwf	?___lltoft+1
  6945  1B55  085A               	movf	?___ftpack+2,w
  6946  1B56  00E2               	movwf	?___lltoft+2
  6947  1B57  0008               	return
  6948  1B58                     __end_of___lltoft:	
  6949                           
  6950                           	psect	text19
  6951  1E32                     __ptext19:	
  6952 ;; *************** function ___lldiv *****************
  6953 ;; Defined at:
  6954 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lldiv.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;  divisor         4    0[BANK1 ] unsigned long 
  6957 ;;  dividend        4    4[BANK1 ] unsigned long 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;  quotient        4    8[BANK1 ] unsigned long 
  6960 ;;  counter         1   12[BANK1 ] unsigned char 
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  4    0[BANK1 ] unsigned long 
  6963 ;; Registers used:
  6964 ;;		wreg, status,2, status,0
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6970 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6971 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6972 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6973 ;;      Totals:         0       1      13       0       0       0       0       0       0       0       0       0       
      +0       0
  6974 ;;Total ram usage:       14 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; Hardware stack levels required when called:    4
  6977 ;; This function calls:
  6978 ;;		Nothing
  6979 ;; This function is called by:
  6980 ;;		_UpdateClock
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984                           
  6985                           ;psect for function ___lldiv
  6986  1E32                     ___lldiv:	
  6987                           
  6988                           ;incstack = 0
  6989                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6990  1E32  3000               	movlw	0
  6991  1E33  0021               	movlb	1	; select bank1
  6992  1E34  00AB               	movwf	(___lldiv@quotient+3)^(0+128)
  6993  1E35  3000               	movlw	0
  6994  1E36  00AA               	movwf	(___lldiv@quotient+2)^(0+128)
  6995  1E37  3000               	movlw	0
  6996  1E38  00A9               	movwf	(___lldiv@quotient+1)^(0+128)
  6997  1E39  3000               	movlw	0
  6998  1E3A  00A8               	movwf	___lldiv@quotient^(0+128)
  6999  1E3B  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  7000  1E3C  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  7001  1E3D  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  7002  1E3E  0420               	iorwf	___lldiv@divisor^(0+128),w
  7003  1E3F  1903               	skipnz
  7004  1E40  2E7E               	goto	l6303
  7005  1E41  01AC               	clrf	___lldiv@counter^(0+128)
  7006  1E42  0AAC               	incf	___lldiv@counter^(0+128),f
  7007  1E43                     l6289:	
  7008  1E43  1BA3               	btfsc	(___lldiv@divisor+3)^(0+128),7
  7009  1E44  2E53               	goto	l6291
  7010  1E45  3001               	movlw	1
  7011  1E46                     u6695:	
  7012  1E46  35A0               	lslf	___lldiv@divisor^(0+128),f
  7013  1E47  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  7014  1E48  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  7015  1E49  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  7016  1E4A  0B89               	decfsz	9,f
  7017  1E4B  2E46               	goto	u6695
  7018  1E4C  3001               	movlw	1
  7019  1E4D  0020               	movlb	0	; select bank0
  7020  1E4E  00E4               	movwf	??___lldiv
  7021  1E4F  0864               	movf	??___lldiv,w
  7022  1E50  0021               	movlb	1	; select bank1
  7023  1E51  07AC               	addwf	___lldiv@counter^(0+128),f
  7024  1E52  2E43               	goto	l6289
  7025  1E53                     l6291:	
  7026  1E53  3001               	movlw	1
  7027  1E54                     u6715:	
  7028  1E54  35A8               	lslf	___lldiv@quotient^(0+128),f
  7029  1E55  0DA9               	rlf	(___lldiv@quotient+1)^(0+128),f
  7030  1E56  0DAA               	rlf	(___lldiv@quotient+2)^(0+128),f
  7031  1E57  0DAB               	rlf	(___lldiv@quotient+3)^(0+128),f
  7032  1E58  0B89               	decfsz	9,f
  7033  1E59  2E54               	goto	u6715
  7034  1E5A  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  7035  1E5B  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  7036  1E5C  1D03               	skipz
  7037  1E5D  2E68               	goto	u6725
  7038  1E5E  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  7039  1E5F  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  7040  1E60  1D03               	skipz
  7041  1E61  2E68               	goto	u6725
  7042  1E62  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  7043  1E63  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  7044  1E64  1D03               	skipz
  7045  1E65  2E68               	goto	u6725
  7046  1E66  0820               	movf	___lldiv@divisor^(0+128),w
  7047  1E67  0224               	subwf	___lldiv@dividend^(0+128),w
  7048  1E68                     u6725:	
  7049  1E68  1C03               	skipc
  7050  1E69  2E73               	goto	l6299
  7051  1E6A  0820               	movf	___lldiv@divisor^(0+128),w
  7052  1E6B  02A4               	subwf	___lldiv@dividend^(0+128),f
  7053  1E6C  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  7054  1E6D  3BA5               	subwfb	(___lldiv@dividend+1)^(0+128),f
  7055  1E6E  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  7056  1E6F  3BA6               	subwfb	(___lldiv@dividend+2)^(0+128),f
  7057  1E70  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  7058  1E71  3BA7               	subwfb	(___lldiv@dividend+3)^(0+128),f
  7059  1E72  1428               	bsf	___lldiv@quotient^(0+128),0
  7060  1E73                     l6299:	
  7061  1E73  3001               	movlw	1
  7062  1E74                     u6735:	
  7063  1E74  36A3               	lsrf	(___lldiv@divisor+3)^(0+128),f
  7064  1E75  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  7065  1E76  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  7066  1E77  0CA0               	rrf	___lldiv@divisor^(0+128),f
  7067  1E78  0B89               	decfsz	9,f
  7068  1E79  2E74               	goto	u6735
  7069  1E7A  3001               	movlw	1
  7070  1E7B  02AC               	subwf	___lldiv@counter^(0+128),f
  7071  1E7C  1D03               	btfss	3,2
  7072  1E7D  2E53               	goto	l6291
  7073  1E7E                     l6303:	
  7074  1E7E  082B               	movf	(___lldiv@quotient+3)^(0+128),w
  7075  1E7F  00A3               	movwf	(?___lldiv+3)^(0+128)
  7076  1E80  082A               	movf	(___lldiv@quotient+2)^(0+128),w
  7077  1E81  00A2               	movwf	(?___lldiv+2)^(0+128)
  7078  1E82  0829               	movf	(___lldiv@quotient+1)^(0+128),w
  7079  1E83  00A1               	movwf	(?___lldiv+1)^(0+128)
  7080  1E84  0828               	movf	___lldiv@quotient^(0+128),w
  7081  1E85  00A0               	movwf	?___lldiv^(0+128)
  7082  1E86  0008               	return
  7083  1E87                     __end_of___lldiv:	
  7084                           
  7085                           	psect	text20
  7086  0A60                     __ptext20:	
  7087 ;; *************** function ___ftdiv *****************
  7088 ;; Defined at:
  7089 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\ftdiv.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;  f2              3   32[BANK1 ] float 
  7092 ;;  f1              3   35[BANK1 ] float 
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;  f3              3   43[BANK1 ] float 
  7095 ;;  sign            1   47[BANK1 ] unsigned char 
  7096 ;;  exp             1   46[BANK1 ] unsigned char 
  7097 ;;  cntr            1   42[BANK1 ] unsigned char 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;                  3   32[BANK1 ] float 
  7100 ;; Registers used:
  7101 ;;		wreg, status,2, status,0, pclath, cstack
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7107 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7109 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7110 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;Total ram usage:       16 bytes
  7112 ;; Hardware stack levels used:    1
  7113 ;; Hardware stack levels required when called:    5
  7114 ;; This function calls:
  7115 ;;		___ftpack
  7116 ;; This function is called by:
  7117 ;;		_UpdateClock
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           
  7122                           ;psect for function ___ftdiv
  7123  0A60                     ___ftdiv:	
  7124                           
  7125                           ;incstack = 0
  7126                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7127  0A60  0021               	movlb	1	; select bank1
  7128  0A61  0843               	movf	___ftdiv@f1^(0+128),w
  7129  0A62  00C6               	movwf	??___ftdiv^(0+128)
  7130  0A63  0844               	movf	(___ftdiv@f1+1)^(0+128),w
  7131  0A64  00C7               	movwf	(??___ftdiv^(0+128)+1)
  7132  0A65  0845               	movf	(___ftdiv@f1+2)^(0+128),w
  7133  0A66  00C8               	movwf	(??___ftdiv^(0+128)+2)
  7134  0A67  1003               	clrc
  7135  0A68  0D47               	rlf	(??___ftdiv^(0+128)+1),w
  7136  0A69  0D48               	rlf	(??___ftdiv^(0+128)+2),w
  7137  0A6A  00C9               	movwf	(??___ftdiv+3)^(0+128)
  7138  0A6B  0849               	movf	(??___ftdiv+3)^(0+128),w
  7139  0A6C  00CE               	movwf	___ftdiv@exp^(0+128)
  7140  0A6D  08CE               	movf	___ftdiv@exp^(0+128),f
  7141  0A6E  1D03               	skipz
  7142  0A6F  2A77               	goto	l6145
  7143  0A70  3000               	movlw	0
  7144  0A71  00C0               	movwf	?___ftdiv^(0+128)
  7145  0A72  3000               	movlw	0
  7146  0A73  00C1               	movwf	(?___ftdiv+1)^(0+128)
  7147  0A74  3000               	movlw	0
  7148  0A75  00C2               	movwf	(?___ftdiv+2)^(0+128)
  7149  0A76  0008               	return
  7150  0A77                     l6145:	
  7151  0A77  0840               	movf	___ftdiv@f2^(0+128),w
  7152  0A78  00C6               	movwf	??___ftdiv^(0+128)
  7153  0A79  0841               	movf	(___ftdiv@f2+1)^(0+128),w
  7154  0A7A  00C7               	movwf	(??___ftdiv^(0+128)+1)
  7155  0A7B  0842               	movf	(___ftdiv@f2+2)^(0+128),w
  7156  0A7C  00C8               	movwf	(??___ftdiv^(0+128)+2)
  7157  0A7D  1003               	clrc
  7158  0A7E  0D47               	rlf	(??___ftdiv^(0+128)+1),w
  7159  0A7F  0D48               	rlf	(??___ftdiv^(0+128)+2),w
  7160  0A80  00C9               	movwf	(??___ftdiv+3)^(0+128)
  7161  0A81  0849               	movf	(??___ftdiv+3)^(0+128),w
  7162  0A82  00CF               	movwf	___ftdiv@sign^(0+128)
  7163  0A83  08CF               	movf	___ftdiv@sign^(0+128),f
  7164  0A84  1D03               	skipz
  7165  0A85  2A8D               	goto	l6151
  7166  0A86  3000               	movlw	0
  7167  0A87  00C0               	movwf	?___ftdiv^(0+128)
  7168  0A88  3000               	movlw	0
  7169  0A89  00C1               	movwf	(?___ftdiv+1)^(0+128)
  7170  0A8A  3000               	movlw	0
  7171  0A8B  00C2               	movwf	(?___ftdiv+2)^(0+128)
  7172  0A8C  0008               	return
  7173  0A8D                     l6151:	
  7174  0A8D  3000               	movlw	0
  7175  0A8E  00CB               	movwf	___ftdiv@f3^(0+128)
  7176  0A8F  3000               	movlw	0
  7177  0A90  00CC               	movwf	(___ftdiv@f3+1)^(0+128)
  7178  0A91  3000               	movlw	0
  7179  0A92  00CD               	movwf	(___ftdiv@f3+2)^(0+128)
  7180  0A93  3089               	movlw	137
  7181  0A94  074F               	addwf	___ftdiv@sign^(0+128),w
  7182  0A95  00C6               	movwf	??___ftdiv^(0+128)
  7183  0A96  0846               	movf	??___ftdiv^(0+128),w
  7184  0A97  02CE               	subwf	___ftdiv@exp^(0+128),f
  7185  0A98  0843               	movf	___ftdiv@f1^(0+128),w
  7186  0A99  00C6               	movwf	??___ftdiv^(0+128)
  7187  0A9A  0844               	movf	(___ftdiv@f1+1)^(0+128),w
  7188  0A9B  00C7               	movwf	(??___ftdiv^(0+128)+1)
  7189  0A9C  0845               	movf	(___ftdiv@f1+2)^(0+128),w
  7190  0A9D  00C8               	movwf	(??___ftdiv^(0+128)+2)
  7191  0A9E  3010               	movlw	16
  7192  0A9F                     u6395:	
  7193  0A9F  36C8               	lsrf	(??___ftdiv^(0+128)+2),f
  7194  0AA0  0CC7               	rrf	(??___ftdiv^(0+128)+1),f
  7195  0AA1  0CC6               	rrf	??___ftdiv^(0+128),f
  7196  0AA2  0B89               	decfsz	9,f
  7197  0AA3  2A9F               	goto	u6395
  7198  0AA4  0846               	movf	??___ftdiv^(0+128),w
  7199  0AA5  00C9               	movwf	(??___ftdiv+3)^(0+128)
  7200  0AA6  0849               	movf	(??___ftdiv+3)^(0+128),w
  7201  0AA7  00CF               	movwf	___ftdiv@sign^(0+128)
  7202  0AA8  0840               	movf	___ftdiv@f2^(0+128),w
  7203  0AA9  00C6               	movwf	??___ftdiv^(0+128)
  7204  0AAA  0841               	movf	(___ftdiv@f2+1)^(0+128),w
  7205  0AAB  00C7               	movwf	(??___ftdiv^(0+128)+1)
  7206  0AAC  0842               	movf	(___ftdiv@f2+2)^(0+128),w
  7207  0AAD  00C8               	movwf	(??___ftdiv^(0+128)+2)
  7208  0AAE  3010               	movlw	16
  7209  0AAF                     u6405:	
  7210  0AAF  36C8               	lsrf	(??___ftdiv^(0+128)+2),f
  7211  0AB0  0CC7               	rrf	(??___ftdiv^(0+128)+1),f
  7212  0AB1  0CC6               	rrf	??___ftdiv^(0+128),f
  7213  0AB2  0B89               	decfsz	9,f
  7214  0AB3  2AAF               	goto	u6405
  7215  0AB4  0846               	movf	??___ftdiv^(0+128),w
  7216  0AB5  00C9               	movwf	(??___ftdiv+3)^(0+128)
  7217  0AB6  0849               	movf	(??___ftdiv+3)^(0+128),w
  7218  0AB7  06CF               	xorwf	___ftdiv@sign^(0+128),f
  7219  0AB8  3080               	movlw	128
  7220  0AB9  00C6               	movwf	??___ftdiv^(0+128)
  7221  0ABA  0846               	movf	??___ftdiv^(0+128),w
  7222  0ABB  05CF               	andwf	___ftdiv@sign^(0+128),f
  7223  0ABC  17C4               	bsf	(___ftdiv@f1^(0+128)+1),7
  7224  0ABD  30FF               	movlw	255
  7225  0ABE  05C3               	andwf	___ftdiv@f1^(0+128),f
  7226  0ABF  30FF               	movlw	255
  7227  0AC0  05C4               	andwf	(___ftdiv@f1+1)^(0+128),f
  7228  0AC1  3000               	movlw	0
  7229  0AC2  05C5               	andwf	(___ftdiv@f1+2)^(0+128),f
  7230  0AC3  17C1               	bsf	(___ftdiv@f2^(0+128)+1),7
  7231  0AC4  30FF               	movlw	255
  7232  0AC5  05C0               	andwf	___ftdiv@f2^(0+128),f
  7233  0AC6  30FF               	movlw	255
  7234  0AC7  05C1               	andwf	(___ftdiv@f2+1)^(0+128),f
  7235  0AC8  3000               	movlw	0
  7236  0AC9  05C2               	andwf	(___ftdiv@f2+2)^(0+128),f
  7237  0ACA  3018               	movlw	24
  7238  0ACB  00C6               	movwf	??___ftdiv^(0+128)
  7239  0ACC  0846               	movf	??___ftdiv^(0+128),w
  7240  0ACD  00CA               	movwf	___ftdiv@cntr^(0+128)
  7241  0ACE                     l6165:	
  7242  0ACE  3001               	movlw	1
  7243  0ACF                     u6415:	
  7244  0ACF  35CB               	lslf	___ftdiv@f3^(0+128),f
  7245  0AD0  0DCC               	rlf	(___ftdiv@f3+1)^(0+128),f
  7246  0AD1  0DCD               	rlf	(___ftdiv@f3+2)^(0+128),f
  7247  0AD2  0B89               	decfsz	9,f
  7248  0AD3  2ACF               	goto	u6415
  7249  0AD4  0842               	movf	(___ftdiv@f2+2)^(0+128),w
  7250  0AD5  0245               	subwf	(___ftdiv@f1+2)^(0+128),w
  7251  0AD6  1D03               	skipz
  7252  0AD7  2ADE               	goto	u6425
  7253  0AD8  0841               	movf	(___ftdiv@f2+1)^(0+128),w
  7254  0AD9  0244               	subwf	(___ftdiv@f1+1)^(0+128),w
  7255  0ADA  1D03               	skipz
  7256  0ADB  2ADE               	goto	u6425
  7257  0ADC  0840               	movf	___ftdiv@f2^(0+128),w
  7258  0ADD  0243               	subwf	___ftdiv@f1^(0+128),w
  7259  0ADE                     u6425:	
  7260  0ADE  1C03               	skipc
  7261  0ADF  2AE7               	goto	l6173
  7262  0AE0  0840               	movf	___ftdiv@f2^(0+128),w
  7263  0AE1  02C3               	subwf	___ftdiv@f1^(0+128),f
  7264  0AE2  0841               	movf	(___ftdiv@f2+1)^(0+128),w
  7265  0AE3  3BC4               	subwfb	(___ftdiv@f1+1)^(0+128),f
  7266  0AE4  0842               	movf	(___ftdiv@f2+2)^(0+128),w
  7267  0AE5  3BC5               	subwfb	(___ftdiv@f1+2)^(0+128),f
  7268  0AE6  144B               	bsf	___ftdiv@f3^(0+128),0
  7269  0AE7                     l6173:	
  7270  0AE7  3001               	movlw	1
  7271  0AE8                     u6435:	
  7272  0AE8  35C3               	lslf	___ftdiv@f1^(0+128),f
  7273  0AE9  0DC4               	rlf	(___ftdiv@f1+1)^(0+128),f
  7274  0AEA  0DC5               	rlf	(___ftdiv@f1+2)^(0+128),f
  7275  0AEB  0B89               	decfsz	9,f
  7276  0AEC  2AE8               	goto	u6435
  7277  0AED  3001               	movlw	1
  7278  0AEE  02CA               	subwf	___ftdiv@cntr^(0+128),f
  7279  0AEF  1D03               	btfss	3,2
  7280  0AF0  2ACE               	goto	l6165
  7281  0AF1  084B               	movf	___ftdiv@f3^(0+128),w
  7282  0AF2  0020               	movlb	0	; select bank0
  7283  0AF3  00D8               	movwf	?___ftpack
  7284  0AF4  0021               	movlb	1	; select bank1
  7285  0AF5  084C               	movf	(___ftdiv@f3+1)^(0+128),w
  7286  0AF6  0020               	movlb	0	; select bank0
  7287  0AF7  00D9               	movwf	?___ftpack+1
  7288  0AF8  0021               	movlb	1	; select bank1
  7289  0AF9  084D               	movf	(___ftdiv@f3+2)^(0+128),w
  7290  0AFA  0020               	movlb	0	; select bank0
  7291  0AFB  00DA               	movwf	?___ftpack+2
  7292  0AFC  0021               	movlb	1	; select bank1
  7293  0AFD  084E               	movf	___ftdiv@exp^(0+128),w
  7294  0AFE  00C6               	movwf	??___ftdiv^(0+128)
  7295  0AFF  0846               	movf	??___ftdiv^(0+128),w
  7296  0B00  0020               	movlb	0	; select bank0
  7297  0B01  00DB               	movwf	?___ftpack+3
  7298  0B02  0021               	movlb	1	; select bank1
  7299  0B03  084F               	movf	___ftdiv@sign^(0+128),w
  7300  0B04  00C7               	movwf	(??___ftdiv+1)^(0+128)
  7301  0B05  0847               	movf	(??___ftdiv+1)^(0+128),w
  7302  0B06  0020               	movlb	0	; select bank0
  7303  0B07  00DC               	movwf	?___ftpack+4
  7304  0B08  319F  279F         	fcall	___ftpack
  7305  0B0A  0020               	movlb	0	; select bank0
  7306  0B0B  0858               	movf	?___ftpack,w
  7307  0B0C  0021               	movlb	1	; select bank1
  7308  0B0D  00C0               	movwf	?___ftdiv^(0+128)
  7309  0B0E  0020               	movlb	0	; select bank0
  7310  0B0F  0859               	movf	?___ftpack+1,w
  7311  0B10  0021               	movlb	1	; select bank1
  7312  0B11  00C1               	movwf	(?___ftdiv+1)^(0+128)
  7313  0B12  0020               	movlb	0	; select bank0
  7314  0B13  085A               	movf	?___ftpack+2,w
  7315  0B14  0021               	movlb	1	; select bank1
  7316  0B15  00C2               	movwf	(?___ftdiv+2)^(0+128)
  7317  0B16  0008               	return
  7318  0B17                     __end_of___ftdiv:	
  7319                           
  7320                           	psect	text21
  7321  1972                     __ptext21:	
  7322 ;; *************** function _InitTempSensor *****************
  7323 ;; Defined at:
  7324 ;;		line 241 in file "klondike.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;		None
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;		None
  7329 ;; Return value:  Size  Location     Type
  7330 ;;		None               void
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7340 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7341 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7342 ;;Total ram usage:        1 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    4
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_UserInit
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           
  7353                           ;psect for function _InitTempSensor
  7354  1972                     _InitTempSensor:	
  7355                           
  7356                           ;klondike.c: 242: TRISCbits.TRISC2=1;
  7357                           
  7358                           ;incstack = 0
  7359                           ; Regs used in _InitTempSensor: [wreg+status,2+status,0]
  7360  1972  0021               	movlb	1	; select bank1
  7361  1973  150E               	bsf	14,2	;volatile
  7362                           
  7363                           ;klondike.c: 245: ADCON0bits.CHS = 6;
  7364  1974  081D               	movf	29,w	;volatile
  7365  1975  3983               	andlw	-125
  7366  1976  3818               	iorlw	24
  7367  1977  009D               	movwf	29	;volatile
  7368                           
  7369                           ;klondike.c: 246: ADCON0bits.ADON = 1;
  7370  1978  141D               	bsf	29,0	;volatile
  7371                           
  7372                           ;klondike.c: 247: ADCON1bits.ADFM = 0;
  7373  1979  139E               	bcf	30,7	;volatile
  7374                           
  7375                           ;klondike.c: 248: ADCON1bits.ADCS = 6;
  7376  197A  081E               	movf	30,w	;volatile
  7377  197B  398F               	andlw	-113
  7378  197C  3860               	iorlw	96
  7379  197D  009E               	movwf	30	;volatile
  7380                           
  7381                           ;klondike.c: 249: ADCON1bits.ADPREF = 0;
  7382  197E  30FC               	movlw	-4
  7383  197F  059E               	andwf	30,f	;volatile
  7384                           
  7385                           ;klondike.c: 250: ADCON2bits.TRIGSEL = 0;
  7386  1980  308F               	movlw	-113
  7387  1981  059F               	andwf	31,f	;volatile
  7388                           
  7389                           ;klondike.c: 251: TempTarget = 143;
  7390  1982  308F               	movlw	143
  7391  1983  0020               	movlb	0	; select bank0
  7392  1984  00D8               	movwf	??_InitTempSensor
  7393  1985  0858               	movf	??_InitTempSensor,w
  7394  1986  0023               	movlb	3	; select bank3
  7395  1987  00E9               	movwf	_TempTarget^(0+384)
  7396  1988  0008               	return
  7397  1989                     __end_of_InitTempSensor:	
  7398                           
  7399                           	psect	text22
  7400  1A0A                     __ptext22:	
  7401 ;; *************** function _InitFAN *****************
  7402 ;; Defined at:
  7403 ;;		line 221 in file "klondike.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;		None
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;		None
  7408 ;; Return value:  Size  Location     Type
  7409 ;;		None               void
  7410 ;; Registers used:
  7411 ;;		wreg, status,2, status,0
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;Total ram usage:        0 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    4
  7424 ;; This function calls:
  7425 ;;		Nothing
  7426 ;; This function is called by:
  7427 ;;		_UserInit
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           
  7432                           ;psect for function _InitFAN
  7433  1A0A                     _InitFAN:	
  7434                           
  7435                           ;klondike.c: 222: TRISCbits.TRISC5 = 1;
  7436                           
  7437                           ;incstack = 0
  7438                           ; Regs used in _InitFAN: [wreg+status,2+status,0]
  7439  1A0A  0021               	movlb	1	; select bank1
  7440  1A0B  168E               	bsf	14,5	;volatile
  7441                           
  7442                           ;klondike.c: 223: PWM1CON = 0;
  7443  1A0C  002C               	movlb	12	; select bank12
  7444  1A0D  0193               	clrf	19	;volatile
  7445                           
  7446                           ;klondike.c: 224: PR2 = 0xFF;
  7447  1A0E  30FF               	movlw	255
  7448  1A0F  0020               	movlb	0	; select bank0
  7449  1A10  009B               	movwf	27	;volatile
  7450                           
  7451                           ;klondike.c: 225: PWM1CON = 0xC0;
  7452  1A11  30C0               	movlw	192
  7453  1A12  002C               	movlb	12	; select bank12
  7454  1A13  0093               	movwf	19	;volatile
  7455                           
  7456                           ;klondike.c: 226: PWM1DCH = FanLevel = 230;
  7457  1A14  30E6               	movlw	230
  7458  1A15  0023               	movlb	3	; select bank3
  7459  1A16  00E8               	movwf	_FanLevel^(0+384)
  7460  1A17  002C               	movlb	12	; select bank12
  7461  1A18  0092               	movwf	18	;volatile
  7462                           
  7463                           ;klondike.c: 227: PWM1DCL = 0;
  7464  1A19  0191               	clrf	17	;volatile
  7465                           
  7466                           ;klondike.c: 228: TMR2IF = 0;
  7467  1A1A  0020               	movlb	0	; select bank0
  7468  1A1B  1091               	bcf	17,1	;volatile
  7469                           
  7470                           ;klondike.c: 229: T2CONbits.T2CKPS = 1;
  7471  1A1C  081C               	movf	28,w	;volatile
  7472  1A1D  39FC               	andlw	-4
  7473  1A1E  3801               	iorlw	1
  7474  1A1F  009C               	movwf	28	;volatile
  7475                           
  7476                           ;klondike.c: 230: TMR2ON = 1;
  7477  1A20  151C               	bsf	28,2	;volatile
  7478                           
  7479                           ;klondike.c: 231: TRISCbits.TRISC5 = 0;
  7480  1A21  0021               	movlb	1	; select bank1
  7481  1A22  128E               	bcf	14,5	;volatile
  7482                           
  7483                           ;klondike.c: 232: PWM1OE=1;
  7484  1A23  002C               	movlb	12	; select bank12
  7485  1A24  1713               	bsf	19,6	;volatile
  7486  1A25  0008               	return
  7487  1A26                     __end_of_InitFAN:	
  7488                           
  7489                           	psect	text23
  7490  09A9                     __ptext23:	
  7491 ;; *************** function _DetectAsics *****************
  7492 ;; Defined at:
  7493 ;;		line 120 in file "klondike.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;		None
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;  x               1    2[BANK1 ] unsigned char 
  7498 ;; Return value:  Size  Location     Type
  7499 ;;		None               void
  7500 ;; Registers used:
  7501 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7510 ;;      Totals:         0       7       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7511 ;;Total ram usage:       10 bytes
  7512 ;; Hardware stack levels used:    1
  7513 ;; Hardware stack levels required when called:    5
  7514 ;; This function calls:
  7515 ;;		___awdiv
  7516 ;; This function is called by:
  7517 ;;		_UserInit
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           
  7522                           ;psect for function _DetectAsics
  7523  09A9                     _DetectAsics:	
  7524                           
  7525                           ;klondike.c: 121: Status.ChipCount = 10;
  7526                           
  7527                           ;incstack = 0
  7528                           ; Regs used in _DetectAsics: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7529  09A9  300A               	movlw	10
  7530  09AA  0020               	movlb	0	; select bank0
  7531  09AB  00E1               	movwf	??_DetectAsics
  7532  09AC  0861               	movf	??_DetectAsics,w
  7533  09AD  0022               	movlb	2	; select bank2
  7534  09AE  00E4               	movwf	(_Status^(0+256)+1)	;volatile
  7535                           
  7536                           ;klondike.c: 124: BankSize = (Status.ChipCount)/2;
  7537  09AF  3002               	movlw	2
  7538  09B0  0020               	movlb	0	; select bank0
  7539  09B1  00D8               	movwf	?___awdiv
  7540  09B2  3000               	movlw	0
  7541  09B3  00D9               	movwf	?___awdiv+1
  7542  09B4  0022               	movlb	2	; select bank2
  7543  09B5  0864               	movf	(_Status^(0+256)+1),w	;volatile
  7544  09B6  0020               	movlb	0	; select bank0
  7545  09B7  00E1               	movwf	??_DetectAsics
  7546  09B8  01E2               	clrf	??_DetectAsics+1
  7547  09B9  0861               	movf	??_DetectAsics,w
  7548  09BA  00DA               	movwf	?___awdiv+2
  7549  09BB  0862               	movf	??_DetectAsics+1,w
  7550  09BC  00DB               	movwf	?___awdiv+3
  7551  09BD  319D  25DE  3189   	fcall	___awdiv
  7552  09C0  0020               	movlb	0	; select bank0
  7553  09C1  0858               	movf	?___awdiv,w
  7554  09C2  00E3               	movwf	??_DetectAsics+2
  7555  09C3  0863               	movf	??_DetectAsics+2,w
  7556  09C4  0022               	movlb	2	; select bank2
  7557  09C5  00BF               	movwf	_BankSize^(0+256)
  7558                           
  7559                           ;klondike.c: 125: Status.MaxCount = 16384 / BankSize / 2;
  7560  09C6  083F               	movf	_BankSize^(0+256),w
  7561  09C7  0020               	movlb	0	; select bank0
  7562  09C8  00E1               	movwf	??_DetectAsics
  7563  09C9  01E2               	clrf	??_DetectAsics+1
  7564  09CA  0861               	movf	??_DetectAsics,w
  7565  09CB  00D8               	movwf	?___awdiv
  7566  09CC  0862               	movf	??_DetectAsics+1,w
  7567  09CD  00D9               	movwf	?___awdiv+1
  7568  09CE  3000               	movlw	0
  7569  09CF  00DA               	movwf	?___awdiv+2
  7570  09D0  3040               	movlw	64
  7571  09D1  00DB               	movwf	?___awdiv+3
  7572  09D2  319D  25DE  3189   	fcall	___awdiv
  7573  09D5  0020               	movlb	0	; select bank0
  7574  09D6  0859               	movf	?___awdiv+1,w
  7575  09D7  0021               	movlb	1	; select bank1
  7576  09D8  01A1               	clrf	(_DetectAsics$2774+1)^(0+128)
  7577  09D9  07A1               	addwf	(_DetectAsics$2774+1)^(0+128),f
  7578  09DA  0020               	movlb	0	; select bank0
  7579  09DB  0858               	movf	?___awdiv,w
  7580  09DC  0021               	movlb	1	; select bank1
  7581  09DD  01A0               	clrf	_DetectAsics$2774^(0+128)
  7582  09DE  07A0               	addwf	_DetectAsics$2774^(0+128),f
  7583                           
  7584                           ;klondike.c: 125: Status.MaxCount = 16384 / BankSize / 2;
  7585  09DF  3002               	movlw	2
  7586  09E0  0020               	movlb	0	; select bank0
  7587  09E1  00D8               	movwf	?___awdiv
  7588  09E2  3000               	movlw	0
  7589  09E3  00D9               	movwf	?___awdiv+1
  7590  09E4  0021               	movlb	1	; select bank1
  7591  09E5  0821               	movf	(_DetectAsics$2774+1)^(0+128),w
  7592  09E6  0020               	movlb	0	; select bank0
  7593  09E7  01DB               	clrf	?___awdiv+3
  7594  09E8  07DB               	addwf	?___awdiv+3,f
  7595  09E9  0021               	movlb	1	; select bank1
  7596  09EA  0820               	movf	_DetectAsics$2774^(0+128),w
  7597  09EB  0020               	movlb	0	; select bank0
  7598  09EC  01DA               	clrf	?___awdiv+2
  7599  09ED  07DA               	addwf	?___awdiv+2,f
  7600  09EE  319D  25DE  3189   	fcall	___awdiv
  7601  09F1  0020               	movlb	0	; select bank0
  7602  09F2  0859               	movf	?___awdiv+1,w
  7603  09F3  0022               	movlb	2	; select bank2
  7604  09F4  01EE               	clrf	((_Status+1)^(0+256)+10)	;volatile
  7605  09F5  07EE               	addwf	((_Status+1)^(0+256)+10),f	;volatile
  7606  09F6  0020               	movlb	0	; select bank0
  7607  09F7  0858               	movf	?___awdiv,w
  7608  09F8  0022               	movlb	2	; select bank2
  7609  09F9  01ED               	clrf	(_Status^(0+256)+10)	;volatile
  7610  09FA  07ED               	addwf	(_Status^(0+256)+10),f	;volatile
  7611                           
  7612                           ;klondike.c: 127: NonceRanges[0] = 0;
  7613  09FB  3000               	movlw	0
  7614  09FC  0026               	movlb	6	; select bank6
  7615  09FD  00A3               	movwf	(_NonceRanges+3)^(0+768)
  7616  09FE  3000               	movlw	0
  7617  09FF  00A2               	movwf	(_NonceRanges+2)^(0+768)
  7618  0A00  3000               	movlw	0
  7619  0A01  00A1               	movwf	(_NonceRanges+1)^(0+768)
  7620  0A02  3000               	movlw	0
  7621  0A03  00A0               	movwf	_NonceRanges^(0+768)
  7622                           
  7623                           ;klondike.c: 128: for(BYTE x = 1; x < BankSize; x++)
  7624  0A04  0021               	movlb	1	; select bank1
  7625  0A05  01A2               	clrf	DetectAsics@x^(0+128)
  7626  0A06  0AA2               	incf	DetectAsics@x^(0+128),f
  7627  0A07                     l7743:	
  7628  0A07  0022               	movlb	2	; select bank2
  7629  0A08  083F               	movf	_BankSize^(0+256),w
  7630  0A09  0021               	movlb	1	; select bank1
  7631  0A0A  0222               	subwf	DetectAsics@x^(0+128),w
  7632  0A0B  1803               	btfsc	3,0
  7633  0A0C  2A57               	goto	l7745
  7634                           
  7635                           ;klondike.c: 129: NonceRanges[x] = NonceRanges[x-1] + BankRanges[BankSize-1];
  7636  0A0D  0022               	movlb	2	; select bank2
  7637  0A0E  083F               	movf	_BankSize^(0+256),w
  7638  0A0F  0020               	movlb	0	; select bank0
  7639  0A10  00E1               	movwf	??_DetectAsics
  7640  0A11  3001               	movlw	1
  7641  0A12                     u8525:	
  7642  0A12  35E1               	lslf	??_DetectAsics,f
  7643  0A13  3EFF               	addlw	-1
  7644  0A14  1D03               	skipz
  7645  0A15  2A12               	goto	u8525
  7646  0A16  3561               	lslf	??_DetectAsics,w
  7647  0A17  3EFC               	addlw	252
  7648  0A18  3E40               	addlw	_BankRanges& (0+255)
  7649  0A19  0086               	movwf	6
  7650  0A1A  3003               	movlw	3	; select bank6/7
  7651  0A1B  0087               	movwf	7
  7652  0A1C  3F40               	moviw [0]fsr1
  7653  0A1D  00E2               	movwf	??_DetectAsics+1
  7654  0A1E  3F41               	moviw [1]fsr1
  7655  0A1F  00E3               	movwf	??_DetectAsics+2
  7656  0A20  3F42               	moviw [2]fsr1
  7657  0A21  00E4               	movwf	??_DetectAsics+3
  7658  0A22  3F43               	moviw [3]fsr1
  7659  0A23  00E5               	movwf	??_DetectAsics+4
  7660  0A24  0021               	movlb	1	; select bank1
  7661  0A25  0822               	movf	DetectAsics@x^(0+128),w
  7662  0A26  0020               	movlb	0	; select bank0
  7663  0A27  00E6               	movwf	??_DetectAsics+5
  7664  0A28  3001               	movlw	1
  7665  0A29                     u8535:	
  7666  0A29  35E6               	lslf	??_DetectAsics+5,f
  7667  0A2A  3EFF               	addlw	-1
  7668  0A2B  1D03               	skipz
  7669  0A2C  2A29               	goto	u8535
  7670  0A2D  3566               	lslf	??_DetectAsics+5,w
  7671  0A2E  3EFC               	addlw	252
  7672  0A2F  3E20               	addlw	_NonceRanges& (0+255)
  7673  0A30  0086               	movwf	6
  7674  0A31  3003               	movlw	3	; select bank6/7
  7675  0A32  0087               	movwf	7
  7676  0A33  3F40               	moviw [0]fsr1
  7677  0A34  07E2               	addwf	??_DetectAsics+1,f
  7678  0A35  3F41               	moviw [1]fsr1
  7679  0A36  3DE3               	addwfc	??_DetectAsics+2,f
  7680  0A37  3F42               	moviw [2]fsr1
  7681  0A38  3DE4               	addwfc	??_DetectAsics+3,f
  7682  0A39  3F43               	moviw [3]fsr1
  7683  0A3A  3DE5               	addwfc	??_DetectAsics+4,f
  7684  0A3B  0021               	movlb	1	; select bank1
  7685  0A3C  0822               	movf	DetectAsics@x^(0+128),w
  7686  0A3D  0020               	movlb	0	; select bank0
  7687  0A3E  00E7               	movwf	??_DetectAsics+6
  7688  0A3F  3001               	movlw	1
  7689  0A40                     u8545:	
  7690  0A40  35E7               	lslf	??_DetectAsics+6,f
  7691  0A41  3EFF               	addlw	-1
  7692  0A42  1D03               	skipz
  7693  0A43  2A40               	goto	u8545
  7694  0A44  3567               	lslf	??_DetectAsics+6,w
  7695  0A45  3E20               	addlw	_NonceRanges& (0+255)
  7696  0A46  0086               	movwf	6
  7697  0A47  3003               	movlw	3	; select bank6/7
  7698  0A48  0087               	movwf	7
  7699  0A49  0862               	movf	??_DetectAsics+1,w
  7700  0A4A  3FC0               	movwi [0]fsr1
  7701  0A4B  0863               	movf	??_DetectAsics+2,w
  7702  0A4C  3FC1               	movwi [1]fsr1
  7703  0A4D  0864               	movf	??_DetectAsics+3,w
  7704  0A4E  3FC2               	movwi [2]fsr1
  7705  0A4F  0865               	movf	??_DetectAsics+4,w
  7706  0A50  3FC3               	movwi [3]fsr1
  7707  0A51  3001               	movlw	1
  7708  0A52  00E1               	movwf	??_DetectAsics
  7709  0A53  0861               	movf	??_DetectAsics,w
  7710  0A54  0021               	movlb	1	; select bank1
  7711  0A55  07A2               	addwf	DetectAsics@x^(0+128),f
  7712  0A56  2A07               	goto	l7743
  7713  0A57                     l7745:	
  7714                           
  7715                           ;klondike.c: 131: Status.State = 'R';
  7716  0A57  3052               	movlw	82
  7717  0A58  0020               	movlb	0	; select bank0
  7718  0A59  00E1               	movwf	??_DetectAsics
  7719  0A5A  0861               	movf	??_DetectAsics,w
  7720  0A5B  0022               	movlb	2	; select bank2
  7721  0A5C  00E3               	movwf	_Status^(0+256)	;volatile
  7722                           
  7723                           ;klondike.c: 132: Status.HashCount = 0;
  7724  0A5D  01EB               	clrf	(_Status^(0+256)+8)	;volatile
  7725  0A5E  01EC               	clrf	((_Status+1)^(0+256)+8)	;volatile
  7726  0A5F  0008               	return
  7727  0A60                     __end_of_DetectAsics:	
  7728                           
  7729                           	psect	text24
  7730  1DDE                     __ptext24:	
  7731 ;; *************** function ___awdiv *****************
  7732 ;; Defined at:
  7733 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\awdiv.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;  divisor         2    8[BANK0 ] int 
  7736 ;;  dividend        2   10[BANK0 ] int 
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;  quotient        2   15[BANK0 ] int 
  7739 ;;  sign            1   14[BANK0 ] unsigned char 
  7740 ;;  counter         1   13[BANK0 ] unsigned char 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  2    8[BANK0 ] int 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7750 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7751 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7752 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7753 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7754 ;;Total ram usage:        9 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; Hardware stack levels required when called:    4
  7757 ;; This function calls:
  7758 ;;		Nothing
  7759 ;; This function is called by:
  7760 ;;		_DetectAsics
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           
  7765                           ;psect for function ___awdiv
  7766  1DDE                     ___awdiv:	
  7767                           
  7768                           ;incstack = 0
  7769                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7770  1DDE  0020               	movlb	0	; select bank0
  7771  1DDF  01DE               	clrf	___awdiv@sign
  7772  1DE0  1FD9               	btfss	___awdiv@divisor+1,7
  7773  1DE1  2DE9               	goto	l7845
  7774  1DE2  09D8               	comf	___awdiv@divisor,f
  7775  1DE3  09D9               	comf	___awdiv@divisor+1,f
  7776  1DE4  0AD8               	incf	___awdiv@divisor,f
  7777  1DE5  1903               	skipnz
  7778  1DE6  0AD9               	incf	___awdiv@divisor+1,f
  7779  1DE7  01DE               	clrf	___awdiv@sign
  7780  1DE8  0ADE               	incf	___awdiv@sign,f
  7781  1DE9                     l7845:	
  7782  1DE9  1FDB               	btfss	___awdiv@dividend+1,7
  7783  1DEA  2DF4               	goto	l7851
  7784  1DEB  09DA               	comf	___awdiv@dividend,f
  7785  1DEC  09DB               	comf	___awdiv@dividend+1,f
  7786  1DED  0ADA               	incf	___awdiv@dividend,f
  7787  1DEE  1903               	skipnz
  7788  1DEF  0ADB               	incf	___awdiv@dividend+1,f
  7789  1DF0  3001               	movlw	1
  7790  1DF1  00DC               	movwf	??___awdiv
  7791  1DF2  085C               	movf	??___awdiv,w
  7792  1DF3  06DE               	xorwf	___awdiv@sign,f
  7793  1DF4                     l7851:	
  7794  1DF4  01DF               	clrf	___awdiv@quotient
  7795  1DF5  01E0               	clrf	___awdiv@quotient+1
  7796  1DF6  0859               	movf	___awdiv@divisor+1,w
  7797  1DF7  0458               	iorwf	___awdiv@divisor,w
  7798  1DF8  1903               	skipnz
  7799  1DF9  2E23               	goto	l7873
  7800  1DFA  01DD               	clrf	___awdiv@counter
  7801  1DFB  0ADD               	incf	___awdiv@counter,f
  7802  1DFC                     l7861:	
  7803  1DFC  1BD9               	btfsc	___awdiv@divisor+1,7
  7804  1DFD  2E08               	goto	l7863
  7805  1DFE  3001               	movlw	1
  7806  1DFF                     u8725:	
  7807  1DFF  35D8               	lslf	___awdiv@divisor,f
  7808  1E00  0DD9               	rlf	___awdiv@divisor+1,f
  7809  1E01  0B89               	decfsz	9,f
  7810  1E02  2DFF               	goto	u8725
  7811  1E03  3001               	movlw	1
  7812  1E04  00DC               	movwf	??___awdiv
  7813  1E05  085C               	movf	??___awdiv,w
  7814  1E06  07DD               	addwf	___awdiv@counter,f
  7815  1E07  2DFC               	goto	l7861
  7816  1E08                     l7863:	
  7817  1E08  3001               	movlw	1
  7818  1E09                     u8745:	
  7819  1E09  35DF               	lslf	___awdiv@quotient,f
  7820  1E0A  0DE0               	rlf	___awdiv@quotient+1,f
  7821  1E0B  0B89               	decfsz	9,f
  7822  1E0C  2E09               	goto	u8745
  7823  1E0D  0859               	movf	___awdiv@divisor+1,w
  7824  1E0E  025B               	subwf	___awdiv@dividend+1,w
  7825  1E0F  1D03               	skipz
  7826  1E10  2E13               	goto	u8755
  7827  1E11  0858               	movf	___awdiv@divisor,w
  7828  1E12  025A               	subwf	___awdiv@dividend,w
  7829  1E13                     u8755:	
  7830  1E13  1C03               	skipc
  7831  1E14  2E1A               	goto	l7869
  7832  1E15  0858               	movf	___awdiv@divisor,w
  7833  1E16  02DA               	subwf	___awdiv@dividend,f
  7834  1E17  0859               	movf	___awdiv@divisor+1,w
  7835  1E18  3BDB               	subwfb	___awdiv@dividend+1,f
  7836  1E19  145F               	bsf	___awdiv@quotient,0
  7837  1E1A                     l7869:	
  7838  1E1A  3001               	movlw	1
  7839  1E1B                     u8765:	
  7840  1E1B  36D9               	lsrf	___awdiv@divisor+1,f
  7841  1E1C  0CD8               	rrf	___awdiv@divisor,f
  7842  1E1D  0B89               	decfsz	9,f
  7843  1E1E  2E1B               	goto	u8765
  7844  1E1F  3001               	movlw	1
  7845  1E20  02DD               	subwf	___awdiv@counter,f
  7846  1E21  1D03               	btfss	3,2
  7847  1E22  2E08               	goto	l7863
  7848  1E23                     l7873:	
  7849  1E23  085E               	movf	___awdiv@sign,w
  7850  1E24  1903               	btfsc	3,2
  7851  1E25  2E2B               	goto	l7877
  7852  1E26  09DF               	comf	___awdiv@quotient,f
  7853  1E27  09E0               	comf	___awdiv@quotient+1,f
  7854  1E28  0ADF               	incf	___awdiv@quotient,f
  7855  1E29  1903               	skipnz
  7856  1E2A  0AE0               	incf	___awdiv@quotient+1,f
  7857  1E2B                     l7877:	
  7858  1E2B  0860               	movf	___awdiv@quotient+1,w
  7859  1E2C  01D9               	clrf	?___awdiv+1
  7860  1E2D  07D9               	addwf	?___awdiv+1,f
  7861  1E2E  085F               	movf	___awdiv@quotient,w
  7862  1E2F  01D8               	clrf	?___awdiv
  7863  1E30  07D8               	addwf	?___awdiv,f
  7864  1E31  0008               	return
  7865  1E32                     __end_of___awdiv:	
  7866                           
  7867                           	psect	text25
  7868  1F41                     __ptext25:	
  7869 ;; *************** function _WorkTick *****************
  7870 ;; Defined at:
  7871 ;;		line 137 in file "klondike.c"
  7872 ;; Parameters:    Size  Location     Type
  7873 ;;		None
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;		None
  7876 ;; Return value:  Size  Location     Type
  7877 ;;		None               void
  7878 ;; Registers used:
  7879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7887 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7888 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7889 ;;Total ram usage:        3 bytes
  7890 ;; Hardware stack levels used:    1
  7891 ;; Hardware stack levels required when called:    7
  7892 ;; This function calls:
  7893 ;;		_UpdateFanLevel
  7894 ;;		___awmod
  7895 ;; This function is called by:
  7896 ;;		_main
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900                           
  7901                           ;psect for function _WorkTick
  7902  1F41                     _WorkTick:	
  7903                           
  7904                           ;klondike.c: 138: TMR0 += HashTime;
  7905                           
  7906                           ;incstack = 0
  7907                           ; Regs used in _WorkTick: [allreg]
  7908  1F41  0022               	movlb	2	; select bank2
  7909  1F42  0826               	movf	_HashTime^(0+256),w
  7910  1F43  0021               	movlb	1	; select bank1
  7911  1F44  00E5               	movwf	??_WorkTick^(0+128)
  7912  1F45  0865               	movf	??_WorkTick^(0+128),w
  7913  1F46  0020               	movlb	0	; select bank0
  7914  1F47  0795               	addwf	21,f	;volatile
  7915                           
  7916                           ;klondike.c: 139: TMR0IF = 0;
  7917  1F48  110B               	bcf	11,2	;volatile
  7918                           
  7919                           ;klondike.c: 141: if((Status.State == 'W') && (++Status.HashCount == Status.MaxCount)) {
  7920  1F49  0022               	movlb	2	; select bank2
  7921  1F4A  0863               	movf	_Status^(0+256),w	;volatile
  7922  1F4B  3A57               	xorlw	87
  7923  1F4C  1D03               	skipz
  7924  1F4D  2F6C               	goto	l5723
  7925  1F4E  3008               	movlw	8
  7926  1F4F  3E63               	addlw	_Status& (0+255)
  7927  1F50  0086               	movwf	6
  7928  1F51  3001               	movlw	1	; select bank2/3
  7929  1F52  0087               	movwf	7
  7930  1F53  3001               	movlw	1
  7931  1F54  0781               	addwf	1,f
  7932  1F55  3141               	addfsr 1,1
  7933  1F56  1803               	skipnc
  7934  1F57  0A81               	incf	1,f
  7935  1F58  317F               	addfsr 1,-1
  7936  1F59  3F40               	moviw [0]fsr1
  7937  1F5A  066D               	xorwf	(_Status^(0+256)+10),w	;volatile
  7938  1F5B  1D03               	skipz
  7939  1F5C  2F5F               	goto	u5605
  7940  1F5D  3F41               	moviw [1]fsr1
  7941  1F5E  066E               	xorwf	((_Status+1)^(0+256)+10),w	;volatile
  7942  1F5F                     u5605:	
  7943  1F5F  1D03               	skipz
  7944  1F60  2F6C               	goto	l5723
  7945                           
  7946                           ;klondike.c: 142: if(Status.WorkQC > 0) {
  7947  1F61  0866               	movf	(_Status^(0+256)+3),w	;volatile
  7948  1F62  1903               	btfsc	3,2
  7949  1F63  2F66               	goto	l5721
  7950                           
  7951                           ;klondike.c: 143: Status.State = 'P';
  7952  1F64  3050               	movlw	80
  7953  1F65  2F67               	goto	L6
  7954  1F66                     l5721:	
  7955                           ;klondike.c: 144: }
  7956                           
  7957                           
  7958                           ;klondike.c: 145: else {
  7959                           ;klondike.c: 146: Status.State = 'R';
  7960  1F66  3052               	movlw	82
  7961  1F67                     L6:	
  7962  1F67  0021               	movlb	1	; select bank1
  7963  1F68  00E5               	movwf	??_WorkTick^(0+128)
  7964  1F69  0865               	movf	??_WorkTick^(0+128),w
  7965  1F6A  0022               	movlb	2	; select bank2
  7966  1F6B  00E3               	movwf	_Status^(0+256)	;volatile
  7967  1F6C                     l5723:	
  7968                           
  7969                           ;klondike.c: 147: }
  7970                           ;klondike.c: 148: }
  7971                           ;klondike.c: 150: if(++SlowTick == 0) {
  7972  1F6C  3001               	movlw	1
  7973  1F6D  0021               	movlb	1	; select bank1
  7974  1F6E  00E5               	movwf	??_WorkTick^(0+128)
  7975  1F6F  0865               	movf	??_WorkTick^(0+128),w
  7976  1F70  0023               	movlb	3	; select bank3
  7977  1F71  07B6               	addwf	_SlowTick^(0+384),f
  7978  1F72  1D03               	btfss	3,2
  7979  1F73  0008               	return
  7980                           
  7981                           ;klondike.c: 151: LATAbits.LATA5 = 0;;
  7982  1F74  0022               	movlb	2	; select bank2
  7983  1F75  128C               	bcf	12,5	;volatile
  7984                           
  7985                           ;klondike.c: 152: Status.Temp = ADRESH;
  7986  1F76  0021               	movlb	1	; select bank1
  7987  1F77  081C               	movf	28,w	;volatile
  7988  1F78  00E5               	movwf	??_WorkTick^(0+128)
  7989  1F79  0865               	movf	??_WorkTick^(0+128),w
  7990  1F7A  0022               	movlb	2	; select bank2
  7991  1F7B  00E8               	movwf	(_Status^(0+256)+5)	;volatile
  7992                           
  7993                           ;klondike.c: 153: ADCON0bits.GO_nDONE = 1;
  7994  1F7C  0021               	movlb	1	; select bank1
  7995  1F7D  149D               	bsf	29,1	;volatile
  7996                           
  7997                           ;klondike.c: 154: if((++VerySlowTick % 15) == 0) {
  7998  1F7E  300F               	movlw	15
  7999  1F7F  0020               	movlb	0	; select bank0
  8000  1F80  00D8               	movwf	?___awmod
  8001  1F81  3000               	movlw	0
  8002  1F82  00D9               	movwf	?___awmod+1
  8003  1F83  3001               	movlw	1
  8004  1F84  0021               	movlb	1	; select bank1
  8005  1F85  00E5               	movwf	??_WorkTick^(0+128)
  8006  1F86  0865               	movf	??_WorkTick^(0+128),w
  8007  1F87  0023               	movlb	3	; select bank3
  8008  1F88  07B9               	addwf	_VerySlowTick^(0+384),f
  8009  1F89  0839               	movf	_VerySlowTick^(0+384),w
  8010  1F8A  0021               	movlb	1	; select bank1
  8011  1F8B  00E6               	movwf	(??_WorkTick+1)^(0+128)
  8012  1F8C  01E7               	clrf	((??_WorkTick+1)^(0+128)+1)
  8013  1F8D  0866               	movf	(??_WorkTick+1)^(0+128),w
  8014  1F8E  0020               	movlb	0	; select bank0
  8015  1F8F  00DA               	movwf	?___awmod+2
  8016  1F90  0021               	movlb	1	; select bank1
  8017  1F91  0867               	movf	(??_WorkTick+2)^(0+128),w
  8018  1F92  0020               	movlb	0	; select bank0
  8019  1F93  00DB               	movwf	?___awmod+3
  8020  1F94  319C  24A2  319F   	fcall	___awmod
  8021  1F97  0020               	movlb	0	; select bank0
  8022  1F98  0859               	movf	?___awmod+1,w
  8023  1F99  0458               	iorwf	?___awmod,w
  8024  1F9A  1D03               	skipz
  8025  1F9B  0008               	return
  8026                           
  8027                           ;klondike.c: 155: UpdateFanLevel();
  8028  1F9C  3186  26A7         	fcall	_UpdateFanLevel
  8029  1F9E  0008               	return
  8030  1F9F                     __end_of_WorkTick:	
  8031                           
  8032                           	psect	text26
  8033  1CA2                     __ptext26:	
  8034 ;; *************** function ___awmod *****************
  8035 ;; Defined at:
  8036 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\awmod.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;  divisor         2    8[BANK0 ] int 
  8039 ;;  dividend        2   10[BANK0 ] int 
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;  sign            1   14[BANK0 ] unsigned char 
  8042 ;;  counter         1   13[BANK0 ] unsigned char 
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  2    8[BANK0 ] int 
  8045 ;; Registers used:
  8046 ;;		wreg, status,2, status,0
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8052 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8053 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8054 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8055 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;Total ram usage:        7 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; Hardware stack levels required when called:    4
  8059 ;; This function calls:
  8060 ;;		Nothing
  8061 ;; This function is called by:
  8062 ;;		_WorkTick
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           
  8067                           ;psect for function ___awmod
  8068  1CA2                     ___awmod:	
  8069                           
  8070                           ;incstack = 0
  8071                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8072  1CA2  0020               	movlb	0	; select bank0
  8073  1CA3  01DE               	clrf	___awmod@sign
  8074  1CA4  1FDB               	btfss	___awmod@dividend+1,7
  8075  1CA5  2CAD               	goto	l6009
  8076  1CA6  09DA               	comf	___awmod@dividend,f
  8077  1CA7  09DB               	comf	___awmod@dividend+1,f
  8078  1CA8  0ADA               	incf	___awmod@dividend,f
  8079  1CA9  1903               	skipnz
  8080  1CAA  0ADB               	incf	___awmod@dividend+1,f
  8081  1CAB  01DE               	clrf	___awmod@sign
  8082  1CAC  0ADE               	incf	___awmod@sign,f
  8083  1CAD                     l6009:	
  8084  1CAD  1FD9               	btfss	___awmod@divisor+1,7
  8085  1CAE  2CB4               	goto	l6013
  8086  1CAF  09D8               	comf	___awmod@divisor,f
  8087  1CB0  09D9               	comf	___awmod@divisor+1,f
  8088  1CB1  0AD8               	incf	___awmod@divisor,f
  8089  1CB2  1903               	skipnz
  8090  1CB3  0AD9               	incf	___awmod@divisor+1,f
  8091  1CB4                     l6013:	
  8092  1CB4  0859               	movf	___awmod@divisor+1,w
  8093  1CB5  0458               	iorwf	___awmod@divisor,w
  8094  1CB6  1903               	skipnz
  8095  1CB7  2CDB               	goto	l6031
  8096  1CB8  01DD               	clrf	___awmod@counter
  8097  1CB9  0ADD               	incf	___awmod@counter,f
  8098  1CBA                     l6021:	
  8099  1CBA  1BD9               	btfsc	___awmod@divisor+1,7
  8100  1CBB  2CC6               	goto	l6023
  8101  1CBC  3001               	movlw	1
  8102  1CBD                     u6055:	
  8103  1CBD  35D8               	lslf	___awmod@divisor,f
  8104  1CBE  0DD9               	rlf	___awmod@divisor+1,f
  8105  1CBF  0B89               	decfsz	9,f
  8106  1CC0  2CBD               	goto	u6055
  8107  1CC1  3001               	movlw	1
  8108  1CC2  00DC               	movwf	??___awmod
  8109  1CC3  085C               	movf	??___awmod,w
  8110  1CC4  07DD               	addwf	___awmod@counter,f
  8111  1CC5  2CBA               	goto	l6021
  8112  1CC6                     l6023:	
  8113  1CC6  0859               	movf	___awmod@divisor+1,w
  8114  1CC7  025B               	subwf	___awmod@dividend+1,w
  8115  1CC8  1D03               	skipz
  8116  1CC9  2CCC               	goto	u6075
  8117  1CCA  0858               	movf	___awmod@divisor,w
  8118  1CCB  025A               	subwf	___awmod@dividend,w
  8119  1CCC                     u6075:	
  8120  1CCC  1C03               	skipc
  8121  1CCD  2CD2               	goto	l6027
  8122  1CCE  0858               	movf	___awmod@divisor,w
  8123  1CCF  02DA               	subwf	___awmod@dividend,f
  8124  1CD0  0859               	movf	___awmod@divisor+1,w
  8125  1CD1  3BDB               	subwfb	___awmod@dividend+1,f
  8126  1CD2                     l6027:	
  8127  1CD2  3001               	movlw	1
  8128  1CD3                     u6085:	
  8129  1CD3  36D9               	lsrf	___awmod@divisor+1,f
  8130  1CD4  0CD8               	rrf	___awmod@divisor,f
  8131  1CD5  0B89               	decfsz	9,f
  8132  1CD6  2CD3               	goto	u6085
  8133  1CD7  3001               	movlw	1
  8134  1CD8  02DD               	subwf	___awmod@counter,f
  8135  1CD9  1D03               	btfss	3,2
  8136  1CDA  2CC6               	goto	l6023
  8137  1CDB                     l6031:	
  8138  1CDB  085E               	movf	___awmod@sign,w
  8139  1CDC  1903               	btfsc	3,2
  8140  1CDD  2CE3               	goto	l6035
  8141  1CDE  09DA               	comf	___awmod@dividend,f
  8142  1CDF  09DB               	comf	___awmod@dividend+1,f
  8143  1CE0  0ADA               	incf	___awmod@dividend,f
  8144  1CE1  1903               	skipnz
  8145  1CE2  0ADB               	incf	___awmod@dividend+1,f
  8146  1CE3                     l6035:	
  8147  1CE3  085B               	movf	___awmod@dividend+1,w
  8148  1CE4  01D9               	clrf	?___awmod+1
  8149  1CE5  07D9               	addwf	?___awmod+1,f
  8150  1CE6  085A               	movf	___awmod@dividend,w
  8151  1CE7  01D8               	clrf	?___awmod
  8152  1CE8  07D8               	addwf	?___awmod,f
  8153  1CE9  0008               	return
  8154  1CEA                     __end_of___awmod:	
  8155                           
  8156                           	psect	text27
  8157  06A7                     __ptext27:	
  8158 ;; *************** function _UpdateFanLevel *****************
  8159 ;; Defined at:
  8160 ;;		line 199 in file "klondike.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;		None
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;		None
  8165 ;; Return value:  Size  Location     Type
  8166 ;;		None               void
  8167 ;; Registers used:
  8168 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8175 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8176 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  8178 ;;Total ram usage:        7 bytes
  8179 ;; Hardware stack levels used:    1
  8180 ;; Hardware stack levels required when called:    6
  8181 ;; This function calls:
  8182 ;;		___awtoft
  8183 ;;		___ftadd
  8184 ;;		___ftmul
  8185 ;;		___ftneg
  8186 ;;		___fttol
  8187 ;; This function is called by:
  8188 ;;		_WorkTick
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           
  8193                           ;psect for function _UpdateFanLevel
  8194  06A7                     _UpdateFanLevel:	
  8195                           
  8196                           ;klondike.c: 200: Error = Status.Temp - TempTarget;
  8197                           
  8198                           ;incstack = 0
  8199                           ; Regs used in _UpdateFanLevel: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  8200  06A7  0023               	movlb	3	; select bank3
  8201  06A8  0869               	movf	_TempTarget^(0+384),w
  8202  06A9  0021               	movlb	1	; select bank1
  8203  06AA  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8204  06AB  01DF               	clrf	(??_UpdateFanLevel^(0+128)+1)
  8205  06AC  09DE               	comf	??_UpdateFanLevel^(0+128),f
  8206  06AD  09DF               	comf	(??_UpdateFanLevel^(0+128)+1),f
  8207  06AE  0ADE               	incf	??_UpdateFanLevel^(0+128),f
  8208  06AF  1903               	skipnz
  8209  06B0  0ADF               	incf	(??_UpdateFanLevel^(0+128)+1),f
  8210  06B1  0022               	movlb	2	; select bank2
  8211  06B2  0868               	movf	(_Status^(0+256)+5),w	;volatile
  8212  06B3  0021               	movlb	1	; select bank1
  8213  06B4  075E               	addwf	??_UpdateFanLevel^(0+128),w
  8214  06B5  00E0               	movwf	(??_UpdateFanLevel+2)^(0+128)
  8215  06B6  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  8216  06B7  1803               	skipnc
  8217  06B8  0A5F               	incf	(??_UpdateFanLevel+1)^(0+128),w
  8218  06B9  00E1               	movwf	((??_UpdateFanLevel+2)^(0+128)+1)
  8219  06BA  0860               	movf	(??_UpdateFanLevel+2)^(0+128),w
  8220  06BB  0023               	movlb	3	; select bank3
  8221  06BC  00E0               	movwf	_Error^(0+384)
  8222  06BD  0021               	movlb	1	; select bank1
  8223  06BE  0861               	movf	(??_UpdateFanLevel+3)^(0+128),w
  8224  06BF  0023               	movlb	3	; select bank3
  8225  06C0  00E1               	movwf	(_Error+1)^(0+384)
  8226                           
  8227                           ;klondike.c: 201: Step = 1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp);
  8228  06C1  0861               	movf	(_Error+1)^(0+384),w
  8229  06C2  0020               	movlb	0	; select bank0
  8230  06C3  01E1               	clrf	?___awtoft+1
  8231  06C4  07E1               	addwf	?___awtoft+1,f
  8232  06C5  0023               	movlb	3	; select bank3
  8233  06C6  0860               	movf	_Error^(0+384),w
  8234  06C7  0020               	movlb	0	; select bank0
  8235  06C8  01E0               	clrf	?___awtoft
  8236  06C9  07E0               	addwf	?___awtoft,f
  8237  06CA  319A  22E7  3186   	fcall	___awtoft
  8238  06CD  0020               	movlb	0	; select bank0
  8239  06CE  0860               	movf	?___awtoft,w
  8240  06CF  0021               	movlb	1	; select bank1
  8241  06D0  00B6               	movwf	(?___ftadd^(0+128)+3)
  8242  06D1  0020               	movlb	0	; select bank0
  8243  06D2  0861               	movf	?___awtoft+1,w
  8244  06D3  0021               	movlb	1	; select bank1
  8245  06D4  00B7               	movwf	((?___ftadd+1)^(0+128)+3)
  8246  06D5  0020               	movlb	0	; select bank0
  8247  06D6  0862               	movf	?___awtoft+2,w
  8248  06D7  0021               	movlb	1	; select bank1
  8249  06D8  00B8               	movwf	((?___ftadd+2)^(0+128)+3)
  8250  06D9  0022               	movlb	2	; select bank2
  8251  06DA  0868               	movf	(_Status^(0+256)+5),w	;volatile
  8252  06DB  0021               	movlb	1	; select bank1
  8253  06DC  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8254  06DD  01DF               	clrf	(??_UpdateFanLevel^(0+128)+1)
  8255  06DE  09DE               	comf	??_UpdateFanLevel^(0+128),f
  8256  06DF  09DF               	comf	(??_UpdateFanLevel^(0+128)+1),f
  8257  06E0  0ADE               	incf	??_UpdateFanLevel^(0+128),f
  8258  06E1  1903               	skipnz
  8259  06E2  0ADF               	incf	(??_UpdateFanLevel^(0+128)+1),f
  8260  06E3  0023               	movlb	3	; select bank3
  8261  06E4  0835               	movf	_LastTemp^(0+384),w
  8262  06E5  0021               	movlb	1	; select bank1
  8263  06E6  075E               	addwf	??_UpdateFanLevel^(0+128),w
  8264  06E7  00E0               	movwf	(??_UpdateFanLevel+2)^(0+128)
  8265  06E8  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  8266  06E9  1803               	skipnc
  8267  06EA  0A5F               	incf	(??_UpdateFanLevel+1)^(0+128),w
  8268  06EB  00E1               	movwf	((??_UpdateFanLevel+2)^(0+128)+1)
  8269  06EC  35E0               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  8270  06ED  0DE1               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  8271  06EE  35E0               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  8272  06EF  0DE1               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  8273  06F0  35E0               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  8274  06F1  0DE1               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  8275  06F2  0860               	movf	(??_UpdateFanLevel+2)^(0+128),w
  8276  06F3  0020               	movlb	0	; select bank0
  8277  06F4  00E0               	movwf	?___awtoft
  8278  06F5  0021               	movlb	1	; select bank1
  8279  06F6  0861               	movf	(??_UpdateFanLevel+3)^(0+128),w
  8280  06F7  0020               	movlb	0	; select bank0
  8281  06F8  00E1               	movwf	?___awtoft+1
  8282  06F9  319A  22E7  3186   	fcall	___awtoft
  8283  06FC  0020               	movlb	0	; select bank0
  8284  06FD  0860               	movf	?___awtoft,w
  8285  06FE  0021               	movlb	1	; select bank1
  8286  06FF  00B0               	movwf	?___ftneg^(0+128)
  8287  0700  0020               	movlb	0	; select bank0
  8288  0701  0861               	movf	?___awtoft+1,w
  8289  0702  0021               	movlb	1	; select bank1
  8290  0703  00B1               	movwf	(?___ftneg+1)^(0+128)
  8291  0704  0020               	movlb	0	; select bank0
  8292  0705  0862               	movf	?___awtoft+2,w
  8293  0706  0021               	movlb	1	; select bank1
  8294  0707  00B2               	movwf	(?___ftneg+2)^(0+128)
  8295  0708  3198  20FB  3186   	fcall	___ftneg
  8296  070B  0021               	movlb	1	; select bank1
  8297  070C  0830               	movf	?___ftneg^(0+128),w
  8298  070D  00B3               	movwf	?___ftadd^(0+128)
  8299  070E  0831               	movf	(?___ftneg+1)^(0+128),w
  8300  070F  00B4               	movwf	(?___ftadd+1)^(0+128)
  8301  0710  0832               	movf	(?___ftneg+2)^(0+128),w
  8302  0711  00B5               	movwf	(?___ftadd+2)^(0+128)
  8303  0712  318C  24D0  3186   	fcall	___ftadd
  8304  0715  0021               	movlb	1	; select bank1
  8305  0716  0833               	movf	?___ftadd^(0+128),w
  8306  0717  00E2               	movwf	_UpdateFanLevel$2775^(0+128)
  8307  0718  0834               	movf	(?___ftadd+1)^(0+128),w
  8308  0719  00E3               	movwf	(_UpdateFanLevel$2775+1)^(0+128)
  8309  071A  0835               	movf	(?___ftadd+2)^(0+128),w
  8310  071B  00E4               	movwf	(_UpdateFanLevel$2775+2)^(0+128)
  8311                           
  8312                           ;klondike.c: 201: Step = 1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp);
  8313  071C  0862               	movf	_UpdateFanLevel$2775^(0+128),w
  8314  071D  00B6               	movwf	(?___ftadd^(0+128)+3)
  8315  071E  0863               	movf	(_UpdateFanLevel$2775+1)^(0+128),w
  8316  071F  00B7               	movwf	((?___ftadd+1)^(0+128)+3)
  8317  0720  0864               	movf	(_UpdateFanLevel$2775+2)^(0+128),w
  8318  0721  00B8               	movwf	((?___ftadd+2)^(0+128)+3)
  8319  0722  0023               	movlb	3	; select bank3
  8320  0723  082D               	movf	(_LastError+1)^(0+384),w
  8321  0724  0020               	movlb	0	; select bank0
  8322  0725  01E1               	clrf	?___awtoft+1
  8323  0726  07E1               	addwf	?___awtoft+1,f
  8324  0727  0023               	movlb	3	; select bank3
  8325  0728  082C               	movf	_LastError^(0+384),w
  8326  0729  0020               	movlb	0	; select bank0
  8327  072A  01E0               	clrf	?___awtoft
  8328  072B  07E0               	addwf	?___awtoft,f
  8329  072C  319A  22E7  3186   	fcall	___awtoft
  8330  072F  0020               	movlb	0	; select bank0
  8331  0730  0860               	movf	?___awtoft,w
  8332  0731  0021               	movlb	1	; select bank1
  8333  0732  00A3               	movwf	(?___ftmul^(0+128)+3)
  8334  0733  0020               	movlb	0	; select bank0
  8335  0734  0861               	movf	?___awtoft+1,w
  8336  0735  0021               	movlb	1	; select bank1
  8337  0736  00A4               	movwf	((?___ftmul+1)^(0+128)+3)
  8338  0737  0020               	movlb	0	; select bank0
  8339  0738  0862               	movf	?___awtoft+2,w
  8340  0739  0021               	movlb	1	; select bank1
  8341  073A  00A5               	movwf	((?___ftmul+2)^(0+128)+3)
  8342  073B  3000               	movlw	0
  8343  073C  00A0               	movwf	?___ftmul^(0+128)
  8344  073D  3000               	movlw	0
  8345  073E  00A1               	movwf	(?___ftmul+1)^(0+128)
  8346  073F  303F               	movlw	63
  8347  0740  00A2               	movwf	(?___ftmul+2)^(0+128)
  8348  0741  318B  2317  3186   	fcall	___ftmul
  8349  0744  0021               	movlb	1	; select bank1
  8350  0745  0820               	movf	?___ftmul^(0+128),w
  8351  0746  00B0               	movwf	?___ftneg^(0+128)
  8352  0747  0821               	movf	(?___ftmul+1)^(0+128),w
  8353  0748  00B1               	movwf	(?___ftneg+1)^(0+128)
  8354  0749  0822               	movf	(?___ftmul+2)^(0+128),w
  8355  074A  00B2               	movwf	(?___ftneg+2)^(0+128)
  8356  074B  3198  20FB  3186   	fcall	___ftneg
  8357  074E  0021               	movlb	1	; select bank1
  8358  074F  0830               	movf	?___ftneg^(0+128),w
  8359  0750  00B3               	movwf	?___ftadd^(0+128)
  8360  0751  0831               	movf	(?___ftneg+1)^(0+128),w
  8361  0752  00B4               	movwf	(?___ftadd+1)^(0+128)
  8362  0753  0832               	movf	(?___ftneg+2)^(0+128),w
  8363  0754  00B5               	movwf	(?___ftadd+2)^(0+128)
  8364  0755  318C  24D0  3186   	fcall	___ftadd
  8365  0758  0021               	movlb	1	; select bank1
  8366  0759  0833               	movf	?___ftadd^(0+128),w
  8367  075A  00D0               	movwf	?___fttol^(0+128)
  8368  075B  0834               	movf	(?___ftadd+1)^(0+128),w
  8369  075C  00D1               	movwf	(?___fttol+1)^(0+128)
  8370  075D  0835               	movf	(?___ftadd+2)^(0+128),w
  8371  075E  00D2               	movwf	(?___fttol+2)^(0+128)
  8372  075F  3193  233C  3186   	fcall	___fttol
  8373  0762  0021               	movlb	1	; select bank1
  8374  0763  0851               	movf	(?___fttol^(0+128)+1),w
  8375  0764  0022               	movlb	2	; select bank2
  8376  0765  01A1               	clrf	(_Step+1)^(0+256)
  8377  0766  07A1               	addwf	(_Step+1)^(0+256),f
  8378  0767  0021               	movlb	1	; select bank1
  8379  0768  0850               	movf	?___fttol^(0+128),w
  8380  0769  0022               	movlb	2	; select bank2
  8381  076A  01A0               	clrf	_Step^(0+256)
  8382  076B  07A0               	addwf	_Step^(0+256),f
  8383                           
  8384                           ;klondike.c: 203: if(FanLevel + Step > 75 && FanLevel + Step <= 255) {
  8385  076C  0023               	movlb	3	; select bank3
  8386  076D  0868               	movf	_FanLevel^(0+384),w
  8387  076E  0022               	movlb	2	; select bank2
  8388  076F  0720               	addwf	_Step^(0+256),w
  8389  0770  0021               	movlb	1	; select bank1
  8390  0771  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8391  0772  0022               	movlb	2	; select bank2
  8392  0773  0821               	movf	(_Step+1)^(0+256),w
  8393  0774  1803               	skipnc
  8394  0775  0A21               	incf	(_Step+1)^(0+256),w
  8395  0776  0021               	movlb	1	; select bank1
  8396  0777  00DF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  8397  0778  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  8398  0779  3A80               	xorlw	128
  8399  077A  00FF               	movwf	127
  8400  077B  3080               	movlw	128
  8401  077C  027F               	subwf	127,w
  8402  077D  1D03               	skipz
  8403  077E  2F81               	goto	u5645
  8404  077F  304C               	movlw	76
  8405  0780  025E               	subwf	??_UpdateFanLevel^(0+128),w
  8406  0781                     u5645:	
  8407  0781  1C03               	skipc
  8408  0782  2FA2               	goto	l5747
  8409  0783  0023               	movlb	3	; select bank3
  8410  0784  0868               	movf	_FanLevel^(0+384),w
  8411  0785  0022               	movlb	2	; select bank2
  8412  0786  0720               	addwf	_Step^(0+256),w
  8413  0787  0021               	movlb	1	; select bank1
  8414  0788  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8415  0789  0022               	movlb	2	; select bank2
  8416  078A  0821               	movf	(_Step+1)^(0+256),w
  8417  078B  1803               	skipnc
  8418  078C  0A21               	incf	(_Step+1)^(0+256),w
  8419  078D  0021               	movlb	1	; select bank1
  8420  078E  00DF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  8421  078F  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  8422  0790  3A80               	xorlw	128
  8423  0791  00FF               	movwf	127
  8424  0792  3081               	movlw	129
  8425  0793  027F               	subwf	127,w
  8426  0794  1D03               	skipz
  8427  0795  2F98               	goto	u5655
  8428  0796  3000               	movlw	0
  8429  0797  025E               	subwf	??_UpdateFanLevel^(0+128),w
  8430  0798                     u5655:	
  8431  0798  1803               	skipnc
  8432  0799  2FA2               	goto	l5747
  8433                           
  8434                           ;klondike.c: 204: FanLevel += Step;
  8435  079A  0022               	movlb	2	; select bank2
  8436  079B  0820               	movf	_Step^(0+256),w
  8437  079C  0021               	movlb	1	; select bank1
  8438  079D  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8439  079E  085E               	movf	??_UpdateFanLevel^(0+128),w
  8440  079F  0023               	movlb	3	; select bank3
  8441  07A0  07E8               	addwf	_FanLevel^(0+384),f
  8442                           
  8443                           ;klondike.c: 205: }
  8444  07A1  2FD8               	goto	l722
  8445  07A2                     l5747:	
  8446                           
  8447                           ;klondike.c: 206: else if(FanLevel + Step > 255) {
  8448  07A2  0023               	movlb	3	; select bank3
  8449  07A3  0868               	movf	_FanLevel^(0+384),w
  8450  07A4  0022               	movlb	2	; select bank2
  8451  07A5  0720               	addwf	_Step^(0+256),w
  8452  07A6  0021               	movlb	1	; select bank1
  8453  07A7  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8454  07A8  0022               	movlb	2	; select bank2
  8455  07A9  0821               	movf	(_Step+1)^(0+256),w
  8456  07AA  1803               	skipnc
  8457  07AB  0A21               	incf	(_Step+1)^(0+256),w
  8458  07AC  0021               	movlb	1	; select bank1
  8459  07AD  00DF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  8460  07AE  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  8461  07AF  3A80               	xorlw	128
  8462  07B0  00FF               	movwf	127
  8463  07B1  3081               	movlw	129
  8464  07B2  027F               	subwf	127,w
  8465  07B3  1D03               	skipz
  8466  07B4  2FB7               	goto	u5665
  8467  07B5  3000               	movlw	0
  8468  07B6  025E               	subwf	??_UpdateFanLevel^(0+128),w
  8469  07B7                     u5665:	
  8470  07B7  1C03               	skipc
  8471  07B8  2FBB               	goto	l5751
  8472                           
  8473                           ;klondike.c: 207: FanLevel = 255;
  8474  07B9  30FF               	movlw	255
  8475  07BA  2FD3               	goto	L7
  8476  07BB                     l5751:	
  8477                           ;klondike.c: 208: }
  8478                           
  8479                           
  8480                           ;klondike.c: 209: else if(FanLevel + Step < 75) {
  8481  07BB  0023               	movlb	3	; select bank3
  8482  07BC  0868               	movf	_FanLevel^(0+384),w
  8483  07BD  0022               	movlb	2	; select bank2
  8484  07BE  0720               	addwf	_Step^(0+256),w
  8485  07BF  0021               	movlb	1	; select bank1
  8486  07C0  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8487  07C1  0022               	movlb	2	; select bank2
  8488  07C2  0821               	movf	(_Step+1)^(0+256),w
  8489  07C3  1803               	skipnc
  8490  07C4  0A21               	incf	(_Step+1)^(0+256),w
  8491  07C5  0021               	movlb	1	; select bank1
  8492  07C6  00DF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  8493  07C7  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  8494  07C8  3A80               	xorlw	128
  8495  07C9  00FF               	movwf	127
  8496  07CA  3080               	movlw	128
  8497  07CB  027F               	subwf	127,w
  8498  07CC  1D03               	skipz
  8499  07CD  2FD0               	goto	u5675
  8500  07CE  304B               	movlw	75
  8501  07CF  025E               	subwf	??_UpdateFanLevel^(0+128),w
  8502  07D0                     u5675:	
  8503  07D0  1803               	skipnc
  8504  07D1  2FD8               	goto	l722
  8505                           
  8506                           ;klondike.c: 210: FanLevel = 75;
  8507  07D2  304B               	movlw	75
  8508  07D3                     L7:	
  8509  07D3  0021               	movlb	1	; select bank1
  8510  07D4  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8511  07D5  085E               	movf	??_UpdateFanLevel^(0+128),w
  8512  07D6  0023               	movlb	3	; select bank3
  8513  07D7  00E8               	movwf	_FanLevel^(0+384)
  8514  07D8                     l722:	
  8515                           
  8516                           ;klondike.c: 211: }
  8517                           ;klondike.c: 213: LastTemp = Status.Temp;
  8518  07D8  0022               	movlb	2	; select bank2
  8519  07D9  0868               	movf	(_Status^(0+256)+5),w	;volatile
  8520  07DA  0021               	movlb	1	; select bank1
  8521  07DB  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8522  07DC  085E               	movf	??_UpdateFanLevel^(0+128),w
  8523  07DD  0023               	movlb	3	; select bank3
  8524  07DE  00B5               	movwf	_LastTemp^(0+384)
  8525                           
  8526                           ;klondike.c: 214: LastError = Error;
  8527  07DF  0861               	movf	(_Error+1)^(0+384),w
  8528  07E0  01AD               	clrf	(_LastError+1)^(0+384)
  8529  07E1  07AD               	addwf	(_LastError+1)^(0+384),f
  8530  07E2  0860               	movf	_Error^(0+384),w
  8531  07E3  01AC               	clrf	_LastError^(0+384)
  8532  07E4  07AC               	addwf	_LastError^(0+384),f
  8533                           
  8534                           ;klondike.c: 216: PWM1DCH = Status.FanSpeed = FanLevel;
  8535  07E5  3006               	movlw	6
  8536  07E6  3E63               	addlw	_Status& (0+255)
  8537  07E7  0086               	movwf	6
  8538  07E8  3001               	movlw	1	; select bank2/3
  8539  07E9  0087               	movwf	7
  8540  07EA  0868               	movf	_FanLevel^(0+384),w
  8541  07EB  3FC0               	movwi [0]fsr1
  8542  07EC  002C               	movlb	12	; select bank12
  8543  07ED  0092               	movwf	18	;volatile
  8544  07EE  0008               	return
  8545  07EF                     __end_of_UpdateFanLevel:	
  8546                           
  8547                           	psect	text28
  8548  133C                     __ptext28:	
  8549 ;; *************** function ___fttol *****************
  8550 ;; Defined at:
  8551 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\fttol.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;  f1              3   48[BANK1 ] float 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;  lval            4   57[BANK1 ] unsigned long 
  8556 ;;  exp1            1   61[BANK1 ] unsigned char 
  8557 ;;  sign1           1   56[BANK1 ] unsigned char 
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  4   48[BANK1 ] long 
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, status,0
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8567 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8568 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8569 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8570 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8571 ;;Total ram usage:       14 bytes
  8572 ;; Hardware stack levels used:    1
  8573 ;; Hardware stack levels required when called:    4
  8574 ;; This function calls:
  8575 ;;		Nothing
  8576 ;; This function is called by:
  8577 ;;		_UpdateFanLevel
  8578 ;;		_UpdateClock
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           
  8583                           ;psect for function ___fttol
  8584  133C                     ___fttol:	
  8585                           
  8586                           ;incstack = 0
  8587                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8588  133C  0021               	movlb	1	; select bank1
  8589  133D  0850               	movf	___fttol@f1^(0+128),w
  8590  133E  00D4               	movwf	??___fttol^(0+128)
  8591  133F  0851               	movf	(___fttol@f1+1)^(0+128),w
  8592  1340  00D5               	movwf	(??___fttol^(0+128)+1)
  8593  1341  0852               	movf	(___fttol@f1+2)^(0+128),w
  8594  1342  00D6               	movwf	(??___fttol^(0+128)+2)
  8595  1343  1003               	clrc
  8596  1344  0D55               	rlf	(??___fttol^(0+128)+1),w
  8597  1345  0D56               	rlf	(??___fttol^(0+128)+2),w
  8598  1346  00D7               	movwf	(??___fttol+3)^(0+128)
  8599  1347  0857               	movf	(??___fttol+3)^(0+128),w
  8600  1348  00DD               	movwf	___fttol@exp1^(0+128)
  8601  1349  08DD               	movf	___fttol@exp1^(0+128),f
  8602  134A  1D03               	skipz
  8603  134B  2B55               	goto	l6245
  8604  134C  3000               	movlw	0
  8605  134D  00D3               	movwf	(?___fttol+3)^(0+128)
  8606  134E  3000               	movlw	0
  8607  134F  00D2               	movwf	(?___fttol+2)^(0+128)
  8608  1350  3000               	movlw	0
  8609  1351  00D1               	movwf	(?___fttol+1)^(0+128)
  8610  1352  3000               	movlw	0
  8611  1353  00D0               	movwf	?___fttol^(0+128)
  8612  1354  0008               	return
  8613  1355                     l6245:	
  8614  1355  0850               	movf	___fttol@f1^(0+128),w
  8615  1356  00D4               	movwf	??___fttol^(0+128)
  8616  1357  0851               	movf	(___fttol@f1+1)^(0+128),w
  8617  1358  00D5               	movwf	(??___fttol^(0+128)+1)
  8618  1359  0852               	movf	(___fttol@f1+2)^(0+128),w
  8619  135A  00D6               	movwf	(??___fttol^(0+128)+2)
  8620  135B  3017               	movlw	23
  8621  135C                     u6595:	
  8622  135C  36D6               	lsrf	(??___fttol^(0+128)+2),f
  8623  135D  0CD5               	rrf	(??___fttol^(0+128)+1),f
  8624  135E  0CD4               	rrf	??___fttol^(0+128),f
  8625  135F  0B89               	decfsz	9,f
  8626  1360  2B5C               	goto	u6595
  8627  1361  0854               	movf	??___fttol^(0+128),w
  8628  1362  00D7               	movwf	(??___fttol+3)^(0+128)
  8629  1363  0857               	movf	(??___fttol+3)^(0+128),w
  8630  1364  00D8               	movwf	___fttol@sign1^(0+128)
  8631  1365  17D1               	bsf	(___fttol@f1^(0+128)+1),7
  8632  1366  30FF               	movlw	255
  8633  1367  05D0               	andwf	___fttol@f1^(0+128),f
  8634  1368  30FF               	movlw	255
  8635  1369  05D1               	andwf	(___fttol@f1+1)^(0+128),f
  8636  136A  3000               	movlw	0
  8637  136B  05D2               	andwf	(___fttol@f1+2)^(0+128),f
  8638  136C  0850               	movf	___fttol@f1^(0+128),w
  8639  136D  00D9               	movwf	___fttol@lval^(0+128)
  8640  136E  0851               	movf	(___fttol@f1+1)^(0+128),w
  8641  136F  00DA               	movwf	(___fttol@lval^(0+128)+1)
  8642  1370  0852               	movf	(___fttol@f1+2)^(0+128),w
  8643  1371  00DB               	movwf	(___fttol@lval^(0+128)+2)
  8644  1372  01DC               	clrf	(___fttol@lval^(0+128)+3)
  8645  1373  308E               	movlw	142
  8646  1374  02DD               	subwf	___fttol@exp1^(0+128),f
  8647  1375  1FDD               	btfss	___fttol@exp1^(0+128),7
  8648  1376  2B93               	goto	l6265
  8649  1377  085D               	movf	___fttol@exp1^(0+128),w
  8650  1378  3A80               	xorlw	128
  8651  1379  3E8F               	addlw	143
  8652  137A  1803               	skipnc
  8653  137B  2B85               	goto	l6263
  8654  137C  3000               	movlw	0
  8655  137D  00D3               	movwf	(?___fttol+3)^(0+128)
  8656  137E  3000               	movlw	0
  8657  137F  00D2               	movwf	(?___fttol+2)^(0+128)
  8658  1380  3000               	movlw	0
  8659  1381  00D1               	movwf	(?___fttol+1)^(0+128)
  8660  1382  3000               	movlw	0
  8661  1383  00D0               	movwf	?___fttol^(0+128)
  8662  1384  0008               	return
  8663  1385                     l6263:	
  8664  1385  3001               	movlw	1
  8665  1386                     u6625:	
  8666  1386  36DC               	lsrf	(___fttol@lval+3)^(0+128),f
  8667  1387  0CDB               	rrf	(___fttol@lval+2)^(0+128),f
  8668  1388  0CDA               	rrf	(___fttol@lval+1)^(0+128),f
  8669  1389  0CD9               	rrf	___fttol@lval^(0+128),f
  8670  138A  0B89               	decfsz	9,f
  8671  138B  2B86               	goto	u6625
  8672  138C  3001               	movlw	1
  8673  138D  00D4               	movwf	??___fttol^(0+128)
  8674  138E  0854               	movf	??___fttol^(0+128),w
  8675  138F  07DD               	addwf	___fttol@exp1^(0+128),f
  8676  1390  1903               	btfsc	3,2
  8677  1391  2BAC               	goto	l6275
  8678  1392  2B85               	goto	l6263
  8679  1393                     l6265:	
  8680  1393  3018               	movlw	24
  8681  1394  025D               	subwf	___fttol@exp1^(0+128),w
  8682  1395  1C03               	skipc
  8683  1396  2BA9               	goto	l6273
  8684  1397  3000               	movlw	0
  8685  1398  00D3               	movwf	(?___fttol+3)^(0+128)
  8686  1399  3000               	movlw	0
  8687  139A  00D2               	movwf	(?___fttol+2)^(0+128)
  8688  139B  3000               	movlw	0
  8689  139C  00D1               	movwf	(?___fttol+1)^(0+128)
  8690  139D  3000               	movlw	0
  8691  139E  00D0               	movwf	?___fttol^(0+128)
  8692  139F  0008               	return
  8693  13A0                     l6271:	
  8694  13A0  3001               	movlw	1
  8695  13A1                     u6655:	
  8696  13A1  35D9               	lslf	___fttol@lval^(0+128),f
  8697  13A2  0DDA               	rlf	(___fttol@lval+1)^(0+128),f
  8698  13A3  0DDB               	rlf	(___fttol@lval+2)^(0+128),f
  8699  13A4  0DDC               	rlf	(___fttol@lval+3)^(0+128),f
  8700  13A5  0B89               	decfsz	9,f
  8701  13A6  2BA1               	goto	u6655
  8702  13A7  3001               	movlw	1
  8703  13A8  02DD               	subwf	___fttol@exp1^(0+128),f
  8704  13A9                     l6273:	
  8705  13A9  08DD               	movf	___fttol@exp1^(0+128),f
  8706  13AA  1D03               	skipz
  8707  13AB  2BA0               	goto	l6271
  8708  13AC                     l6275:	
  8709  13AC  0858               	movf	___fttol@sign1^(0+128),w
  8710  13AD  1903               	btfsc	3,2
  8711  13AE  2BBA               	goto	l6279
  8712  13AF  09D9               	comf	___fttol@lval^(0+128),f
  8713  13B0  09DA               	comf	(___fttol@lval+1)^(0+128),f
  8714  13B1  09DB               	comf	(___fttol@lval+2)^(0+128),f
  8715  13B2  09DC               	comf	(___fttol@lval+3)^(0+128),f
  8716  13B3  0AD9               	incf	___fttol@lval^(0+128),f
  8717  13B4  1903               	skipnz
  8718  13B5  0ADA               	incf	(___fttol@lval+1)^(0+128),f
  8719  13B6  1903               	skipnz
  8720  13B7  0ADB               	incf	(___fttol@lval+2)^(0+128),f
  8721  13B8  1903               	skipnz
  8722  13B9  0ADC               	incf	(___fttol@lval+3)^(0+128),f
  8723  13BA                     l6279:	
  8724  13BA  085C               	movf	(___fttol@lval+3)^(0+128),w
  8725  13BB  00D3               	movwf	(?___fttol+3)^(0+128)
  8726  13BC  085B               	movf	(___fttol@lval+2)^(0+128),w
  8727  13BD  00D2               	movwf	(?___fttol+2)^(0+128)
  8728  13BE  085A               	movf	(___fttol@lval+1)^(0+128),w
  8729  13BF  00D1               	movwf	(?___fttol+1)^(0+128)
  8730  13C0  0859               	movf	___fttol@lval^(0+128),w
  8731  13C1  00D0               	movwf	?___fttol^(0+128)
  8732  13C2  0008               	return
  8733  13C3                     __end_of___fttol:	
  8734                           
  8735                           	psect	text29
  8736  18FB                     __ptext29:	
  8737 ;; *************** function ___ftneg *****************
  8738 ;; Defined at:
  8739 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\ftneg.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;  f1              3   16[BANK1 ] float 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;		None
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  3   16[BANK1 ] float 
  8746 ;; Registers used:
  8747 ;;		wreg
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8753 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8757 ;;Total ram usage:        3 bytes
  8758 ;; Hardware stack levels used:    1
  8759 ;; Hardware stack levels required when called:    4
  8760 ;; This function calls:
  8761 ;;		Nothing
  8762 ;; This function is called by:
  8763 ;;		_UpdateFanLevel
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           
  8768                           ;psect for function ___ftneg
  8769  18FB                     ___ftneg:	
  8770                           
  8771                           ;incstack = 0
  8772                           ; Regs used in ___ftneg: [wreg]
  8773  18FB  0021               	movlb	1	; select bank1
  8774  18FC  0832               	movf	(___ftneg@f1+2)^(0+128),w
  8775  18FD  0431               	iorwf	(___ftneg@f1+1)^(0+128),w
  8776  18FE  0430               	iorwf	___ftneg@f1^(0+128),w
  8777  18FF  1903               	skipnz
  8778  1900  0008               	return
  8779  1901  3080               	movlw	128
  8780  1902  06B2               	xorwf	(___ftneg@f1+2)^(0+128),f
  8781  1903  0008               	return
  8782  1904                     __end_of___ftneg:	
  8783                           
  8784                           	psect	text30
  8785  0B17                     __ptext30:	
  8786 ;; *************** function ___ftmul *****************
  8787 ;; Defined at:
  8788 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\ftmul.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;  f1              3    0[BANK1 ] float 
  8791 ;;  f2              3    3[BANK1 ] float 
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;  f3_as_produc    3   11[BANK1 ] unsigned um
  8794 ;;  sign            1   15[BANK1 ] unsigned char 
  8795 ;;  cntr            1   14[BANK1 ] unsigned char 
  8796 ;;  exp             1   10[BANK1 ] unsigned char 
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  3    0[BANK1 ] float 
  8799 ;; Registers used:
  8800 ;;		wreg, status,2, status,0, pclath, cstack
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8806 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8807 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8808 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8810 ;;Total ram usage:       16 bytes
  8811 ;; Hardware stack levels used:    1
  8812 ;; Hardware stack levels required when called:    5
  8813 ;; This function calls:
  8814 ;;		___ftpack
  8815 ;; This function is called by:
  8816 ;;		_UpdateFanLevel
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820                           
  8821                           ;psect for function ___ftmul
  8822  0B17                     ___ftmul:	
  8823                           
  8824                           ;incstack = 0
  8825                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8826  0B17  0021               	movlb	1	; select bank1
  8827  0B18  0820               	movf	___ftmul@f1^(0+128),w
  8828  0B19  00A6               	movwf	??___ftmul^(0+128)
  8829  0B1A  0821               	movf	(___ftmul@f1+1)^(0+128),w
  8830  0B1B  00A7               	movwf	(??___ftmul^(0+128)+1)
  8831  0B1C  0822               	movf	(___ftmul@f1+2)^(0+128),w
  8832  0B1D  00A8               	movwf	(??___ftmul^(0+128)+2)
  8833  0B1E  1003               	clrc
  8834  0B1F  0D27               	rlf	(??___ftmul^(0+128)+1),w
  8835  0B20  0D28               	rlf	(??___ftmul^(0+128)+2),w
  8836  0B21  00A9               	movwf	(??___ftmul+3)^(0+128)
  8837  0B22  0829               	movf	(??___ftmul+3)^(0+128),w
  8838  0B23  00AA               	movwf	___ftmul@exp^(0+128)
  8839  0B24  08AA               	movf	___ftmul@exp^(0+128),f
  8840  0B25  1D03               	skipz
  8841  0B26  2B2E               	goto	l6187
  8842  0B27  3000               	movlw	0
  8843  0B28  00A0               	movwf	?___ftmul^(0+128)
  8844  0B29  3000               	movlw	0
  8845  0B2A  00A1               	movwf	(?___ftmul+1)^(0+128)
  8846  0B2B  3000               	movlw	0
  8847  0B2C  00A2               	movwf	(?___ftmul+2)^(0+128)
  8848  0B2D  0008               	return
  8849  0B2E                     l6187:	
  8850  0B2E  0823               	movf	___ftmul@f2^(0+128),w
  8851  0B2F  00A6               	movwf	??___ftmul^(0+128)
  8852  0B30  0824               	movf	(___ftmul@f2+1)^(0+128),w
  8853  0B31  00A7               	movwf	(??___ftmul^(0+128)+1)
  8854  0B32  0825               	movf	(___ftmul@f2+2)^(0+128),w
  8855  0B33  00A8               	movwf	(??___ftmul^(0+128)+2)
  8856  0B34  1003               	clrc
  8857  0B35  0D27               	rlf	(??___ftmul^(0+128)+1),w
  8858  0B36  0D28               	rlf	(??___ftmul^(0+128)+2),w
  8859  0B37  00A9               	movwf	(??___ftmul+3)^(0+128)
  8860  0B38  0829               	movf	(??___ftmul+3)^(0+128),w
  8861  0B39  00AF               	movwf	___ftmul@sign^(0+128)
  8862  0B3A  08AF               	movf	___ftmul@sign^(0+128),f
  8863  0B3B  1D03               	skipz
  8864  0B3C  2B44               	goto	l6193
  8865  0B3D  3000               	movlw	0
  8866  0B3E  00A0               	movwf	?___ftmul^(0+128)
  8867  0B3F  3000               	movlw	0
  8868  0B40  00A1               	movwf	(?___ftmul+1)^(0+128)
  8869  0B41  3000               	movlw	0
  8870  0B42  00A2               	movwf	(?___ftmul+2)^(0+128)
  8871  0B43  0008               	return
  8872  0B44                     l6193:	
  8873  0B44  082F               	movf	___ftmul@sign^(0+128),w
  8874  0B45  3E7B               	addlw	123
  8875  0B46  00A6               	movwf	??___ftmul^(0+128)
  8876  0B47  0826               	movf	??___ftmul^(0+128),w
  8877  0B48  07AA               	addwf	___ftmul@exp^(0+128),f
  8878  0B49  0820               	movf	___ftmul@f1^(0+128),w
  8879  0B4A  00A6               	movwf	??___ftmul^(0+128)
  8880  0B4B  0821               	movf	(___ftmul@f1+1)^(0+128),w
  8881  0B4C  00A7               	movwf	(??___ftmul^(0+128)+1)
  8882  0B4D  0822               	movf	(___ftmul@f1+2)^(0+128),w
  8883  0B4E  00A8               	movwf	(??___ftmul^(0+128)+2)
  8884  0B4F  3010               	movlw	16
  8885  0B50                     u6475:	
  8886  0B50  36A8               	lsrf	(??___ftmul^(0+128)+2),f
  8887  0B51  0CA7               	rrf	(??___ftmul^(0+128)+1),f
  8888  0B52  0CA6               	rrf	??___ftmul^(0+128),f
  8889  0B53  0B89               	decfsz	9,f
  8890  0B54  2B50               	goto	u6475
  8891  0B55  0826               	movf	??___ftmul^(0+128),w
  8892  0B56  00A9               	movwf	(??___ftmul+3)^(0+128)
  8893  0B57  0829               	movf	(??___ftmul+3)^(0+128),w
  8894  0B58  00AF               	movwf	___ftmul@sign^(0+128)
  8895  0B59  0823               	movf	___ftmul@f2^(0+128),w
  8896  0B5A  00A6               	movwf	??___ftmul^(0+128)
  8897  0B5B  0824               	movf	(___ftmul@f2+1)^(0+128),w
  8898  0B5C  00A7               	movwf	(??___ftmul^(0+128)+1)
  8899  0B5D  0825               	movf	(___ftmul@f2+2)^(0+128),w
  8900  0B5E  00A8               	movwf	(??___ftmul^(0+128)+2)
  8901  0B5F  3010               	movlw	16
  8902  0B60                     u6485:	
  8903  0B60  36A8               	lsrf	(??___ftmul^(0+128)+2),f
  8904  0B61  0CA7               	rrf	(??___ftmul^(0+128)+1),f
  8905  0B62  0CA6               	rrf	??___ftmul^(0+128),f
  8906  0B63  0B89               	decfsz	9,f
  8907  0B64  2B60               	goto	u6485
  8908  0B65  0826               	movf	??___ftmul^(0+128),w
  8909  0B66  00A9               	movwf	(??___ftmul+3)^(0+128)
  8910  0B67  0829               	movf	(??___ftmul+3)^(0+128),w
  8911  0B68  06AF               	xorwf	___ftmul@sign^(0+128),f
  8912  0B69  3080               	movlw	128
  8913  0B6A  00A6               	movwf	??___ftmul^(0+128)
  8914  0B6B  0826               	movf	??___ftmul^(0+128),w
  8915  0B6C  05AF               	andwf	___ftmul@sign^(0+128),f
  8916  0B6D  17A1               	bsf	(___ftmul@f1^(0+128)+1),7
  8917  0B6E  17A4               	bsf	(___ftmul@f2^(0+128)+1),7
  8918  0B6F  30FF               	movlw	255
  8919  0B70  05A3               	andwf	___ftmul@f2^(0+128),f
  8920  0B71  30FF               	movlw	255
  8921  0B72  05A4               	andwf	(___ftmul@f2+1)^(0+128),f
  8922  0B73  3000               	movlw	0
  8923  0B74  05A5               	andwf	(___ftmul@f2+2)^(0+128),f
  8924  0B75  3000               	movlw	0
  8925  0B76  00AB               	movwf	___ftmul@f3_as_product^(0+128)
  8926  0B77  3000               	movlw	0
  8927  0B78  00AC               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  8928  0B79  3000               	movlw	0
  8929  0B7A  00AD               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  8930  0B7B  3007               	movlw	7
  8931  0B7C  00A6               	movwf	??___ftmul^(0+128)
  8932  0B7D  0826               	movf	??___ftmul^(0+128),w
  8933  0B7E  00AE               	movwf	___ftmul@cntr^(0+128)
  8934  0B7F                     l6205:	
  8935  0B7F  1C20               	btfss	___ftmul@f1^(0+128),0
  8936  0B80  2B87               	goto	l6209
  8937  0B81  0823               	movf	___ftmul@f2^(0+128),w
  8938  0B82  07AB               	addwf	___ftmul@f3_as_product^(0+128),f
  8939  0B83  0824               	movf	(___ftmul@f2+1)^(0+128),w
  8940  0B84  3DAC               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8941  0B85  0825               	movf	(___ftmul@f2+2)^(0+128),w
  8942  0B86  3DAD               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8943  0B87                     l6209:	
  8944  0B87  3001               	movlw	1
  8945  0B88                     u6505:	
  8946  0B88  36A2               	lsrf	(___ftmul@f1+2)^(0+128),f
  8947  0B89  0CA1               	rrf	(___ftmul@f1+1)^(0+128),f
  8948  0B8A  0CA0               	rrf	___ftmul@f1^(0+128),f
  8949  0B8B  0B89               	decfsz	9,f
  8950  0B8C  2B88               	goto	u6505
  8951  0B8D  3001               	movlw	1
  8952  0B8E                     u6515:	
  8953  0B8E  35A3               	lslf	___ftmul@f2^(0+128),f
  8954  0B8F  0DA4               	rlf	(___ftmul@f2+1)^(0+128),f
  8955  0B90  0DA5               	rlf	(___ftmul@f2+2)^(0+128),f
  8956  0B91  0B89               	decfsz	9,f
  8957  0B92  2B8E               	goto	u6515
  8958  0B93  3001               	movlw	1
  8959  0B94  02AE               	subwf	___ftmul@cntr^(0+128),f
  8960  0B95  1D03               	btfss	3,2
  8961  0B96  2B7F               	goto	l6205
  8962  0B97  3009               	movlw	9
  8963  0B98  00A6               	movwf	??___ftmul^(0+128)
  8964  0B99  0826               	movf	??___ftmul^(0+128),w
  8965  0B9A  00AE               	movwf	___ftmul@cntr^(0+128)
  8966  0B9B                     l6217:	
  8967  0B9B  1C20               	btfss	___ftmul@f1^(0+128),0
  8968  0B9C  2BA3               	goto	l6221
  8969  0B9D  0823               	movf	___ftmul@f2^(0+128),w
  8970  0B9E  07AB               	addwf	___ftmul@f3_as_product^(0+128),f
  8971  0B9F  0824               	movf	(___ftmul@f2+1)^(0+128),w
  8972  0BA0  3DAC               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8973  0BA1  0825               	movf	(___ftmul@f2+2)^(0+128),w
  8974  0BA2  3DAD               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8975  0BA3                     l6221:	
  8976  0BA3  3001               	movlw	1
  8977  0BA4                     u6545:	
  8978  0BA4  36A2               	lsrf	(___ftmul@f1+2)^(0+128),f
  8979  0BA5  0CA1               	rrf	(___ftmul@f1+1)^(0+128),f
  8980  0BA6  0CA0               	rrf	___ftmul@f1^(0+128),f
  8981  0BA7  0B89               	decfsz	9,f
  8982  0BA8  2BA4               	goto	u6545
  8983  0BA9  3001               	movlw	1
  8984  0BAA                     u6555:	
  8985  0BAA  36AD               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  8986  0BAB  0CAC               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  8987  0BAC  0CAB               	rrf	___ftmul@f3_as_product^(0+128),f
  8988  0BAD  0B89               	decfsz	9,f
  8989  0BAE  2BAA               	goto	u6555
  8990  0BAF  3001               	movlw	1
  8991  0BB0  02AE               	subwf	___ftmul@cntr^(0+128),f
  8992  0BB1  1D03               	btfss	3,2
  8993  0BB2  2B9B               	goto	l6217
  8994  0BB3  082B               	movf	___ftmul@f3_as_product^(0+128),w
  8995  0BB4  0020               	movlb	0	; select bank0
  8996  0BB5  00D8               	movwf	?___ftpack
  8997  0BB6  0021               	movlb	1	; select bank1
  8998  0BB7  082C               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  8999  0BB8  0020               	movlb	0	; select bank0
  9000  0BB9  00D9               	movwf	?___ftpack+1
  9001  0BBA  0021               	movlb	1	; select bank1
  9002  0BBB  082D               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  9003  0BBC  0020               	movlb	0	; select bank0
  9004  0BBD  00DA               	movwf	?___ftpack+2
  9005  0BBE  0021               	movlb	1	; select bank1
  9006  0BBF  082A               	movf	___ftmul@exp^(0+128),w
  9007  0BC0  00A6               	movwf	??___ftmul^(0+128)
  9008  0BC1  0826               	movf	??___ftmul^(0+128),w
  9009  0BC2  0020               	movlb	0	; select bank0
  9010  0BC3  00DB               	movwf	?___ftpack+3
  9011  0BC4  0021               	movlb	1	; select bank1
  9012  0BC5  082F               	movf	___ftmul@sign^(0+128),w
  9013  0BC6  00A7               	movwf	(??___ftmul+1)^(0+128)
  9014  0BC7  0827               	movf	(??___ftmul+1)^(0+128),w
  9015  0BC8  0020               	movlb	0	; select bank0
  9016  0BC9  00DC               	movwf	?___ftpack+4
  9017  0BCA  319F  279F         	fcall	___ftpack
  9018  0BCC  0020               	movlb	0	; select bank0
  9019  0BCD  0858               	movf	?___ftpack,w
  9020  0BCE  0021               	movlb	1	; select bank1
  9021  0BCF  00A0               	movwf	?___ftmul^(0+128)
  9022  0BD0  0020               	movlb	0	; select bank0
  9023  0BD1  0859               	movf	?___ftpack+1,w
  9024  0BD2  0021               	movlb	1	; select bank1
  9025  0BD3  00A1               	movwf	(?___ftmul+1)^(0+128)
  9026  0BD4  0020               	movlb	0	; select bank0
  9027  0BD5  085A               	movf	?___ftpack+2,w
  9028  0BD6  0021               	movlb	1	; select bank1
  9029  0BD7  00A2               	movwf	(?___ftmul+2)^(0+128)
  9030  0BD8  0008               	return
  9031  0BD9                     __end_of___ftmul:	
  9032                           
  9033                           	psect	text31
  9034  1AE7                     __ptext31:	
  9035 ;; *************** function ___awtoft *****************
  9036 ;; Defined at:
  9037 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\awtoft.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;  c               2   16[BANK0 ] int 
  9040 ;; Auto vars:     Size  Location     Type
  9041 ;;  sign            1   21[BANK0 ] unsigned char 
  9042 ;; Return value:  Size  Location     Type
  9043 ;;                  3   16[BANK0 ] float 
  9044 ;; Registers used:
  9045 ;;		wreg, status,2, status,0, pclath, cstack
  9046 ;; Tracked objects:
  9047 ;;		On entry : 0/0
  9048 ;;		On exit  : 0/0
  9049 ;;		Unchanged: 0/0
  9050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9051 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9052 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9053 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9054 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9055 ;;Total ram usage:        6 bytes
  9056 ;; Hardware stack levels used:    1
  9057 ;; Hardware stack levels required when called:    5
  9058 ;; This function calls:
  9059 ;;		___ftpack
  9060 ;; This function is called by:
  9061 ;;		_UpdateFanLevel
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           
  9066                           ;psect for function ___awtoft
  9067  1AE7                     ___awtoft:	
  9068                           
  9069                           ;incstack = 0
  9070                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9071  1AE7  0020               	movlb	0	; select bank0
  9072  1AE8  01E5               	clrf	___awtoft@sign
  9073  1AE9  1FE1               	btfss	___awtoft@c+1,7
  9074  1AEA  2AF2               	goto	l6047
  9075  1AEB  09E0               	comf	___awtoft@c,f
  9076  1AEC  09E1               	comf	___awtoft@c+1,f
  9077  1AED  0AE0               	incf	___awtoft@c,f
  9078  1AEE  1903               	skipnz
  9079  1AEF  0AE1               	incf	___awtoft@c+1,f
  9080  1AF0  01E5               	clrf	___awtoft@sign
  9081  1AF1  0AE5               	incf	___awtoft@sign,f
  9082  1AF2                     l6047:	
  9083  1AF2  0860               	movf	___awtoft@c,w
  9084  1AF3  00D8               	movwf	?___ftpack
  9085  1AF4  0861               	movf	___awtoft@c+1,w
  9086  1AF5  00D9               	movwf	?___ftpack+1
  9087  1AF6  01DA               	clrf	?___ftpack+2
  9088  1AF7  308E               	movlw	142
  9089  1AF8  00E3               	movwf	??___awtoft
  9090  1AF9  0863               	movf	??___awtoft,w
  9091  1AFA  00DB               	movwf	?___ftpack+3
  9092  1AFB  0865               	movf	___awtoft@sign,w
  9093  1AFC  00E4               	movwf	??___awtoft+1
  9094  1AFD  0864               	movf	??___awtoft+1,w
  9095  1AFE  00DC               	movwf	?___ftpack+4
  9096  1AFF  319F  279F         	fcall	___ftpack
  9097  1B01  0020               	movlb	0	; select bank0
  9098  1B02  0858               	movf	?___ftpack,w
  9099  1B03  00E0               	movwf	?___awtoft
  9100  1B04  0859               	movf	?___ftpack+1,w
  9101  1B05  00E1               	movwf	?___awtoft+1
  9102  1B06  085A               	movf	?___ftpack+2,w
  9103  1B07  00E2               	movwf	?___awtoft+2
  9104  1B08  0008               	return
  9105  1B09                     __end_of___awtoft:	
  9106                           
  9107                           	psect	text32
  9108  0BD9                     __ptext32:	
  9109 ;; *************** function _USBDeviceTasks *****************
  9110 ;; Defined at:
  9111 ;;		line 669 in file "../USB/usb_device.c"
  9112 ;; Parameters:    Size  Location     Type
  9113 ;;		None
  9114 ;; Auto vars:     Size  Location     Type
  9115 ;;  i               1   20[BANK1 ] unsigned char 
  9116 ;; Return value:  Size  Location     Type
  9117 ;;		None               void
  9118 ;; Registers used:
  9119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9120 ;; Tracked objects:
  9121 ;;		On entry : 0/0
  9122 ;;		On exit  : 0/0
  9123 ;;		Unchanged: 0/0
  9124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9126 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9127 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9128 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9129 ;;Total ram usage:        3 bytes
  9130 ;; Hardware stack levels used:    1
  9131 ;; Hardware stack levels required when called:   12
  9132 ;; This function calls:
  9133 ;;		_USBDeviceInit
  9134 ;;		_USBWakeFromSuspend
  9135 ;;		_USBSuspend
  9136 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9137 ;;		_USBCtrlEPAllowStatusStage
  9138 ;;		_USBStallHandler
  9139 ;;		_USBCtrlEPService
  9140 ;; This function is called by:
  9141 ;;		_main
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           
  9145                           
  9146                           ;psect for function _USBDeviceTasks
  9147  0BD9                     _USBDeviceTasks:	
  9148                           
  9149                           ;usb_device.c: 735: }
  9150                           ;usb_device.c: 757: if(USBDeviceState == DETACHED_STATE)
  9151                           
  9152                           ;usb_device.c: 734: return;
  9153                           
  9154                           ;usb_device.c: 733: PIR2bits.USBIF = 0;;
  9155                           
  9156                           ;usb_device.c: 705: USBDeviceState = DETACHED_STATE;
  9157                           
  9158                           ;usb_device.c: 702: UIE = 0;
  9159                           
  9160                           ;usb_device.c: 697: {
  9161                           ;usb_device.c: 699: UCON = 0;
  9162                           
  9163                           ;usb_device.c: 670: BYTE i;
  9164                           ;usb_device.c: 696: if (1 != 1)
  9165                           
  9166                           ;incstack = 0
  9167                           ; Regs used in _USBDeviceTasks: [allreg]
  9168  0BD9  0021               	movlb	1	; select bank1
  9169  0BDA  08EE               	movf	_USBDeviceState^(0+128),f
  9170  0BDB  1D03               	skipz
  9171  0BDC  2BED               	goto	l6631
  9172                           
  9173                           ;usb_device.c: 758: {
  9174                           ;usb_device.c: 760: UCON = 0;
  9175  0BDD  003D               	movlb	29	; select bank29
  9176  0BDE  018E               	clrf	14	;volatile
  9177                           
  9178                           ;usb_device.c: 763: UIE = 0;
  9179  0BDF  0192               	clrf	18	;volatile
  9180                           
  9181                           ;usb_device.c: 767: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  9182  0BE0  3016               	movlw	22
  9183  0BE1  0091               	movwf	17	;volatile
  9184  0BE2  309F               	movlw	159
  9185  0BE3  0097               	movwf	23	;volatile
  9186  0BE4  307B               	movlw	123
  9187  0BE5  0092               	movwf	18	;volatile
  9188  0BE6                     l140:	
  9189                           ;usb_device.c: 770: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  9190                           
  9191  0BE6  198E               	btfsc	14,3	;volatile
  9192  0BE7  2BEA               	goto	l142
  9193  0BE8  158E               	bsf	14,3	;volatile
  9194  0BE9  2BE6               	goto	l140
  9195  0BEA                     l142:	
  9196                           
  9197                           ;usb_device.c: 773: USBDeviceState = ATTACHED_STATE;
  9198  0BEA  0021               	movlb	1	; select bank1
  9199  0BEB  01EE               	clrf	_USBDeviceState^(0+128)
  9200  0BEC  0AEE               	incf	_USBDeviceState^(0+128),f
  9201  0BED                     l6631:	
  9202                           
  9203                           ;usb_device.c: 778: }
  9204                           ;usb_device.c: 781: if(USBDeviceState == ATTACHED_STATE)
  9205  0BED  086E               	movf	_USBDeviceState^(0+128),w
  9206  0BEE  3A01               	xorlw	1
  9207  0BEF  1D03               	skipz
  9208  0BF0  2BFD               	goto	l6643
  9209                           
  9210                           ;usb_device.c: 782: {
  9211                           ;usb_device.c: 792: if(!UCONbits.SE0)
  9212  0BF1  003D               	movlb	29	; select bank29
  9213  0BF2  1A8E               	btfsc	14,5	;volatile
  9214  0BF3  2BFD               	goto	l6643
  9215                           
  9216                           ;usb_device.c: 793: {
  9217                           ;usb_device.c: 794: UIR = 0;;
  9218  0BF4  0190               	clrf	16	;volatile
  9219                           
  9220                           ;usb_device.c: 796: UIE=0;
  9221  0BF5  0192               	clrf	18	;volatile
  9222                           
  9223                           ;usb_device.c: 798: UIEbits.URSTIE = 1;
  9224  0BF6  1412               	bsf	18,0	;volatile
  9225                           
  9226                           ;usb_device.c: 799: UIEbits.IDLEIE = 1;
  9227  0BF7  1612               	bsf	18,4	;volatile
  9228                           
  9229                           ;usb_device.c: 800: USBDeviceState = POWERED_STATE;
  9230  0BF8  3002               	movlw	2
  9231  0BF9  0021               	movlb	1	; select bank1
  9232  0BFA  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9233  0BFB  0832               	movf	??_USBDeviceTasks^(0+128),w
  9234  0BFC  00EE               	movwf	_USBDeviceState^(0+128)
  9235  0BFD                     l6643:	
  9236                           
  9237                           ;usb_device.c: 801: }
  9238                           ;usb_device.c: 802: }
  9239                           ;usb_device.c: 818: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  9240  0BFD  003D               	movlb	29	; select bank29
  9241  0BFE  1910               	btfsc	16,2	;volatile
  9242  0BFF  1D12               	btfss	18,2	;volatile
  9243  0C00  2C0A               	goto	l6651
  9244                           
  9245                           ;usb_device.c: 819: {
  9246                           ;usb_device.c: 820: (UIR &= 0xFB);
  9247  0C01  30FB               	movlw	251
  9248  0C02  0021               	movlb	1	; select bank1
  9249  0C03  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9250  0C04  0832               	movf	??_USBDeviceTasks^(0+128),w
  9251  0C05  003D               	movlb	29	; select bank29
  9252  0C06  0590               	andwf	16,f	;volatile
  9253                           
  9254                           ;usb_device.c: 824: USBWakeFromSuspend();
  9255  0C07  3199  21B7  318B   	fcall	_USBWakeFromSuspend
  9256  0C0A                     l6651:	
  9257                           
  9258                           ;usb_device.c: 826: }
  9259                           ;usb_device.c: 831: if(UCONbits.SUSPND==1)
  9260  0C0A  003D               	movlb	29	; select bank29
  9261  0C0B  1C8E               	btfss	14,1	;volatile
  9262  0C0C  2C10               	goto	l146
  9263                           
  9264                           ;usb_device.c: 832: {
  9265                           ;usb_device.c: 833: PIR2bits.USBIF = 0;;
  9266  0C0D  0020               	movlb	0	; select bank0
  9267  0C0E  1112               	bcf	18,2	;volatile
  9268                           
  9269                           ;usb_device.c: 834: return;
  9270  0C0F  0008               	return
  9271  0C10                     l146:	
  9272                           
  9273                           ;usb_device.c: 835: }
  9274                           ;usb_device.c: 847: if(UIRbits.URSTIF && UIEbits.URSTIE)
  9275  0C10  1810               	btfsc	16,0	;volatile
  9276  0C11  1C12               	btfss	18,0	;volatile
  9277  0C12  2C20               	goto	l6663
  9278                           
  9279                           ;usb_device.c: 848: {
  9280                           ;usb_device.c: 849: USBDeviceInit();
  9281  0C13  3197  2756  318B   	fcall	_USBDeviceInit
  9282                           
  9283                           ;usb_device.c: 853: ;
  9284                           ;usb_device.c: 855: USBDeviceState = DEFAULT_STATE;
  9285  0C16  3004               	movlw	4
  9286  0C17  0021               	movlb	1	; select bank1
  9287  0C18  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9288  0C19  0832               	movf	??_USBDeviceTasks^(0+128),w
  9289  0C1A  00EE               	movwf	_USBDeviceState^(0+128)
  9290                           
  9291                           ;usb_device.c: 865: (UIR &= 0xFE);
  9292  0C1B  30FE               	movlw	254
  9293  0C1C  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9294  0C1D  0832               	movf	??_USBDeviceTasks^(0+128),w
  9295  0C1E  003D               	movlb	29	; select bank29
  9296  0C1F  0590               	andwf	16,f	;volatile
  9297  0C20                     l6663:	
  9298                           
  9299                           ;usb_device.c: 866: }
  9300                           ;usb_device.c: 871: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  9301  0C20  1A10               	btfsc	16,4	;volatile
  9302  0C21  1E12               	btfss	18,4	;volatile
  9303  0C22  2C2C               	goto	l6671
  9304                           
  9305                           ;usb_device.c: 872: {
  9306                           ;usb_device.c: 877: USBSuspend();
  9307  0C23  3199  21EE  318B   	fcall	_USBSuspend
  9308                           
  9309                           ;usb_device.c: 880: (UIR &= 0xEF);
  9310  0C26  30EF               	movlw	239
  9311  0C27  0021               	movlb	1	; select bank1
  9312  0C28  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9313  0C29  0832               	movf	??_USBDeviceTasks^(0+128),w
  9314  0C2A  003D               	movlb	29	; select bank29
  9315  0C2B  0590               	andwf	16,f	;volatile
  9316  0C2C                     l6671:	
  9317                           
  9318                           ;usb_device.c: 881: }
  9319                           ;usb_device.c: 883: if(UIRbits.SOFIF)
  9320  0C2C  1F10               	btfss	16,6	;volatile
  9321  0C2D  2C52               	goto	l6687
  9322                           
  9323                           ;usb_device.c: 884: {
  9324                           ;usb_device.c: 885: if(UIEbits.SOFIE)
  9325  0C2E  1F12               	btfss	18,6	;volatile
  9326  0C2F  2C40               	goto	l6677
  9327                           
  9328                           ;usb_device.c: 886: {
  9329                           ;usb_device.c: 887: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  9330  0C30  3073               	movlw	115
  9331  0C31  0021               	movlb	1	; select bank1
  9332  0C32  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  9333  0C33  3000               	movlw	0
  9334  0C34  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  9335  0C35  3000               	movlw	0
  9336  0C36  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  9337  0C37  3000               	movlw	0
  9338  0C38  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
  9339  0C39  3001               	movlw	1
  9340  0C3A  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  9341  0C3B  3000               	movlw	0
  9342  0C3C  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
  9343  0C3D  319C  2423  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  9344  0C40                     l6677:	
  9345                           
  9346                           ;usb_device.c: 888: }
  9347                           ;usb_device.c: 889: (UIR &= 0xBF);
  9348  0C40  30BF               	movlw	191
  9349  0C41  0021               	movlb	1	; select bank1
  9350  0C42  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9351  0C43  0832               	movf	??_USBDeviceTasks^(0+128),w
  9352  0C44  003D               	movlb	29	; select bank29
  9353  0C45  0590               	andwf	16,f	;volatile
  9354                           
  9355                           ;usb_device.c: 914: if(USBStatusStageTimeoutCounter != 0u)
  9356  0C46  0022               	movlb	2	; select bank2
  9357  0C47  0832               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  9358  0C48  1903               	btfsc	3,2
  9359  0C49  2C4C               	goto	l6683
  9360                           
  9361                           ;usb_device.c: 915: {
  9362                           ;usb_device.c: 916: USBStatusStageTimeoutCounter--;
  9363  0C4A  3001               	movlw	1
  9364  0C4B  02B2               	subwf	_USBStatusStageTimeoutCounter^(0+256),f
  9365  0C4C                     l6683:	
  9366                           
  9367                           ;usb_device.c: 917: }
  9368                           ;usb_device.c: 923: if(USBStatusStageTimeoutCounter == 0)
  9369  0C4C  08B2               	movf	_USBStatusStageTimeoutCounter^(0+256),f
  9370  0C4D  1D03               	skipz
  9371  0C4E  2C52               	goto	l6687
  9372                           
  9373                           ;usb_device.c: 924: {
  9374                           ;usb_device.c: 925: USBCtrlEPAllowStatusStage();
  9375  0C4F  3190  2064  318B   	fcall	_USBCtrlEPAllowStatusStage
  9376  0C52                     l6687:	
  9377                           
  9378                           ;usb_device.c: 926: }
  9379                           ;usb_device.c: 928: }
  9380                           ;usb_device.c: 930: if(UIRbits.STALLIF && UIEbits.STALLIE)
  9381  0C52  003D               	movlb	29	; select bank29
  9382  0C53  1A90               	btfsc	16,5	;volatile
  9383  0C54  1E92               	btfss	18,5	;volatile
  9384  0C55  2C59               	goto	l6693
  9385                           
  9386                           ;usb_device.c: 931: {
  9387                           ;usb_device.c: 932: USBStallHandler();
  9388  0C56  319A  22C5  318B   	fcall	_USBStallHandler
  9389  0C59                     l6693:	
  9390                           
  9391                           ;usb_device.c: 933: }
  9392                           ;usb_device.c: 935: if(UIRbits.UERRIF && UIEbits.UERRIE)
  9393  0C59  003D               	movlb	29	; select bank29
  9394  0C5A  1890               	btfsc	16,1	;volatile
  9395  0C5B  1C92               	btfss	18,1	;volatile
  9396  0C5C  2C6F               	goto	l6701
  9397                           
  9398                           ;usb_device.c: 936: {
  9399                           ;usb_device.c: 937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  9400  0C5D  30FF               	movlw	255
  9401  0C5E  0021               	movlb	1	; select bank1
  9402  0C5F  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  9403  0C60  307F               	movlw	127
  9404  0C61  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  9405  0C62  3000               	movlw	0
  9406  0C63  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  9407  0C64  3000               	movlw	0
  9408  0C65  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
  9409  0C66  3001               	movlw	1
  9410  0C67  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  9411  0C68  3000               	movlw	0
  9412  0C69  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
  9413  0C6A  319C  2423  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  9414                           
  9415                           ;usb_device.c: 938: UEIR = 0;;
  9416  0C6D  003D               	movlb	29	; select bank29
  9417  0C6E  0193               	clrf	19	;volatile
  9418  0C6F                     l6701:	
  9419                           
  9420                           ;usb_device.c: 946: }
  9421                           ;usb_device.c: 953: if(USBDeviceState < DEFAULT_STATE)
  9422  0C6F  3004               	movlw	4
  9423  0C70  0021               	movlb	1	; select bank1
  9424  0C71  026E               	subwf	_USBDeviceState^(0+128),w
  9425  0C72  1803               	skipnc
  9426  0C73  2C77               	goto	l155
  9427                           
  9428                           ;usb_device.c: 954: {
  9429                           ;usb_device.c: 955: PIR2bits.USBIF = 0;;
  9430  0C74  0020               	movlb	0	; select bank0
  9431  0C75  1112               	bcf	18,2	;volatile
  9432                           
  9433                           ;usb_device.c: 956: return;
  9434  0C76  0008               	return
  9435  0C77                     l155:	
  9436                           
  9437                           ;usb_device.c: 957: }
  9438                           ;usb_device.c: 962: if(UIEbits.TRNIE)
  9439  0C77  003D               	movlb	29	; select bank29
  9440  0C78  1D92               	btfss	18,3	;volatile
  9441  0C79  2CCD               	goto	l156
  9442                           
  9443                           ;usb_device.c: 963: {
  9444                           ;usb_device.c: 964: for(i = 0; i < 4u; i++)
  9445  0C7A  0021               	movlb	1	; select bank1
  9446  0C7B  01B4               	clrf	USBDeviceTasks@i^(0+128)
  9447  0C7C  2CC6               	goto	L9
  9448  0C7D                     l6711:	
  9449                           
  9450                           ;usb_device.c: 967: {
  9451                           ;usb_device.c: 969: USTATcopy.Val = USTAT;
  9452  0C7D  080F               	movf	15,w	;volatile
  9453  0C7E  0021               	movlb	1	; select bank1
  9454  0C7F  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9455  0C80  0832               	movf	??_USBDeviceTasks^(0+128),w
  9456  0C81  00EF               	movwf	_USTATcopy^(0+128)
  9457                           
  9458                           ;usb_device.c: 970: endpoint_number = USTATcopy.endpoint_number;
  9459  0C82  0C6F               	rrf	_USTATcopy^(0+128),w
  9460  0C83  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9461  0C84  0CB2               	rrf	??_USBDeviceTasks^(0+128),f
  9462  0C85  0C32               	rrf	??_USBDeviceTasks^(0+128),w
  9463  0C86  390F               	andlw	15
  9464  0C87  00B3               	movwf	(??_USBDeviceTasks+1)^(0+128)
  9465  0C88  0833               	movf	(??_USBDeviceTasks+1)^(0+128),w
  9466  0C89  0022               	movlb	2	; select bank2
  9467  0C8A  00B4               	movwf	_endpoint_number^(0+256)
  9468                           
  9469                           ;usb_device.c: 972: (UIR &= 0xF7);
  9470  0C8B  30F7               	movlw	247
  9471  0C8C  0021               	movlb	1	; select bank1
  9472  0C8D  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9473  0C8E  0832               	movf	??_USBDeviceTasks^(0+128),w
  9474  0C8F  003D               	movlb	29	; select bank29
  9475  0C90  0590               	andwf	16,f	;volatile
  9476                           
  9477                           ;usb_device.c: 977: if(USTATcopy.direction == 0)
  9478  0C91  0021               	movlb	1	; select bank1
  9479  0C92  196F               	btfsc	_USTATcopy^(0+128),2
  9480  0C93  2C98               	goto	l6721
  9481                           
  9482                           ;usb_device.c: 978: {
  9483                           ;usb_device.c: 979: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  9484  0C94  0022               	movlb	2	; select bank2
  9485  0C95  0834               	movf	_endpoint_number^(0+256),w
  9486  0C96  3EB0               	addlw	_ep_data_out& (0+255)
  9487  0C97  2C9B               	goto	L8
  9488  0C98                     l6721:	
  9489                           ;usb_device.c: 980: }
  9490                           
  9491                           
  9492                           ;usb_device.c: 981: else
  9493                           ;usb_device.c: 982: {
  9494                           ;usb_device.c: 983: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  9495  0C98  0022               	movlb	2	; select bank2
  9496  0C99  0834               	movf	_endpoint_number^(0+256),w
  9497  0C9A  3EAE               	addlw	_ep_data_in& (0+255)
  9498  0C9B                     L8:	
  9499  0C9B  0086               	movwf	6
  9500  0C9C  3001               	movlw	1	; select bank3/4
  9501  0C9D  0087               	movwf	7
  9502  0C9E  0801               	movf	1,w
  9503  0C9F  3901               	andlw	1
  9504  0CA0  0021               	movlb	1	; select bank1
  9505  0CA1  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9506  0CA2  3001               	movlw	1
  9507  0CA3  06B2               	xorwf	??_USBDeviceTasks^(0+128),f
  9508  0CA4  0801               	movf	1,w
  9509  0CA5  0632               	xorwf	??_USBDeviceTasks^(0+128),w
  9510  0CA6  39FE               	andlw	-2
  9511  0CA7  0632               	xorwf	??_USBDeviceTasks^(0+128),w
  9512  0CA8  0081               	movwf	1
  9513                           
  9514                           ;usb_device.c: 984: }
  9515                           ;usb_device.c: 989: if(endpoint_number == 0)
  9516  0CA9  0022               	movlb	2	; select bank2
  9517  0CAA  08B4               	movf	_endpoint_number^(0+256),f
  9518  0CAB  1D03               	skipz
  9519  0CAC  2CB1               	goto	l6727
  9520                           
  9521                           ;usb_device.c: 990: {
  9522                           ;usb_device.c: 991: USBCtrlEPService();
  9523  0CAD  3191  21BB  318B   	fcall	_USBCtrlEPService
  9524                           
  9525                           ;usb_device.c: 992: }
  9526  0CB0  2CC1               	goto	l6729
  9527  0CB1                     l6727:	
  9528                           
  9529                           ;usb_device.c: 993: else
  9530                           ;usb_device.c: 994: {
  9531                           ;usb_device.c: 995: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(BYTE*)&USTATcopy.Val
      +                          ,0);
  9532  0CB1  3072               	movlw	114
  9533  0CB2  0021               	movlb	1	; select bank1
  9534  0CB3  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  9535  0CB4  3000               	movlw	0
  9536  0CB5  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  9537  0CB6  30EF               	movlw	low _USTATcopy
  9538  0CB7  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  9539  0CB8  3000               	movlw	high _USTATcopy
  9540  0CB9  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
  9541  0CBA  3000               	movlw	0
  9542  0CBB  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  9543  0CBC  3000               	movlw	0
  9544  0CBD  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
  9545  0CBE  319C  2423  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  9546  0CC1                     l6729:	
  9547                           ;usb_device.c: 998: else
  9548                           ;usb_device.c: 999: break;
  9549                           
  9550                           ;usb_device.c: 996: }
  9551                           ;usb_device.c: 997: }
  9552                           
  9553  0CC1  3001               	movlw	1
  9554  0CC2  0021               	movlb	1	; select bank1
  9555  0CC3  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9556  0CC4  0832               	movf	??_USBDeviceTasks^(0+128),w
  9557  0CC5  07B4               	addwf	USBDeviceTasks@i^(0+128),f
  9558  0CC6                     L9:	
  9559  0CC6  3004               	movlw	4
  9560  0CC7  0234               	subwf	USBDeviceTasks@i^(0+128),w
  9561  0CC8  1803               	btfsc	3,0
  9562  0CC9  2CCD               	goto	l156
  9563                           
  9564                           ;usb_device.c: 965: {
  9565                           ;usb_device.c: 966: if(UIRbits.TRNIF)
  9566  0CCA  003D               	movlb	29	; select bank29
  9567  0CCB  1990               	btfsc	16,3	;volatile
  9568  0CCC  2C7D               	goto	l6711
  9569  0CCD                     l156:	
  9570                           
  9571                           ;usb_device.c: 1000: }
  9572                           ;usb_device.c: 1001: }
  9573                           ;usb_device.c: 1003: PIR2bits.USBIF = 0;;
  9574  0CCD  0020               	movlb	0	; select bank0
  9575  0CCE  1112               	bcf	18,2	;volatile
  9576  0CCF  0008               	return
  9577  0CD0                     __end_of_USBDeviceTasks:	
  9578                           
  9579                           	psect	text33
  9580  11BB                     __ptext33:	
  9581 ;; *************** function _USBCtrlEPService *****************
  9582 ;; Defined at:
  9583 ;;		line 2523 in file "../USB/usb_device.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;		None
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;  setup_cnt       1   17[BANK1 ] unsigned char 
  9588 ;; Return value:  Size  Location     Type
  9589 ;;		None               void
  9590 ;; Registers used:
  9591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9598 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;Total ram usage:        4 bytes
  9602 ;; Hardware stack levels used:    1
  9603 ;; Hardware stack levels required when called:   11
  9604 ;; This function calls:
  9605 ;;		_USBCtrlTrfSetupHandler
  9606 ;;		_USBCtrlTrfOutHandler
  9607 ;;		_USBCtrlTrfInHandler
  9608 ;; This function is called by:
  9609 ;;		_USBDeviceTasks
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           
  9613                           
  9614                           ;psect for function _USBCtrlEPService
  9615  11BB                     _USBCtrlEPService:	
  9616                           
  9617                           ;usb_device.c: 2528: USBStatusStageTimeoutCounter = (BYTE)40;
  9618                           
  9619                           ;incstack = 0
  9620                           ; Regs used in _USBCtrlEPService: [allreg]
  9621  11BB  3028               	movlw	40
  9622  11BC  0021               	movlb	1	; select bank1
  9623  11BD  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9624  11BE  082E               	movf	??_USBCtrlEPService^(0+128),w
  9625  11BF  0022               	movlb	2	; select bank2
  9626  11C0  00B2               	movwf	_USBStatusStageTimeoutCounter^(0+256)
  9627                           
  9628                           ;usb_device.c: 2532: if((USTATcopy.Val & ~0x02) == 0x00)
  9629  11C1  0021               	movlb	1	; select bank1
  9630  11C2  086F               	movf	_USTATcopy^(0+128),w
  9631  11C3  39FD               	andlw	253
  9632  11C4  1D03               	btfss	3,2
  9633  11C5  2A2C               	goto	l6841
  9634                           
  9635                           ;usb_device.c: 2533: {
  9636                           ;usb_device.c: 2536: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  9637  11C6  366F               	lsrf	_USTATcopy^(0+128),w
  9638  11C7  393F               	andlw	63
  9639  11C8  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9640  11C9  3001               	movlw	1
  9641  11CA                     u7465:	
  9642  11CA  35AE               	lslf	??_USBCtrlEPService^(0+128),f
  9643  11CB  3EFF               	addlw	-1
  9644  11CC  1D03               	skipz
  9645  11CD  29CA               	goto	u7465
  9646  11CE  352E               	lslf	??_USBCtrlEPService^(0+128),w
  9647  11CF  3E20               	addlw	32
  9648  11D0  00AF               	movwf	(??_USBCtrlEPService+1)^(0+128)
  9649  11D1  082F               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9650  11D2  0020               	movlb	0	; select bank0
  9651  11D3  00ED               	movwf	_pBDTEntryEP0OutCurrent
  9652                           
  9653                           ;usb_device.c: 2544: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9654  11D4  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9655  11D5  0021               	movlb	1	; select bank1
  9656  11D6  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9657  11D7  082E               	movf	??_USBCtrlEPService^(0+128),w
  9658  11D8  0020               	movlb	0	; select bank0
  9659  11D9  00EE               	movwf	_pBDTEntryEP0OutNext
  9660                           
  9661                           ;usb_device.c: 2546: ((BYTE_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  9662  11DA  3004               	movlw	4
  9663  11DB  0021               	movlb	1	; select bank1
  9664  11DC  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9665  11DD  082E               	movf	??_USBCtrlEPService^(0+128),w
  9666  11DE  0020               	movlb	0	; select bank0
  9667  11DF  06EE               	xorwf	_pBDTEntryEP0OutNext,f
  9668                           
  9669                           ;usb_device.c: 2549: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  9670  11E0  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9671  11E1  0086               	movwf	6
  9672  11E2  0187               	clrf	7
  9673  11E3  0C01               	rrf	1,w
  9674  11E4  0C89               	rrf	9,f
  9675  11E5  390F               	andlw	15
  9676  11E6  3A0D               	xorlw	13
  9677  11E7  1D03               	skipz
  9678  11E8  2A29               	goto	l6839
  9679                           
  9680                           ;usb_device.c: 2550: {
  9681                           ;usb_device.c: 2551: unsigned char setup_cnt;
  9682                           ;usb_device.c: 2557: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  9683  11E9  0021               	movlb	1	; select bank1
  9684  11EA  01B1               	clrf	USBCtrlEPService@setup_cnt^(0+128)
  9685  11EB  3008               	movlw	8
  9686  11EC  0231               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  9687  11ED  1803               	btfsc	3,0
  9688  11EE  2A18               	goto	l6835
  9689  11EF                     l6829:	
  9690                           
  9691                           ;usb_device.c: 2558: {
  9692                           ;usb_device.c: 2559: *(BYTE*)((BYTE*)&SetupPkt + setup_cnt) = *(BYTE*)((void *)(pBDTEntr
      +                          yEP0OutCurrent->ADR));
  9693  11EF  0020               	movlb	0	; select bank0
  9694  11F0  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9695  11F1  3E02               	addlw	2
  9696  11F2  0086               	movwf	6
  9697  11F3  0187               	clrf	7
  9698  11F4  3F40               	moviw [0]fsr1
  9699  11F5  0021               	movlb	1	; select bank1
  9700  11F6  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9701  11F7  3F41               	moviw [1]fsr1
  9702  11F8  00AF               	movwf	(??_USBCtrlEPService^(0+128)+1)
  9703  11F9  082E               	movf	??_USBCtrlEPService^(0+128),w
  9704  11FA  0086               	movwf	6
  9705  11FB  082F               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9706  11FC  0087               	movwf	7
  9707  11FD  0801               	movf	1,w
  9708  11FE  00B0               	movwf	(??_USBCtrlEPService+2)^(0+128)
  9709  11FF  0831               	movf	USBCtrlEPService@setup_cnt^(0+128),w
  9710  1200  3E40               	addlw	64
  9711  1201  0086               	movwf	6
  9712  1202  0187               	clrf	7
  9713  1203  0830               	movf	(??_USBCtrlEPService+2)^(0+128),w
  9714  1204  0081               	movwf	1
  9715                           
  9716                           ;usb_device.c: 2560: pBDTEntryEP0OutCurrent->ADR++;
  9717  1205  0020               	movlb	0	; select bank0
  9718  1206  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9719  1207  3E02               	addlw	2
  9720  1208  0086               	movwf	6
  9721  1209  0187               	clrf	7
  9722  120A  3001               	movlw	1
  9723  120B  0781               	addwf	1,f
  9724  120C  3141               	addfsr 1,1
  9725  120D  1803               	skipnc
  9726  120E  0A81               	incf	1,f
  9727  120F  3001               	movlw	1
  9728  1210  0021               	movlb	1	; select bank1
  9729  1211  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9730  1212  082E               	movf	??_USBCtrlEPService^(0+128),w
  9731  1213  07B1               	addwf	USBCtrlEPService@setup_cnt^(0+128),f
  9732  1214  3008               	movlw	8
  9733  1215  0231               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  9734  1216  1C03               	skipc
  9735  1217  29EF               	goto	l6829
  9736  1218                     l6835:	
  9737                           
  9738                           ;usb_device.c: 2561: }
  9739                           ;usb_device.c: 2562: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  9740  1218  3040               	movlw	64
  9741  1219  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9742  121A  3000               	movlw	0
  9743  121B  00AF               	movwf	(??_USBCtrlEPService^(0+128)+1)
  9744  121C  0020               	movlb	0	; select bank0
  9745  121D  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9746  121E  3E02               	addlw	2
  9747  121F  0086               	movwf	6
  9748  1220  0187               	clrf	7
  9749  1221  0021               	movlb	1	; select bank1
  9750  1222  082E               	movf	??_USBCtrlEPService^(0+128),w
  9751  1223  3FC0               	movwi [0]fsr1
  9752  1224  082F               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9753  1225  3FC1               	movwi [1]fsr1
  9754                           
  9755                           ;usb_device.c: 2565: USBCtrlTrfSetupHandler();
  9756  1226  319D  253A         	fcall	_USBCtrlTrfSetupHandler
  9757                           
  9758                           ;usb_device.c: 2566: }
  9759  1228  0008               	return
  9760  1229                     l6839:	
  9761                           
  9762                           ;usb_device.c: 2567: else
  9763                           ;usb_device.c: 2568: {
  9764                           ;usb_device.c: 2570: USBCtrlTrfOutHandler();
  9765  1229  319B  2358         	fcall	_USBCtrlTrfOutHandler
  9766                           
  9767                           ;usb_device.c: 2571: }
  9768                           ;usb_device.c: 2572: }
  9769  122B  0008               	return
  9770  122C                     l6841:	
  9771                           
  9772                           ;usb_device.c: 2573: else if((USTATcopy.Val & ~0x02) == 0x04)
  9773  122C  30FD               	movlw	253
  9774  122D  0021               	movlb	1	; select bank1
  9775  122E  056F               	andwf	_USTATcopy^(0+128),w
  9776  122F  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9777  1230  082E               	movf	??_USBCtrlEPService^(0+128),w
  9778  1231  3A04               	xorlw	4
  9779  1232  1D03               	skipz
  9780  1233  0008               	return
  9781                           
  9782                           ;usb_device.c: 2574: {
  9783                           ;usb_device.c: 2577: USBCtrlTrfInHandler();
  9784  1234  3190  2001         	fcall	_USBCtrlTrfInHandler
  9785  1236  0008               	return
  9786  1237                     __end_of_USBCtrlEPService:	
  9787                           
  9788                           	psect	text34
  9789  1001                     __ptext34:	
  9790 ;; *************** function _USBCtrlTrfInHandler *****************
  9791 ;; Defined at:
  9792 ;;		line 2748 in file "../USB/usb_device.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;		None
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;  lastDTS         1   13[BANK0 ] unsigned char 
  9797 ;; Return value:  Size  Location     Type
  9798 ;;		None               void
  9799 ;; Registers used:
  9800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9808 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9809 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;Total ram usage:        3 bytes
  9811 ;; Hardware stack levels used:    1
  9812 ;; Hardware stack levels required when called:    5
  9813 ;; This function calls:
  9814 ;;		_USBCtrlTrfTxService
  9815 ;; This function is called by:
  9816 ;;		_USBCtrlEPService
  9817 ;; This function uses a non-reentrant model
  9818 ;;
  9819                           
  9820                           
  9821                           ;psect for function _USBCtrlTrfInHandler
  9822  1001                     _USBCtrlTrfInHandler:	
  9823                           
  9824                           ;usb_device.c: 2749: BYTE lastDTS;
  9825                           ;usb_device.c: 2751: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9826                           
  9827                           ;incstack = 0
  9828                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9829  1001  0020               	movlb	0	; select bank0
  9830  1002  0868               	movf	_pBDTEntryIn,w
  9831  1003  0086               	movwf	6
  9832  1004  0187               	clrf	7
  9833  1005  3000               	movlw	0
  9834  1006  1B01               	btfsc	1,6
  9835  1007  3001               	movlw	1
  9836  1008  00DD               	movwf	USBCtrlTrfInHandler@lastDTS
  9837                           
  9838                           ;usb_device.c: 2754: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9839  1009  3004               	movlw	4
  9840  100A  00DB               	movwf	??_USBCtrlTrfInHandler
  9841  100B  085B               	movf	??_USBCtrlTrfInHandler,w
  9842  100C  06E8               	xorwf	_pBDTEntryIn,f
  9843                           
  9844                           ;usb_device.c: 2759: if(USBDeviceState == ADR_PENDING_STATE)
  9845  100D  0021               	movlb	1	; select bank1
  9846  100E  086E               	movf	_USBDeviceState^(0+128),w
  9847  100F  3A08               	xorlw	8
  9848  1010  1D03               	skipz
  9849  1011  2821               	goto	l315
  9850                           
  9851                           ;usb_device.c: 2760: {
  9852                           ;usb_device.c: 2761: UADDR = SetupPkt.bDevADR.Val;
  9853  1012  0020               	movlb	0	; select bank0
  9854  1013  0842               	movf	66,w	;volatile
  9855  1014  003D               	movlb	29	; select bank29
  9856  1015  0096               	movwf	22	;volatile
  9857                           
  9858                           ;usb_device.c: 2762: if(UADDR != 0u)
  9859  1016  0816               	movf	22,w	;volatile
  9860  1017  1903               	btfsc	3,2
  9861  1018  281B               	goto	l7205
  9862                           
  9863                           ;usb_device.c: 2763: {
  9864                           ;usb_device.c: 2764: USBDeviceState=ADDRESS_STATE;
  9865  1019  3010               	movlw	16
  9866  101A  281C               	goto	L10
  9867  101B                     l7205:	
  9868                           ;usb_device.c: 2765: }
  9869                           
  9870                           
  9871                           ;usb_device.c: 2766: else
  9872                           ;usb_device.c: 2767: {
  9873                           ;usb_device.c: 2768: USBDeviceState=DEFAULT_STATE;
  9874  101B  3004               	movlw	4
  9875  101C                     L10:	
  9876  101C  0020               	movlb	0	; select bank0
  9877  101D  00DB               	movwf	??_USBCtrlTrfInHandler
  9878  101E  085B               	movf	??_USBCtrlTrfInHandler,w
  9879  101F  0021               	movlb	1	; select bank1
  9880  1020  00EE               	movwf	_USBDeviceState^(0+128)
  9881  1021                     l315:	
  9882                           
  9883                           ;usb_device.c: 2769: }
  9884                           ;usb_device.c: 2770: }
  9885                           ;usb_device.c: 2773: if(controlTransferState == 1)
  9886  1021  0020               	movlb	0	; select bank0
  9887  1022  086C               	movf	_controlTransferState,w
  9888  1023  3A01               	xorlw	1
  9889  1024  1D03               	skipz
  9890  1025  2857               	goto	l318
  9891                           
  9892                           ;usb_device.c: 2774: {
  9893                           ;usb_device.c: 2775: pBDTEntryIn[0]->ADR = (((WORD)(CtrlTrfData))& 0x7FFF);
  9894  1026  3048               	movlw	72
  9895  1027  00DB               	movwf	??_USBCtrlTrfInHandler
  9896  1028  3000               	movlw	0
  9897  1029  00DC               	movwf	??_USBCtrlTrfInHandler+1
  9898  102A  0868               	movf	_pBDTEntryIn,w
  9899  102B  3E02               	addlw	2
  9900  102C  0086               	movwf	6
  9901  102D  0187               	clrf	7
  9902  102E  085B               	movf	??_USBCtrlTrfInHandler,w
  9903  102F  3FC0               	movwi [0]fsr1
  9904  1030  085C               	movf	??_USBCtrlTrfInHandler+1,w
  9905  1031  3FC1               	movwi [1]fsr1
  9906                           
  9907                           ;usb_device.c: 2776: USBCtrlTrfTxService();
  9908  1032  3193  23C3  3190   	fcall	_USBCtrlTrfTxService
  9909                           
  9910                           ;usb_device.c: 2782: if(shortPacketStatus == 2)
  9911  1035  0022               	movlb	2	; select bank2
  9912  1036  0839               	movf	_shortPacketStatus^(0+256),w
  9913  1037  3A02               	xorlw	2
  9914  1038  1D03               	skipz
  9915  1039  2843               	goto	l7215
  9916                           
  9917                           ;usb_device.c: 2783: {
  9918                           ;usb_device.c: 2786: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  9919  103A  3084               	movlw	132
  9920  103B  0020               	movlb	0	; select bank0
  9921  103C  00DB               	movwf	??_USBCtrlTrfInHandler
  9922  103D  0868               	movf	_pBDTEntryIn,w
  9923  103E  0086               	movwf	6
  9924  103F  0187               	clrf	7
  9925  1040  085B               	movf	??_USBCtrlTrfInHandler,w
  9926  1041  0081               	movwf	1
  9927                           
  9928                           ;usb_device.c: 2787: }
  9929  1042  0008               	return
  9930  1043                     l7215:	
  9931                           
  9932                           ;usb_device.c: 2788: else
  9933                           ;usb_device.c: 2789: {
  9934                           ;usb_device.c: 2790: if(lastDTS == 0)
  9935  1043  0020               	movlb	0	; select bank0
  9936  1044  08DD               	movf	USBCtrlTrfInHandler@lastDTS,f
  9937  1045  1D03               	skipz
  9938  1046  284F               	goto	l7219
  9939                           
  9940                           ;usb_device.c: 2791: {
  9941                           ;usb_device.c: 2792: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  9942  1047  30C8               	movlw	200
  9943  1048  00DB               	movwf	??_USBCtrlTrfInHandler
  9944  1049  0868               	movf	_pBDTEntryIn,w
  9945  104A  0086               	movwf	6
  9946  104B  0187               	clrf	7
  9947  104C  085B               	movf	??_USBCtrlTrfInHandler,w
  9948  104D  0081               	movwf	1
  9949                           
  9950                           ;usb_device.c: 2793: }
  9951  104E  0008               	return
  9952  104F                     l7219:	
  9953                           
  9954                           ;usb_device.c: 2794: else
  9955                           ;usb_device.c: 2795: {
  9956                           ;usb_device.c: 2796: pBDTEntryIn[0]->STAT.Val = 0x80|0x00|(0x08 & 0x08);
  9957  104F  3088               	movlw	136
  9958  1050  00DB               	movwf	??_USBCtrlTrfInHandler
  9959  1051  0868               	movf	_pBDTEntryIn,w
  9960  1052  0086               	movwf	6
  9961  1053  0187               	clrf	7
  9962  1054  085B               	movf	??_USBCtrlTrfInHandler,w
  9963  1055  0081               	movwf	1
  9964                           
  9965                           ;usb_device.c: 2797: }
  9966                           ;usb_device.c: 2798: }
  9967                           ;usb_device.c: 2799: }
  9968  1056  0008               	return
  9969  1057                     l318:	
  9970                           
  9971                           ;usb_device.c: 2800: else
  9972                           ;usb_device.c: 2801: {
  9973                           ;usb_device.c: 2805: if(outPipes[0].info.bits.busy == 1)
  9974  1057  0023               	movlb	3	; select bank3
  9975  1058  1FA2               	btfss	(_outPipes^(0+384)+2),7
  9976  1059  2861               	goto	l7227
  9977                           
  9978                           ;usb_device.c: 2806: {
  9979                           ;usb_device.c: 2807: if(outPipes[0].pFunc != (0))
  9980  105A  0825               	movf	(_outPipes+5)^(0+384),w
  9981  105B  1903               	btfsc	3,2
  9982  105C  2860               	goto	l7225
  9983                           
  9984                           ;usb_device.c: 2808: {
  9985                           ;usb_device.c: 2809: outPipes[0].pFunc();
  9986  105D  0825               	movf	(_outPipes+5)^(0+384),w
  9987  105E  3190  2801         	ljmp	$	;if you get stuck here, you called an invalid pointer
  9988  1060                     l7225:	
  9989                           
  9990                           ;usb_device.c: 2810: }
  9991                           ;usb_device.c: 2811: outPipes[0].info.bits.busy = 0;
  9992  1060  13A2               	bcf	(_outPipes^(0+384)+2),7
  9993  1061                     l7227:	
  9994                           
  9995                           ;usb_device.c: 2812: }
  9996                           ;usb_device.c: 2814: controlTransferState = 0;
  9997  1061  0020               	movlb	0	; select bank0
  9998  1062  01EC               	clrf	_controlTransferState
  9999  1063  0008               	return
 10000  1064                     __end_of_USBCtrlTrfInHandler:	
 10001                           
 10002                           	psect	text35
 10003  1B58                     __ptext35:	
 10004 ;; *************** function _USBCtrlTrfOutHandler *****************
 10005 ;; Defined at:
 10006 ;;		line 2695 in file "../USB/usb_device.c"
 10007 ;; Parameters:    Size  Location     Type
 10008 ;;		None
 10009 ;; Auto vars:     Size  Location     Type
 10010 ;;		None
 10011 ;; Return value:  Size  Location     Type
 10012 ;;		None               void
 10013 ;; Registers used:
 10014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10015 ;; Tracked objects:
 10016 ;;		On entry : 0/0
 10017 ;;		On exit  : 0/0
 10018 ;;		Unchanged: 0/0
 10019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10022 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10024 ;;Total ram usage:        2 bytes
 10025 ;; Hardware stack levels used:    1
 10026 ;; Hardware stack levels required when called:    6
 10027 ;; This function calls:
 10028 ;;		_USBCtrlTrfRxService
 10029 ;; This function is called by:
 10030 ;;		_USBCtrlEPService
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           
 10035                           ;psect for function _USBCtrlTrfOutHandler
 10036  1B58                     _USBCtrlTrfOutHandler:	
 10037                           
 10038                           ;usb_device.c: 2696: if(controlTransferState == 2)
 10039                           
 10040                           ;incstack = 0
 10041                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10042  1B58  0020               	movlb	0	; select bank0
 10043  1B59  086C               	movf	_controlTransferState,w
 10044  1B5A  3A02               	xorlw	2
 10045  1B5B  1D03               	skipz
 10046  1B5C  2B60               	goto	l7187
 10047                           
 10048                           ;usb_device.c: 2697: {
 10049                           ;usb_device.c: 2698: USBCtrlTrfRxService();
 10050  1B5D  3196  2606         	fcall	_USBCtrlTrfRxService
 10051                           
 10052                           ;usb_device.c: 2699: }
 10053  1B5F  0008               	return
 10054  1B60                     l7187:	
 10055                           
 10056                           ;usb_device.c: 2700: else
 10057                           ;usb_device.c: 2701: {
 10058                           ;usb_device.c: 2704: controlTransferState = 0;
 10059  1B60  0020               	movlb	0	; select bank0
 10060  1B61  01EC               	clrf	_controlTransferState
 10061                           
 10062                           ;usb_device.c: 2711: if(BothEP0OutUOWNsSet == FALSE)
 10063  1B62  0023               	movlb	3	; select bank3
 10064  1B63  08B2               	movf	_BothEP0OutUOWNsSet^(0+384),f
 10065  1B64  1D03               	skipz
 10066  1B65  2B82               	goto	l7193
 10067                           
 10068                           ;usb_device.c: 2712: {
 10069                           ;usb_device.c: 2713: pBDTEntryEP0OutNext->CNT = 8;
 10070  1B66  3008               	movlw	8
 10071  1B67  0020               	movlb	0	; select bank0
 10072  1B68  00DE               	movwf	??_USBCtrlTrfOutHandler
 10073  1B69  0A6E               	incf	_pBDTEntryEP0OutNext,w
 10074  1B6A  0086               	movwf	6
 10075  1B6B  0187               	clrf	7
 10076  1B6C  085E               	movf	??_USBCtrlTrfOutHandler,w
 10077  1B6D  0081               	movwf	1
 10078                           
 10079                           ;usb_device.c: 2714: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 10080  1B6E  3040               	movlw	64
 10081  1B6F  00DE               	movwf	??_USBCtrlTrfOutHandler
 10082  1B70  3000               	movlw	0
 10083  1B71  00DF               	movwf	??_USBCtrlTrfOutHandler+1
 10084  1B72  086E               	movf	_pBDTEntryEP0OutNext,w
 10085  1B73  3E02               	addlw	2
 10086  1B74  0086               	movwf	6
 10087  1B75  0187               	clrf	7
 10088  1B76  085E               	movf	??_USBCtrlTrfOutHandler,w
 10089  1B77  3FC0               	movwi [0]fsr1
 10090  1B78  085F               	movf	??_USBCtrlTrfOutHandler+1,w
 10091  1B79  3FC1               	movwi [1]fsr1
 10092                           
 10093                           ;usb_device.c: 2715: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
 10094  1B7A  308C               	movlw	140
 10095  1B7B  00DE               	movwf	??_USBCtrlTrfOutHandler
 10096  1B7C  086E               	movf	_pBDTEntryEP0OutNext,w
 10097  1B7D  0086               	movwf	6
 10098  1B7E  0187               	clrf	7
 10099  1B7F  085E               	movf	??_USBCtrlTrfOutHandler,w
 10100  1B80  0081               	movwf	1
 10101                           
 10102                           ;usb_device.c: 2716: }
 10103  1B81  0008               	return
 10104  1B82                     l7193:	
 10105                           
 10106                           ;usb_device.c: 2717: else
 10107                           ;usb_device.c: 2718: {
 10108                           ;usb_device.c: 2719: BothEP0OutUOWNsSet = FALSE;
 10109  1B82  0023               	movlb	3	; select bank3
 10110  1B83  01B2               	clrf	_BothEP0OutUOWNsSet^(0+384)
 10111  1B84  0008               	return
 10112  1B85                     __end_of_USBCtrlTrfOutHandler:	
 10113                           
 10114                           	psect	text36
 10115  1606                     __ptext36:	
 10116 ;; *************** function _USBCtrlTrfRxService *****************
 10117 ;; Defined at:
 10118 ;;		line 2019 in file "../USB/usb_device.c"
 10119 ;; Parameters:    Size  Location     Type
 10120 ;;		None
 10121 ;; Auto vars:     Size  Location     Type
 10122 ;;  byteToRead      1   13[BANK0 ] unsigned char 
 10123 ;;  i               1   12[BANK0 ] unsigned char 
 10124 ;; Return value:  Size  Location     Type
 10125 ;;		None               void
 10126 ;; Registers used:
 10127 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10128 ;; Tracked objects:
 10129 ;;		On entry : 0/0
 10130 ;;		On exit  : 0/0
 10131 ;;		Unchanged: 0/0
 10132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10134 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10135 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10136 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10137 ;;Total ram usage:        4 bytes
 10138 ;; Hardware stack levels used:    1
 10139 ;; Hardware stack levels required when called:    5
 10140 ;; This function calls:
 10141 ;;		_USBCtrlEPAllowStatusStage
 10142 ;; This function is called by:
 10143 ;;		_USBCtrlTrfOutHandler
 10144 ;; This function uses a non-reentrant model
 10145 ;;
 10146                           
 10147                           
 10148                           ;psect for function _USBCtrlTrfRxService
 10149  1606                     _USBCtrlTrfRxService:	
 10150                           
 10151                           ;usb_device.c: 2020: BYTE byteToRead;
 10152                           ;usb_device.c: 2021: BYTE i;
 10153                           ;usb_device.c: 2025: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 10154                           
 10155                           ;incstack = 0
 10156                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10157  1606  0020               	movlb	0	; select bank0
 10158  1607  086D               	movf	_pBDTEntryEP0OutCurrent,w
 10159  1608  0086               	movwf	6
 10160  1609  0187               	clrf	7
 10161  160A  3F41               	moviw [1]fsr1
 10162  160B  00DD               	movwf	USBCtrlTrfRxService@byteToRead
 10163                           
 10164                           ;usb_device.c: 2031: if(byteToRead > outPipes[0].wCount.Val)
 10165  160C  085D               	movf	USBCtrlTrfRxService@byteToRead,w
 10166  160D  00DA               	movwf	??_USBCtrlTrfRxService
 10167  160E  01DB               	clrf	??_USBCtrlTrfRxService+1
 10168  160F  085B               	movf	??_USBCtrlTrfRxService+1,w
 10169  1610  0023               	movlb	3	; select bank3
 10170  1611  0224               	subwf	((_outPipes+1)^(0+384)+3),w
 10171  1612  1D03               	skipz
 10172  1613  2E18               	goto	u7755
 10173  1614  0020               	movlb	0	; select bank0
 10174  1615  085A               	movf	??_USBCtrlTrfRxService,w
 10175  1616  0023               	movlb	3	; select bank3
 10176  1617  0223               	subwf	(_outPipes^(0+384)+3),w
 10177  1618                     u7755:	
 10178  1618  1803               	skipnc
 10179  1619  2E1F               	goto	l7011
 10180                           
 10181                           ;usb_device.c: 2032: {
 10182                           ;usb_device.c: 2033: byteToRead = outPipes[0].wCount.Val;
 10183  161A  0823               	movf	(_outPipes^(0+384)+3),w
 10184  161B  0020               	movlb	0	; select bank0
 10185  161C  00DA               	movwf	??_USBCtrlTrfRxService
 10186  161D  085A               	movf	??_USBCtrlTrfRxService,w
 10187  161E  00DD               	movwf	USBCtrlTrfRxService@byteToRead
 10188  161F                     l7011:	
 10189                           
 10190                           ;usb_device.c: 2034: }
 10191                           ;usb_device.c: 2036: outPipes[0].wCount.Val = outPipes[0].wCount.Val - byteToRead;
 10192  161F  3003               	movlw	3
 10193  1620  3EA0               	addlw	_outPipes& (0+255)
 10194  1621  0086               	movwf	6
 10195  1622  3001               	movlw	1	; select bank3/4
 10196  1623  0087               	movwf	7
 10197  1624  0020               	movlb	0	; select bank0
 10198  1625  085D               	movf	USBCtrlTrfRxService@byteToRead,w
 10199  1626  00DA               	movwf	??_USBCtrlTrfRxService
 10200  1627  01DB               	clrf	??_USBCtrlTrfRxService+1
 10201  1628  09DA               	comf	??_USBCtrlTrfRxService,f
 10202  1629  09DB               	comf	??_USBCtrlTrfRxService+1,f
 10203  162A  0ADA               	incf	??_USBCtrlTrfRxService,f
 10204  162B  1903               	skipnz
 10205  162C  0ADB               	incf	??_USBCtrlTrfRxService+1,f
 10206  162D  3F40               	moviw [0]fsr1
 10207  162E  075A               	addwf	??_USBCtrlTrfRxService,w
 10208  162F  0023               	movlb	3	; select bank3
 10209  1630  00A3               	movwf	(_outPipes^(0+384)+3)
 10210  1631  3F41               	moviw [1]fsr1
 10211  1632  0020               	movlb	0	; select bank0
 10212  1633  3D5B               	addwfc	??_USBCtrlTrfRxService+1,w
 10213  1634  0023               	movlb	3	; select bank3
 10214  1635  00A4               	movwf	(_outPipes^(0+384)+4)
 10215                           
 10216                           ;usb_device.c: 2040: for(i=0;i<byteToRead;i++)
 10217  1636  0020               	movlb	0	; select bank0
 10218  1637  01DC               	clrf	USBCtrlTrfRxService@i
 10219  1638                     l7021:	
 10220  1638  085D               	movf	USBCtrlTrfRxService@byteToRead,w
 10221  1639  025C               	subwf	USBCtrlTrfRxService@i,w
 10222  163A  1803               	btfsc	3,0
 10223  163B  2E54               	goto	l7023
 10224                           
 10225                           ;usb_device.c: 2041: {
 10226                           ;usb_device.c: 2042: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 10227  163C  085C               	movf	USBCtrlTrfRxService@i,w
 10228  163D  3E48               	addlw	72
 10229  163E  0086               	movwf	6
 10230  163F  0187               	clrf	7
 10231  1640  0801               	movf	1,w
 10232  1641  00DA               	movwf	??_USBCtrlTrfRxService
 10233  1642  0023               	movlb	3	; select bank3
 10234  1643  0820               	movf	_outPipes^(0+384),w
 10235  1644  0086               	movwf	6
 10236  1645  0187               	clrf	7
 10237  1646  0020               	movlb	0	; select bank0
 10238  1647  085A               	movf	??_USBCtrlTrfRxService,w
 10239  1648  0081               	movwf	1
 10240  1649  3001               	movlw	1
 10241  164A  00DA               	movwf	??_USBCtrlTrfRxService
 10242  164B  085A               	movf	??_USBCtrlTrfRxService,w
 10243  164C  0023               	movlb	3	; select bank3
 10244  164D  07A0               	addwf	_outPipes^(0+384),f
 10245  164E  3001               	movlw	1
 10246  164F  0020               	movlb	0	; select bank0
 10247  1650  00DA               	movwf	??_USBCtrlTrfRxService
 10248  1651  085A               	movf	??_USBCtrlTrfRxService,w
 10249  1652  07DC               	addwf	USBCtrlTrfRxService@i,f
 10250  1653  2E38               	goto	l7021
 10251  1654                     l7023:	
 10252                           
 10253                           ;usb_device.c: 2043: }
 10254                           ;usb_device.c: 2047: if(outPipes[0].wCount.Val > 0)
 10255  1654  3003               	movlw	3
 10256  1655  3EA0               	addlw	_outPipes& (0+255)
 10257  1656  0086               	movwf	6
 10258  1657  3001               	movlw	1	; select bank3/4
 10259  1658  0087               	movwf	7
 10260  1659  0016               	moviw fsr1++
 10261  165A  0401               	iorwf	1,w
 10262  165B  1903               	skipnz
 10263  165C  2E85               	goto	l7031
 10264                           
 10265                           ;usb_device.c: 2048: {
 10266                           ;usb_device.c: 2049: pBDTEntryEP0OutNext->CNT = 8;
 10267  165D  3008               	movlw	8
 10268  165E  00DA               	movwf	??_USBCtrlTrfRxService
 10269  165F  0A6E               	incf	_pBDTEntryEP0OutNext,w
 10270  1660  0086               	movwf	6
 10271  1661  0187               	clrf	7
 10272  1662  085A               	movf	??_USBCtrlTrfRxService,w
 10273  1663  0081               	movwf	1
 10274                           
 10275                           ;usb_device.c: 2050: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
 10276  1664  3048               	movlw	72
 10277  1665  00DA               	movwf	??_USBCtrlTrfRxService
 10278  1666  3000               	movlw	0
 10279  1667  00DB               	movwf	??_USBCtrlTrfRxService+1
 10280  1668  086E               	movf	_pBDTEntryEP0OutNext,w
 10281  1669  3E02               	addlw	2
 10282  166A  0086               	movwf	6
 10283  166B  0187               	clrf	7
 10284  166C  085A               	movf	??_USBCtrlTrfRxService,w
 10285  166D  3FC0               	movwi [0]fsr1
 10286  166E  085B               	movf	??_USBCtrlTrfRxService+1,w
 10287  166F  3FC1               	movwi [1]fsr1
 10288                           
 10289                           ;usb_device.c: 2051: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 10290  1670  086D               	movf	_pBDTEntryEP0OutCurrent,w
 10291  1671  0086               	movwf	6
 10292  1672  0187               	clrf	7
 10293  1673  1B01               	btfsc	1,6
 10294  1674  2E7D               	goto	l7029
 10295                           
 10296                           ;usb_device.c: 2052: {
 10297                           ;usb_device.c: 2053: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 10298  1675  30C8               	movlw	200
 10299  1676  00DA               	movwf	??_USBCtrlTrfRxService
 10300  1677  086E               	movf	_pBDTEntryEP0OutNext,w
 10301  1678  0086               	movwf	6
 10302  1679  0187               	clrf	7
 10303  167A  085A               	movf	??_USBCtrlTrfRxService,w
 10304  167B  0081               	movwf	1
 10305                           
 10306                           ;usb_device.c: 2054: }
 10307  167C  0008               	return
 10308  167D                     l7029:	
 10309                           
 10310                           ;usb_device.c: 2055: else
 10311                           ;usb_device.c: 2056: {
 10312                           ;usb_device.c: 2057: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08);
 10313  167D  3088               	movlw	136
 10314  167E  00DA               	movwf	??_USBCtrlTrfRxService
 10315  167F  086E               	movf	_pBDTEntryEP0OutNext,w
 10316  1680  0086               	movwf	6
 10317  1681  0187               	clrf	7
 10318  1682  085A               	movf	??_USBCtrlTrfRxService,w
 10319  1683  0081               	movwf	1
 10320                           
 10321                           ;usb_device.c: 2058: }
 10322                           ;usb_device.c: 2059: }
 10323  1684  0008               	return
 10324  1685                     l7031:	
 10325                           
 10326                           ;usb_device.c: 2060: else
 10327                           ;usb_device.c: 2061: {
 10328                           ;usb_device.c: 2065: pBDTEntryEP0OutNext->CNT = 8;
 10329  1685  3008               	movlw	8
 10330  1686  00DA               	movwf	??_USBCtrlTrfRxService
 10331  1687  0A6E               	incf	_pBDTEntryEP0OutNext,w
 10332  1688  0086               	movwf	6
 10333  1689  0187               	clrf	7
 10334  168A  085A               	movf	??_USBCtrlTrfRxService,w
 10335  168B  0081               	movwf	1
 10336                           
 10337                           ;usb_device.c: 2066: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 10338  168C  3040               	movlw	64
 10339  168D  00DA               	movwf	??_USBCtrlTrfRxService
 10340  168E  3000               	movlw	0
 10341  168F  00DB               	movwf	??_USBCtrlTrfRxService+1
 10342  1690  086E               	movf	_pBDTEntryEP0OutNext,w
 10343  1691  3E02               	addlw	2
 10344  1692  0086               	movwf	6
 10345  1693  0187               	clrf	7
 10346  1694  085A               	movf	??_USBCtrlTrfRxService,w
 10347  1695  3FC0               	movwi [0]fsr1
 10348  1696  085B               	movf	??_USBCtrlTrfRxService+1,w
 10349  1697  3FC1               	movwi [1]fsr1
 10350                           
 10351                           ;usb_device.c: 2070: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
 10352  1698  3084               	movlw	132
 10353  1699  00DA               	movwf	??_USBCtrlTrfRxService
 10354  169A  086E               	movf	_pBDTEntryEP0OutNext,w
 10355  169B  0086               	movwf	6
 10356  169C  0187               	clrf	7
 10357  169D  085A               	movf	??_USBCtrlTrfRxService,w
 10358  169E  0081               	movwf	1
 10359                           
 10360                           ;usb_device.c: 2077: if(outPipes[0].pFunc != (0))
 10361  169F  0023               	movlb	3	; select bank3
 10362  16A0  0825               	movf	(_outPipes+5)^(0+384),w
 10363  16A1  1903               	btfsc	3,2
 10364  16A2  2EA6               	goto	l7037
 10365                           
 10366                           ;usb_device.c: 2078: {
 10367                           ;usb_device.c: 2084: outPipes[0].pFunc();
 10368  16A3  0825               	movf	(_outPipes+5)^(0+384),w
 10369  16A4  3196  2E06         	ljmp	$	;if you get stuck here, you called an invalid pointer
 10370  16A6                     l7037:	
 10371                           
 10372                           ;usb_device.c: 2089: }
 10373                           ;usb_device.c: 2090: outPipes[0].info.bits.busy = 0;
 10374  16A6  13A2               	bcf	(_outPipes^(0+384)+2),7
 10375                           
 10376                           ;usb_device.c: 2104: if(USBDeferStatusStagePacket == FALSE)
 10377  16A7  0020               	movlb	0	; select bank0
 10378  16A8  08EB               	movf	_USBDeferStatusStagePacket,f	;volatile
 10379  16A9  1D03               	skipz
 10380  16AA  0008               	return
 10381                           
 10382                           ;usb_device.c: 2105: {
 10383                           ;usb_device.c: 2106: USBCtrlEPAllowStatusStage();
 10384  16AB  3190  2064         	fcall	_USBCtrlEPAllowStatusStage
 10385  16AD  0008               	return
 10386  16AE                     __end_of_USBCtrlTrfRxService:	
 10387                           
 10388                           	psect	text37
 10389  1D3A                     __ptext37:	
 10390 ;; *************** function _USBCtrlTrfSetupHandler *****************
 10391 ;; Defined at:
 10392 ;;		line 2623 in file "../USB/usb_device.c"
 10393 ;; Parameters:    Size  Location     Type
 10394 ;;		None
 10395 ;; Auto vars:     Size  Location     Type
 10396 ;;		None
 10397 ;; Return value:  Size  Location     Type
 10398 ;;		None               void
 10399 ;; Registers used:
 10400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10401 ;; Tracked objects:
 10402 ;;		On entry : 0/0
 10403 ;;		On exit  : 0/0
 10404 ;;		Unchanged: 0/0
 10405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10408 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10409 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10410 ;;Total ram usage:        1 bytes
 10411 ;; Hardware stack levels used:    1
 10412 ;; Hardware stack levels required when called:   10
 10413 ;; This function calls:
 10414 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10415 ;;		_USBCtrlEPServiceComplete
 10416 ;;		_USBCheckStdRequest
 10417 ;; This function is called by:
 10418 ;;		_USBCtrlEPService
 10419 ;; This function uses a non-reentrant model
 10420 ;;
 10421                           
 10422                           
 10423                           ;psect for function _USBCtrlTrfSetupHandler
 10424  1D3A                     _USBCtrlTrfSetupHandler:	
 10425                           
 10426                           ;usb_device.c: 2627: shortPacketStatus = 0;
 10427                           
 10428                           ;incstack = 0
 10429                           ; Regs used in _USBCtrlTrfSetupHandler: [allreg]
 10430  1D3A  0022               	movlb	2	; select bank2
 10431  1D3B  01B9               	clrf	_shortPacketStatus^(0+256)
 10432                           
 10433                           ;usb_device.c: 2628: USBDeferStatusStagePacket = FALSE;
 10434  1D3C  0020               	movlb	0	; select bank0
 10435  1D3D  01EB               	clrf	_USBDeferStatusStagePacket	;volatile
 10436                           
 10437                           ;usb_device.c: 2629: USBDeferINDataStagePackets = FALSE;
 10438  1D3E  0022               	movlb	2	; select bank2
 10439  1D3F  01AC               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 10440                           
 10441                           ;usb_device.c: 2630: USBDeferOUTDataStagePackets = FALSE;
 10442  1D40  01AD               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 10443                           
 10444                           ;usb_device.c: 2631: BothEP0OutUOWNsSet = FALSE;
 10445  1D41  0023               	movlb	3	; select bank3
 10446  1D42  01B2               	clrf	_BothEP0OutUOWNsSet^(0+384)
 10447                           
 10448                           ;usb_device.c: 2632: controlTransferState = 0;
 10449  1D43  0020               	movlb	0	; select bank0
 10450  1D44  01EC               	clrf	_controlTransferState
 10451                           
 10452                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10453  1D45  307F               	movlw	127
 10454  1D46  0021               	movlb	1	; select bank1
 10455  1D47  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10456  1D48  0020               	movlb	0	; select bank0
 10457  1D49  0868               	movf	_pBDTEntryIn,w
 10458  1D4A  0086               	movwf	6
 10459  1D4B  0187               	clrf	7
 10460  1D4C  0021               	movlb	1	; select bank1
 10461  1D4D  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10462  1D4E  0581               	andwf	1,f
 10463                           
 10464                           ;usb_device.c: 2642: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 10465  1D4F  3004               	movlw	4
 10466  1D50  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10467  1D51  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10468  1D52  0020               	movlb	0	; select bank0
 10469  1D53  06E8               	xorwf	_pBDTEntryIn,f
 10470                           
 10471                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10472  1D54  307F               	movlw	127
 10473  1D55  0021               	movlb	1	; select bank1
 10474  1D56  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10475  1D57  0020               	movlb	0	; select bank0
 10476  1D58  0868               	movf	_pBDTEntryIn,w
 10477  1D59  0086               	movwf	6
 10478  1D5A  0187               	clrf	7
 10479  1D5B  0021               	movlb	1	; select bank1
 10480  1D5C  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10481  1D5D  0581               	andwf	1,f
 10482                           
 10483                           ;usb_device.c: 2644: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 10484  1D5E  3004               	movlw	4
 10485  1D5F  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10486  1D60  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10487  1D61  0020               	movlb	0	; select bank0
 10488  1D62  06E8               	xorwf	_pBDTEntryIn,f
 10489                           
 10490                           ;usb_device.c: 2645: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 10491  1D63  307F               	movlw	127
 10492  1D64  0021               	movlb	1	; select bank1
 10493  1D65  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10494  1D66  0020               	movlb	0	; select bank0
 10495  1D67  086E               	movf	_pBDTEntryEP0OutNext,w
 10496  1D68  0086               	movwf	6
 10497  1D69  0187               	clrf	7
 10498  1D6A  0021               	movlb	1	; select bank1
 10499  1D6B  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10500  1D6C  0581               	andwf	1,f
 10501                           
 10502                           ;usb_device.c: 2647: inPipes[0].info.Val = 0;
 10503  1D6D  0022               	movlb	2	; select bank2
 10504  1D6E  01BC               	clrf	(_inPipes^(0+256)+2)
 10505                           
 10506                           ;usb_device.c: 2648: inPipes[0].wCount.Val = 0;
 10507  1D6F  01BD               	clrf	(_inPipes^(0+256)+3)
 10508  1D70  01BE               	clrf	((_inPipes+1)^(0+256)+3)
 10509                           
 10510                           ;usb_device.c: 2649: outPipes[0].info.Val = 0;
 10511  1D71  0023               	movlb	3	; select bank3
 10512  1D72  01A2               	clrf	(_outPipes^(0+384)+2)
 10513                           
 10514                           ;usb_device.c: 2650: outPipes[0].wCount.Val = 0;
 10515  1D73  01A3               	clrf	(_outPipes^(0+384)+3)
 10516  1D74  01A4               	clrf	((_outPipes+1)^(0+384)+3)
 10517                           
 10518                           ;usb_device.c: 2656: USBCheckStdRequest();
 10519  1D75  319E  26E3  319D   	fcall	_USBCheckStdRequest
 10520                           
 10521                           ;usb_device.c: 2657: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 10522  1D78  3003               	movlw	3
 10523  1D79  0021               	movlb	1	; select bank1
 10524  1D7A  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10525  1D7B  3000               	movlw	0
 10526  1D7C  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10527  1D7D  3000               	movlw	0
 10528  1D7E  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10529  1D7F  3000               	movlw	0
 10530  1D80  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 10531  1D81  3000               	movlw	0
 10532  1D82  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10533  1D83  3000               	movlw	0
 10534  1D84  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 10535  1D85  319C  2423  319D   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10536                           
 10537                           ;usb_device.c: 2670: USBCtrlEPServiceComplete();
 10538  1D88  3190  20C8         	fcall	_USBCtrlEPServiceComplete
 10539  1D8A  0008               	return
 10540  1D8B                     __end_of_USBCtrlTrfSetupHandler:	
 10541                           
 10542                           	psect	text38
 10543  1EE3                     __ptext38:	
 10544 ;; *************** function _USBCheckStdRequest *****************
 10545 ;; Defined at:
 10546 ;;		line 2839 in file "../USB/usb_device.c"
 10547 ;; Parameters:    Size  Location     Type
 10548 ;;		None
 10549 ;; Auto vars:     Size  Location     Type
 10550 ;;		None
 10551 ;; Return value:  Size  Location     Type
 10552 ;;		None               void
 10553 ;; Registers used:
 10554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10562 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10563 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10564 ;;Total ram usage:        1 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; Hardware stack levels required when called:    9
 10567 ;; This function calls:
 10568 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10569 ;;		_USBStdSetCfgHandler
 10570 ;;		_USBStdGetDscHandler
 10571 ;;		_USBStdGetStatusHandler
 10572 ;;		_USBStdFeatureReqHandler
 10573 ;; This function is called by:
 10574 ;;		_USBCtrlTrfSetupHandler
 10575 ;; This function uses a non-reentrant model
 10576 ;;
 10577                           
 10578                           
 10579                           ;psect for function _USBCheckStdRequest
 10580  1EE3                     _USBCheckStdRequest:	
 10581                           
 10582                           ;usb_device.c: 2840: if(SetupPkt.RequestType != (0x00>>5)) return;
 10583                           
 10584                           ;incstack = 0
 10585                           ; Regs used in _USBCheckStdRequest: [allreg]
 10586  1EE3  0020               	movlb	0	; select bank0
 10587  1EE4  0E40               	swapf	64,w	;volatile
 10588  1EE5  0C89               	rrf	9,f
 10589  1EE6  3903               	andlw	3
 10590  1EE7  3A00               	xorlw	0
 10591  1EE8  1D03               	btfss	3,2
 10592  1EE9  0008               	return
 10593  1EEA  2F35               	goto	l7265
 10594  1EEB                     l332:	
 10595                           ;usb_device.c: 2843: {
 10596                           ;usb_device.c: 2844: case 5:
 10597                           
 10598                           ;usb_device.c: 2842: switch(SetupPkt.bRequest)
 10599                           
 10600                           
 10601                           ;usb_device.c: 2845: inPipes[0].info.bits.busy = 1;
 10602  1EEB  0022               	movlb	2	; select bank2
 10603  1EEC  17BC               	bsf	(_inPipes^(0+256)+2),7
 10604                           
 10605                           ;usb_device.c: 2846: USBDeviceState = ADR_PENDING_STATE;
 10606  1EED  3008               	movlw	8
 10607  1EEE  0021               	movlb	1	; select bank1
 10608  1EEF  00AC               	movwf	??_USBCheckStdRequest^(0+128)
 10609  1EF0  082C               	movf	??_USBCheckStdRequest^(0+128),w
 10610  1EF1  00EE               	movwf	_USBDeviceState^(0+128)
 10611                           
 10612                           ;usb_device.c: 2848: break;
 10613  1EF2  0008               	return
 10614  1EF3                     l7235:	
 10615                           ;usb_device.c: 2849: case 6:
 10616                           
 10617                           
 10618                           ;usb_device.c: 2850: USBStdGetDscHandler();
 10619  1EF3  3192  2237         	fcall	_USBStdGetDscHandler
 10620                           
 10621                           ;usb_device.c: 2851: break;
 10622  1EF5  0008               	return
 10623  1EF6                     l7237:	
 10624                           ;usb_device.c: 2852: case 9:
 10625                           
 10626                           
 10627                           ;usb_device.c: 2853: USBStdSetCfgHandler();
 10628  1EF6  3194  2451         	fcall	_USBStdSetCfgHandler
 10629                           
 10630                           ;usb_device.c: 2854: break;
 10631  1EF8  0008               	return
 10632  1EF9                     l7239:	
 10633                           ;usb_device.c: 2855: case 8:
 10634                           
 10635                           
 10636                           ;usb_device.c: 2856: inPipes[0].pSrc.bRam = (BYTE*)&USBActiveConfiguration;
 10637  1EF9  3040               	movlw	low _USBActiveConfiguration
 10638  1EFA  0022               	movlb	2	; select bank2
 10639  1EFB  00BA               	movwf	_inPipes^(0+256)
 10640  1EFC  3001               	movlw	high _USBActiveConfiguration
 10641  1EFD  00BB               	movwf	(_inPipes+1)^(0+256)
 10642                           
 10643                           ;usb_device.c: 2857: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10644  1EFE  143C               	bsf	(_inPipes^(0+256)+2),0
 10645                           
 10646                           ;usb_device.c: 2858: inPipes[0].wCount.v[0] = 1;
 10647  1EFF  01BD               	clrf	(_inPipes^(0+256)+3)
 10648  1F00  0ABD               	incf	(_inPipes^(0+256)+3),f
 10649                           
 10650                           ;usb_device.c: 2859: inPipes[0].info.bits.busy = 1;
 10651  1F01  17BC               	bsf	(_inPipes^(0+256)+2),7
 10652                           
 10653                           ;usb_device.c: 2860: break;
 10654  1F02  0008               	return
 10655  1F03                     l7247:	
 10656                           ;usb_device.c: 2861: case 0:
 10657                           
 10658                           
 10659                           ;usb_device.c: 2862: USBStdGetStatusHandler();
 10660  1F03  319D  258B         	fcall	_USBStdGetStatusHandler
 10661                           
 10662                           ;usb_device.c: 2863: break;
 10663  1F05  0008               	return
 10664  1F06                     l7249:	
 10665                           ;usb_device.c: 2864: case 1:
 10666                           
 10667                           
 10668                           ;usb_device.c: 2865: case 3:
 10669                           ;usb_device.c: 2866: USBStdFeatureReqHandler();
 10670  1F06  318E  26E5         	fcall	_USBStdFeatureReqHandler
 10671                           
 10672                           ;usb_device.c: 2867: break;
 10673  1F08  0008               	return
 10674  1F09                     l7251:	
 10675                           ;usb_device.c: 2868: case 10:
 10676                           
 10677                           
 10678                           ;usb_device.c: 2869: inPipes[0].pSrc.bRam = (BYTE*)&USBAlternateInterface[SetupPkt.bIntf
      +                          ID];
 10679  1F09  0020               	movlb	0	; select bank0
 10680  1F0A  0844               	movf	68,w	;volatile
 10681  1F0B  3E41               	addlw	_USBAlternateInterface& (0+255)
 10682  1F0C  0022               	movlb	2	; select bank2
 10683  1F0D  00BA               	movwf	_inPipes^(0+256)
 10684  1F0E  3001               	movlw	1
 10685  1F0F  00BB               	movwf	(_inPipes+1)^(0+256)
 10686                           
 10687                           ;usb_device.c: 2870: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10688  1F10  143C               	bsf	(_inPipes^(0+256)+2),0
 10689                           
 10690                           ;usb_device.c: 2871: inPipes[0].wCount.v[0] = 1;
 10691  1F11  01BD               	clrf	(_inPipes^(0+256)+3)
 10692  1F12  0ABD               	incf	(_inPipes^(0+256)+3),f
 10693                           
 10694                           ;usb_device.c: 2872: inPipes[0].info.bits.busy = 1;
 10695  1F13  17BC               	bsf	(_inPipes^(0+256)+2),7
 10696                           
 10697                           ;usb_device.c: 2873: break;
 10698  1F14  0008               	return
 10699  1F15                     l341:	
 10700                           ;usb_device.c: 2874: case 11:
 10701                           
 10702                           
 10703                           ;usb_device.c: 2875: inPipes[0].info.bits.busy = 1;
 10704  1F15  0022               	movlb	2	; select bank2
 10705  1F16  17BC               	bsf	(_inPipes^(0+256)+2),7
 10706                           
 10707                           ;usb_device.c: 2876: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 10708  1F17  0020               	movlb	0	; select bank0
 10709  1F18  0842               	movf	66,w	;volatile
 10710  1F19  0021               	movlb	1	; select bank1
 10711  1F1A  00AC               	movwf	??_USBCheckStdRequest^(0+128)
 10712  1F1B  0020               	movlb	0	; select bank0
 10713  1F1C  0844               	movf	68,w	;volatile
 10714  1F1D  3E41               	addlw	_USBAlternateInterface& (0+255)
 10715  1F1E  0086               	movwf	6
 10716  1F1F  3001               	movlw	1	; select bank2/3
 10717  1F20  0087               	movwf	7
 10718  1F21  0021               	movlb	1	; select bank1
 10719  1F22  082C               	movf	??_USBCheckStdRequest^(0+128),w
 10720  1F23  0081               	movwf	1
 10721                           
 10722                           ;usb_device.c: 2877: break;
 10723  1F24  0008               	return
 10724  1F25                     l7261:	
 10725                           ;usb_device.c: 2878: case 7:
 10726                           
 10727                           
 10728                           ;usb_device.c: 2879: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 10729  1F25  3002               	movlw	2
 10730  1F26  0021               	movlb	1	; select bank1
 10731  1F27  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10732  1F28  3000               	movlw	0
 10733  1F29  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10734  1F2A  3000               	movlw	0
 10735  1F2B  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10736  1F2C  3000               	movlw	0
 10737  1F2D  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 10738  1F2E  3000               	movlw	0
 10739  1F2F  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10740  1F30  3000               	movlw	0
 10741  1F31  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 10742  1F32  319C  2423         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10743                           
 10744                           ;usb_device.c: 2884: }
 10745                           
 10746                           ;usb_device.c: 2883: break;
 10747                           
 10748                           ;usb_device.c: 2882: default:
 10749                           
 10750                           ;usb_device.c: 2881: case 12:
 10751                           
 10752                           ;usb_device.c: 2880: break;
 10753  1F34  0008               	return
 10754  1F35                     l7265:	
 10755  1F35  0020               	movlb	0	; select bank0
 10756  1F36  0841               	movf	65,w	;volatile
 10757                           
 10758                           ; Switch size 1, requested type "space"
 10759                           ; Number of cases is 11, Range of values is 0 to 12
 10760                           ; switch strategies available:
 10761                           ; Name         Instructions Cycles
 10762                           ; direct_byte           32     6 (fixed)
 10763                           ; simple_byte           34    18 (average)
 10764                           ; jumptable            260     6 (fixed)
 10765                           ;	Chosen strategy is direct_byte
 10766  1F37  0084               	movwf	4
 10767  1F38  300D               	movlw	13
 10768  1F39  0204               	subwf	4,w
 10769  1F3A  1803               	skipnc
 10770  1F3B  0008               	return
 10771  1F3C  3198               	movlp	high S8031
 10772  1F3D  3504               	lslf	4,w
 10773  1F3E  3E00               	addlw	low S8031
 10774  1F3F  0082               	movwf	2
 10775  1F40                     l330:	
 10776  1F40  0008               	return
 10777  1F41                     __end_of_USBCheckStdRequest:	
 10778                           
 10779                           	psect	swtext1
 10780  1800                     __pswtext1:	
 10781  1800                     S8031:	
 10782  1800  319F  2F03         	ljmp	l7247
 10783  1802  319F  2F06         	ljmp	l7249
 10784  1804  319F  2F40         	ljmp	l330
 10785  1806  319F  2F06         	ljmp	l7249
 10786  1808  319F  2F40         	ljmp	l330
 10787  180A  319E  2EEB         	ljmp	l332
 10788  180C  319E  2EF3         	ljmp	l7235
 10789  180E  319F  2F25         	ljmp	l7261
 10790  1810  319E  2EF9         	ljmp	l7239
 10791  1812  319E  2EF6         	ljmp	l7237
 10792  1814  319F  2F09         	ljmp	l7251
 10793  1816  319F  2F15         	ljmp	l341
 10794  1818  319F  2F40         	ljmp	l330
 10795                           
 10796                           	psect	text39
 10797  0EE5                     __ptext39:	
 10798 ;; *************** function _USBStdFeatureReqHandler *****************
 10799 ;; Defined at:
 10800 ;;		line 2907 in file "../USB/usb_device.c"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;		None
 10803 ;; Auto vars:     Size  Location     Type
 10804 ;;  pUEP            2    8[BANK1 ] PTR unsigned char 
 10805 ;;		 -> UEP0(1), 
 10806 ;;  p               1   11[BANK1 ] PTR struct __BDT
 10807 ;;		 -> NULL(0), BDT(32), 
 10808 ;;  current_ep_d    1   10[BANK1 ] struct .
 10809 ;; Return value:  Size  Location     Type
 10810 ;;		None               void
 10811 ;; Registers used:
 10812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10813 ;; Tracked objects:
 10814 ;;		On entry : 0/0
 10815 ;;		On exit  : 0/0
 10816 ;;		Unchanged: 0/0
 10817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10819 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10820 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10821 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10822 ;;Total ram usage:        6 bytes
 10823 ;; Hardware stack levels used:    1
 10824 ;; Hardware stack levels required when called:    8
 10825 ;; This function calls:
 10826 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10827 ;; This function is called by:
 10828 ;;		_USBCheckStdRequest
 10829 ;; This function uses a non-reentrant model
 10830 ;;
 10831                           
 10832                           
 10833                           ;psect for function _USBStdFeatureReqHandler
 10834  0EE5                     _USBStdFeatureReqHandler:	
 10835                           
 10836                           ;usb_device.c: 2908: BDT_ENTRY *p;
 10837                           ;usb_device.c: 2909: EP_STATUS current_ep_data;
 10838                           ;usb_device.c: 2913: unsigned char* pUEP;
 10839                           ;usb_device.c: 2951: if((SetupPkt.bFeature == 1)&&
 10840                           ;usb_device.c: 2952: (SetupPkt.Recipient == (0x00)))
 10841                           
 10842                           ;incstack = 0
 10843                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10844  0EE5  0020               	movlb	0	; select bank0
 10845  0EE6  0842               	movf	66,w	;volatile
 10846  0EE7  3A01               	xorlw	1
 10847  0EE8  1D03               	skipz
 10848  0EE9  2EFC               	goto	l7283
 10849  0EEA  0840               	movf	64,w	;volatile
 10850  0EEB  391F               	andlw	31
 10851  0EEC  3800               	iorlw	0
 10852  0EED  1D03               	skipz
 10853  0EEE  2EFC               	goto	l7283
 10854                           
 10855                           ;usb_device.c: 2953: {
 10856                           ;usb_device.c: 2954: inPipes[0].info.bits.busy = 1;
 10857  0EEF  0022               	movlb	2	; select bank2
 10858  0EF0  17BC               	bsf	(_inPipes^(0+256)+2),7
 10859                           
 10860                           ;usb_device.c: 2955: if(SetupPkt.bRequest == 3)
 10861  0EF1  0020               	movlb	0	; select bank0
 10862  0EF2  0841               	movf	65,w	;volatile
 10863  0EF3  3A03               	xorlw	3
 10864  0EF4  1D03               	skipz
 10865  0EF5  2EFA               	goto	l7281
 10866                           
 10867                           ;usb_device.c: 2956: RemoteWakeup = TRUE;
 10868  0EF6  0022               	movlb	2	; select bank2
 10869  0EF7  01A9               	clrf	_RemoteWakeup^(0+256)
 10870  0EF8  0AA9               	incf	_RemoteWakeup^(0+256),f
 10871  0EF9  2EFC               	goto	l7283
 10872  0EFA                     l7281:	
 10873                           
 10874                           ;usb_device.c: 2957: else
 10875                           ;usb_device.c: 2958: RemoteWakeup = FALSE;
 10876  0EFA  0022               	movlb	2	; select bank2
 10877  0EFB  01A9               	clrf	_RemoteWakeup^(0+256)
 10878  0EFC                     l7283:	
 10879                           
 10880                           ;usb_device.c: 2959: }
 10881                           ;usb_device.c: 2962: if((SetupPkt.bFeature == 0)&&
 10882                           ;usb_device.c: 2963: (SetupPkt.Recipient == (0x02))&&
 10883                           ;usb_device.c: 2964: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
 10884                           ;usb_device.c: 2965: (USBDeviceState == CONFIGURED_STATE))
 10885  0EFC  0020               	movlb	0	; select bank0
 10886  0EFD  0842               	movf	66,w	;volatile
 10887  0EFE  1D03               	skipz
 10888  0EFF  0008               	return
 10889  0F00  0840               	movf	64,w	;volatile
 10890  0F01  391F               	andlw	31
 10891  0F02  3A02               	xorlw	2
 10892  0F03  1D03               	skipz
 10893  0F04  0008               	return
 10894  0F05  0844               	movf	68,w	;volatile
 10895  0F06  390F               	andlw	15
 10896  0F07  3A00               	xorlw	0
 10897  0F08  1903               	skipnz
 10898  0F09  0008               	return
 10899  0F0A  0844               	movf	68,w	;volatile
 10900  0F0B  390F               	andlw	15
 10901  0F0C  0021               	movlb	1	; select bank1
 10902  0F0D  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10903  0F0E  3002               	movlw	2
 10904  0F0F  0226               	subwf	??_USBStdFeatureReqHandler^(0+128),w
 10905  0F10  1803               	skipnc
 10906  0F11  0008               	return
 10907  0F12  086E               	movf	_USBDeviceState^(0+128),w
 10908  0F13  3A20               	xorlw	32
 10909  0F14  1D03               	skipz
 10910  0F15  0008               	return
 10911                           
 10912                           ;usb_device.c: 2966: {
 10913                           ;usb_device.c: 2969: inPipes[0].info.bits.busy = 1;
 10914  0F16  0022               	movlb	2	; select bank2
 10915  0F17  17BC               	bsf	(_inPipes^(0+256)+2),7
 10916                           
 10917                           ;usb_device.c: 2972: if(SetupPkt.EPDir == 0)
 10918  0F18  0020               	movlb	0	; select bank0
 10919  0F19  1BC4               	btfsc	68,7	;volatile
 10920  0F1A  2F2B               	goto	l7297
 10921                           
 10922                           ;usb_device.c: 2973: {
 10923                           ;usb_device.c: 2974: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10924  0F1B  0844               	movf	68,w	;volatile
 10925  0F1C  390F               	andlw	15
 10926  0F1D  3E22               	addlw	_pBDTEntryOut& (0+255)
 10927  0F1E  0086               	movwf	6
 10928  0F1F  3001               	movlw	1	; select bank2/3
 10929  0F20  0087               	movwf	7
 10930  0F21  0801               	movf	1,w
 10931  0F22  0021               	movlb	1	; select bank1
 10932  0F23  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10933  0F24  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10934  0F25  00AB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 10935                           
 10936                           ;usb_device.c: 2975: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10937  0F26  0020               	movlb	0	; select bank0
 10938  0F27  0844               	movf	68,w	;volatile
 10939  0F28  390F               	andlw	15
 10940  0F29  3EB0               	addlw	_ep_data_out& (0+255)
 10941  0F2A  2F3A               	goto	L11
 10942  0F2B                     l7297:	
 10943                           ;usb_device.c: 2976: }
 10944                           
 10945                           
 10946                           ;usb_device.c: 2977: else
 10947                           ;usb_device.c: 2978: {
 10948                           ;usb_device.c: 2979: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10949  0F2B  0020               	movlb	0	; select bank0
 10950  0F2C  0844               	movf	68,w	;volatile
 10951  0F2D  390F               	andlw	15
 10952  0F2E  3E68               	addlw	_pBDTEntryIn& (0+255)
 10953  0F2F  0086               	movwf	6
 10954  0F30  0187               	clrf	7
 10955  0F31  0801               	movf	1,w
 10956  0F32  0021               	movlb	1	; select bank1
 10957  0F33  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10958  0F34  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10959  0F35  00AB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 10960                           
 10961                           ;usb_device.c: 2980: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10962  0F36  0020               	movlb	0	; select bank0
 10963  0F37  0844               	movf	68,w	;volatile
 10964  0F38  390F               	andlw	15
 10965  0F39  3EAE               	addlw	_ep_data_in& (0+255)
 10966  0F3A                     L11:	
 10967  0F3A  0086               	movwf	6
 10968  0F3B  3001               	movlw	1	; select bank3/4
 10969  0F3C  0087               	movwf	7
 10970  0F3D  0801               	movf	1,w
 10971  0F3E  0021               	movlb	1	; select bank1
 10972  0F3F  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10973  0F40  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10974  0F41  00AA               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+128)
 10975                           
 10976                           ;usb_device.c: 2981: }
 10977                           ;usb_device.c: 2987: if(current_ep_data.bits.ping_pong_state == 0)
 10978  0F42  182A               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),0
 10979  0F43  2F49               	goto	l353
 10980                           
 10981                           ;usb_device.c: 2988: {
 10982                           ;usb_device.c: 2989: {((BYTE_VAL*)&p)->Val &= ~0x0004;};
 10983  0F44  30FB               	movlw	251
 10984  0F45  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10985  0F46  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10986  0F47  05AB               	andwf	USBStdFeatureReqHandler@p^(0+128),f
 10987                           
 10988                           ;usb_device.c: 2990: }
 10989  0F48  2F4A               	goto	l354
 10990  0F49                     l353:	
 10991                           
 10992                           ;usb_device.c: 2991: else
 10993                           ;usb_device.c: 2992: {
 10994                           ;usb_device.c: 2993: {((BYTE_VAL*)&p)->Val |= 0x0004;};
 10995  0F49  152B               	bsf	USBStdFeatureReqHandler@p^(0+128),2
 10996  0F4A                     l354:	
 10997                           
 10998                           ;usb_device.c: 2994: }
 10999                           ;usb_device.c: 2999: if(SetupPkt.EPDir == 0)
 11000  0F4A  0020               	movlb	0	; select bank0
 11001  0F4B  1BC4               	btfsc	68,7	;volatile
 11002  0F4C  2F58               	goto	l7305
 11003                           
 11004                           ;usb_device.c: 3000: {
 11005                           ;usb_device.c: 3001: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11006  0F4D  0021               	movlb	1	; select bank1
 11007  0F4E  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11008  0F4F  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11009  0F50  0020               	movlb	0	; select bank0
 11010  0F51  0844               	movf	68,w	;volatile
 11011  0F52  390F               	andlw	15
 11012  0F53  3E22               	addlw	_pBDTEntryOut& (0+255)
 11013  0F54  0086               	movwf	6
 11014  0F55  3001               	movlw	1	; select bank2/3
 11015  0F56  0087               	movwf	7
 11016  0F57  2F61               	goto	L12
 11017  0F58                     l7305:	
 11018                           ;usb_device.c: 3002: }
 11019                           
 11020                           
 11021                           ;usb_device.c: 3003: else
 11022                           ;usb_device.c: 3004: {
 11023                           ;usb_device.c: 3005: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11024  0F58  0021               	movlb	1	; select bank1
 11025  0F59  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11026  0F5A  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11027  0F5B  0020               	movlb	0	; select bank0
 11028  0F5C  0844               	movf	68,w	;volatile
 11029  0F5D  390F               	andlw	15
 11030  0F5E  3E68               	addlw	_pBDTEntryIn& (0+255)
 11031  0F5F  0086               	movwf	6
 11032  0F60  0187               	clrf	7
 11033  0F61                     L12:	
 11034  0F61  0021               	movlb	1	; select bank1
 11035  0F62  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11036  0F63  0081               	movwf	1
 11037                           
 11038                           ;usb_device.c: 3006: }
 11039                           ;usb_device.c: 3009: if(SetupPkt.bRequest == 3)
 11040  0F64  0020               	movlb	0	; select bank0
 11041  0F65  0841               	movf	65,w	;volatile
 11042  0F66  3A03               	xorlw	3
 11043  0F67  1D03               	skipz
 11044  0F68  2F86               	goto	l7317
 11045                           
 11046                           ;usb_device.c: 3010: {
 11047                           ;usb_device.c: 3011: if(p->STAT.UOWN == 1)
 11048  0F69  0021               	movlb	1	; select bank1
 11049  0F6A  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11050  0F6B  0086               	movwf	6
 11051  0F6C  0187               	clrf	7
 11052  0F6D  1F81               	btfss	1,7
 11053  0F6E  2F7D               	goto	l358
 11054                           
 11055                           ;usb_device.c: 3012: {
 11056                           ;usb_device.c: 3015: if(SetupPkt.EPDir == 0)
 11057  0F6F  0020               	movlb	0	; select bank0
 11058  0F70  1BC4               	btfsc	68,7	;volatile
 11059  0F71  2F76               	goto	l7315
 11060                           
 11061                           ;usb_device.c: 3016: {
 11062                           ;usb_device.c: 3017: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11063  0F72  0844               	movf	68,w	;volatile
 11064  0F73  390F               	andlw	15
 11065  0F74  3EB0               	addlw	_ep_data_out& (0+255)
 11066  0F75  2F79               	goto	L13
 11067  0F76                     l7315:	
 11068                           ;usb_device.c: 3018: }
 11069                           
 11070                           
 11071                           ;usb_device.c: 3019: else
 11072                           ;usb_device.c: 3020: {
 11073                           ;usb_device.c: 3021: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11074  0F76  0844               	movf	68,w	;volatile
 11075  0F77  390F               	andlw	15
 11076  0F78  3EAE               	addlw	_ep_data_in& (0+255)
 11077  0F79                     L13:	
 11078  0F79  0086               	movwf	6
 11079  0F7A  3001               	movlw	1	; select bank3/4
 11080  0F7B  0087               	movwf	7
 11081  0F7C  1481               	bsf	1,1
 11082  0F7D                     l358:	
 11083                           
 11084                           ;usb_device.c: 3022: }
 11085                           ;usb_device.c: 3023: }
 11086                           ;usb_device.c: 3026: p->STAT.Val |= 0x80|0x04;
 11087  0F7D  3084               	movlw	132
 11088  0F7E  0021               	movlb	1	; select bank1
 11089  0F7F  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11090  0F80  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11091  0F81  0086               	movwf	6
 11092  0F82  0187               	clrf	7
 11093  0F83  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11094  0F84  0481               	iorwf	1,f
 11095                           
 11096                           ;usb_device.c: 3027: }
 11097  0F85  0008               	return
 11098  0F86                     l7317:	
 11099                           
 11100                           ;usb_device.c: 3028: else
 11101                           ;usb_device.c: 3029: {
 11102                           ;usb_device.c: 3033: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
 11103  0F86  3004               	movlw	4
 11104  0F87  0021               	movlb	1	; select bank1
 11105  0F88  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11106  0F89  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11107  0F8A  06AB               	xorwf	USBStdFeatureReqHandler@p^(0+128),f
 11108                           
 11109                           ;usb_device.c: 3035: if(p->STAT.UOWN == 1)
 11110  0F8B  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11111  0F8C  0086               	movwf	6
 11112  0F8D  0187               	clrf	7
 11113  0F8E  1F81               	btfss	1,7
 11114  0F8F  2FAB               	goto	l7327
 11115                           
 11116                           ;usb_device.c: 3036: {
 11117                           ;usb_device.c: 3039: p->STAT.Val &= (~0x80);
 11118  0F90  307F               	movlw	127
 11119  0F91  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11120  0F92  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11121  0F93  0086               	movwf	6
 11122  0F94  0187               	clrf	7
 11123  0F95  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11124  0F96  0581               	andwf	1,f
 11125                           
 11126                           ;usb_device.c: 3040: p->STAT.Val |= 0x40;
 11127  0F97  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11128  0F98  0086               	movwf	6
 11129  0F99  0187               	clrf	7
 11130  0F9A  1701               	bsf	1,6
 11131                           
 11132                           ;usb_device.c: 3041: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11133  0F9B  3005               	movlw	5
 11134  0F9C  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 11135  0F9D  3000               	movlw	0
 11136  0F9E  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 11137  0F9F  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11138  0FA0  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 11139  0FA1  3000               	movlw	0
 11140  0FA2  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 11141  0FA3  3001               	movlw	1
 11142  0FA4  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 11143  0FA5  3000               	movlw	0
 11144  0FA6  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 11145  0FA7  319C  2423  318E   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 11146                           
 11147                           ;usb_device.c: 3042: }
 11148  0FAA  2FB0               	goto	l7329
 11149  0FAB                     l7327:	
 11150                           
 11151                           ;usb_device.c: 3043: else
 11152                           ;usb_device.c: 3044: {
 11153                           ;usb_device.c: 3046: p->STAT.Val |= 0x40;
 11154  0FAB  0021               	movlb	1	; select bank1
 11155  0FAC  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11156  0FAD  0086               	movwf	6
 11157  0FAE  0187               	clrf	7
 11158  0FAF  1701               	bsf	1,6
 11159  0FB0                     l7329:	
 11160                           
 11161                           ;usb_device.c: 3047: }
 11162                           ;usb_device.c: 3051: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
 11163  0FB0  3004               	movlw	4
 11164  0FB1  0021               	movlb	1	; select bank1
 11165  0FB2  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11166  0FB3  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11167  0FB4  06AB               	xorwf	USBStdFeatureReqHandler@p^(0+128),f
 11168                           
 11169                           ;usb_device.c: 3057: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11170  0FB5  18AA               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),1
 11171  0FB6  2FBC               	goto	l366
 11172  0FB7  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11173  0FB8  0086               	movwf	6
 11174  0FB9  0187               	clrf	7
 11175  0FBA  1F81               	btfss	1,7
 11176  0FBB  2FE2               	goto	l7341
 11177  0FBC                     l366:	
 11178                           
 11179                           ;usb_device.c: 3058: {
 11180                           ;usb_device.c: 3059: if(SetupPkt.EPDir == 0)
 11181  0FBC  0020               	movlb	0	; select bank0
 11182  0FBD  1BC4               	btfsc	68,7	;volatile
 11183  0FBE  2FC3               	goto	l7337
 11184                           
 11185                           ;usb_device.c: 3060: {
 11186                           ;usb_device.c: 3061: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11187  0FBF  0844               	movf	68,w	;volatile
 11188  0FC0  390F               	andlw	15
 11189  0FC1  3EB0               	addlw	_ep_data_out& (0+255)
 11190  0FC2  2FC6               	goto	L14
 11191  0FC3                     l7337:	
 11192                           ;usb_device.c: 3062: }
 11193                           
 11194                           
 11195                           ;usb_device.c: 3063: else
 11196                           ;usb_device.c: 3064: {
 11197                           ;usb_device.c: 3065: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11198  0FC3  0844               	movf	68,w	;volatile
 11199  0FC4  390F               	andlw	15
 11200  0FC5  3EAE               	addlw	_ep_data_in& (0+255)
 11201  0FC6                     L14:	
 11202  0FC6  0086               	movwf	6
 11203  0FC7  3001               	movlw	1	; select bank3/4
 11204  0FC8  0087               	movwf	7
 11205  0FC9  1081               	bcf	1,1
 11206                           
 11207                           ;usb_device.c: 3066: }
 11208                           ;usb_device.c: 3068: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11209  0FCA  303B               	movlw	59
 11210  0FCB  0021               	movlb	1	; select bank1
 11211  0FCC  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11212  0FCD  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11213  0FCE  0086               	movwf	6
 11214  0FCF  0187               	clrf	7
 11215  0FD0  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11216  0FD1  0581               	andwf	1,f
 11217                           
 11218                           ;usb_device.c: 3071: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11219  0FD2  3005               	movlw	5
 11220  0FD3  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 11221  0FD4  3000               	movlw	0
 11222  0FD5  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 11223  0FD6  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11224  0FD7  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 11225  0FD8  3000               	movlw	0
 11226  0FD9  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 11227  0FDA  3001               	movlw	1
 11228  0FDB  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 11229  0FDC  3000               	movlw	0
 11230  0FDD  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 11231  0FDE  319C  2423  318E   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 11232                           
 11233                           ;usb_device.c: 3072: }
 11234  0FE1  2FEA               	goto	l7343
 11235  0FE2                     l7341:	
 11236                           
 11237                           ;usb_device.c: 3073: else
 11238                           ;usb_device.c: 3074: {
 11239                           ;usb_device.c: 3076: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11240  0FE2  303B               	movlw	59
 11241  0FE3  0021               	movlb	1	; select bank1
 11242  0FE4  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11243  0FE5  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11244  0FE6  0086               	movwf	6
 11245  0FE7  0187               	clrf	7
 11246  0FE8  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11247  0FE9  0581               	andwf	1,f
 11248  0FEA                     l7343:	
 11249                           
 11250                           ;usb_device.c: 3077: }
 11251                           ;usb_device.c: 3124: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11252  0FEA  0020               	movlb	0	; select bank0
 11253  0FEB  0844               	movf	68,w	;volatile
 11254  0FEC  390F               	andlw	15
 11255  0FED  3E98               	addlw	152
 11256  0FEE  0021               	movlb	1	; select bank1
 11257  0FEF  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11258  0FF0  01A7               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
 11259  0FF1  300E               	movlw	14
 11260  0FF2  3DA7               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
 11261  0FF3  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11262  0FF4  00A8               	movwf	USBStdFeatureReqHandler@pUEP^(0+128)
 11263  0FF5  0827               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
 11264  0FF6  00A9               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+128)
 11265                           
 11266                           ;usb_device.c: 3128: *pUEP &= ~0x0001;
 11267  0FF7  30FE               	movlw	254
 11268  0FF8  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11269  0FF9  0828               	movf	USBStdFeatureReqHandler@pUEP^(0+128),w
 11270  0FFA  0086               	movwf	6
 11271  0FFB  0829               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+128),w
 11272  0FFC  0087               	movwf	7
 11273  0FFD  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11274  0FFE  0581               	andwf	1,f
 11275  0FFF  0008               	return
 11276  1000                     __end_of_USBStdFeatureReqHandler:	
 11277                           
 11278                           	psect	text40
 11279  1D8B                     __ptext40:	
 11280 ;; *************** function _USBStdGetStatusHandler *****************
 11281 ;; Defined at:
 11282 ;;		line 2283 in file "../USB/usb_device.c"
 11283 ;; Parameters:    Size  Location     Type
 11284 ;;		None
 11285 ;; Auto vars:     Size  Location     Type
 11286 ;;  p               1    9[BANK0 ] PTR struct __BDT
 11287 ;;		 -> NULL(0), BDT(32), 
 11288 ;; Return value:  Size  Location     Type
 11289 ;;		None               void
 11290 ;; Registers used:
 11291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11292 ;; Tracked objects:
 11293 ;;		On entry : 0/0
 11294 ;;		On exit  : 0/0
 11295 ;;		Unchanged: 0/0
 11296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11298 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11299 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11300 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11301 ;;Total ram usage:        2 bytes
 11302 ;; Hardware stack levels used:    1
 11303 ;; Hardware stack levels required when called:    4
 11304 ;; This function calls:
 11305 ;;		Nothing
 11306 ;; This function is called by:
 11307 ;;		_USBCheckStdRequest
 11308 ;; This function uses a non-reentrant model
 11309 ;;
 11310                           
 11311                           
 11312                           ;psect for function _USBStdGetStatusHandler
 11313  1D8B                     _USBStdGetStatusHandler:	
 11314                           
 11315                           ;usb_device.c: 2284: CtrlTrfData[0] = 0;
 11316                           
 11317                           ;incstack = 0
 11318                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 11319  1D8B  0020               	movlb	0	; select bank0
 11320  1D8C  01C8               	clrf	72	;volatile
 11321                           
 11322                           ;usb_device.c: 2285: CtrlTrfData[1] = 0;
 11323  1D8D  3000               	movlw	0
 11324  1D8E  00C9               	movwf	73	;volatile
 11325                           
 11326                           ;usb_device.c: 2287: switch(SetupPkt.Recipient)
 11327  1D8F  2DC3               	goto	l7149
 11328  1D90                     l271:	
 11329                           ;usb_device.c: 2288: {
 11330                           ;usb_device.c: 2289: case (0x00):
 11331                           
 11332                           
 11333                           ;usb_device.c: 2295: if(1 == 1)
 11334  1D90  0022               	movlb	2	; select bank2
 11335  1D91  17BC               	bsf	(_inPipes^(0+256)+2),7
 11336                           
 11337                           ;usb_device.c: 2296: {
 11338                           ;usb_device.c: 2297: CtrlTrfData[0]|=0x01;
 11339  1D92  0020               	movlb	0	; select bank0
 11340  1D93  1448               	bsf	72,0	;volatile
 11341                           
 11342                           ;usb_device.c: 2298: }
 11343                           ;usb_device.c: 2300: if(RemoteWakeup == TRUE)
 11344  1D94  0022               	movlb	2	; select bank2
 11345  1D95  0829               	movf	_RemoteWakeup^(0+256),w
 11346  1D96  3A01               	xorlw	1
 11347  1D97  1D03               	skipz
 11348  1D98  2DCF               	goto	l274
 11349                           
 11350                           ;usb_device.c: 2301: {
 11351                           ;usb_device.c: 2302: CtrlTrfData[0]|=0x02;
 11352  1D99  0020               	movlb	0	; select bank0
 11353  1D9A  14C8               	bsf	72,1	;volatile
 11354                           
 11355                           ;usb_device.c: 2303: }
 11356                           ;usb_device.c: 2304: break;
 11357  1D9B  2DCF               	goto	l274
 11358  1D9C                     l275:	
 11359                           ;usb_device.c: 2305: case (0x01):
 11360                           
 11361                           
 11362                           ;usb_device.c: 2306: inPipes[0].info.bits.busy = 1;
 11363  1D9C  0022               	movlb	2	; select bank2
 11364  1D9D  17BC               	bsf	(_inPipes^(0+256)+2),7
 11365                           
 11366                           ;usb_device.c: 2307: break;
 11367  1D9E  2DCF               	goto	l274
 11368  1D9F                     l276:	
 11369                           ;usb_device.c: 2308: case (0x02):
 11370                           
 11371                           
 11372                           ;usb_device.c: 2309: inPipes[0].info.bits.busy = 1;
 11373  1D9F  0022               	movlb	2	; select bank2
 11374  1DA0  17BC               	bsf	(_inPipes^(0+256)+2),7
 11375                           
 11376                           ;usb_device.c: 2313: {
 11377                           ;usb_device.c: 2314: BDT_ENTRY *p;
 11378                           ;usb_device.c: 2316: if(SetupPkt.EPDir == 0)
 11379  1DA1  0020               	movlb	0	; select bank0
 11380  1DA2  1BC4               	btfsc	68,7	;volatile
 11381  1DA3  2DAB               	goto	l7139
 11382                           
 11383                           ;usb_device.c: 2317: {
 11384                           ;usb_device.c: 2318: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11385  1DA4  0844               	movf	68,w	;volatile
 11386  1DA5  390F               	andlw	15
 11387  1DA6  3E22               	addlw	_pBDTEntryOut& (0+255)
 11388  1DA7  0086               	movwf	6
 11389  1DA8  3001               	movlw	1	; select bank2/3
 11390  1DA9  0087               	movwf	7
 11391  1DAA  2DB0               	goto	L15
 11392  1DAB                     l7139:	
 11393                           ;usb_device.c: 2319: }
 11394                           
 11395                           
 11396                           ;usb_device.c: 2320: else
 11397                           ;usb_device.c: 2321: {
 11398                           ;usb_device.c: 2322: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11399  1DAB  0844               	movf	68,w	;volatile
 11400  1DAC  390F               	andlw	15
 11401  1DAD  3E68               	addlw	_pBDTEntryIn& (0+255)
 11402  1DAE  0086               	movwf	6
 11403  1DAF  0187               	clrf	7
 11404  1DB0                     L15:	
 11405  1DB0  0801               	movf	1,w
 11406  1DB1  00D8               	movwf	??_USBStdGetStatusHandler
 11407  1DB2  0858               	movf	??_USBStdGetStatusHandler,w
 11408  1DB3  00D9               	movwf	USBStdGetStatusHandler@p
 11409                           
 11410                           ;usb_device.c: 2323: }
 11411                           ;usb_device.c: 2325: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 11412  1DB4  0859               	movf	USBStdGetStatusHandler@p,w
 11413  1DB5  0086               	movwf	6
 11414  1DB6  0187               	clrf	7
 11415  1DB7  1F81               	btfss	1,7
 11416  1DB8  2DCF               	goto	l274
 11417  1DB9  0859               	movf	USBStdGetStatusHandler@p,w
 11418  1DBA  0086               	movwf	6
 11419  1DBB  0187               	clrf	7
 11420  1DBC  1D01               	btfss	1,2
 11421  1DBD  2DCF               	goto	l274
 11422                           
 11423                           ;usb_device.c: 2326: CtrlTrfData[0]=0x01;
 11424  1DBE  3001               	movlw	1
 11425  1DBF  00D8               	movwf	??_USBStdGetStatusHandler
 11426  1DC0  0858               	movf	??_USBStdGetStatusHandler,w
 11427  1DC1  00C8               	movwf	72	;volatile
 11428                           
 11429                           ;usb_device.c: 2328: }
 11430                           ;usb_device.c: 2329: }
 11431                           
 11432                           ;usb_device.c: 2327: break;
 11433  1DC2  2DCF               	goto	l274
 11434  1DC3                     l7149:	
 11435  1DC3  0840               	movf	64,w	;volatile
 11436  1DC4  391F               	andlw	31
 11437                           
 11438                           ; Switch size 1, requested type "space"
 11439                           ; Number of cases is 3, Range of values is 0 to 2
 11440                           ; switch strategies available:
 11441                           ; Name         Instructions Cycles
 11442                           ; simple_byte           10     6 (average)
 11443                           ; direct_byte           12     6 (fixed)
 11444                           ; jumptable            260     6 (fixed)
 11445                           ;	Chosen strategy is simple_byte
 11446  1DC5  3A00               	xorlw	0	; case 0
 11447  1DC6  1903               	skipnz
 11448  1DC7  2D90               	goto	l271
 11449  1DC8  3A01               	xorlw	1	; case 1
 11450  1DC9  1903               	skipnz
 11451  1DCA  2D9C               	goto	l275
 11452  1DCB  3A03               	xorlw	3	; case 2
 11453  1DCC  1903               	skipnz
 11454  1DCD  2D9F               	goto	l276
 11455  1DCE  2DCF               	goto	l274
 11456  1DCF                     l274:	
 11457                           
 11458                           ;usb_device.c: 2331: if(inPipes[0].info.bits.busy == 1)
 11459  1DCF  0022               	movlb	2	; select bank2
 11460  1DD0  1FBC               	btfss	(_inPipes^(0+256)+2),7
 11461  1DD1  0008               	return
 11462                           
 11463                           ;usb_device.c: 2332: {
 11464                           ;usb_device.c: 2333: inPipes[0].pSrc.bRam = (BYTE*)&CtrlTrfData;
 11465  1DD2  3048               	movlw	72
 11466  1DD3  00BA               	movwf	_inPipes^(0+256)
 11467  1DD4  3000               	movlw	0
 11468  1DD5  00BB               	movwf	(_inPipes+1)^(0+256)
 11469                           
 11470                           ;usb_device.c: 2334: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11471  1DD6  143C               	bsf	(_inPipes^(0+256)+2),0
 11472                           
 11473                           ;usb_device.c: 2335: inPipes[0].wCount.v[0] = 2;
 11474  1DD7  3002               	movlw	2
 11475  1DD8  0020               	movlb	0	; select bank0
 11476  1DD9  00D8               	movwf	??_USBStdGetStatusHandler
 11477  1DDA  0858               	movf	??_USBStdGetStatusHandler,w
 11478  1DDB  0022               	movlb	2	; select bank2
 11479  1DDC  00BD               	movwf	(_inPipes^(0+256)+3)
 11480  1DDD  0008               	return
 11481  1DDE                     __end_of_USBStdGetStatusHandler:	
 11482                           
 11483                           	psect	text41
 11484  1237                     __ptext41:	
 11485 ;; *************** function _USBStdGetDscHandler *****************
 11486 ;; Defined at:
 11487 ;;		line 2207 in file "../USB/usb_device.c"
 11488 ;; Parameters:    Size  Location     Type
 11489 ;;		None
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;		None
 11492 ;; Return value:  Size  Location     Type
 11493 ;;		None               void
 11494 ;; Registers used:
 11495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 11496 ;; Tracked objects:
 11497 ;;		On entry : 0/0
 11498 ;;		On exit  : 0/0
 11499 ;;		Unchanged: 0/0
 11500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11503 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11504 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11505 ;;Total ram usage:        3 bytes
 11506 ;; Hardware stack levels used:    1
 11507 ;; Hardware stack levels required when called:    4
 11508 ;; This function calls:
 11509 ;;		Nothing
 11510 ;; This function is called by:
 11511 ;;		_USBCheckStdRequest
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515                           
 11516                           ;psect for function _USBStdGetDscHandler
 11517  1237                     _USBStdGetDscHandler:	
 11518                           
 11519                           ;usb_device.c: 2208: if(SetupPkt.bmRequestType == 0x80)
 11520                           
 11521                           ;incstack = 0
 11522                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 11523  1237  0020               	movlb	0	; select bank0
 11524  1238  0840               	movf	64,w	;volatile
 11525  1239  3A80               	xorlw	128
 11526  123A  1D03               	skipz
 11527  123B  0008               	return
 11528                           
 11529                           ;usb_device.c: 2209: {
 11530                           ;usb_device.c: 2210: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 11531  123C  30C0               	movlw	192
 11532  123D  00D8               	movwf	??_USBStdGetDscHandler
 11533  123E  0858               	movf	??_USBStdGetDscHandler,w
 11534  123F  0022               	movlb	2	; select bank2
 11535  1240  00BC               	movwf	(_inPipes^(0+256)+2)
 11536                           
 11537                           ;usb_device.c: 2212: switch(SetupPkt.bDescriptorType)
 11538  1241  2AA9               	goto	l7127
 11539  1242                     l7107:	
 11540                           ;usb_device.c: 2213: {
 11541                           ;usb_device.c: 2214: case 0x01:
 11542                           
 11543                           
 11544                           ;usb_device.c: 2218: inPipes[0].pSrc.bRom = (const BYTE*)&device_dsc;
 11545  1242  308D               	movlw	low (_device_dsc| (0+32768))
 11546  1243  0022               	movlb	2	; select bank2
 11547  1244  00BA               	movwf	_inPipes^(0+256)
 11548  1245  3088               	movlw	high (_device_dsc| (0+32768))
 11549  1246  00BB               	movwf	(_inPipes+1)^(0+256)
 11550                           
 11551                           ;usb_device.c: 2220: inPipes[0].wCount.Val = sizeof(device_dsc);
 11552  1247  3012               	movlw	18
 11553  1248  00BD               	movwf	(_inPipes^(0+256)+3)
 11554  1249  3000               	movlw	0
 11555  124A  00BE               	movwf	(_inPipes^(0+256)+4)
 11556                           
 11557                           ;usb_device.c: 2221: break;
 11558  124B  0008               	return
 11559  124C                     l7109:	
 11560                           ;usb_device.c: 2222: case 0x02:
 11561                           
 11562                           
 11563                           ;usb_device.c: 2226: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 11564  124C  3004               	movlw	low (_USB_CD_Ptr| (0+32768))
 11565  124D  0084               	movwf	4
 11566  124E  3088               	movlw	high (_USB_CD_Ptr| (0+32768))
 11567  124F  0085               	movwf	5
 11568  1250  0020               	movlb	0	; select bank0
 11569  1251  0842               	movf	66,w	;volatile
 11570  1252  0784               	addwf	4,f
 11571  1253  1803               	skipnc
 11572  1254  0A85               	incf	5,f
 11573  1255  3F00               	moviw [0]fsr0
 11574  1256  0022               	movlb	2	; select bank2
 11575  1257  00BA               	movwf	_inPipes^(0+256)
 11576  1258  3088               	movlw	(high __stringtab)| (0+128)
 11577  1259  00BB               	movwf	(_inPipes+1)^(0+256)
 11578                           
 11579                           ;usb_device.c: 2232: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 11580  125A  083B               	movf	(_inPipes+1)^(0+256),w
 11581  125B  0020               	movlb	0	; select bank0
 11582  125C  00D9               	movwf	??_USBStdGetDscHandler+1
 11583  125D  0022               	movlb	2	; select bank2
 11584  125E  083A               	movf	_inPipes^(0+256),w
 11585  125F  0020               	movlb	0	; select bank0
 11586  1260  00D8               	movwf	??_USBStdGetDscHandler
 11587  1261  3002               	movlw	2
 11588  1262  0758               	addwf	??_USBStdGetDscHandler,w
 11589  1263  0084               	movwf	4
 11590  1264  0859               	movf	??_USBStdGetDscHandler+1,w
 11591  1265  1803               	skipnc
 11592  1266  0A59               	incf	??_USBStdGetDscHandler+1,w
 11593  1267  0085               	movwf	5
 11594  1268  0800               	movf	0,w	;code access
 11595  1269  00DA               	movwf	??_USBStdGetDscHandler+2
 11596  126A  085A               	movf	??_USBStdGetDscHandler+2,w
 11597  126B  0022               	movlb	2	; select bank2
 11598  126C  00BD               	movwf	(_inPipes^(0+256)+3)
 11599                           
 11600                           ;usb_device.c: 2233: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 11601  126D  083B               	movf	(_inPipes+1)^(0+256),w
 11602  126E  0020               	movlb	0	; select bank0
 11603  126F  00D9               	movwf	??_USBStdGetDscHandler+1
 11604  1270  0022               	movlb	2	; select bank2
 11605  1271  083A               	movf	_inPipes^(0+256),w
 11606  1272  0020               	movlb	0	; select bank0
 11607  1273  00D8               	movwf	??_USBStdGetDscHandler
 11608  1274  3003               	movlw	3
 11609  1275  0758               	addwf	??_USBStdGetDscHandler,w
 11610  1276  0084               	movwf	4
 11611  1277  0859               	movf	??_USBStdGetDscHandler+1,w
 11612  1278  1803               	skipnc
 11613  1279  0A59               	incf	??_USBStdGetDscHandler+1,w
 11614  127A  0085               	movwf	5
 11615  127B  0800               	movf	0,w	;code access
 11616  127C  00DA               	movwf	??_USBStdGetDscHandler+2
 11617  127D  085A               	movf	??_USBStdGetDscHandler+2,w
 11618  127E  0022               	movlb	2	; select bank2
 11619  127F  00BE               	movwf	(_inPipes^(0+256)+4)
 11620                           
 11621                           ;usb_device.c: 2234: break;
 11622  1280  0008               	return
 11623  1281                     l7115:	
 11624                           ;usb_device.c: 2235: case 0x03:
 11625                           
 11626                           
 11627                           ;usb_device.c: 2239: if(SetupPkt.bDscIndex<3)
 11628  1281  3003               	movlw	3
 11629  1282  0020               	movlb	0	; select bank0
 11630  1283  0242               	subwf	66,w	;volatile
 11631  1284  1803               	skipnc
 11632  1285  2AA3               	goto	l7121
 11633                           
 11634                           ;usb_device.c: 2240: {
 11635                           ;usb_device.c: 2242: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 11636  1286  3001               	movlw	low (_USB_SD_Ptr| (0+32768))
 11637  1287  0084               	movwf	4
 11638  1288  3088               	movlw	high (_USB_SD_Ptr| (0+32768))
 11639  1289  0085               	movwf	5
 11640  128A  0842               	movf	66,w	;volatile
 11641  128B  0784               	addwf	4,f
 11642  128C  1803               	skipnc
 11643  128D  0A85               	incf	5,f
 11644  128E  3F00               	moviw [0]fsr0
 11645  128F  0022               	movlb	2	; select bank2
 11646  1290  00BA               	movwf	_inPipes^(0+256)
 11647  1291  3088               	movlw	(high __stringtab)| (0+128)
 11648  1292  00BB               	movwf	(_inPipes+1)^(0+256)
 11649                           
 11650                           ;usb_device.c: 2244: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 11651  1293  083A               	movf	_inPipes^(0+256),w
 11652  1294  0084               	movwf	4
 11653  1295  083B               	movf	(_inPipes+1)^(0+256),w
 11654  1296  0085               	movwf	5
 11655  1297  0800               	movf	0,w	;code access
 11656  1298  0020               	movlb	0	; select bank0
 11657  1299  00D8               	movwf	??_USBStdGetDscHandler
 11658  129A  01D9               	clrf	??_USBStdGetDscHandler+1
 11659  129B  0858               	movf	??_USBStdGetDscHandler,w
 11660  129C  0022               	movlb	2	; select bank2
 11661  129D  00BD               	movwf	(_inPipes^(0+256)+3)
 11662  129E  0020               	movlb	0	; select bank0
 11663  129F  0859               	movf	??_USBStdGetDscHandler+1,w
 11664  12A0  0022               	movlb	2	; select bank2
 11665  12A1  00BE               	movwf	((_inPipes+1)^(0+256)+3)
 11666                           
 11667                           ;usb_device.c: 2245: }
 11668  12A2  0008               	return
 11669  12A3                     l7121:	
 11670                           
 11671                           ;usb_device.c: 2255: else
 11672                           ;usb_device.c: 2256: {
 11673                           ;usb_device.c: 2257: inPipes[0].info.Val = 0;
 11674  12A3  0022               	movlb	2	; select bank2
 11675  12A4  01BC               	clrf	(_inPipes^(0+256)+2)
 11676                           
 11677                           ;usb_device.c: 2258: }
 11678                           ;usb_device.c: 2259: break;
 11679  12A5  0008               	return
 11680  12A6                     l7123:	
 11681                           ;usb_device.c: 2260: default:
 11682                           
 11683                           
 11684                           ;usb_device.c: 2261: inPipes[0].info.Val = 0;
 11685  12A6  0022               	movlb	2	; select bank2
 11686  12A7  01BC               	clrf	(_inPipes^(0+256)+2)
 11687                           
 11688                           ;usb_device.c: 2263: }
 11689                           
 11690                           ;usb_device.c: 2262: break;
 11691  12A8  0008               	return
 11692  12A9                     l7127:	
 11693  12A9  0020               	movlb	0	; select bank0
 11694  12AA  0843               	movf	67,w	;volatile
 11695                           
 11696                           ; Switch size 1, requested type "space"
 11697                           ; Number of cases is 3, Range of values is 1 to 3
 11698                           ; switch strategies available:
 11699                           ; Name         Instructions Cycles
 11700                           ; simple_byte           10     6 (average)
 11701                           ; direct_byte           15     9 (fixed)
 11702                           ; jumptable            263     9 (fixed)
 11703                           ;	Chosen strategy is simple_byte
 11704  12AB  3A01               	xorlw	1	; case 1
 11705  12AC  1903               	skipnz
 11706  12AD  2A42               	goto	l7107
 11707  12AE  3A03               	xorlw	3	; case 2
 11708  12AF  1903               	skipnz
 11709  12B0  2A4C               	goto	l7109
 11710  12B1  3A01               	xorlw	1	; case 3
 11711  12B2  1903               	skipnz
 11712  12B3  2A81               	goto	l7115
 11713  12B4  2AA6               	goto	l7123
 11714  12B5  0008               	return
 11715  12B6                     __end_of_USBStdGetDscHandler:	
 11716                           
 11717                           	psect	text42
 11718  1451                     __ptext42:	
 11719 ;; *************** function _USBStdSetCfgHandler *****************
 11720 ;; Defined at:
 11721 ;;		line 2132 in file "../USB/usb_device.c"
 11722 ;; Parameters:    Size  Location     Type
 11723 ;;		None
 11724 ;; Auto vars:     Size  Location     Type
 11725 ;;  p               2    7[BANK1 ] PTR unsigned char 
 11726 ;;		 -> UEP1(1), 
 11727 ;;  i               1    9[BANK1 ] unsigned char 
 11728 ;;  i               1   10[BANK1 ] unsigned char 
 11729 ;; Return value:  Size  Location     Type
 11730 ;;		None               void
 11731 ;; Registers used:
 11732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11733 ;; Tracked objects:
 11734 ;;		On entry : 0/0
 11735 ;;		On exit  : 0/0
 11736 ;;		Unchanged: 0/0
 11737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11739 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11740 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11741 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11742 ;;Total ram usage:        5 bytes
 11743 ;; Hardware stack levels used:    1
 11744 ;; Hardware stack levels required when called:    8
 11745 ;; This function calls:
 11746 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11747 ;;		_memset
 11748 ;; This function is called by:
 11749 ;;		_USBCheckStdRequest
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           
 11754                           ;psect for function _USBStdSetCfgHandler
 11755  1451                     _USBStdSetCfgHandler:	
 11756                           
 11757                           ;usb_device.c: 2133: BYTE i;
 11758                           ;usb_device.c: 2136: inPipes[0].info.bits.busy = 1;
 11759                           
 11760                           ;incstack = 0
 11761                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11762  1451  0022               	movlb	2	; select bank2
 11763  1452  17BC               	bsf	(_inPipes^(0+256)+2),7
 11764                           
 11765                           ;usb_device.c: 2139: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<1;i++) *p++ = 0; };
 11766  1453  300E               	movlw	14
 11767  1454  0021               	movlb	1	; select bank1
 11768  1455  00A8               	movwf	(USBStdSetCfgHandler@p+1)^(0+128)
 11769  1456  3099               	movlw	153
 11770  1457  00A7               	movwf	USBStdSetCfgHandler@p^(0+128)
 11771  1458  01A9               	clrf	USBStdSetCfgHandler@i_1089^(0+128)
 11772  1459  0829               	movf	USBStdSetCfgHandler@i_1089^(0+128),w
 11773  145A  1D03               	skipz
 11774  145B  2C6C               	goto	l7059
 11775  145C                     l7051:	
 11776  145C  0827               	movf	USBStdSetCfgHandler@p^(0+128),w
 11777  145D  0086               	movwf	6
 11778  145E  0828               	movf	(USBStdSetCfgHandler@p+1)^(0+128),w
 11779  145F  0087               	movwf	7
 11780  1460  0181               	clrf	1
 11781  1461  3001               	movlw	1
 11782  1462  07A7               	addwf	USBStdSetCfgHandler@p^(0+128),f
 11783  1463  3000               	movlw	0
 11784  1464  3DA8               	addwfc	(USBStdSetCfgHandler@p+1)^(0+128),f
 11785  1465  3001               	movlw	1
 11786  1466  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11787  1467  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11788  1468  07A9               	addwf	USBStdSetCfgHandler@i_1089^(0+128),f
 11789  1469  0829               	movf	USBStdSetCfgHandler@i_1089^(0+128),w
 11790  146A  1903               	btfsc	3,2
 11791  146B  2C5C               	goto	l7051
 11792  146C                     l7059:	
 11793                           
 11794                           ;usb_device.c: 2142: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 11795  146C  3020               	movlw	32
 11796  146D  0020               	movlb	0	; select bank0
 11797  146E  00D8               	movwf	?_memset
 11798  146F  3000               	movlw	0
 11799  1470  00D9               	movwf	?_memset+1
 11800  1471  3000               	movlw	0
 11801  1472  00DA               	movwf	?_memset+2
 11802  1473  3000               	movlw	0
 11803  1474  00DB               	movwf	?_memset+3
 11804  1475  3020               	movlw	32
 11805  1476  00DC               	movwf	?_memset+4
 11806  1477  3000               	movlw	0
 11807  1478  00DD               	movwf	?_memset+5
 11808  1479  319A  2264  3194   	fcall	_memset
 11809                           
 11810                           ;usb_device.c: 2145: UCONbits.PPBRST = 1;
 11811  147C  003D               	movlb	29	; select bank29
 11812  147D  170E               	bsf	14,6	;volatile
 11813                           
 11814                           ;usb_device.c: 2150: for(i = 0; i < (BYTE)(1+1u); i++)
 11815  147E  0021               	movlb	1	; select bank1
 11816  147F  01AA               	clrf	USBStdSetCfgHandler@i^(0+128)
 11817  1480  3002               	movlw	2
 11818  1481  022A               	subwf	USBStdSetCfgHandler@i^(0+128),w
 11819  1482  1803               	btfsc	3,0
 11820  1483  2C98               	goto	l7075
 11821  1484                     l7069:	
 11822                           
 11823                           ;usb_device.c: 2151: {
 11824                           ;usb_device.c: 2152: ep_data_in[i].Val = 0u;
 11825  1484  082A               	movf	USBStdSetCfgHandler@i^(0+128),w
 11826  1485  3EAE               	addlw	_ep_data_in& (0+255)
 11827  1486  0086               	movwf	6
 11828  1487  3001               	movlw	1	; select bank3/4
 11829  1488  0087               	movwf	7
 11830  1489  0181               	clrf	1
 11831                           
 11832                           ;usb_device.c: 2153: ep_data_out[i].Val = 0u;
 11833  148A  082A               	movf	USBStdSetCfgHandler@i^(0+128),w
 11834  148B  3EB0               	addlw	_ep_data_out& (0+255)
 11835  148C  0086               	movwf	6
 11836  148D  3001               	movlw	1	; select bank3/4
 11837  148E  0087               	movwf	7
 11838  148F  0181               	clrf	1
 11839  1490  3001               	movlw	1
 11840  1491  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11841  1492  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11842  1493  07AA               	addwf	USBStdSetCfgHandler@i^(0+128),f
 11843  1494  3002               	movlw	2
 11844  1495  022A               	subwf	USBStdSetCfgHandler@i^(0+128),w
 11845  1496  1C03               	skipc
 11846  1497  2C84               	goto	l7069
 11847  1498                     l7075:	
 11848                           
 11849                           ;usb_device.c: 2154: }
 11850                           ;usb_device.c: 2157: memset((void*)&USBAlternateInterface,0x00,1);
 11851  1498  3041               	movlw	low _USBAlternateInterface
 11852  1499  0020               	movlb	0	; select bank0
 11853  149A  00D8               	movwf	?_memset
 11854  149B  3001               	movlw	high _USBAlternateInterface
 11855  149C  00D9               	movwf	?_memset+1
 11856  149D  3000               	movlw	0
 11857  149E  00DA               	movwf	?_memset+2
 11858  149F  3000               	movlw	0
 11859  14A0  00DB               	movwf	?_memset+3
 11860  14A1  3001               	movlw	1
 11861  14A2  00DC               	movwf	?_memset+4
 11862  14A3  3000               	movlw	0
 11863  14A4  00DD               	movwf	?_memset+5
 11864  14A5  319A  2264  3194   	fcall	_memset
 11865                           
 11866                           ;usb_device.c: 2160: UCONbits.PPBRST = 0;
 11867  14A8  003D               	movlb	29	; select bank29
 11868  14A9  130E               	bcf	14,6	;volatile
 11869                           
 11870                           ;usb_device.c: 2162: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11871  14AA  3028               	movlw	40
 11872  14AB  0021               	movlb	1	; select bank1
 11873  14AC  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11874  14AD  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11875  14AE  0020               	movlb	0	; select bank0
 11876  14AF  00E8               	movwf	_pBDTEntryIn
 11877                           
 11878                           ;usb_device.c: 2165: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 11879  14B0  3020               	movlw	32
 11880  14B1  0021               	movlb	1	; select bank1
 11881  14B2  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11882  14B3  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11883  14B4  0020               	movlb	0	; select bank0
 11884  14B5  00ED               	movwf	_pBDTEntryEP0OutCurrent
 11885                           
 11886                           ;usb_device.c: 2166: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11887  14B6  086D               	movf	_pBDTEntryEP0OutCurrent,w
 11888  14B7  0021               	movlb	1	; select bank1
 11889  14B8  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11890  14B9  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11891  14BA  0020               	movlb	0	; select bank0
 11892  14BB  00EE               	movwf	_pBDTEntryEP0OutNext
 11893                           
 11894                           ;usb_device.c: 2169: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 11895  14BC  0842               	movf	66,w	;volatile
 11896  14BD  0021               	movlb	1	; select bank1
 11897  14BE  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11898  14BF  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11899  14C0  0022               	movlb	2	; select bank2
 11900  14C1  00C0               	movwf	_USBActiveConfiguration^(0+256)
 11901                           
 11902                           ;usb_device.c: 2172: if(USBActiveConfiguration == 0)
 11903  14C2  08C0               	movf	_USBActiveConfiguration^(0+256),f
 11904  14C3  1D03               	skipz
 11905  14C4  2CCB               	goto	l7091
 11906                           
 11907                           ;usb_device.c: 2173: {
 11908                           ;usb_device.c: 2175: USBDeviceState = ADDRESS_STATE;
 11909  14C5  3010               	movlw	16
 11910  14C6  0021               	movlb	1	; select bank1
 11911  14C7  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11912  14C8  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11913  14C9  00EE               	movwf	_USBDeviceState^(0+128)
 11914                           
 11915                           ;usb_device.c: 2176: }
 11916  14CA  0008               	return
 11917  14CB                     l7091:	
 11918                           
 11919                           ;usb_device.c: 2177: else
 11920                           ;usb_device.c: 2178: {
 11921                           ;usb_device.c: 2180: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 11922  14CB  3001               	movlw	1
 11923  14CC  0021               	movlb	1	; select bank1
 11924  14CD  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 11925  14CE  3000               	movlw	0
 11926  14CF  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 11927  14D0  3040               	movlw	low _USBActiveConfiguration
 11928  14D1  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 11929  14D2  3001               	movlw	high _USBActiveConfiguration
 11930  14D3  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 11931  14D4  3001               	movlw	1
 11932  14D5  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 11933  14D6  3000               	movlw	0
 11934  14D7  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 11935  14D8  319C  2423         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 11936                           
 11937                           ;usb_device.c: 2185: USBDeviceState = CONFIGURED_STATE;
 11938  14DA  3020               	movlw	32
 11939  14DB  0021               	movlb	1	; select bank1
 11940  14DC  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11941  14DD  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11942  14DE  00EE               	movwf	_USBDeviceState^(0+128)
 11943  14DF  0008               	return
 11944  14E0                     __end_of_USBStdSetCfgHandler:	
 11945                           
 11946                           	psect	text43
 11947  1A64                     __ptext43:	
 11948 ;; *************** function _memset *****************
 11949 ;; Defined at:
 11950 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\memset.c"
 11951 ;; Parameters:    Size  Location     Type
 11952 ;;  p1              2    8[BANK0 ] PTR void 
 11953 ;;		 -> USBAlternateInterface(1), BDT(32), 
 11954 ;;  c               2   10[BANK0 ] int 
 11955 ;;  n               2   12[BANK0 ] unsigned int 
 11956 ;; Auto vars:     Size  Location     Type
 11957 ;;  p               2   15[BANK0 ] PTR unsigned char 
 11958 ;;		 -> USBAlternateInterface(1), BDT(32), 
 11959 ;; Return value:  Size  Location     Type
 11960 ;;                  2    8[BANK0 ] PTR void 
 11961 ;; Registers used:
 11962 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11963 ;; Tracked objects:
 11964 ;;		On entry : 0/0
 11965 ;;		On exit  : 0/0
 11966 ;;		Unchanged: 0/0
 11967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11968 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11969 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11970 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11971 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11972 ;;Total ram usage:        9 bytes
 11973 ;; Hardware stack levels used:    1
 11974 ;; Hardware stack levels required when called:    4
 11975 ;; This function calls:
 11976 ;;		Nothing
 11977 ;; This function is called by:
 11978 ;;		_USBStdSetCfgHandler
 11979 ;; This function uses a non-reentrant model
 11980 ;;
 11981                           
 11982                           
 11983                           ;psect for function _memset
 11984  1A64                     _memset:	
 11985                           
 11986                           ;incstack = 0
 11987                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11988  1A64  0020               	movlb	0	; select bank0
 11989  1A65  0859               	movf	memset@p1+1,w
 11990  1A66  01E0               	clrf	memset@p+1
 11991  1A67  07E0               	addwf	memset@p+1,f
 11992  1A68  0858               	movf	memset@p1,w
 11993  1A69  01DF               	clrf	memset@p
 11994  1A6A  07DF               	addwf	memset@p,f
 11995  1A6B                     l7101:	
 11996  1A6B  3001               	movlw	1
 11997  1A6C  02DC               	subwf	memset@n,f
 11998  1A6D  3000               	movlw	0
 11999  1A6E  3BDD               	subwfb	memset@n+1,f
 12000  1A6F  30FF               	movlw	255
 12001  1A70  065D               	xorwf	memset@n+1,w
 12002  1A71  1D03               	skipz
 12003  1A72  2A75               	goto	u7865
 12004  1A73  30FF               	movlw	255
 12005  1A74  065C               	xorwf	memset@n,w
 12006  1A75                     u7865:	
 12007  1A75  1903               	btfsc	3,2
 12008  1A76  0008               	return
 12009  1A77  085A               	movf	memset@c,w
 12010  1A78  00DE               	movwf	??_memset
 12011  1A79  085F               	movf	memset@p,w
 12012  1A7A  0086               	movwf	6
 12013  1A7B  0860               	movf	memset@p+1,w
 12014  1A7C  0087               	movwf	7
 12015  1A7D  085E               	movf	??_memset,w
 12016  1A7E  0081               	movwf	1
 12017  1A7F  3001               	movlw	1
 12018  1A80  07DF               	addwf	memset@p,f
 12019  1A81  3000               	movlw	0
 12020  1A82  3DE0               	addwfc	memset@p+1,f
 12021  1A83  2A6B               	goto	l7101
 12022  1A84                     __end_of_memset:	
 12023                           ;	Return value of _memset is never used
 12024                           
 12025                           
 12026                           	psect	text44
 12027  10C8                     __ptext44:	
 12028 ;; *************** function _USBCtrlEPServiceComplete *****************
 12029 ;; Defined at:
 12030 ;;		line 1786 in file "../USB/usb_device.c"
 12031 ;; Parameters:    Size  Location     Type
 12032 ;;		None
 12033 ;; Auto vars:     Size  Location     Type
 12034 ;;		None
 12035 ;; Return value:  Size  Location     Type
 12036 ;;		None               void
 12037 ;; Registers used:
 12038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12039 ;; Tracked objects:
 12040 ;;		On entry : 0/0
 12041 ;;		On exit  : 0/0
 12042 ;;		Unchanged: 0/0
 12043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12046 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12047 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;Total ram usage:        2 bytes
 12049 ;; Hardware stack levels used:    1
 12050 ;; Hardware stack levels required when called:    6
 12051 ;; This function calls:
 12052 ;;		_USBCtrlEPAllowStatusStage
 12053 ;;		_USBCtrlEPAllowDataStage
 12054 ;; This function is called by:
 12055 ;;		_USBCtrlTrfSetupHandler
 12056 ;; This function uses a non-reentrant model
 12057 ;;
 12058                           
 12059                           
 12060                           ;psect for function _USBCtrlEPServiceComplete
 12061  10C8                     _USBCtrlEPServiceComplete:	
 12062                           
 12063                           ;usb_device.c: 1791: UCONbits.PKTDIS = 0;
 12064                           
 12065                           ;incstack = 0
 12066                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12067  10C8  003D               	movlb	29	; select bank29
 12068  10C9  120E               	bcf	14,4	;volatile
 12069                           
 12070                           ;usb_device.c: 1797: if(inPipes[0].info.bits.busy == 0)
 12071  10CA  0022               	movlb	2	; select bank2
 12072  10CB  1BBC               	btfsc	(_inPipes^(0+256)+2),7
 12073  10CC  2902               	goto	l208
 12074                           
 12075                           ;usb_device.c: 1798: {
 12076                           ;usb_device.c: 1799: if(outPipes[0].info.bits.busy == 1)
 12077  10CD  0023               	movlb	3	; select bank3
 12078  10CE  1FA2               	btfss	(_outPipes^(0+384)+2),7
 12079  10CF  28DF               	goto	l6973
 12080                           
 12081                           ;usb_device.c: 1800: {
 12082                           ;usb_device.c: 1801: controlTransferState = 2;
 12083  10D0  3002               	movlw	2
 12084  10D1  0020               	movlb	0	; select bank0
 12085  10D2  00DD               	movwf	??_USBCtrlEPServiceComplete
 12086  10D3  085D               	movf	??_USBCtrlEPServiceComplete,w
 12087  10D4  00EC               	movwf	_controlTransferState
 12088                           
 12089                           ;usb_device.c: 1812: if(USBDeferOUTDataStagePackets == FALSE)
 12090  10D5  0022               	movlb	2	; select bank2
 12091  10D6  08AD               	movf	_USBDeferOUTDataStagePackets^(0+256),f	;volatile
 12092  10D7  1D03               	skipz
 12093  10D8  28DB               	goto	l6969
 12094                           
 12095                           ;usb_device.c: 1813: {
 12096                           ;usb_device.c: 1814: USBCtrlEPAllowDataStage();
 12097  10D9  319C  24EA         	fcall	_USBCtrlEPAllowDataStage
 12098  10DB                     l6969:	
 12099                           
 12100                           ;usb_device.c: 1815: }
 12101                           ;usb_device.c: 1819: USBStatusStageEnabledFlag2 = FALSE;
 12102  10DB  0022               	movlb	2	; select bank2
 12103  10DC  01B1               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 12104                           
 12105                           ;usb_device.c: 1820: USBStatusStageEnabledFlag1 = FALSE;
 12106  10DD  01B0               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12107                           
 12108                           ;usb_device.c: 1821: }
 12109  10DE  0008               	return
 12110  10DF                     l6973:	
 12111                           
 12112                           ;usb_device.c: 1822: else
 12113                           ;usb_device.c: 1823: {
 12114                           ;usb_device.c: 1828: pBDTEntryEP0OutNext->CNT = 8;
 12115  10DF  3008               	movlw	8
 12116  10E0  0020               	movlb	0	; select bank0
 12117  10E1  00DD               	movwf	??_USBCtrlEPServiceComplete
 12118  10E2  0A6E               	incf	_pBDTEntryEP0OutNext,w
 12119  10E3  0086               	movwf	6
 12120  10E4  0187               	clrf	7
 12121  10E5  085D               	movf	??_USBCtrlEPServiceComplete,w
 12122  10E6  0081               	movwf	1
 12123                           
 12124                           ;usb_device.c: 1829: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12125  10E7  3040               	movlw	64
 12126  10E8  00DD               	movwf	??_USBCtrlEPServiceComplete
 12127  10E9  3000               	movlw	0
 12128  10EA  00DE               	movwf	??_USBCtrlEPServiceComplete+1
 12129  10EB  086E               	movf	_pBDTEntryEP0OutNext,w
 12130  10EC  3E02               	addlw	2
 12131  10ED  0086               	movwf	6
 12132  10EE  0187               	clrf	7
 12133  10EF  085D               	movf	??_USBCtrlEPServiceComplete,w
 12134  10F0  3FC0               	movwi [0]fsr1
 12135  10F1  085E               	movf	??_USBCtrlEPServiceComplete+1,w
 12136  10F2  3FC1               	movwi [1]fsr1
 12137                           
 12138                           ;usb_device.c: 1830: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
 12139  10F3  308C               	movlw	140
 12140  10F4  00DD               	movwf	??_USBCtrlEPServiceComplete
 12141  10F5  086E               	movf	_pBDTEntryEP0OutNext,w
 12142  10F6  0086               	movwf	6
 12143  10F7  0187               	clrf	7
 12144  10F8  085D               	movf	??_USBCtrlEPServiceComplete,w
 12145  10F9  0081               	movwf	1
 12146                           
 12147                           ;usb_device.c: 1831: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
 12148  10FA  3084               	movlw	132
 12149  10FB  00DD               	movwf	??_USBCtrlEPServiceComplete
 12150  10FC  0868               	movf	_pBDTEntryIn,w
 12151  10FD  0086               	movwf	6
 12152  10FE  0187               	clrf	7
 12153  10FF  085D               	movf	??_USBCtrlEPServiceComplete,w
 12154  1100  0081               	movwf	1
 12155                           
 12156                           ;usb_device.c: 1832: }
 12157                           ;usb_device.c: 1833: }
 12158  1101  0008               	return
 12159  1102                     l208:	
 12160                           
 12161                           ;usb_device.c: 1834: else
 12162                           ;usb_device.c: 1835: {
 12163                           ;usb_device.c: 1836: if(SetupPkt.DataDir == (0x80>>7))
 12164  1102  0020               	movlb	0	; select bank0
 12165  1103  1FC0               	btfss	64,7	;volatile
 12166  1104  2918               	goto	l6989
 12167                           
 12168                           ;usb_device.c: 1837: {
 12169                           ;usb_device.c: 1838: controlTransferState = 1;
 12170  1105  01EC               	clrf	_controlTransferState
 12171  1106  0AEC               	incf	_controlTransferState,f
 12172                           
 12173                           ;usb_device.c: 1852: if(USBDeferINDataStagePackets == FALSE)
 12174  1107  0022               	movlb	2	; select bank2
 12175  1108  08AC               	movf	_USBDeferINDataStagePackets^(0+256),f	;volatile
 12176  1109  1D03               	skipz
 12177  110A  290E               	goto	l6981
 12178                           
 12179                           ;usb_device.c: 1853: {
 12180                           ;usb_device.c: 1854: USBCtrlEPAllowDataStage();
 12181  110B  319C  24EA  3190   	fcall	_USBCtrlEPAllowDataStage
 12182  110E                     l6981:	
 12183                           
 12184                           ;usb_device.c: 1855: }
 12185                           ;usb_device.c: 1877: USBStatusStageEnabledFlag2 = FALSE;
 12186  110E  0022               	movlb	2	; select bank2
 12187  110F  01B1               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 12188                           
 12189                           ;usb_device.c: 1878: USBStatusStageEnabledFlag1 = FALSE;
 12190  1110  01B0               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12191                           
 12192                           ;usb_device.c: 1879: if(USBDeferStatusStagePacket == FALSE)
 12193  1111  0020               	movlb	0	; select bank0
 12194  1112  08EB               	movf	_USBDeferStatusStagePacket,f	;volatile
 12195  1113  1D03               	skipz
 12196  1114  0008               	return
 12197                           
 12198                           ;usb_device.c: 1880: {
 12199                           ;usb_device.c: 1881: USBCtrlEPAllowStatusStage();
 12200  1115  3190  2064         	fcall	_USBCtrlEPAllowStatusStage
 12201                           
 12202                           ;usb_device.c: 1882: }
 12203                           ;usb_device.c: 1883: }
 12204  1117  0008               	return
 12205  1118                     l6989:	
 12206                           
 12207                           ;usb_device.c: 1884: else
 12208                           ;usb_device.c: 1885: {
 12209                           ;usb_device.c: 1896: controlTransferState = 2;
 12210  1118  3002               	movlw	2
 12211  1119  0020               	movlb	0	; select bank0
 12212  111A  00DD               	movwf	??_USBCtrlEPServiceComplete
 12213  111B  085D               	movf	??_USBCtrlEPServiceComplete,w
 12214  111C  00EC               	movwf	_controlTransferState
 12215                           
 12216                           ;usb_device.c: 1899: pBDTEntryEP0OutNext->CNT = 8;
 12217  111D  3008               	movlw	8
 12218  111E  00DD               	movwf	??_USBCtrlEPServiceComplete
 12219  111F  0A6E               	incf	_pBDTEntryEP0OutNext,w
 12220  1120  0086               	movwf	6
 12221  1121  0187               	clrf	7
 12222  1122  085D               	movf	??_USBCtrlEPServiceComplete,w
 12223  1123  0081               	movwf	1
 12224                           
 12225                           ;usb_device.c: 1900: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12226  1124  3040               	movlw	64
 12227  1125  00DD               	movwf	??_USBCtrlEPServiceComplete
 12228  1126  3000               	movlw	0
 12229  1127  00DE               	movwf	??_USBCtrlEPServiceComplete+1
 12230  1128  086E               	movf	_pBDTEntryEP0OutNext,w
 12231  1129  3E02               	addlw	2
 12232  112A  0086               	movwf	6
 12233  112B  0187               	clrf	7
 12234  112C  085D               	movf	??_USBCtrlEPServiceComplete,w
 12235  112D  3FC0               	movwi [0]fsr1
 12236  112E  085E               	movf	??_USBCtrlEPServiceComplete+1,w
 12237  112F  3FC1               	movwi [1]fsr1
 12238                           
 12239                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
 12240  1130  3084               	movlw	132
 12241  1131  00DD               	movwf	??_USBCtrlEPServiceComplete
 12242  1132  086E               	movf	_pBDTEntryEP0OutNext,w
 12243  1133  0086               	movwf	6
 12244  1134  0187               	clrf	7
 12245  1135  085D               	movf	??_USBCtrlEPServiceComplete,w
 12246  1136  0081               	movwf	1
 12247                           
 12248                           ;usb_device.c: 1904: USBStatusStageEnabledFlag2 = FALSE;
 12249  1137  0022               	movlb	2	; select bank2
 12250  1138  01B1               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 12251                           
 12252                           ;usb_device.c: 1905: USBStatusStageEnabledFlag1 = FALSE;
 12253  1139  01B0               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12254                           
 12255                           ;usb_device.c: 1906: if(USBDeferStatusStagePacket == FALSE)
 12256  113A  0020               	movlb	0	; select bank0
 12257  113B  08EB               	movf	_USBDeferStatusStagePacket,f	;volatile
 12258  113C  1D03               	skipz
 12259  113D  0008               	return
 12260                           
 12261                           ;usb_device.c: 1907: {
 12262                           ;usb_device.c: 1908: USBCtrlEPAllowStatusStage();
 12263  113E  3190  2064         	fcall	_USBCtrlEPAllowStatusStage
 12264  1140  0008               	return
 12265  1141                     __end_of_USBCtrlEPServiceComplete:	
 12266                           
 12267                           	psect	text45
 12268  1CEA                     __ptext45:	
 12269 ;; *************** function _USBCtrlEPAllowDataStage *****************
 12270 ;; Defined at:
 12271 ;;		line 1660 in file "../USB/usb_device.c"
 12272 ;; Parameters:    Size  Location     Type
 12273 ;;		None
 12274 ;; Auto vars:     Size  Location     Type
 12275 ;;		None
 12276 ;; Return value:  Size  Location     Type
 12277 ;;		None               void
 12278 ;; Registers used:
 12279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12280 ;; Tracked objects:
 12281 ;;		On entry : 0/0
 12282 ;;		On exit  : 0/0
 12283 ;;		Unchanged: 0/0
 12284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12287 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12288 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12289 ;;Total ram usage:        2 bytes
 12290 ;; Hardware stack levels used:    1
 12291 ;; Hardware stack levels required when called:    5
 12292 ;; This function calls:
 12293 ;;		_USBCtrlTrfTxService
 12294 ;; This function is called by:
 12295 ;;		_USBCtrlEPServiceComplete
 12296 ;; This function uses a non-reentrant model
 12297 ;;
 12298                           
 12299                           
 12300                           ;psect for function _USBCtrlEPAllowDataStage
 12301  1CEA                     _USBCtrlEPAllowDataStage:	
 12302                           
 12303                           ;usb_device.c: 1661: USBDeferINDataStagePackets = FALSE;
 12304                           
 12305                           ;incstack = 0
 12306                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12307  1CEA  0022               	movlb	2	; select bank2
 12308  1CEB  01AC               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 12309                           
 12310                           ;usb_device.c: 1662: USBDeferOUTDataStagePackets = FALSE;
 12311  1CEC  01AD               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 12312                           
 12313                           ;usb_device.c: 1664: if(controlTransferState == 2)
 12314  1CED  0020               	movlb	0	; select bank0
 12315  1CEE  086C               	movf	_controlTransferState,w
 12316  1CEF  3A02               	xorlw	2
 12317  1CF0  1D03               	skipz
 12318  1CF1  2D0D               	goto	l6907
 12319                           
 12320                           ;usb_device.c: 1665: {
 12321                           ;usb_device.c: 1667: pBDTEntryEP0OutNext->CNT = 8;
 12322  1CF2  3008               	movlw	8
 12323  1CF3  00DB               	movwf	??_USBCtrlEPAllowDataStage
 12324  1CF4  0A6E               	incf	_pBDTEntryEP0OutNext,w
 12325  1CF5  0086               	movwf	6
 12326  1CF6  0187               	clrf	7
 12327  1CF7  085B               	movf	??_USBCtrlEPAllowDataStage,w
 12328  1CF8  0081               	movwf	1
 12329                           
 12330                           ;usb_device.c: 1668: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
 12331  1CF9  3048               	movlw	72
 12332  1CFA  00DB               	movwf	??_USBCtrlEPAllowDataStage
 12333  1CFB  3000               	movlw	0
 12334  1CFC  00DC               	movwf	??_USBCtrlEPAllowDataStage+1
 12335  1CFD  086E               	movf	_pBDTEntryEP0OutNext,w
 12336  1CFE  3E02               	addlw	2
 12337  1CFF  0086               	movwf	6
 12338  1D00  0187               	clrf	7
 12339  1D01  085B               	movf	??_USBCtrlEPAllowDataStage,w
 12340  1D02  3FC0               	movwi [0]fsr1
 12341  1D03  085C               	movf	??_USBCtrlEPAllowDataStage+1,w
 12342  1D04  3FC1               	movwi [1]fsr1
 12343                           
 12344                           ;usb_device.c: 1669: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 12345  1D05  30C8               	movlw	200
 12346  1D06  00DB               	movwf	??_USBCtrlEPAllowDataStage
 12347  1D07  086E               	movf	_pBDTEntryEP0OutNext,w
 12348  1D08  0086               	movwf	6
 12349  1D09  0187               	clrf	7
 12350  1D0A  085B               	movf	??_USBCtrlEPAllowDataStage,w
 12351  1D0B  0081               	movwf	1
 12352                           
 12353                           ;usb_device.c: 1670: }
 12354  1D0C  0008               	return
 12355  1D0D                     l6907:	
 12356                           
 12357                           ;usb_device.c: 1671: else
 12358                           ;usb_device.c: 1672: {
 12359                           ;usb_device.c: 1675: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 12360  1D0D  0022               	movlb	2	; select bank2
 12361  1D0E  083E               	movf	((_inPipes+1)^(0+256)+3),w
 12362  1D0F  0020               	movlb	0	; select bank0
 12363  1D10  0247               	subwf	71,w	;volatile
 12364  1D11  1D03               	skipz
 12365  1D12  2D17               	goto	u7615
 12366  1D13  0022               	movlb	2	; select bank2
 12367  1D14  083D               	movf	(_inPipes^(0+256)+3),w
 12368  1D15  0020               	movlb	0	; select bank0
 12369  1D16  0246               	subwf	70,w	;volatile
 12370  1D17                     u7615:	
 12371  1D17  1803               	skipnc
 12372  1D18  2D22               	goto	l6911
 12373                           
 12374                           ;usb_device.c: 1676: {
 12375                           ;usb_device.c: 1677: inPipes[0].wCount.Val = SetupPkt.wLength;
 12376  1D19  0847               	movf	71,w	;volatile
 12377  1D1A  0022               	movlb	2	; select bank2
 12378  1D1B  01BE               	clrf	((_inPipes+1)^(0+256)+3)
 12379  1D1C  07BE               	addwf	((_inPipes+1)^(0+256)+3),f
 12380  1D1D  0020               	movlb	0	; select bank0
 12381  1D1E  0846               	movf	70,w	;volatile
 12382  1D1F  0022               	movlb	2	; select bank2
 12383  1D20  01BD               	clrf	(_inPipes^(0+256)+3)
 12384  1D21  07BD               	addwf	(_inPipes^(0+256)+3),f
 12385  1D22                     l6911:	
 12386                           
 12387                           ;usb_device.c: 1678: }
 12388                           ;usb_device.c: 1679: USBCtrlTrfTxService();
 12389  1D22  3193  23C3  319C   	fcall	_USBCtrlTrfTxService
 12390                           
 12391                           ;usb_device.c: 1684: pBDTEntryIn[0]->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
 12392  1D25  3048               	movlw	72
 12393  1D26  0020               	movlb	0	; select bank0
 12394  1D27  00DB               	movwf	??_USBCtrlEPAllowDataStage
 12395  1D28  3000               	movlw	0
 12396  1D29  00DC               	movwf	??_USBCtrlEPAllowDataStage+1
 12397  1D2A  0868               	movf	_pBDTEntryIn,w
 12398  1D2B  3E02               	addlw	2
 12399  1D2C  0086               	movwf	6
 12400  1D2D  0187               	clrf	7
 12401  1D2E  085B               	movf	??_USBCtrlEPAllowDataStage,w
 12402  1D2F  3FC0               	movwi [0]fsr1
 12403  1D30  085C               	movf	??_USBCtrlEPAllowDataStage+1,w
 12404  1D31  3FC1               	movwi [1]fsr1
 12405                           
 12406                           ;usb_device.c: 1685: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 12407  1D32  30C8               	movlw	200
 12408  1D33  00DB               	movwf	??_USBCtrlEPAllowDataStage
 12409  1D34  0868               	movf	_pBDTEntryIn,w
 12410  1D35  0086               	movwf	6
 12411  1D36  0187               	clrf	7
 12412  1D37  085B               	movf	??_USBCtrlEPAllowDataStage,w
 12413  1D38  0081               	movwf	1
 12414  1D39  0008               	return
 12415  1D3A                     __end_of_USBCtrlEPAllowDataStage:	
 12416                           
 12417                           	psect	text46
 12418  13C3                     __ptext46:	
 12419 ;; *************** function _USBCtrlTrfTxService *****************
 12420 ;; Defined at:
 12421 ;;		line 1938 in file "../USB/usb_device.c"
 12422 ;; Parameters:    Size  Location     Type
 12423 ;;		None
 12424 ;; Auto vars:     Size  Location     Type
 12425 ;;  byteToSend      1   10[BANK0 ] unsigned char 
 12426 ;; Return value:  Size  Location     Type
 12427 ;;		None               void
 12428 ;; Registers used:
 12429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 12430 ;; Tracked objects:
 12431 ;;		On entry : 0/0
 12432 ;;		On exit  : 0/0
 12433 ;;		Unchanged: 0/0
 12434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12437 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12438 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12439 ;;Total ram usage:        3 bytes
 12440 ;; Hardware stack levels used:    1
 12441 ;; Hardware stack levels required when called:    4
 12442 ;; This function calls:
 12443 ;;		Nothing
 12444 ;; This function is called by:
 12445 ;;		_USBCtrlEPAllowDataStage
 12446 ;;		_USBCtrlTrfInHandler
 12447 ;; This function uses a non-reentrant model
 12448 ;;
 12449                           
 12450                           
 12451                           ;psect for function _USBCtrlTrfTxService
 12452  13C3                     _USBCtrlTrfTxService:	
 12453                           
 12454                           ;usb_device.c: 1939: BYTE byteToSend;
 12455                           ;usb_device.c: 1943: byteToSend = 8;
 12456                           
 12457                           ;incstack = 0
 12458                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 12459  13C3  3008               	movlw	8
 12460  13C4  0020               	movlb	0	; select bank0
 12461  13C5  00D8               	movwf	??_USBCtrlTrfTxService
 12462  13C6  0858               	movf	??_USBCtrlTrfTxService,w
 12463  13C7  00DA               	movwf	USBCtrlTrfTxService@byteToSend
 12464                           
 12465                           ;usb_device.c: 1944: if(inPipes[0].wCount.Val < (BYTE)8)
 12466  13C8  3000               	movlw	0
 12467  13C9  0022               	movlb	2	; select bank2
 12468  13CA  023E               	subwf	((_inPipes+1)^(0+256)+3),w
 12469  13CB  3008               	movlw	8
 12470  13CC  1903               	skipnz
 12471  13CD  023D               	subwf	(_inPipes^(0+256)+3),w
 12472  13CE  1803               	skipnc
 12473  13CF  2BE6               	goto	l6929
 12474                           
 12475                           ;usb_device.c: 1945: {
 12476                           ;usb_device.c: 1946: byteToSend = inPipes[0].wCount.Val;
 12477  13D0  083D               	movf	(_inPipes^(0+256)+3),w
 12478  13D1  0020               	movlb	0	; select bank0
 12479  13D2  00D8               	movwf	??_USBCtrlTrfTxService
 12480  13D3  0858               	movf	??_USBCtrlTrfTxService,w
 12481  13D4  00DA               	movwf	USBCtrlTrfTxService@byteToSend
 12482                           
 12483                           ;usb_device.c: 1953: if(shortPacketStatus == 0)
 12484  13D5  0022               	movlb	2	; select bank2
 12485  13D6  08B9               	movf	_shortPacketStatus^(0+256),f
 12486  13D7  1D03               	skipz
 12487  13D8  2BDC               	goto	l6925
 12488                           
 12489                           ;usb_device.c: 1954: {
 12490                           ;usb_device.c: 1955: shortPacketStatus = 1;
 12491  13D9  01B9               	clrf	_shortPacketStatus^(0+256)
 12492  13DA  0AB9               	incf	_shortPacketStatus^(0+256),f
 12493                           
 12494                           ;usb_device.c: 1956: }
 12495  13DB  2BE6               	goto	l6929
 12496  13DC                     l6925:	
 12497                           
 12498                           ;usb_device.c: 1957: else if(shortPacketStatus == 1)
 12499  13DC  0839               	movf	_shortPacketStatus^(0+256),w
 12500  13DD  3A01               	xorlw	1
 12501  13DE  1D03               	skipz
 12502  13DF  2BE6               	goto	l6929
 12503                           
 12504                           ;usb_device.c: 1958: {
 12505                           ;usb_device.c: 1959: shortPacketStatus = 2;
 12506  13E0  3002               	movlw	2
 12507  13E1  0020               	movlb	0	; select bank0
 12508  13E2  00D8               	movwf	??_USBCtrlTrfTxService
 12509  13E3  0858               	movf	??_USBCtrlTrfTxService,w
 12510  13E4  0022               	movlb	2	; select bank2
 12511  13E5  00B9               	movwf	_shortPacketStatus^(0+256)
 12512  13E6                     l6929:	
 12513                           
 12514                           ;usb_device.c: 1960: }
 12515                           ;usb_device.c: 1961: }
 12516                           ;usb_device.c: 1965: inPipes[0].wCount.Val = inPipes[0].wCount.Val - byteToSend;
 12517  13E6  3003               	movlw	3
 12518  13E7  3E3A               	addlw	_inPipes& (0+255)
 12519  13E8  0086               	movwf	6
 12520  13E9  3001               	movlw	1	; select bank2/3
 12521  13EA  0087               	movwf	7
 12522  13EB  0020               	movlb	0	; select bank0
 12523  13EC  085A               	movf	USBCtrlTrfTxService@byteToSend,w
 12524  13ED  00D8               	movwf	??_USBCtrlTrfTxService
 12525  13EE  01D9               	clrf	??_USBCtrlTrfTxService+1
 12526  13EF  09D8               	comf	??_USBCtrlTrfTxService,f
 12527  13F0  09D9               	comf	??_USBCtrlTrfTxService+1,f
 12528  13F1  0AD8               	incf	??_USBCtrlTrfTxService,f
 12529  13F2  1903               	skipnz
 12530  13F3  0AD9               	incf	??_USBCtrlTrfTxService+1,f
 12531  13F4  3F40               	moviw [0]fsr1
 12532  13F5  0758               	addwf	??_USBCtrlTrfTxService,w
 12533  13F6  0022               	movlb	2	; select bank2
 12534  13F7  00BD               	movwf	(_inPipes^(0+256)+3)
 12535  13F8  3F41               	moviw [1]fsr1
 12536  13F9  0020               	movlb	0	; select bank0
 12537  13FA  3D59               	addwfc	??_USBCtrlTrfTxService+1,w
 12538  13FB  0022               	movlb	2	; select bank2
 12539  13FC  00BE               	movwf	(_inPipes^(0+256)+4)
 12540                           
 12541                           ;usb_device.c: 1970: pBDTEntryIn[0]->CNT = byteToSend;
 12542  13FD  0020               	movlb	0	; select bank0
 12543  13FE  085A               	movf	USBCtrlTrfTxService@byteToSend,w
 12544  13FF  00D8               	movwf	??_USBCtrlTrfTxService
 12545  1400  0A68               	incf	_pBDTEntryIn,w
 12546  1401  0086               	movwf	6
 12547  1402  0187               	clrf	7
 12548  1403  0858               	movf	??_USBCtrlTrfTxService,w
 12549  1404  0081               	movwf	1
 12550                           
 12551                           ;usb_device.c: 1974: pDst = ( BYTE*)CtrlTrfData;
 12552  1405  3048               	movlw	72
 12553  1406  00D8               	movwf	??_USBCtrlTrfTxService
 12554  1407  0858               	movf	??_USBCtrlTrfTxService,w
 12555  1408  0022               	movlb	2	; select bank2
 12556  1409  00B7               	movwf	_pDst^(0+256)
 12557                           
 12558                           ;usb_device.c: 1975: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 12559  140A  1C3C               	btfss	(_inPipes^(0+256)+2),0
 12560  140B  2C2A               	goto	l6947
 12561  140C  2C4C               	goto	l6957
 12562  140D                     l6939:	
 12563                           ;usb_device.c: 1976: {
 12564                           ;usb_device.c: 1977: while(byteToSend)
 12565                           
 12566                           
 12567                           ;usb_device.c: 1978: {
 12568                           ;usb_device.c: 1979: *pDst++ = *inPipes[0].pSrc.bRom++;
 12569  140D  0022               	movlb	2	; select bank2
 12570  140E  083A               	movf	_inPipes^(0+256),w
 12571  140F  0084               	movwf	4
 12572  1410  083B               	movf	(_inPipes+1)^(0+256),w
 12573  1411  0085               	movwf	5
 12574  1412  0800               	movf	0,w	;code access
 12575  1413  0020               	movlb	0	; select bank0
 12576  1414  00D8               	movwf	??_USBCtrlTrfTxService
 12577  1415  0022               	movlb	2	; select bank2
 12578  1416  0837               	movf	_pDst^(0+256),w
 12579  1417  0086               	movwf	6
 12580  1418  0187               	clrf	7
 12581  1419  0020               	movlb	0	; select bank0
 12582  141A  0858               	movf	??_USBCtrlTrfTxService,w
 12583  141B  0081               	movwf	1
 12584  141C  3001               	movlw	1
 12585  141D  0022               	movlb	2	; select bank2
 12586  141E  07BA               	addwf	_inPipes^(0+256),f
 12587  141F  3000               	movlw	0
 12588  1420  3DBB               	addwfc	(_inPipes+1)^(0+256),f
 12589  1421  3001               	movlw	1
 12590  1422  0020               	movlb	0	; select bank0
 12591  1423  00D8               	movwf	??_USBCtrlTrfTxService
 12592  1424  0858               	movf	??_USBCtrlTrfTxService,w
 12593  1425  0022               	movlb	2	; select bank2
 12594  1426  07B7               	addwf	_pDst^(0+256),f
 12595                           
 12596                           ;usb_device.c: 1980: byteToSend--;
 12597  1427  3001               	movlw	1
 12598  1428  0020               	movlb	0	; select bank0
 12599  1429  02DA               	subwf	USBCtrlTrfTxService@byteToSend,f
 12600  142A                     l6947:	
 12601  142A  0020               	movlb	0	; select bank0
 12602  142B  08DA               	movf	USBCtrlTrfTxService@byteToSend,f
 12603  142C  1903               	btfsc	3,2
 12604  142D  0008               	return
 12605  142E  2C0D               	goto	l6939
 12606  142F                     l6949:	
 12607                           ;usb_device.c: 1983: else
 12608                           ;usb_device.c: 1984: {
 12609                           ;usb_device.c: 1985: while(byteToSend)
 12610                           
 12611                           ;usb_device.c: 1981: }
 12612                           ;usb_device.c: 1982: }
 12613                           
 12614                           
 12615                           ;usb_device.c: 1986: {
 12616                           ;usb_device.c: 1987: *pDst++ = *inPipes[0].pSrc.bRam++;
 12617  142F  0022               	movlb	2	; select bank2
 12618  1430  083A               	movf	_inPipes^(0+256),w
 12619  1431  0084               	movwf	4
 12620  1432  083B               	movf	(_inPipes+1)^(0+256),w
 12621  1433  0085               	movwf	5
 12622  1434  0800               	movf	0,w	;code access
 12623  1435  0020               	movlb	0	; select bank0
 12624  1436  00D8               	movwf	??_USBCtrlTrfTxService
 12625  1437  0022               	movlb	2	; select bank2
 12626  1438  0837               	movf	_pDst^(0+256),w
 12627  1439  0086               	movwf	6
 12628  143A  0187               	clrf	7
 12629  143B  0020               	movlb	0	; select bank0
 12630  143C  0858               	movf	??_USBCtrlTrfTxService,w
 12631  143D  0081               	movwf	1
 12632  143E  3001               	movlw	1
 12633  143F  0022               	movlb	2	; select bank2
 12634  1440  07BA               	addwf	_inPipes^(0+256),f
 12635  1441  3000               	movlw	0
 12636  1442  3DBB               	addwfc	(_inPipes+1)^(0+256),f
 12637  1443  3001               	movlw	1
 12638  1444  0020               	movlb	0	; select bank0
 12639  1445  00D8               	movwf	??_USBCtrlTrfTxService
 12640  1446  0858               	movf	??_USBCtrlTrfTxService,w
 12641  1447  0022               	movlb	2	; select bank2
 12642  1448  07B7               	addwf	_pDst^(0+256),f
 12643                           
 12644                           ;usb_device.c: 1988: byteToSend--;
 12645  1449  3001               	movlw	1
 12646  144A  0020               	movlb	0	; select bank0
 12647  144B  02DA               	subwf	USBCtrlTrfTxService@byteToSend,f
 12648  144C                     l6957:	
 12649  144C  0020               	movlb	0	; select bank0
 12650  144D  08DA               	movf	USBCtrlTrfTxService@byteToSend,f
 12651  144E  1903               	btfsc	3,2
 12652  144F  0008               	return
 12653  1450  2C2F               	goto	l6949
 12654  1451                     __end_of_USBCtrlTrfTxService:	
 12655                           
 12656                           	psect	text47
 12657  1064                     __ptext47:	
 12658 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12659 ;; Defined at:
 12660 ;;		line 1590 in file "../USB/usb_device.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;		None
 12663 ;; Auto vars:     Size  Location     Type
 12664 ;;		None
 12665 ;; Return value:  Size  Location     Type
 12666 ;;		None               void
 12667 ;; Registers used:
 12668 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12669 ;; Tracked objects:
 12670 ;;		On entry : 0/0
 12671 ;;		On exit  : 0/0
 12672 ;;		Unchanged: 0/0
 12673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12676 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12677 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12678 ;;Total ram usage:        2 bytes
 12679 ;; Hardware stack levels used:    1
 12680 ;; Hardware stack levels required when called:    4
 12681 ;; This function calls:
 12682 ;;		Nothing
 12683 ;; This function is called by:
 12684 ;;		_USBDeviceTasks
 12685 ;;		_USBCtrlEPServiceComplete
 12686 ;;		_USBCtrlTrfRxService
 12687 ;; This function uses a non-reentrant model
 12688 ;;
 12689                           
 12690                           
 12691                           ;psect for function _USBCtrlEPAllowStatusStage
 12692  1064                     _USBCtrlEPAllowStatusStage:	
 12693                           
 12694                           ;usb_device.c: 1596: if(USBStatusStageEnabledFlag1 == FALSE)
 12695                           
 12696                           ;incstack = 0
 12697                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 12698  1064  0022               	movlb	2	; select bank2
 12699  1065  08B0               	movf	_USBStatusStageEnabledFlag1^(0+256),f	;volatile
 12700  1066  1D03               	skipz
 12701  1067  0008               	return
 12702                           
 12703                           ;usb_device.c: 1597: {
 12704                           ;usb_device.c: 1598: USBStatusStageEnabledFlag1 = TRUE;
 12705  1068  3001               	movlw	1
 12706  1069  0020               	movlb	0	; select bank0
 12707  106A  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12708  106B  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12709  106C  0022               	movlb	2	; select bank2
 12710  106D  00B0               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12711                           
 12712                           ;usb_device.c: 1599: if(USBStatusStageEnabledFlag2 == FALSE)
 12713  106E  08B1               	movf	_USBStatusStageEnabledFlag2^(0+256),f	;volatile
 12714  106F  1D03               	skipz
 12715  1070  0008               	return
 12716                           
 12717                           ;usb_device.c: 1600: {
 12718                           ;usb_device.c: 1601: USBStatusStageEnabledFlag2 = TRUE;
 12719  1071  3001               	movlw	1
 12720  1072  0020               	movlb	0	; select bank0
 12721  1073  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12722  1074  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12723  1075  0022               	movlb	2	; select bank2
 12724  1076  00B1               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 12725                           
 12726                           ;usb_device.c: 1605: if(controlTransferState == 2)
 12727  1077  0020               	movlb	0	; select bank0
 12728  1078  086C               	movf	_controlTransferState,w
 12729  1079  3A02               	xorlw	2
 12730  107A  1D03               	skipz
 12731  107B  2888               	goto	l6793
 12732                           
 12733                           ;usb_device.c: 1606: {
 12734                           ;usb_device.c: 1607: pBDTEntryIn[0]->CNT = 0;
 12735  107C  0A68               	incf	_pBDTEntryIn,w
 12736  107D  0086               	movwf	6
 12737  107E  0187               	clrf	7
 12738  107F  0181               	clrf	1
 12739                           
 12740                           ;usb_device.c: 1608: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 12741  1080  30C8               	movlw	200
 12742  1081  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12743  1082  0868               	movf	_pBDTEntryIn,w
 12744  1083  0086               	movwf	6
 12745  1084  0187               	clrf	7
 12746  1085  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12747  1086  0081               	movwf	1
 12748                           
 12749                           ;usb_device.c: 1609: }
 12750  1087  0008               	return
 12751  1088                     l6793:	
 12752                           
 12753                           ;usb_device.c: 1610: else if(controlTransferState == 1)
 12754  1088  086C               	movf	_controlTransferState,w
 12755  1089  3A01               	xorlw	1
 12756  108A  1D03               	skipz
 12757  108B  0008               	return
 12758                           
 12759                           ;usb_device.c: 1611: {
 12760                           ;usb_device.c: 1612: BothEP0OutUOWNsSet = FALSE;
 12761  108C  0023               	movlb	3	; select bank3
 12762  108D  01B2               	clrf	_BothEP0OutUOWNsSet^(0+384)
 12763                           
 12764                           ;usb_device.c: 1617: pBDTEntryEP0OutCurrent->CNT = 8;
 12765  108E  3008               	movlw	8
 12766  108F  0020               	movlb	0	; select bank0
 12767  1090  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12768  1091  0A6D               	incf	_pBDTEntryEP0OutCurrent,w
 12769  1092  0086               	movwf	6
 12770  1093  0187               	clrf	7
 12771  1094  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12772  1095  0081               	movwf	1
 12773                           
 12774                           ;usb_device.c: 1618: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12775  1096  3040               	movlw	64
 12776  1097  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12777  1098  3000               	movlw	0
 12778  1099  00D9               	movwf	??_USBCtrlEPAllowStatusStage+1
 12779  109A  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12780  109B  3E02               	addlw	2
 12781  109C  0086               	movwf	6
 12782  109D  0187               	clrf	7
 12783  109E  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12784  109F  3FC0               	movwi [0]fsr1
 12785  10A0  0859               	movf	??_USBCtrlEPAllowStatusStage+1,w
 12786  10A1  3FC1               	movwi [1]fsr1
 12787                           
 12788                           ;usb_device.c: 1619: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x04;
 12789  10A2  3084               	movlw	132
 12790  10A3  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12791  10A4  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12792  10A5  0086               	movwf	6
 12793  10A6  0187               	clrf	7
 12794  10A7  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12795  10A8  0081               	movwf	1
 12796                           
 12797                           ;usb_device.c: 1620: BothEP0OutUOWNsSet = TRUE;
 12798  10A9  0023               	movlb	3	; select bank3
 12799  10AA  01B2               	clrf	_BothEP0OutUOWNsSet^(0+384)
 12800  10AB  0AB2               	incf	_BothEP0OutUOWNsSet^(0+384),f
 12801                           
 12802                           ;usb_device.c: 1624: pBDTEntryEP0OutNext->CNT = 8;
 12803  10AC  3008               	movlw	8
 12804  10AD  0020               	movlb	0	; select bank0
 12805  10AE  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12806  10AF  0A6E               	incf	_pBDTEntryEP0OutNext,w
 12807  10B0  0086               	movwf	6
 12808  10B1  0187               	clrf	7
 12809  10B2  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12810  10B3  0081               	movwf	1
 12811                           
 12812                           ;usb_device.c: 1625: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12813  10B4  3040               	movlw	64
 12814  10B5  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12815  10B6  3000               	movlw	0
 12816  10B7  00D9               	movwf	??_USBCtrlEPAllowStatusStage+1
 12817  10B8  086E               	movf	_pBDTEntryEP0OutNext,w
 12818  10B9  3E02               	addlw	2
 12819  10BA  0086               	movwf	6
 12820  10BB  0187               	clrf	7
 12821  10BC  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12822  10BD  3FC0               	movwi [0]fsr1
 12823  10BE  0859               	movf	??_USBCtrlEPAllowStatusStage+1,w
 12824  10BF  3FC1               	movwi [1]fsr1
 12825                           
 12826                           ;usb_device.c: 1626: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12827  10C0  3080               	movlw	128
 12828  10C1  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12829  10C2  086E               	movf	_pBDTEntryEP0OutNext,w
 12830  10C3  0086               	movwf	6
 12831  10C4  0187               	clrf	7
 12832  10C5  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12833  10C6  0081               	movwf	1
 12834  10C7  0008               	return
 12835  10C8                     __end_of_USBCtrlEPAllowStatusStage:	
 12836                           
 12837                           	psect	text48
 12838  1AC5                     __ptext48:	
 12839 ;; *************** function _USBStallHandler *****************
 12840 ;; Defined at:
 12841 ;;		line 2356 in file "../USB/usb_device.c"
 12842 ;; Parameters:    Size  Location     Type
 12843 ;;		None
 12844 ;; Auto vars:     Size  Location     Type
 12845 ;;		None
 12846 ;; Return value:  Size  Location     Type
 12847 ;;		None               void
 12848 ;; Registers used:
 12849 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12850 ;; Tracked objects:
 12851 ;;		On entry : 0/0
 12852 ;;		On exit  : 0/0
 12853 ;;		Unchanged: 0/0
 12854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12857 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12859 ;;Total ram usage:        1 bytes
 12860 ;; Hardware stack levels used:    1
 12861 ;; Hardware stack levels required when called:    4
 12862 ;; This function calls:
 12863 ;;		Nothing
 12864 ;; This function is called by:
 12865 ;;		_USBDeviceTasks
 12866 ;; This function uses a non-reentrant model
 12867 ;;
 12868                           
 12869                           
 12870                           ;psect for function _USBStallHandler
 12871  1AC5                     _USBStallHandler:	
 12872                           
 12873                           ;usb_device.c: 2368: if(UEP0bits.EPSTALL == 1)
 12874                           
 12875                           ;incstack = 0
 12876                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12877  1AC5  003D               	movlb	29	; select bank29
 12878  1AC6  1C18               	btfss	24,0	;volatile
 12879  1AC7  2AE0               	goto	l4667
 12880                           
 12881                           ;usb_device.c: 2369: {
 12882                           ;usb_device.c: 2371: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 12883  1AC8  0020               	movlb	0	; select bank0
 12884  1AC9  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12885  1ACA  0086               	movwf	6
 12886  1ACB  0187               	clrf	7
 12887  1ACC  0801               	movf	1,w
 12888  1ACD  3A80               	xorlw	128
 12889  1ACE  1D03               	skipz
 12890  1ACF  2ADE               	goto	l4665
 12891  1AD0  0868               	movf	_pBDTEntryIn,w
 12892  1AD1  0086               	movwf	6
 12893  1AD2  0187               	clrf	7
 12894  1AD3  0801               	movf	1,w
 12895  1AD4  3A84               	xorlw	132
 12896  1AD5  1D03               	skipz
 12897  1AD6  2ADE               	goto	l4665
 12898                           
 12899                           ;usb_device.c: 2372: {
 12900                           ;usb_device.c: 2374: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
 12901  1AD7  308C               	movlw	140
 12902  1AD8  00D8               	movwf	??_USBStallHandler
 12903  1AD9  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12904  1ADA  0086               	movwf	6
 12905  1ADB  0187               	clrf	7
 12906  1ADC  0858               	movf	??_USBStallHandler,w
 12907  1ADD  0081               	movwf	1
 12908  1ADE                     l4665:	
 12909                           
 12910                           ;usb_device.c: 2375: }
 12911                           ;usb_device.c: 2376: UEP0bits.EPSTALL = 0;
 12912  1ADE  003D               	movlb	29	; select bank29
 12913  1ADF  1018               	bcf	24,0	;volatile
 12914  1AE0                     l4667:	
 12915                           
 12916                           ;usb_device.c: 2377: }
 12917                           ;usb_device.c: 2379: (UIR &= 0xDF);
 12918  1AE0  30DF               	movlw	223
 12919  1AE1  0020               	movlb	0	; select bank0
 12920  1AE2  00D8               	movwf	??_USBStallHandler
 12921  1AE3  0858               	movf	??_USBStallHandler,w
 12922  1AE4  003D               	movlb	29	; select bank29
 12923  1AE5  0590               	andwf	16,f	;volatile
 12924  1AE6  0008               	return
 12925  1AE7                     __end_of_USBStallHandler:	
 12926                           
 12927                           	psect	text49
 12928  19EE                     __ptext49:	
 12929 ;; *************** function _USBSuspend *****************
 12930 ;; Defined at:
 12931 ;;		line 2399 in file "../USB/usb_device.c"
 12932 ;; Parameters:    Size  Location     Type
 12933 ;;		None
 12934 ;; Auto vars:     Size  Location     Type
 12935 ;;		None
 12936 ;; Return value:  Size  Location     Type
 12937 ;;		None               void
 12938 ;; Registers used:
 12939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12940 ;; Tracked objects:
 12941 ;;		On entry : 0/0
 12942 ;;		On exit  : 0/0
 12943 ;;		Unchanged: 0/0
 12944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12947 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12948 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12949 ;;Total ram usage:        1 bytes
 12950 ;; Hardware stack levels used:    1
 12951 ;; Hardware stack levels required when called:    8
 12952 ;; This function calls:
 12953 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12954 ;; This function is called by:
 12955 ;;		_USBDeviceTasks
 12956 ;; This function uses a non-reentrant model
 12957 ;;
 12958                           
 12959                           
 12960                           ;psect for function _USBSuspend
 12961  19EE                     _USBSuspend:	
 12962                           
 12963                           ;usb_device.c: 2423: UIEbits.ACTVIE = 1;
 12964                           
 12965                           ;incstack = 0
 12966                           ; Regs used in _USBSuspend: [allreg]
 12967  19EE  003D               	movlb	29	; select bank29
 12968  19EF  1512               	bsf	18,2	;volatile
 12969                           
 12970                           ;usb_device.c: 2424: (UIR &= 0xEF);
 12971  19F0  30EF               	movlw	239
 12972  19F1  0021               	movlb	1	; select bank1
 12973  19F2  00A6               	movwf	??_USBSuspend^(0+128)
 12974  19F3  0826               	movf	??_USBSuspend^(0+128),w
 12975  19F4  003D               	movlb	29	; select bank29
 12976  19F5  0590               	andwf	16,f	;volatile
 12977                           
 12978                           ;usb_device.c: 2427: UCONbits.SUSPND = 1;
 12979  19F6  148E               	bsf	14,1	;volatile
 12980                           
 12981                           ;usb_device.c: 2430: USBBusIsSuspended = TRUE;
 12982  19F7  0023               	movlb	3	; select bank3
 12983  19F8  01B8               	clrf	_USBBusIsSuspended^(0+384)
 12984  19F9  0AB8               	incf	_USBBusIsSuspended^(0+384),f
 12985                           
 12986                           ;usb_device.c: 2437: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12987  19FA  3075               	movlw	117
 12988  19FB  0021               	movlb	1	; select bank1
 12989  19FC  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 12990  19FD  3000               	movlw	0
 12991  19FE  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 12992  19FF  3000               	movlw	0
 12993  1A00  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 12994  1A01  3000               	movlw	0
 12995  1A02  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 12996  1A03  3000               	movlw	0
 12997  1A04  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 12998  1A05  3000               	movlw	0
 12999  1A06  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 13000  1A07  319C  2423         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 13001  1A09  0008               	return
 13002  1A0A                     __end_of_USBSuspend:	
 13003                           
 13004                           	psect	text50
 13005  19B7                     __ptext50:	
 13006 ;; *************** function _USBWakeFromSuspend *****************
 13007 ;; Defined at:
 13008 ;;		line 2456 in file "../USB/usb_device.c"
 13009 ;; Parameters:    Size  Location     Type
 13010 ;;		None
 13011 ;; Auto vars:     Size  Location     Type
 13012 ;;		None
 13013 ;; Return value:  Size  Location     Type
 13014 ;;		None               void
 13015 ;; Registers used:
 13016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 13017 ;; Tracked objects:
 13018 ;;		On entry : 0/0
 13019 ;;		On exit  : 0/0
 13020 ;;		Unchanged: 0/0
 13021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13024 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13025 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13026 ;;Total ram usage:        1 bytes
 13027 ;; Hardware stack levels used:    1
 13028 ;; Hardware stack levels required when called:    8
 13029 ;; This function calls:
 13030 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13031 ;; This function is called by:
 13032 ;;		_USBDeviceTasks
 13033 ;; This function uses a non-reentrant model
 13034 ;;
 13035                           
 13036                           
 13037                           ;psect for function _USBWakeFromSuspend
 13038  19B7                     _USBWakeFromSuspend:	
 13039                           
 13040                           ;usb_device.c: 2457: USBBusIsSuspended = FALSE;
 13041                           
 13042                           ;incstack = 0
 13043                           ; Regs used in _USBWakeFromSuspend: [allreg]
 13044  19B7  0023               	movlb	3	; select bank3
 13045  19B8  01B8               	clrf	_USBBusIsSuspended^(0+384)
 13046                           
 13047                           ;usb_device.c: 2463: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 13048  19B9  3074               	movlw	116
 13049  19BA  0021               	movlb	1	; select bank1
 13050  19BB  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 13051  19BC  3000               	movlw	0
 13052  19BD  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 13053  19BE  3000               	movlw	0
 13054  19BF  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 13055  19C0  3000               	movlw	0
 13056  19C1  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 13057  19C2  3000               	movlw	0
 13058  19C3  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 13059  19C4  3000               	movlw	0
 13060  19C5  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 13061  19C6  319C  2423         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 13062                           
 13063                           ;usb_device.c: 2470: UCONbits.SUSPND = 0;
 13064  19C8  003D               	movlb	29	; select bank29
 13065  19C9  108E               	bcf	14,1	;volatile
 13066                           
 13067                           ;usb_device.c: 2475: UIEbits.ACTVIE = 0;
 13068  19CA  1112               	bcf	18,2	;volatile
 13069                           
 13070                           ;usb_device.c: 2495: {
 13071                           ;usb_device.c: 2496: (UIR &= 0xFB);
 13072  19CB  30FB               	movlw	251
 13073  19CC  0021               	movlb	1	; select bank1
 13074  19CD  00A6               	movwf	??_USBWakeFromSuspend^(0+128)
 13075  19CE  0826               	movf	??_USBWakeFromSuspend^(0+128),w
 13076  19CF  003D               	movlb	29	; select bank29
 13077  19D0  0590               	andwf	16,f	;volatile
 13078  19D1  0008               	return
 13079  19D2                     __end_of_USBWakeFromSuspend:	
 13080                           
 13081                           	psect	text51
 13082  1C23                     __ptext51:	
 13083 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 13084 ;; Defined at:
 13085 ;;		line 630 in file "main.c"
 13086 ;; Parameters:    Size  Location     Type
 13087 ;;  event           2    0[BANK1 ] int 
 13088 ;;  pdata           2    2[BANK1 ] PTR void 
 13089 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(32), 
 13090 ;;  size            2    4[BANK1 ] unsigned short 
 13091 ;; Auto vars:     Size  Location     Type
 13092 ;;		None
 13093 ;; Return value:  Size  Location     Type
 13094 ;;                  1    wreg      enum E5
 13095 ;; Registers used:
 13096 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13097 ;; Tracked objects:
 13098 ;;		On entry : 0/0
 13099 ;;		On exit  : 0/0
 13100 ;;		Unchanged: 0/0
 13101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13102 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13105 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13106 ;;Total ram usage:        6 bytes
 13107 ;; Hardware stack levels used:    1
 13108 ;; Hardware stack levels required when called:    7
 13109 ;; This function calls:
 13110 ;;		_USBCBSuspend
 13111 ;;		_USBCBWakeFromSuspend
 13112 ;;		_USBCB_SOF_Handler
 13113 ;;		_USBCBErrorHandler
 13114 ;;		_USBCBCheckOtherReq
 13115 ;;		_USBCBStdSetDscHandler
 13116 ;;		_USBCBInitEP
 13117 ;; This function is called by:
 13118 ;;		_USBDeviceTasks
 13119 ;;		_USBStdSetCfgHandler
 13120 ;;		_USBSuspend
 13121 ;;		_USBWakeFromSuspend
 13122 ;;		_USBCtrlTrfSetupHandler
 13123 ;;		_USBCheckStdRequest
 13124 ;;		_USBStdFeatureReqHandler
 13125 ;; This function uses a non-reentrant model
 13126 ;;
 13127                           
 13128                           
 13129                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
 13130  1C23                     _USER_USB_CALLBACK_EVENT_HANDLER:	
 13131                           
 13132                           ;main.c: 631: switch( event )
 13133                           
 13134                           ;incstack = 0
 13135                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 13136  1C23  2C39               	goto	l6771
 13137  1C24                     l6755:	
 13138                           ;main.c: 636: case EVENT_SOF:
 13139                           
 13140                           ;main.c: 635: break;
 13141                           
 13142                           ;main.c: 632: {
 13143                           ;main.c: 633: case EVENT_TRANSFER:
 13144                           
 13145                           
 13146                           ;main.c: 637: USBCB_SOF_Handler();
 13147  1C24  3190  2000         	fcall	_USBCB_SOF_Handler
 13148                           
 13149                           ;main.c: 638: break;
 13150  1C26  0008               	return
 13151  1C27                     l6757:	
 13152                           ;main.c: 639: case EVENT_SUSPEND:
 13153                           
 13154                           
 13155                           ;main.c: 640: USBCBSuspend();
 13156  1C27  3198  20F3         	fcall	_USBCBSuspend
 13157                           
 13158                           ;main.c: 641: break;
 13159  1C29  0008               	return
 13160  1C2A                     l6759:	
 13161                           ;main.c: 642: case EVENT_RESUME:
 13162                           
 13163                           
 13164                           ;main.c: 643: USBCBWakeFromSuspend();
 13165  1C2A  3198  20F4         	fcall	_USBCBWakeFromSuspend
 13166                           
 13167                           ;main.c: 644: break;
 13168  1C2C  0008               	return
 13169  1C2D                     l6761:	
 13170                           ;main.c: 645: case EVENT_CONFIGURED:
 13171                           
 13172                           
 13173                           ;main.c: 646: USBCBInitEP();
 13174  1C2D  3199  21D2         	fcall	_USBCBInitEP
 13175                           
 13176                           ;main.c: 647: break;
 13177  1C2F  0008               	return
 13178  1C30                     l6763:	
 13179                           ;main.c: 648: case EVENT_SET_DESCRIPTOR:
 13180                           
 13181                           
 13182                           ;main.c: 649: USBCBStdSetDscHandler();
 13183  1C30  3187  27FF         	fcall	_USBCBStdSetDscHandler
 13184                           
 13185                           ;main.c: 650: break;
 13186  1C32  0008               	return
 13187  1C33                     l6765:	
 13188                           ;main.c: 651: case EVENT_EP0_REQUEST:
 13189                           
 13190                           
 13191                           ;main.c: 652: USBCBCheckOtherReq();
 13192  1C33  3187  27FC         	fcall	_USBCBCheckOtherReq
 13193                           
 13194                           ;main.c: 653: break;
 13195  1C35  0008               	return
 13196  1C36                     l6767:	
 13197                           ;main.c: 654: case EVENT_BUS_ERROR:
 13198                           
 13199                           
 13200                           ;main.c: 655: USBCBErrorHandler();
 13201  1C36  3180  2002         	fcall	_USBCBErrorHandler
 13202                           
 13203                           ;main.c: 669: }
 13204                           
 13205                           ;main.c: 668: break;
 13206                           
 13207                           ;main.c: 667: default:
 13208                           
 13209                           ;main.c: 666: break;
 13210                           
 13211                           ;main.c: 657: case EVENT_TRANSFER_TERMINATED:
 13212                           
 13213                           ;main.c: 656: break;
 13214  1C38  0008               	return
 13215  1C39                     l6771:	
 13216                           
 13217                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 13218                           ; Switch size 1, requested type "space"
 13219                           ; Number of cases is 2, Range of values is 0 to 127
 13220                           ; switch strategies available:
 13221                           ; Name         Instructions Cycles
 13222                           ; simple_byte            7     4 (average)
 13223                           ; direct_byte          262     6 (fixed)
 13224                           ; jumptable            260     6 (fixed)
 13225                           ;	Chosen strategy is simple_byte
 13226  1C39  0021               	movlb	1	; select bank1
 13227  1C3A  0821               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
 13228  1C3B  3A00               	xorlw	0	; case 0
 13229  1C3C  1903               	skipnz
 13230  1C3D  2C42               	goto	l8033
 13231  1C3E  3A7F               	xorlw	127	; case 127
 13232  1C3F  1903               	skipnz
 13233  1C40  2C5C               	goto	l8035
 13234  1C41  2C61               	goto	l910
 13235  1C42                     l8033:	
 13236                           
 13237                           ; Switch size 1, requested type "space"
 13238                           ; Number of cases is 8, Range of values is 1 to 117
 13239                           ; switch strategies available:
 13240                           ; Name         Instructions Cycles
 13241                           ; simple_byte           25    13 (average)
 13242                           ; direct_byte          243     9 (fixed)
 13243                           ; jumptable            263     9 (fixed)
 13244                           ;	Chosen strategy is simple_byte
 13245  1C42  0820               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 13246  1C43  3A01               	xorlw	1	; case 1
 13247  1C44  1903               	skipnz
 13248  1C45  2C2D               	goto	l6761
 13249  1C46  3A03               	xorlw	3	; case 2
 13250  1C47  1903               	skipnz
 13251  1C48  2C30               	goto	l6763
 13252  1C49  3A01               	xorlw	1	; case 3
 13253  1C4A  1903               	skipnz
 13254  1C4B  2C33               	goto	l6765
 13255  1C4C  3A06               	xorlw	6	; case 5
 13256  1C4D  1903               	skipnz
 13257  1C4E  2C61               	goto	l910
 13258  1C4F  3A77               	xorlw	119	; case 114
 13259  1C50  1903               	skipnz
 13260  1C51  2C61               	goto	l910
 13261  1C52  3A01               	xorlw	1	; case 115
 13262  1C53  1903               	skipnz
 13263  1C54  2C24               	goto	l6755
 13264  1C55  3A07               	xorlw	7	; case 116
 13265  1C56  1903               	skipnz
 13266  1C57  2C2A               	goto	l6759
 13267  1C58  3A01               	xorlw	1	; case 117
 13268  1C59  1903               	skipnz
 13269  1C5A  2C27               	goto	l6757
 13270  1C5B  2C61               	goto	l910
 13271  1C5C                     l8035:	
 13272                           
 13273                           ; Switch size 1, requested type "space"
 13274                           ; Number of cases is 1, Range of values is 255 to 255
 13275                           ; switch strategies available:
 13276                           ; Name         Instructions Cycles
 13277                           ; simple_byte            4     3 (average)
 13278                           ; direct_byte            7     5 (fixed)
 13279                           ; jumptable            263     9 (fixed)
 13280                           ;	Chosen strategy is simple_byte
 13281  1C5C  0820               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 13282  1C5D  3AFF               	xorlw	255	; case 255
 13283  1C5E  1903               	skipnz
 13284  1C5F  2C36               	goto	l6767
 13285  1C60  2C61               	goto	l910
 13286  1C61                     l910:	
 13287                           ;main.c: 670: return TRUE;
 13288                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
 13289                           
 13290  1C61  0008               	return
 13291  1C62                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
 13292                           
 13293                           	psect	text52
 13294  19D2                     __ptext52:	
 13295 ;; *************** function _USBCBInitEP *****************
 13296 ;; Defined at:
 13297 ;;		line 460 in file "main.c"
 13298 ;; Parameters:    Size  Location     Type
 13299 ;;		None
 13300 ;; Auto vars:     Size  Location     Type
 13301 ;;		None
 13302 ;; Return value:  Size  Location     Type
 13303 ;;		None               void
 13304 ;; Registers used:
 13305 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13306 ;; Tracked objects:
 13307 ;;		On entry : 0/0
 13308 ;;		On exit  : 0/0
 13309 ;;		Unchanged: 0/0
 13310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13313 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13314 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13315 ;;Total ram usage:        3 bytes
 13316 ;; Hardware stack levels used:    1
 13317 ;; Hardware stack levels required when called:    6
 13318 ;; This function calls:
 13319 ;;		_USBEnableEndpoint
 13320 ;;		_USBTransferOnePacket
 13321 ;; This function is called by:
 13322 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13323 ;; This function uses a non-reentrant model
 13324 ;;
 13325                           
 13326                           
 13327                           ;psect for function _USBCBInitEP
 13328  19D2                     _USBCBInitEP:	
 13329                           
 13330                           ;main.c: 462: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
 13331                           
 13332                           ;incstack = 0
 13333                           ; Regs used in _USBCBInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13334  19D2  301E               	movlw	30
 13335  19D3  0020               	movlb	0	; select bank0
 13336  19D4  00E5               	movwf	??_USBCBInitEP
 13337  19D5  0865               	movf	??_USBCBInitEP,w
 13338  19D6  00DF               	movwf	?_USBEnableEndpoint
 13339  19D7  3001               	movlw	1
 13340  19D8  319B  2309  3199   	fcall	_USBEnableEndpoint
 13341                           
 13342                           ;main.c: 464: USBGenericOutHandle = USBTransferOnePacket(1,0,(BYTE*)&OUTPacket,64);
 13343  19DB  0020               	movlb	0	; select bank0
 13344  19DC  01DC               	clrf	?_USBTransferOnePacket
 13345  19DD  30A0               	movlw	160
 13346  19DE  00E5               	movwf	??_USBCBInitEP
 13347  19DF  0865               	movf	??_USBCBInitEP,w
 13348  19E0  00DD               	movwf	?_USBTransferOnePacket+1
 13349  19E1  3040               	movlw	64
 13350  19E2  00E6               	movwf	??_USBCBInitEP+1
 13351  19E3  0866               	movf	??_USBCBInitEP+1,w
 13352  19E4  00DE               	movwf	?_USBTransferOnePacket+2
 13353  19E5  3001               	movlw	1
 13354  19E6  3188  20AF         	fcall	_USBTransferOnePacket
 13355  19E8  0020               	movlb	0	; select bank0
 13356  19E9  00E7               	movwf	??_USBCBInitEP+2
 13357  19EA  0867               	movf	??_USBCBInitEP+2,w
 13358  19EB  0022               	movlb	2	; select bank2
 13359  19EC  00AF               	movwf	_USBGenericOutHandle^(0+256)
 13360  19ED  0008               	return
 13361  19EE                     __end_of_USBCBInitEP:	
 13362                           
 13363                           	psect	text53
 13364  08AF                     __ptext53:	
 13365 ;; *************** function _USBTransferOnePacket *****************
 13366 ;; Defined at:
 13367 ;;		line 1173 in file "../USB/usb_device.c"
 13368 ;; Parameters:    Size  Location     Type
 13369 ;;  ep              1    wreg     unsigned char 
 13370 ;;  dir             1   12[BANK0 ] unsigned char 
 13371 ;;  data            1   13[BANK0 ] PTR unsigned char 
 13372 ;;		 -> INPacket(64), OUTPacket(64), 
 13373 ;;  len             1   14[BANK0 ] unsigned char 
 13374 ;; Auto vars:     Size  Location     Type
 13375 ;;  ep              1   17[BANK0 ] unsigned char 
 13376 ;;  handle          1   18[BANK0 ] PTR volatile struct __BD
 13377 ;;		 -> NULL(0), BDT(32), 
 13378 ;; Return value:  Size  Location     Type
 13379 ;;                  1    wreg      PTR void 
 13380 ;; Registers used:
 13381 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13382 ;; Tracked objects:
 13383 ;;		On entry : 0/0
 13384 ;;		On exit  : 0/0
 13385 ;;		Unchanged: 0/0
 13386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13387 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13388 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13389 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13390 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13391 ;;Total ram usage:        7 bytes
 13392 ;; Hardware stack levels used:    1
 13393 ;; Hardware stack levels required when called:    4
 13394 ;; This function calls:
 13395 ;;		Nothing
 13396 ;; This function is called by:
 13397 ;;		_ProcessIO
 13398 ;;		_USBCBInitEP
 13399 ;; This function uses a non-reentrant model
 13400 ;;
 13401                           
 13402                           
 13403                           ;psect for function _USBTransferOnePacket
 13404  08AF                     _USBTransferOnePacket:	
 13405                           
 13406                           ;incstack = 0
 13407                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 13408                           ;USBTransferOnePacket@ep stored from wreg
 13409  08AF  0020               	movlb	0	; select bank0
 13410  08B0  00E1               	movwf	USBTransferOnePacket@ep
 13411                           
 13412                           ;usb_device.c: 1174: volatile BDT_ENTRY* handle;
 13413                           ;usb_device.c: 1177: if(dir != 0)
 13414  08B1  085C               	movf	USBTransferOnePacket@dir,w
 13415  08B2  1903               	btfsc	3,2
 13416  08B3  28B9               	goto	l6877
 13417                           
 13418                           ;usb_device.c: 1178: {
 13419                           ;usb_device.c: 1180: handle = pBDTEntryIn[ep];
 13420  08B4  0861               	movf	USBTransferOnePacket@ep,w
 13421  08B5  3E68               	addlw	_pBDTEntryIn& (0+255)
 13422  08B6  0086               	movwf	6
 13423  08B7  0187               	clrf	7
 13424  08B8  28BE               	goto	L16
 13425  08B9                     l6877:	
 13426                           ;usb_device.c: 1181: }
 13427                           
 13428                           
 13429                           ;usb_device.c: 1182: else
 13430                           ;usb_device.c: 1183: {
 13431                           ;usb_device.c: 1185: handle = pBDTEntryOut[ep];
 13432  08B9  0861               	movf	USBTransferOnePacket@ep,w
 13433  08BA  3E22               	addlw	_pBDTEntryOut& (0+255)
 13434  08BB  0086               	movwf	6
 13435  08BC  3001               	movlw	1	; select bank2/3
 13436  08BD  0087               	movwf	7
 13437  08BE                     L16:	
 13438  08BE  0801               	movf	1,w
 13439  08BF  00DF               	movwf	??_USBTransferOnePacket
 13440  08C0  085F               	movf	??_USBTransferOnePacket,w
 13441  08C1  00E2               	movwf	USBTransferOnePacket@handle
 13442                           
 13443                           ;usb_device.c: 1186: }
 13444                           ;usb_device.c: 1190: if(handle == 0)
 13445  08C2  08E2               	movf	USBTransferOnePacket@handle,f
 13446  08C3  1D03               	skipz
 13447  08C4  28C7               	goto	l6885
 13448                           
 13449                           ;usb_device.c: 1191: {
 13450                           ;usb_device.c: 1192: return 0;
 13451  08C5  3000               	movlw	0
 13452  08C6  0008               	return
 13453  08C7                     l6885:	
 13454                           
 13455                           ;usb_device.c: 1193: }
 13456                           ;usb_device.c: 1206: handle->ADR = (((WORD)(data))& 0x7FFF);
 13457  08C7  085D               	movf	USBTransferOnePacket@data,w
 13458  08C8  00DF               	movwf	??_USBTransferOnePacket
 13459  08C9  3002               	movlw	2
 13460  08CA  00E0               	movwf	??_USBTransferOnePacket+1
 13461  08CB  0862               	movf	USBTransferOnePacket@handle,w
 13462  08CC  3E02               	addlw	2
 13463  08CD  0086               	movwf	6
 13464  08CE  0187               	clrf	7
 13465  08CF  085F               	movf	??_USBTransferOnePacket,w
 13466  08D0  3FC0               	movwi [0]fsr1
 13467  08D1  0860               	movf	??_USBTransferOnePacket+1,w
 13468  08D2  3FC1               	movwi [1]fsr1
 13469                           
 13470                           ;usb_device.c: 1207: handle->CNT = len;
 13471  08D3  085E               	movf	USBTransferOnePacket@len,w
 13472  08D4  00DF               	movwf	??_USBTransferOnePacket
 13473  08D5  0A62               	incf	USBTransferOnePacket@handle,w
 13474  08D6  0086               	movwf	6
 13475  08D7  0187               	clrf	7
 13476  08D8  085F               	movf	??_USBTransferOnePacket,w
 13477  08D9  0081               	movwf	1
 13478                           
 13479                           ;usb_device.c: 1208: handle->STAT.Val &= 0x40;
 13480  08DA  3040               	movlw	64
 13481  08DB  00DF               	movwf	??_USBTransferOnePacket
 13482  08DC  0862               	movf	USBTransferOnePacket@handle,w
 13483  08DD  0086               	movwf	6
 13484  08DE  0187               	clrf	7
 13485  08DF  085F               	movf	??_USBTransferOnePacket,w
 13486  08E0  0581               	andwf	1,f
 13487                           
 13488                           ;usb_device.c: 1209: handle->STAT.Val |= 0x80 | (0x08 & 0x08);
 13489  08E1  3088               	movlw	136
 13490  08E2  00DF               	movwf	??_USBTransferOnePacket
 13491  08E3  0862               	movf	USBTransferOnePacket@handle,w
 13492  08E4  0086               	movwf	6
 13493  08E5  0187               	clrf	7
 13494  08E6  085F               	movf	??_USBTransferOnePacket,w
 13495  08E7  0481               	iorwf	1,f
 13496                           
 13497                           ;usb_device.c: 1212: if(dir != 0)
 13498  08E8  085C               	movf	USBTransferOnePacket@dir,w
 13499  08E9  1903               	btfsc	3,2
 13500  08EA  28F2               	goto	l6895
 13501                           
 13502                           ;usb_device.c: 1213: {
 13503                           ;usb_device.c: 1215: ((BYTE_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;;
 13504  08EB  3004               	movlw	4
 13505  08EC  00DF               	movwf	??_USBTransferOnePacket
 13506  08ED  0861               	movf	USBTransferOnePacket@ep,w
 13507  08EE  3E68               	addlw	_pBDTEntryIn& (0+255)
 13508  08EF  0086               	movwf	6
 13509  08F0  0187               	clrf	7
 13510  08F1  28F9               	goto	L17
 13511  08F2                     l6895:	
 13512                           ;usb_device.c: 1216: }
 13513                           
 13514                           
 13515                           ;usb_device.c: 1217: else
 13516                           ;usb_device.c: 1218: {
 13517                           ;usb_device.c: 1220: ((BYTE_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;;
 13518  08F2  3004               	movlw	4
 13519  08F3  00DF               	movwf	??_USBTransferOnePacket
 13520  08F4  0861               	movf	USBTransferOnePacket@ep,w
 13521  08F5  3E22               	addlw	_pBDTEntryOut& (0+255)
 13522  08F6  0086               	movwf	6
 13523  08F7  3001               	movlw	1	; select bank2/3
 13524  08F8  0087               	movwf	7
 13525  08F9                     L17:	
 13526  08F9  085F               	movf	??_USBTransferOnePacket,w
 13527  08FA  0681               	xorwf	1,f
 13528                           
 13529                           ;usb_device.c: 1221: }
 13530                           ;usb_device.c: 1222: return (void*)handle;
 13531  08FB  0862               	movf	USBTransferOnePacket@handle,w
 13532  08FC  0008               	return
 13533  08FD                     __end_of_USBTransferOnePacket:	
 13534                           
 13535                           	psect	text54
 13536  1B09                     __ptext54:	
 13537 ;; *************** function _USBEnableEndpoint *****************
 13538 ;; Defined at:
 13539 ;;		line 1056 in file "../USB/usb_device.c"
 13540 ;; Parameters:    Size  Location     Type
 13541 ;;  ep              1    wreg     unsigned char 
 13542 ;;  options         1   15[BANK0 ] unsigned char 
 13543 ;; Auto vars:     Size  Location     Type
 13544 ;;  ep              1   20[BANK0 ] unsigned char 
 13545 ;;  p               2   18[BANK0 ] PTR unsigned char 
 13546 ;;		 -> UEP0(1), 
 13547 ;; Return value:  Size  Location     Type
 13548 ;;		None               void
 13549 ;; Registers used:
 13550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13551 ;; Tracked objects:
 13552 ;;		On entry : 0/0
 13553 ;;		On exit  : 0/0
 13554 ;;		Unchanged: 0/0
 13555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13556 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13557 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13558 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13559 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13560 ;;Total ram usage:        6 bytes
 13561 ;; Hardware stack levels used:    1
 13562 ;; Hardware stack levels required when called:    5
 13563 ;; This function calls:
 13564 ;;		_USBConfigureEndpoint
 13565 ;; This function is called by:
 13566 ;;		_USBCBInitEP
 13567 ;; This function uses a non-reentrant model
 13568 ;;
 13569                           
 13570                           
 13571                           ;psect for function _USBEnableEndpoint
 13572  1B09                     _USBEnableEndpoint:	
 13573                           
 13574                           ;incstack = 0
 13575                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13576                           ;USBEnableEndpoint@ep stored from wreg
 13577  1B09  0020               	movlb	0	; select bank0
 13578  1B0A  00E4               	movwf	USBEnableEndpoint@ep
 13579                           
 13580                           ;usb_device.c: 1057: unsigned char* p;
 13581                           ;usb_device.c: 1061: if(options & 0x04)
 13582  1B0B  1D5F               	btfss	USBEnableEndpoint@options,2
 13583  1B0C  2B12               	goto	l6849
 13584                           
 13585                           ;usb_device.c: 1062: {
 13586                           ;usb_device.c: 1063: USBConfigureEndpoint(ep, 0);
 13587  1B0D  01D8               	clrf	?_USBConfigureEndpoint
 13588  1B0E  0864               	movf	USBEnableEndpoint@ep,w
 13589  1B0F  319C  2462  319B   	fcall	_USBConfigureEndpoint
 13590  1B12                     l6849:	
 13591                           
 13592                           ;usb_device.c: 1064: }
 13593                           ;usb_device.c: 1065: if(options & 0x02)
 13594  1B12  0020               	movlb	0	; select bank0
 13595  1B13  1CDF               	btfss	USBEnableEndpoint@options,1
 13596  1B14  2B1A               	goto	l6853
 13597                           
 13598                           ;usb_device.c: 1066: {
 13599                           ;usb_device.c: 1067: USBConfigureEndpoint(ep, 1);
 13600  1B15  01D8               	clrf	?_USBConfigureEndpoint
 13601  1B16  0AD8               	incf	?_USBConfigureEndpoint,f
 13602  1B17  0864               	movf	USBEnableEndpoint@ep,w
 13603  1B18  319C  2462         	fcall	_USBConfigureEndpoint
 13604  1B1A                     l6853:	
 13605                           
 13606                           ;usb_device.c: 1068: }
 13607                           ;usb_device.c: 1076: p = (unsigned char*)(&UEP0+ep);
 13608  1B1A  0020               	movlb	0	; select bank0
 13609  1B1B  0864               	movf	USBEnableEndpoint@ep,w
 13610  1B1C  3E98               	addlw	152
 13611  1B1D  00E0               	movwf	??_USBEnableEndpoint
 13612  1B1E  01E1               	clrf	??_USBEnableEndpoint+1
 13613  1B1F  300E               	movlw	14
 13614  1B20  3DE1               	addwfc	??_USBEnableEndpoint+1,f
 13615  1B21  0860               	movf	??_USBEnableEndpoint,w
 13616  1B22  00E2               	movwf	USBEnableEndpoint@p
 13617  1B23  0861               	movf	??_USBEnableEndpoint+1,w
 13618  1B24  00E3               	movwf	USBEnableEndpoint@p+1
 13619                           
 13620                           ;usb_device.c: 1078: *p = options;
 13621  1B25  085F               	movf	USBEnableEndpoint@options,w
 13622  1B26  00E0               	movwf	??_USBEnableEndpoint
 13623  1B27  0862               	movf	USBEnableEndpoint@p,w
 13624  1B28  0086               	movwf	6
 13625  1B29  0863               	movf	USBEnableEndpoint@p+1,w
 13626  1B2A  0087               	movwf	7
 13627  1B2B  0860               	movf	??_USBEnableEndpoint,w
 13628  1B2C  0081               	movwf	1
 13629  1B2D  0008               	return
 13630  1B2E                     __end_of_USBEnableEndpoint:	
 13631                           
 13632                           	psect	text55
 13633  1C62                     __ptext55:	
 13634 ;; *************** function _USBConfigureEndpoint *****************
 13635 ;; Defined at:
 13636 ;;		line 1713 in file "../USB/usb_device.c"
 13637 ;; Parameters:    Size  Location     Type
 13638 ;;  EPNum           1    wreg     unsigned char 
 13639 ;;  direction       1    8[BANK0 ] unsigned char 
 13640 ;; Auto vars:     Size  Location     Type
 13641 ;;  EPNum           1   13[BANK0 ] unsigned char 
 13642 ;;  handle          1   14[BANK0 ] PTR volatile struct __BD
 13643 ;;		 -> BDT(32), 
 13644 ;; Return value:  Size  Location     Type
 13645 ;;		None               void
 13646 ;; Registers used:
 13647 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13648 ;; Tracked objects:
 13649 ;;		On entry : 0/0
 13650 ;;		On exit  : 0/0
 13651 ;;		Unchanged: 0/0
 13652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13653 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13654 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13655 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13656 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13657 ;;Total ram usage:        7 bytes
 13658 ;; Hardware stack levels used:    1
 13659 ;; Hardware stack levels required when called:    4
 13660 ;; This function calls:
 13661 ;;		Nothing
 13662 ;; This function is called by:
 13663 ;;		_USBEnableEndpoint
 13664 ;; This function uses a non-reentrant model
 13665 ;;
 13666                           
 13667                           
 13668                           ;psect for function _USBConfigureEndpoint
 13669  1C62                     _USBConfigureEndpoint:	
 13670                           
 13671                           ;incstack = 0
 13672                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 13673                           ;USBConfigureEndpoint@EPNum stored from wreg
 13674  1C62  0020               	movlb	0	; select bank0
 13675  1C63  00DD               	movwf	USBConfigureEndpoint@EPNum
 13676                           
 13677                           ;usb_device.c: 1714: volatile BDT_ENTRY* handle;
 13678                           ;usb_device.c: 1718: handle = (volatile BDT_ENTRY*)&BDT[0];
 13679  1C64  3020               	movlw	32
 13680  1C65  00D9               	movwf	??_USBConfigureEndpoint
 13681  1C66  0859               	movf	??_USBConfigureEndpoint,w
 13682  1C67  00DE               	movwf	USBConfigureEndpoint@handle
 13683                           
 13684                           ;usb_device.c: 1719: handle += (4*EPNum+2*direction+0u);
 13685  1C68  0858               	movf	USBConfigureEndpoint@direction,w
 13686  1C69  00D9               	movwf	??_USBConfigureEndpoint
 13687  1C6A  3001               	movlw	1
 13688  1C6B                     u7535:	
 13689  1C6B  35D9               	lslf	??_USBConfigureEndpoint,f
 13690  1C6C  0B89               	decfsz	9,f
 13691  1C6D  2C6B               	goto	u7535
 13692  1C6E  085D               	movf	USBConfigureEndpoint@EPNum,w
 13693  1C6F  00DA               	movwf	??_USBConfigureEndpoint+1
 13694  1C70  3001               	movlw	1
 13695  1C71                     u7545:	
 13696  1C71  35DA               	lslf	??_USBConfigureEndpoint+1,f
 13697  1C72  3EFF               	addlw	-1
 13698  1C73  1D03               	skipz
 13699  1C74  2C71               	goto	u7545
 13700  1C75  355A               	lslf	??_USBConfigureEndpoint+1,w
 13701  1C76  0759               	addwf	??_USBConfigureEndpoint,w
 13702  1C77  00DB               	movwf	??_USBConfigureEndpoint+2
 13703  1C78  3001               	movlw	1
 13704  1C79                     u7555:	
 13705  1C79  35DB               	lslf	??_USBConfigureEndpoint+2,f
 13706  1C7A  3EFF               	addlw	-1
 13707  1C7B  1D03               	skipz
 13708  1C7C  2C79               	goto	u7555
 13709  1C7D  355B               	lslf	??_USBConfigureEndpoint+2,w
 13710  1C7E  00DC               	movwf	??_USBConfigureEndpoint+3
 13711  1C7F  085C               	movf	??_USBConfigureEndpoint+3,w
 13712  1C80  07DE               	addwf	USBConfigureEndpoint@handle,f
 13713                           
 13714                           ;usb_device.c: 1721: handle->STAT.UOWN = 0;
 13715  1C81  085E               	movf	USBConfigureEndpoint@handle,w
 13716  1C82  0086               	movwf	6
 13717  1C83  0187               	clrf	7
 13718  1C84  1381               	bcf	1,7
 13719                           
 13720                           ;usb_device.c: 1726: if(direction == 0)
 13721  1C85  08D8               	movf	USBConfigureEndpoint@direction,f
 13722  1C86  1D03               	skipz
 13723  1C87  2C90               	goto	l6867
 13724                           
 13725                           ;usb_device.c: 1727: {
 13726                           ;usb_device.c: 1728: pBDTEntryOut[EPNum] = handle;
 13727  1C88  085E               	movf	USBConfigureEndpoint@handle,w
 13728  1C89  00D9               	movwf	??_USBConfigureEndpoint
 13729  1C8A  085D               	movf	USBConfigureEndpoint@EPNum,w
 13730  1C8B  3E22               	addlw	_pBDTEntryOut& (0+255)
 13731  1C8C  0086               	movwf	6
 13732  1C8D  3001               	movlw	1	; select bank2/3
 13733  1C8E  0087               	movwf	7
 13734  1C8F  2C96               	goto	L18
 13735  1C90                     l6867:	
 13736                           ;usb_device.c: 1729: }
 13737                           
 13738                           
 13739                           ;usb_device.c: 1730: else
 13740                           ;usb_device.c: 1731: {
 13741                           ;usb_device.c: 1732: pBDTEntryIn[EPNum] = handle;
 13742  1C90  085E               	movf	USBConfigureEndpoint@handle,w
 13743  1C91  00D9               	movwf	??_USBConfigureEndpoint
 13744  1C92  085D               	movf	USBConfigureEndpoint@EPNum,w
 13745  1C93  3E68               	addlw	_pBDTEntryIn& (0+255)
 13746  1C94  0086               	movwf	6
 13747  1C95  0187               	clrf	7
 13748  1C96                     L18:	
 13749  1C96  0859               	movf	??_USBConfigureEndpoint,w
 13750  1C97  0081               	movwf	1
 13751                           
 13752                           ;usb_device.c: 1733: }
 13753                           ;usb_device.c: 1736: handle->STAT.DTS = 0;
 13754  1C98  085E               	movf	USBConfigureEndpoint@handle,w
 13755  1C99  0086               	movwf	6
 13756  1C9A  0187               	clrf	7
 13757  1C9B  1301               	bcf	1,6
 13758                           
 13759                           ;usb_device.c: 1737: (handle+1)->STAT.DTS = 1;
 13760  1C9C  085E               	movf	USBConfigureEndpoint@handle,w
 13761  1C9D  3E04               	addlw	4
 13762  1C9E  0086               	movwf	6
 13763  1C9F  0187               	clrf	7
 13764  1CA0  1701               	bsf	1,6
 13765  1CA1  0008               	return
 13766  1CA2                     __end_of_USBConfigureEndpoint:	
 13767                           
 13768                           	psect	text56
 13769  07FF                     __ptext56:	
 13770 ;; *************** function _USBCBStdSetDscHandler *****************
 13771 ;; Defined at:
 13772 ;;		line 434 in file "main.c"
 13773 ;; Parameters:    Size  Location     Type
 13774 ;;		None
 13775 ;; Auto vars:     Size  Location     Type
 13776 ;;		None
 13777 ;; Return value:  Size  Location     Type
 13778 ;;		None               void
 13779 ;; Registers used:
 13780 ;;		None
 13781 ;; Tracked objects:
 13782 ;;		On entry : 0/0
 13783 ;;		On exit  : 0/0
 13784 ;;		Unchanged: 0/0
 13785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13790 ;;Total ram usage:        0 bytes
 13791 ;; Hardware stack levels used:    1
 13792 ;; Hardware stack levels required when called:    4
 13793 ;; This function calls:
 13794 ;;		Nothing
 13795 ;; This function is called by:
 13796 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13797 ;; This function uses a non-reentrant model
 13798 ;;
 13799                           
 13800                           
 13801                           ;psect for function _USBCBStdSetDscHandler
 13802  07FF                     _USBCBStdSetDscHandler:	
 13803                           
 13804                           ;incstack = 0
 13805                           ; Regs used in _USBCBStdSetDscHandler: []
 13806  07FF  0008               	return
 13807  0800                     __end_of_USBCBStdSetDscHandler:	
 13808                           
 13809                           	psect	text57
 13810  07FC                     __ptext57:	
 13811 ;; *************** function _USBCBCheckOtherReq *****************
 13812 ;; Defined at:
 13813 ;;		line 409 in file "main.c"
 13814 ;; Parameters:    Size  Location     Type
 13815 ;;		None
 13816 ;; Auto vars:     Size  Location     Type
 13817 ;;		None
 13818 ;; Return value:  Size  Location     Type
 13819 ;;		None               void
 13820 ;; Registers used:
 13821 ;;		status,2, status,0, pclath, cstack
 13822 ;; Tracked objects:
 13823 ;;		On entry : 0/0
 13824 ;;		On exit  : 0/0
 13825 ;;		Unchanged: 0/0
 13826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13831 ;;Total ram usage:        0 bytes
 13832 ;; Hardware stack levels used:    1
 13833 ;; Hardware stack levels required when called:    5
 13834 ;; This function calls:
 13835 ;;		_USBCheckVendorRequest
 13836 ;; This function is called by:
 13837 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13838 ;; This function uses a non-reentrant model
 13839 ;;
 13840                           
 13841                           
 13842                           ;psect for function _USBCBCheckOtherReq
 13843  07FC                     _USBCBCheckOtherReq:	
 13844                           
 13845                           ;main.c: 410: USBCheckVendorRequest();
 13846                           
 13847                           ;incstack = 0
 13848                           ; Regs used in _USBCBCheckOtherReq: [status,2+status,0+pclath+cstack]
 13849  07FC  3180  2003         	fcall	_USBCheckVendorRequest
 13850  07FE  0008               	return
 13851  07FF                     __end_of_USBCBCheckOtherReq:	
 13852                           
 13853                           	psect	text58
 13854  0003                     __ptext58:	
 13855 ;; *************** function _USBCheckVendorRequest *****************
 13856 ;; Defined at:
 13857 ;;		line 248 in file "../USB/usb_function_generic.c"
 13858 ;; Parameters:    Size  Location     Type
 13859 ;;		None
 13860 ;; Auto vars:     Size  Location     Type
 13861 ;;		None
 13862 ;; Return value:  Size  Location     Type
 13863 ;;		None               void
 13864 ;; Registers used:
 13865 ;;		None
 13866 ;; Tracked objects:
 13867 ;;		On entry : 0/0
 13868 ;;		On exit  : 0/0
 13869 ;;		Unchanged: 0/0
 13870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13875 ;;Total ram usage:        0 bytes
 13876 ;; Hardware stack levels used:    1
 13877 ;; Hardware stack levels required when called:    4
 13878 ;; This function calls:
 13879 ;;		Nothing
 13880 ;; This function is called by:
 13881 ;;		_USBCBCheckOtherReq
 13882 ;; This function uses a non-reentrant model
 13883 ;;
 13884                           
 13885                           
 13886                           ;psect for function _USBCheckVendorRequest
 13887  0003                     _USBCheckVendorRequest:	
 13888                           
 13889                           ;incstack = 0
 13890                           ; Regs used in _USBCheckVendorRequest: []
 13891  0003  0008               	return
 13892  0004                     __end_of_USBCheckVendorRequest:	
 13893                           
 13894                           	psect	text59
 13895  0002                     __ptext59:	
 13896 ;; *************** function _USBCBErrorHandler *****************
 13897 ;; Defined at:
 13898 ;;		line 358 in file "main.c"
 13899 ;; Parameters:    Size  Location     Type
 13900 ;;		None
 13901 ;; Auto vars:     Size  Location     Type
 13902 ;;		None
 13903 ;; Return value:  Size  Location     Type
 13904 ;;		None               void
 13905 ;; Registers used:
 13906 ;;		None
 13907 ;; Tracked objects:
 13908 ;;		On entry : 0/0
 13909 ;;		On exit  : 0/0
 13910 ;;		Unchanged: 0/0
 13911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13916 ;;Total ram usage:        0 bytes
 13917 ;; Hardware stack levels used:    1
 13918 ;; Hardware stack levels required when called:    4
 13919 ;; This function calls:
 13920 ;;		Nothing
 13921 ;; This function is called by:
 13922 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13923 ;; This function uses a non-reentrant model
 13924 ;;
 13925                           
 13926                           
 13927                           ;psect for function _USBCBErrorHandler
 13928  0002                     _USBCBErrorHandler:	
 13929                           
 13930                           ;incstack = 0
 13931                           ; Regs used in _USBCBErrorHandler: []
 13932  0002  0008               	return
 13933  0003                     __end_of_USBCBErrorHandler:	
 13934                           
 13935                           	psect	text60
 13936  1000                     __ptext60:	
 13937 ;; *************** function _USBCB_SOF_Handler *****************
 13938 ;; Defined at:
 13939 ;;		line 335 in file "main.c"
 13940 ;; Parameters:    Size  Location     Type
 13941 ;;		None
 13942 ;; Auto vars:     Size  Location     Type
 13943 ;;		None
 13944 ;; Return value:  Size  Location     Type
 13945 ;;		None               void
 13946 ;; Registers used:
 13947 ;;		None
 13948 ;; Tracked objects:
 13949 ;;		On entry : 0/0
 13950 ;;		On exit  : 0/0
 13951 ;;		Unchanged: 0/0
 13952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13957 ;;Total ram usage:        0 bytes
 13958 ;; Hardware stack levels used:    1
 13959 ;; Hardware stack levels required when called:    4
 13960 ;; This function calls:
 13961 ;;		Nothing
 13962 ;; This function is called by:
 13963 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13964 ;; This function uses a non-reentrant model
 13965 ;;
 13966                           
 13967                           
 13968                           ;psect for function _USBCB_SOF_Handler
 13969  1000                     _USBCB_SOF_Handler:	
 13970                           
 13971                           ;incstack = 0
 13972                           ; Regs used in _USBCB_SOF_Handler: []
 13973  1000  0008               	return
 13974  1001                     __end_of_USBCB_SOF_Handler:	
 13975                           
 13976                           	psect	text61
 13977  18F4                     __ptext61:	
 13978 ;; *************** function _USBCBWakeFromSuspend *****************
 13979 ;; Defined at:
 13980 ;;		line 305 in file "main.c"
 13981 ;; Parameters:    Size  Location     Type
 13982 ;;		None
 13983 ;; Auto vars:     Size  Location     Type
 13984 ;;		None
 13985 ;; Return value:  Size  Location     Type
 13986 ;;		None               void
 13987 ;; Registers used:
 13988 ;;		None
 13989 ;; Tracked objects:
 13990 ;;		On entry : 0/0
 13991 ;;		On exit  : 0/0
 13992 ;;		Unchanged: 0/0
 13993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13998 ;;Total ram usage:        0 bytes
 13999 ;; Hardware stack levels used:    1
 14000 ;; Hardware stack levels required when called:    4
 14001 ;; This function calls:
 14002 ;;		Nothing
 14003 ;; This function is called by:
 14004 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14005 ;;		_USBCBSendResume
 14006 ;; This function uses a non-reentrant model
 14007 ;;
 14008                           
 14009                           
 14010                           ;psect for function _USBCBWakeFromSuspend
 14011  18F4                     _USBCBWakeFromSuspend:	
 14012                           
 14013                           ;incstack = 0
 14014                           ; Regs used in _USBCBWakeFromSuspend: []
 14015  18F4  0008               	return
 14016  18F5                     __end_of_USBCBWakeFromSuspend:	
 14017                           
 14018                           	psect	text62
 14019  18F3                     __ptext62:	
 14020 ;; *************** function _USBCBSuspend *****************
 14021 ;; Defined at:
 14022 ;;		line 264 in file "main.c"
 14023 ;; Parameters:    Size  Location     Type
 14024 ;;		None
 14025 ;; Auto vars:     Size  Location     Type
 14026 ;;		None
 14027 ;; Return value:  Size  Location     Type
 14028 ;;		None               void
 14029 ;; Registers used:
 14030 ;;		None
 14031 ;; Tracked objects:
 14032 ;;		On entry : 0/0
 14033 ;;		On exit  : 0/0
 14034 ;;		Unchanged: 0/0
 14035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14040 ;;Total ram usage:        0 bytes
 14041 ;; Hardware stack levels used:    1
 14042 ;; Hardware stack levels required when called:    4
 14043 ;; This function calls:
 14044 ;;		Nothing
 14045 ;; This function is called by:
 14046 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14047 ;; This function uses a non-reentrant model
 14048 ;;
 14049                           
 14050                           
 14051                           ;psect for function _USBCBSuspend
 14052  18F3                     _USBCBSuspend:	
 14053                           
 14054                           ;incstack = 0
 14055                           ; Regs used in _USBCBSuspend: []
 14056  18F3  0008               	return
 14057  18F4                     __end_of_USBCBSuspend:	
 14058                           
 14059                           	psect	text63
 14060  1756                     __ptext63:	
 14061 ;; *************** function _USBDeviceInit *****************
 14062 ;; Defined at:
 14063 ;;		line 467 in file "../USB/usb_device.c"
 14064 ;; Parameters:    Size  Location     Type
 14065 ;;		None
 14066 ;; Auto vars:     Size  Location     Type
 14067 ;;  p               2   10[BANK0 ] PTR unsigned char 
 14068 ;;		 -> UEP1(1), 
 14069 ;;  i               1   12[BANK0 ] unsigned char 
 14070 ;;  i               1   13[BANK0 ] unsigned char 
 14071 ;; Return value:  Size  Location     Type
 14072 ;;		None               void
 14073 ;; Registers used:
 14074 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14075 ;; Tracked objects:
 14076 ;;		On entry : 0/0
 14077 ;;		On exit  : 0/0
 14078 ;;		Unchanged: 0/0
 14079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14081 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14082 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14083 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14084 ;;Total ram usage:        6 bytes
 14085 ;; Hardware stack levels used:    1
 14086 ;; Hardware stack levels required when called:    4
 14087 ;; This function calls:
 14088 ;;		Nothing
 14089 ;; This function is called by:
 14090 ;;		_USBDeviceTasks
 14091 ;;		_InitializeSystem
 14092 ;; This function uses a non-reentrant model
 14093 ;;
 14094                           
 14095                           
 14096                           ;psect for function _USBDeviceInit
 14097  1756                     _USBDeviceInit:	
 14098                           
 14099                           ;usb_device.c: 468: BYTE i;
 14100                           ;usb_device.c: 470: {PIE2bits.USBIE = 0;};
 14101                           
 14102                           ;incstack = 0
 14103                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 14104  1756  0021               	movlb	1	; select bank1
 14105  1757  1112               	bcf	18,2	;volatile
 14106                           
 14107                           ;usb_device.c: 473: UEIR = 0;;
 14108  1758  003D               	movlb	29	; select bank29
 14109  1759  0193               	clrf	19	;volatile
 14110                           
 14111                           ;usb_device.c: 476: UIR = 0;;
 14112  175A  0190               	clrf	16	;volatile
 14113                           
 14114                           ;usb_device.c: 479: UEP0 = 0;
 14115  175B  0198               	clrf	24	;volatile
 14116                           
 14117                           ;usb_device.c: 481: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<1;i++) *p++ = 0; };
 14118  175C  300E               	movlw	14
 14119  175D  0020               	movlb	0	; select bank0
 14120  175E  00DB               	movwf	USBDeviceInit@p+1
 14121  175F  3099               	movlw	153
 14122  1760  00DA               	movwf	USBDeviceInit@p
 14123  1761  01DC               	clrf	USBDeviceInit@i_718
 14124  1762  085C               	movf	USBDeviceInit@i_718,w
 14125  1763  1D03               	skipz
 14126  1764  2F75               	goto	l6557
 14127  1765                     l6549:	
 14128  1765  085A               	movf	USBDeviceInit@p,w
 14129  1766  0086               	movwf	6
 14130  1767  085B               	movf	USBDeviceInit@p+1,w
 14131  1768  0087               	movwf	7
 14132  1769  0181               	clrf	1
 14133  176A  3001               	movlw	1
 14134  176B  07DA               	addwf	USBDeviceInit@p,f
 14135  176C  3000               	movlw	0
 14136  176D  3DDB               	addwfc	USBDeviceInit@p+1,f
 14137  176E  3001               	movlw	1
 14138  176F  00D8               	movwf	??_USBDeviceInit
 14139  1770  0858               	movf	??_USBDeviceInit,w
 14140  1771  07DC               	addwf	USBDeviceInit@i_718,f
 14141  1772  085C               	movf	USBDeviceInit@i_718,w
 14142  1773  1903               	btfsc	3,2
 14143  1774  2F65               	goto	l6549
 14144  1775                     l6557:	
 14145                           
 14146                           ;usb_device.c: 483: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 14147  1775  3016               	movlw	22
 14148  1776  003D               	movlb	29	; select bank29
 14149  1777  0091               	movwf	17	;volatile
 14150  1778  309F               	movlw	159
 14151  1779  0097               	movwf	23	;volatile
 14152  177A  307B               	movlw	123
 14153  177B  0092               	movwf	18	;volatile
 14154                           
 14155                           ;usb_device.c: 486: ;
 14156                           ;usb_device.c: 489: ;
 14157                           ;usb_device.c: 492: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 14158  177C  0020               	movlb	0	; select bank0
 14159  177D  01DD               	clrf	USBDeviceInit@i
 14160  177E  3008               	movlw	8
 14161  177F  025D               	subwf	USBDeviceInit@i,w
 14162  1780  1803               	btfsc	3,0
 14163  1781  2F9B               	goto	l128
 14164  1782                     l6565:	
 14165                           
 14166                           ;usb_device.c: 493: {
 14167                           ;usb_device.c: 494: BDT[i].Val = 0x00;
 14168  1782  085D               	movf	USBDeviceInit@i,w
 14169  1783  00D8               	movwf	??_USBDeviceInit
 14170  1784  3001               	movlw	1
 14171  1785                     u7105:	
 14172  1785  35D8               	lslf	??_USBDeviceInit,f
 14173  1786  3EFF               	addlw	-1
 14174  1787  1D03               	skipz
 14175  1788  2F85               	goto	u7105
 14176  1789  3558               	lslf	??_USBDeviceInit,w
 14177  178A  3E20               	addlw	32
 14178  178B  0086               	movwf	6
 14179  178C  0187               	clrf	7
 14180  178D  3000               	movlw	0
 14181  178E  3FC0               	movwi [0]fsr1
 14182  178F  3000               	movlw	0
 14183  1790  3FC1               	movwi [1]fsr1
 14184  1791  3FC2               	movwi [2]fsr1
 14185  1792  3FC3               	movwi [3]fsr1
 14186  1793  3001               	movlw	1
 14187  1794  00D8               	movwf	??_USBDeviceInit
 14188  1795  0858               	movf	??_USBDeviceInit,w
 14189  1796  07DD               	addwf	USBDeviceInit@i,f
 14190  1797  3008               	movlw	8
 14191  1798  025D               	subwf	USBDeviceInit@i,w
 14192  1799  1C03               	skipc
 14193  179A  2F82               	goto	l6565
 14194  179B                     l128:	
 14195                           
 14196                           ;usb_device.c: 495: }
 14197                           ;usb_device.c: 498: UCONbits.PPBRST = 1;
 14198  179B  003D               	movlb	29	; select bank29
 14199  179C  170E               	bsf	14,6	;volatile
 14200                           
 14201                           ;usb_device.c: 501: UADDR = 0x00;
 14202  179D  0196               	clrf	22	;volatile
 14203                           
 14204                           ;usb_device.c: 504: UCONbits.PKTDIS = 0;
 14205  179E  120E               	bcf	14,4	;volatile
 14206                           
 14207                           ;usb_device.c: 507: UCONbits.PPBRST = 0;
 14208  179F  130E               	bcf	14,6	;volatile
 14209  17A0                     l6585:	
 14210                           ;usb_device.c: 510: while(UIRbits.TRNIF == 1)
 14211                           
 14212  17A0  003D               	movlb	29	; select bank29
 14213  17A1  1D90               	btfss	16,3	;volatile
 14214  17A2  2FB0               	goto	l6587
 14215                           
 14216                           ;usb_device.c: 511: {
 14217                           ;usb_device.c: 512: (UIR &= 0xF7);
 14218  17A3  30F7               	movlw	247
 14219  17A4  0020               	movlb	0	; select bank0
 14220  17A5  00D8               	movwf	??_USBDeviceInit
 14221  17A6  0858               	movf	??_USBDeviceInit,w
 14222  17A7  003D               	movlb	29	; select bank29
 14223  17A8  0590               	andwf	16,f	;volatile
 14224                           
 14225                           ;usb_device.c: 514: inPipes[0].info.Val = 0;
 14226  17A9  0022               	movlb	2	; select bank2
 14227  17AA  01BC               	clrf	(_inPipes^(0+256)+2)
 14228                           
 14229                           ;usb_device.c: 515: outPipes[0].info.Val = 0;
 14230  17AB  0023               	movlb	3	; select bank3
 14231  17AC  01A2               	clrf	(_outPipes^(0+384)+2)
 14232                           
 14233                           ;usb_device.c: 516: outPipes[0].wCount.Val = 0;
 14234  17AD  01A3               	clrf	(_outPipes^(0+384)+3)
 14235  17AE  01A4               	clrf	((_outPipes+1)^(0+384)+3)
 14236  17AF  2FA0               	goto	l6585
 14237  17B0                     l6587:	
 14238                           
 14239                           ;usb_device.c: 517: }
 14240                           ;usb_device.c: 521: USBStatusStageEnabledFlag1 = TRUE;
 14241  17B0  3001               	movlw	1
 14242  17B1  0020               	movlb	0	; select bank0
 14243  17B2  00D8               	movwf	??_USBDeviceInit
 14244  17B3  0858               	movf	??_USBDeviceInit,w
 14245  17B4  0022               	movlb	2	; select bank2
 14246  17B5  00B0               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 14247                           
 14248                           ;usb_device.c: 522: USBStatusStageEnabledFlag2 = TRUE;
 14249  17B6  3001               	movlw	1
 14250  17B7  0020               	movlb	0	; select bank0
 14251  17B8  00D8               	movwf	??_USBDeviceInit
 14252  17B9  0858               	movf	??_USBDeviceInit,w
 14253  17BA  0022               	movlb	2	; select bank2
 14254  17BB  00B1               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 14255                           
 14256                           ;usb_device.c: 524: USBDeferINDataStagePackets = FALSE;
 14257  17BC  01AC               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 14258                           
 14259                           ;usb_device.c: 525: USBDeferOUTDataStagePackets = FALSE;
 14260  17BD  01AD               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 14261                           
 14262                           ;usb_device.c: 526: USBBusIsSuspended = FALSE;
 14263  17BE  0023               	movlb	3	; select bank3
 14264  17BF  01B8               	clrf	_USBBusIsSuspended^(0+384)
 14265                           
 14266                           ;usb_device.c: 530: for(i = 0; i < (BYTE)(1+1u); i++)
 14267  17C0  0020               	movlb	0	; select bank0
 14268  17C1  01DD               	clrf	USBDeviceInit@i
 14269  17C2  3002               	movlw	2
 14270  17C3  025D               	subwf	USBDeviceInit@i,w
 14271  17C4  1803               	btfsc	3,0
 14272  17C5  2FE5               	goto	l6605
 14273  17C6                     l6599:	
 14274                           
 14275                           ;usb_device.c: 531: {
 14276                           ;usb_device.c: 532: pBDTEntryIn[i] = 0u;
 14277  17C6  085D               	movf	USBDeviceInit@i,w
 14278  17C7  3E68               	addlw	_pBDTEntryIn& (0+255)
 14279  17C8  0086               	movwf	6
 14280  17C9  0187               	clrf	7
 14281  17CA  0181               	clrf	1
 14282                           
 14283                           ;usb_device.c: 533: pBDTEntryOut[i] = 0u;
 14284  17CB  085D               	movf	USBDeviceInit@i,w
 14285  17CC  3E22               	addlw	_pBDTEntryOut& (0+255)
 14286  17CD  0086               	movwf	6
 14287  17CE  3001               	movlw	1	; select bank2/3
 14288  17CF  0087               	movwf	7
 14289  17D0  0181               	clrf	1
 14290                           
 14291                           ;usb_device.c: 534: ep_data_in[i].Val = 0u;
 14292  17D1  085D               	movf	USBDeviceInit@i,w
 14293  17D2  3EAE               	addlw	_ep_data_in& (0+255)
 14294  17D3  0086               	movwf	6
 14295  17D4  3001               	movlw	1	; select bank3/4
 14296  17D5  0087               	movwf	7
 14297  17D6  0181               	clrf	1
 14298                           
 14299                           ;usb_device.c: 535: ep_data_out[i].Val = 0u;
 14300  17D7  085D               	movf	USBDeviceInit@i,w
 14301  17D8  3EB0               	addlw	_ep_data_out& (0+255)
 14302  17D9  0086               	movwf	6
 14303  17DA  3001               	movlw	1	; select bank3/4
 14304  17DB  0087               	movwf	7
 14305  17DC  0181               	clrf	1
 14306  17DD  3001               	movlw	1
 14307  17DE  00D8               	movwf	??_USBDeviceInit
 14308  17DF  0858               	movf	??_USBDeviceInit,w
 14309  17E0  07DD               	addwf	USBDeviceInit@i,f
 14310  17E1  3002               	movlw	2
 14311  17E2  025D               	subwf	USBDeviceInit@i,w
 14312  17E3  1C03               	skipc
 14313  17E4  2FC6               	goto	l6599
 14314  17E5                     l6605:	
 14315                           
 14316                           ;usb_device.c: 536: }
 14317                           ;usb_device.c: 539: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14318  17E5  3028               	movlw	40
 14319  17E6  00D8               	movwf	??_USBDeviceInit
 14320  17E7  0858               	movf	??_USBDeviceInit,w
 14321  17E8  00E8               	movwf	_pBDTEntryIn
 14322                           
 14323                           ;usb_device.c: 541: UEP0 = 0x06|0x10;
 14324  17E9  3016               	movlw	22
 14325  17EA  003D               	movlb	29	; select bank29
 14326  17EB  0098               	movwf	24	;volatile
 14327                           
 14328                           ;usb_device.c: 543: BDT[0].ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 14329  17EC  3040               	movlw	64
 14330  17ED  0020               	movlb	0	; select bank0
 14331  17EE  00D8               	movwf	??_USBDeviceInit
 14332  17EF  3000               	movlw	0
 14333  17F0  00D9               	movwf	??_USBDeviceInit+1
 14334  17F1  0858               	movf	??_USBDeviceInit,w
 14335  17F2  00A2               	movwf	34	;volatile
 14336  17F3  0859               	movf	??_USBDeviceInit+1,w
 14337  17F4  00A3               	movwf	35	;volatile
 14338                           
 14339                           ;usb_device.c: 544: BDT[0].CNT = 8;
 14340  17F5  3008               	movlw	8
 14341  17F6  00A1               	movwf	33	;volatile
 14342                           
 14343                           ;usb_device.c: 545: BDT[0].STAT.Val = 0x80|0x00|0x04;
 14344  17F7  3084               	movlw	132
 14345  17F8  00D8               	movwf	??_USBDeviceInit
 14346  17F9  0858               	movf	??_USBDeviceInit,w
 14347  17FA  00A0               	movwf	32	;volatile
 14348                           
 14349                           ;usb_device.c: 548: USBActiveConfiguration = 0;
 14350  17FB  0022               	movlb	2	; select bank2
 14351  17FC  01C0               	clrf	_USBActiveConfiguration^(0+256)
 14352                           
 14353                           ;usb_device.c: 551: USBDeviceState = DETACHED_STATE;
 14354  17FD  0021               	movlb	1	; select bank1
 14355  17FE  01EE               	clrf	_USBDeviceState^(0+128)
 14356  17FF  0008               	return
 14357  1800                     __end_of_USBDeviceInit:	
 14358                           
 14359                           	psect	text64
 14360  0CD0                     __ptext64:	
 14361 ;; *************** function ___ftadd *****************
 14362 ;; Defined at:
 14363 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\ftadd.c"
 14364 ;; Parameters:    Size  Location     Type
 14365 ;;  f1              3   19[BANK1 ] float 
 14366 ;;  f2              3   22[BANK1 ] float 
 14367 ;; Auto vars:     Size  Location     Type
 14368 ;;  exp1            1   31[BANK1 ] unsigned char 
 14369 ;;  exp2            1   30[BANK1 ] unsigned char 
 14370 ;;  sign            1   29[BANK1 ] unsigned char 
 14371 ;; Return value:  Size  Location     Type
 14372 ;;                  3   19[BANK1 ] float 
 14373 ;; Registers used:
 14374 ;;		wreg, status,2, status,0, pclath, cstack
 14375 ;; Tracked objects:
 14376 ;;		On entry : 0/0
 14377 ;;		On exit  : 0/0
 14378 ;;		Unchanged: 0/0
 14379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14380 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14381 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 14382 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14383 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 14384 ;;Total ram usage:       13 bytes
 14385 ;; Hardware stack levels used:    1
 14386 ;; Hardware stack levels required when called:    5
 14387 ;; This function calls:
 14388 ;;		___ftpack
 14389 ;; This function is called by:
 14390 ;;		_UpdateFanLevel
 14391 ;;		_UpdateClock
 14392 ;; This function uses a non-reentrant model
 14393 ;;
 14394                           
 14395                           
 14396                           ;psect for function ___ftadd
 14397  0CD0                     ___ftadd:	
 14398                           
 14399                           ;incstack = 0
 14400                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 14401  0CD0  0021               	movlb	1	; select bank1
 14402  0CD1  0833               	movf	___ftadd@f1^(0+128),w
 14403  0CD2  00B9               	movwf	??___ftadd^(0+128)
 14404  0CD3  0834               	movf	(___ftadd@f1+1)^(0+128),w
 14405  0CD4  00BA               	movwf	(??___ftadd^(0+128)+1)
 14406  0CD5  0835               	movf	(___ftadd@f1+2)^(0+128),w
 14407  0CD6  00BB               	movwf	(??___ftadd^(0+128)+2)
 14408  0CD7  1003               	clrc
 14409  0CD8  0D3A               	rlf	(??___ftadd^(0+128)+1),w
 14410  0CD9  0D3B               	rlf	(??___ftadd^(0+128)+2),w
 14411  0CDA  00BC               	movwf	(??___ftadd+3)^(0+128)
 14412  0CDB  083C               	movf	(??___ftadd+3)^(0+128),w
 14413  0CDC  00BF               	movwf	___ftadd@exp1^(0+128)
 14414  0CDD  0836               	movf	___ftadd@f2^(0+128),w
 14415  0CDE  00B9               	movwf	??___ftadd^(0+128)
 14416  0CDF  0837               	movf	(___ftadd@f2+1)^(0+128),w
 14417  0CE0  00BA               	movwf	(??___ftadd^(0+128)+1)
 14418  0CE1  0838               	movf	(___ftadd@f2+2)^(0+128),w
 14419  0CE2  00BB               	movwf	(??___ftadd^(0+128)+2)
 14420  0CE3  1003               	clrc
 14421  0CE4  0D3A               	rlf	(??___ftadd^(0+128)+1),w
 14422  0CE5  0D3B               	rlf	(??___ftadd^(0+128)+2),w
 14423  0CE6  00BC               	movwf	(??___ftadd+3)^(0+128)
 14424  0CE7  083C               	movf	(??___ftadd+3)^(0+128),w
 14425  0CE8  00BE               	movwf	___ftadd@exp2^(0+128)
 14426  0CE9  083F               	movf	___ftadd@exp1^(0+128),w
 14427  0CEA  1903               	btfsc	3,2
 14428  0CEB  2CF8               	goto	l6075
 14429  0CEC  083E               	movf	___ftadd@exp2^(0+128),w
 14430  0CED  023F               	subwf	___ftadd@exp1^(0+128),w
 14431  0CEE  1803               	skipnc
 14432  0CEF  2CFF               	goto	l6079
 14433  0CF0  033F               	decf	___ftadd@exp1^(0+128),w
 14434  0CF1  3AFF               	xorlw	255
 14435  0CF2  073E               	addwf	___ftadd@exp2^(0+128),w
 14436  0CF3  00B9               	movwf	??___ftadd^(0+128)
 14437  0CF4  3019               	movlw	25
 14438  0CF5  0239               	subwf	??___ftadd^(0+128),w
 14439  0CF6  1C03               	skipc
 14440  0CF7  2CFF               	goto	l6079
 14441  0CF8                     l6075:	
 14442  0CF8  0836               	movf	___ftadd@f2^(0+128),w
 14443  0CF9  00B3               	movwf	?___ftadd^(0+128)
 14444  0CFA  0837               	movf	(___ftadd@f2+1)^(0+128),w
 14445  0CFB  00B4               	movwf	(?___ftadd+1)^(0+128)
 14446  0CFC  0838               	movf	(___ftadd@f2+2)^(0+128),w
 14447  0CFD  00B5               	movwf	(?___ftadd+2)^(0+128)
 14448  0CFE  0008               	return
 14449  0CFF                     l6079:	
 14450  0CFF  083E               	movf	___ftadd@exp2^(0+128),w
 14451  0D00  1903               	btfsc	3,2
 14452  0D01  0008               	return
 14453  0D02  083F               	movf	___ftadd@exp1^(0+128),w
 14454  0D03  023E               	subwf	___ftadd@exp2^(0+128),w
 14455  0D04  1803               	skipnc
 14456  0D05  2D0E               	goto	l6085
 14457  0D06  033E               	decf	___ftadd@exp2^(0+128),w
 14458  0D07  3AFF               	xorlw	255
 14459  0D08  073F               	addwf	___ftadd@exp1^(0+128),w
 14460  0D09  00B9               	movwf	??___ftadd^(0+128)
 14461  0D0A  3019               	movlw	25
 14462  0D0B  0239               	subwf	??___ftadd^(0+128),w
 14463  0D0C  1803               	btfsc	3,0
 14464  0D0D  0008               	return
 14465  0D0E                     l6085:	
 14466  0D0E  3006               	movlw	6
 14467  0D0F  00B9               	movwf	??___ftadd^(0+128)
 14468  0D10  0839               	movf	??___ftadd^(0+128),w
 14469  0D11  00BD               	movwf	___ftadd@sign^(0+128)
 14470  0D12  1BB5               	btfsc	(___ftadd@f1+2)^(0+128),7
 14471  0D13  17BD               	bsf	___ftadd@sign^(0+128),7
 14472  0D14  1BB8               	btfsc	(___ftadd@f2+2)^(0+128),7
 14473  0D15  173D               	bsf	___ftadd@sign^(0+128),6
 14474  0D16  17B4               	bsf	(___ftadd@f1^(0+128)+1),7
 14475  0D17  30FF               	movlw	255
 14476  0D18  05B3               	andwf	___ftadd@f1^(0+128),f
 14477  0D19  30FF               	movlw	255
 14478  0D1A  05B4               	andwf	(___ftadd@f1+1)^(0+128),f
 14479  0D1B  3000               	movlw	0
 14480  0D1C  05B5               	andwf	(___ftadd@f1+2)^(0+128),f
 14481  0D1D  17B7               	bsf	(___ftadd@f2^(0+128)+1),7
 14482  0D1E  30FF               	movlw	255
 14483  0D1F  05B6               	andwf	___ftadd@f2^(0+128),f
 14484  0D20  30FF               	movlw	255
 14485  0D21  05B7               	andwf	(___ftadd@f2+1)^(0+128),f
 14486  0D22  3000               	movlw	0
 14487  0D23  05B8               	andwf	(___ftadd@f2+2)^(0+128),f
 14488  0D24  083E               	movf	___ftadd@exp2^(0+128),w
 14489  0D25  023F               	subwf	___ftadd@exp1^(0+128),w
 14490  0D26  1803               	skipnc
 14491  0D27  2D4A               	goto	l6107
 14492  0D28                     l6097:	
 14493  0D28  3001               	movlw	1
 14494  0D29                     u6235:	
 14495  0D29  35B6               	lslf	___ftadd@f2^(0+128),f
 14496  0D2A  0DB7               	rlf	(___ftadd@f2+1)^(0+128),f
 14497  0D2B  0DB8               	rlf	(___ftadd@f2+2)^(0+128),f
 14498  0D2C  0B89               	decfsz	9,f
 14499  0D2D  2D29               	goto	u6235
 14500  0D2E  3001               	movlw	1
 14501  0D2F  02BE               	subwf	___ftadd@exp2^(0+128),f
 14502  0D30  083E               	movf	___ftadd@exp2^(0+128),w
 14503  0D31  063F               	xorwf	___ftadd@exp1^(0+128),w
 14504  0D32  1903               	skipnz
 14505  0D33  2D45               	goto	l6105
 14506  0D34  3001               	movlw	1
 14507  0D35  02BD               	subwf	___ftadd@sign^(0+128),f
 14508  0D36  083D               	movf	___ftadd@sign^(0+128),w
 14509  0D37  3907               	andlw	7
 14510  0D38  1903               	btfsc	3,2
 14511  0D39  2D45               	goto	l6105
 14512  0D3A  2D28               	goto	l6097
 14513  0D3B                     l6103:	
 14514  0D3B  3001               	movlw	1
 14515  0D3C                     u6265:	
 14516  0D3C  36B5               	lsrf	(___ftadd@f1+2)^(0+128),f
 14517  0D3D  0CB4               	rrf	(___ftadd@f1+1)^(0+128),f
 14518  0D3E  0CB3               	rrf	___ftadd@f1^(0+128),f
 14519  0D3F  0B89               	decfsz	9,f
 14520  0D40  2D3C               	goto	u6265
 14521  0D41  3001               	movlw	1
 14522  0D42  00B9               	movwf	??___ftadd^(0+128)
 14523  0D43  0839               	movf	??___ftadd^(0+128),w
 14524  0D44  07BF               	addwf	___ftadd@exp1^(0+128),f
 14525  0D45                     l6105:	
 14526  0D45  083F               	movf	___ftadd@exp1^(0+128),w
 14527  0D46  063E               	xorwf	___ftadd@exp2^(0+128),w
 14528  0D47  1903               	btfsc	3,2
 14529  0D48  2D6F               	goto	l1086
 14530  0D49  2D3B               	goto	l6103
 14531  0D4A                     l6107:	
 14532  0D4A  083F               	movf	___ftadd@exp1^(0+128),w
 14533  0D4B  023E               	subwf	___ftadd@exp2^(0+128),w
 14534  0D4C  1803               	skipnc
 14535  0D4D  2D6F               	goto	l1086
 14536  0D4E                     l6109:	
 14537  0D4E  3001               	movlw	1
 14538  0D4F                     u6295:	
 14539  0D4F  35B3               	lslf	___ftadd@f1^(0+128),f
 14540  0D50  0DB4               	rlf	(___ftadd@f1+1)^(0+128),f
 14541  0D51  0DB5               	rlf	(___ftadd@f1+2)^(0+128),f
 14542  0D52  0B89               	decfsz	9,f
 14543  0D53  2D4F               	goto	u6295
 14544  0D54  3001               	movlw	1
 14545  0D55  02BF               	subwf	___ftadd@exp1^(0+128),f
 14546  0D56  083E               	movf	___ftadd@exp2^(0+128),w
 14547  0D57  063F               	xorwf	___ftadd@exp1^(0+128),w
 14548  0D58  1903               	skipnz
 14549  0D59  2D6B               	goto	l6117
 14550  0D5A  3001               	movlw	1
 14551  0D5B  02BD               	subwf	___ftadd@sign^(0+128),f
 14552  0D5C  083D               	movf	___ftadd@sign^(0+128),w
 14553  0D5D  3907               	andlw	7
 14554  0D5E  1903               	btfsc	3,2
 14555  0D5F  2D6B               	goto	l6117
 14556  0D60  2D4E               	goto	l6109
 14557  0D61                     l6115:	
 14558  0D61  3001               	movlw	1
 14559  0D62                     u6325:	
 14560  0D62  36B8               	lsrf	(___ftadd@f2+2)^(0+128),f
 14561  0D63  0CB7               	rrf	(___ftadd@f2+1)^(0+128),f
 14562  0D64  0CB6               	rrf	___ftadd@f2^(0+128),f
 14563  0D65  0B89               	decfsz	9,f
 14564  0D66  2D62               	goto	u6325
 14565  0D67  3001               	movlw	1
 14566  0D68  00B9               	movwf	??___ftadd^(0+128)
 14567  0D69  0839               	movf	??___ftadd^(0+128),w
 14568  0D6A  07BE               	addwf	___ftadd@exp2^(0+128),f
 14569  0D6B                     l6117:	
 14570  0D6B  083F               	movf	___ftadd@exp1^(0+128),w
 14571  0D6C  063E               	xorwf	___ftadd@exp2^(0+128),w
 14572  0D6D  1D03               	skipz
 14573  0D6E  2D61               	goto	l6115
 14574  0D6F                     l1086:	
 14575  0D6F  1FBD               	btfss	___ftadd@sign^(0+128),7
 14576  0D70  2D81               	goto	l6121
 14577  0D71  30FF               	movlw	255
 14578  0D72  06B3               	xorwf	___ftadd@f1^(0+128),f
 14579  0D73  30FF               	movlw	255
 14580  0D74  06B4               	xorwf	(___ftadd@f1+1)^(0+128),f
 14581  0D75  30FF               	movlw	255
 14582  0D76  06B5               	xorwf	(___ftadd@f1+2)^(0+128),f
 14583  0D77  3001               	movlw	1
 14584  0D78  07B3               	addwf	___ftadd@f1^(0+128),f
 14585  0D79  3000               	movlw	0
 14586  0D7A  1803               	skipnc
 14587  0D7B  3001               	movlw	1
 14588  0D7C  07B4               	addwf	(___ftadd@f1+1)^(0+128),f
 14589  0D7D  3000               	movlw	0
 14590  0D7E  1803               	skipnc
 14591  0D7F  3001               	movlw	1
 14592  0D80  07B5               	addwf	(___ftadd@f1+2)^(0+128),f
 14593  0D81                     l6121:	
 14594  0D81  1F3D               	btfss	___ftadd@sign^(0+128),6
 14595  0D82  2D93               	goto	l6125
 14596  0D83  30FF               	movlw	255
 14597  0D84  06B6               	xorwf	___ftadd@f2^(0+128),f
 14598  0D85  30FF               	movlw	255
 14599  0D86  06B7               	xorwf	(___ftadd@f2+1)^(0+128),f
 14600  0D87  30FF               	movlw	255
 14601  0D88  06B8               	xorwf	(___ftadd@f2+2)^(0+128),f
 14602  0D89  3001               	movlw	1
 14603  0D8A  07B6               	addwf	___ftadd@f2^(0+128),f
 14604  0D8B  3000               	movlw	0
 14605  0D8C  1803               	skipnc
 14606  0D8D  3001               	movlw	1
 14607  0D8E  07B7               	addwf	(___ftadd@f2+1)^(0+128),f
 14608  0D8F  3000               	movlw	0
 14609  0D90  1803               	skipnc
 14610  0D91  3001               	movlw	1
 14611  0D92  07B8               	addwf	(___ftadd@f2+2)^(0+128),f
 14612  0D93                     l6125:	
 14613  0D93  01BD               	clrf	___ftadd@sign^(0+128)
 14614  0D94  0833               	movf	___ftadd@f1^(0+128),w
 14615  0D95  07B6               	addwf	___ftadd@f2^(0+128),f
 14616  0D96  0834               	movf	(___ftadd@f1+1)^(0+128),w
 14617  0D97  3DB7               	addwfc	(___ftadd@f2+1)^(0+128),f
 14618  0D98  0835               	movf	(___ftadd@f1+2)^(0+128),w
 14619  0D99  3DB8               	addwfc	(___ftadd@f2+2)^(0+128),f
 14620  0D9A  1FB8               	btfss	(___ftadd@f2+2)^(0+128),7
 14621  0D9B  2DAE               	goto	l6135
 14622  0D9C  30FF               	movlw	255
 14623  0D9D  06B6               	xorwf	___ftadd@f2^(0+128),f
 14624  0D9E  30FF               	movlw	255
 14625  0D9F  06B7               	xorwf	(___ftadd@f2+1)^(0+128),f
 14626  0DA0  30FF               	movlw	255
 14627  0DA1  06B8               	xorwf	(___ftadd@f2+2)^(0+128),f
 14628  0DA2  3001               	movlw	1
 14629  0DA3  07B6               	addwf	___ftadd@f2^(0+128),f
 14630  0DA4  3000               	movlw	0
 14631  0DA5  1803               	skipnc
 14632  0DA6  3001               	movlw	1
 14633  0DA7  07B7               	addwf	(___ftadd@f2+1)^(0+128),f
 14634  0DA8  3000               	movlw	0
 14635  0DA9  1803               	skipnc
 14636  0DAA  3001               	movlw	1
 14637  0DAB  07B8               	addwf	(___ftadd@f2+2)^(0+128),f
 14638  0DAC  01BD               	clrf	___ftadd@sign^(0+128)
 14639  0DAD  0ABD               	incf	___ftadd@sign^(0+128),f
 14640  0DAE                     l6135:	
 14641  0DAE  0836               	movf	___ftadd@f2^(0+128),w
 14642  0DAF  0020               	movlb	0	; select bank0
 14643  0DB0  00D8               	movwf	?___ftpack
 14644  0DB1  0021               	movlb	1	; select bank1
 14645  0DB2  0837               	movf	(___ftadd@f2+1)^(0+128),w
 14646  0DB3  0020               	movlb	0	; select bank0
 14647  0DB4  00D9               	movwf	?___ftpack+1
 14648  0DB5  0021               	movlb	1	; select bank1
 14649  0DB6  0838               	movf	(___ftadd@f2+2)^(0+128),w
 14650  0DB7  0020               	movlb	0	; select bank0
 14651  0DB8  00DA               	movwf	?___ftpack+2
 14652  0DB9  0021               	movlb	1	; select bank1
 14653  0DBA  083F               	movf	___ftadd@exp1^(0+128),w
 14654  0DBB  00B9               	movwf	??___ftadd^(0+128)
 14655  0DBC  0839               	movf	??___ftadd^(0+128),w
 14656  0DBD  0020               	movlb	0	; select bank0
 14657  0DBE  00DB               	movwf	?___ftpack+3
 14658  0DBF  0021               	movlb	1	; select bank1
 14659  0DC0  083D               	movf	___ftadd@sign^(0+128),w
 14660  0DC1  00BA               	movwf	(??___ftadd+1)^(0+128)
 14661  0DC2  083A               	movf	(??___ftadd+1)^(0+128),w
 14662  0DC3  0020               	movlb	0	; select bank0
 14663  0DC4  00DC               	movwf	?___ftpack+4
 14664  0DC5  319F  279F         	fcall	___ftpack
 14665  0DC7  0020               	movlb	0	; select bank0
 14666  0DC8  0858               	movf	?___ftpack,w
 14667  0DC9  0021               	movlb	1	; select bank1
 14668  0DCA  00B3               	movwf	?___ftadd^(0+128)
 14669  0DCB  0020               	movlb	0	; select bank0
 14670  0DCC  0859               	movf	?___ftpack+1,w
 14671  0DCD  0021               	movlb	1	; select bank1
 14672  0DCE  00B4               	movwf	(?___ftadd+1)^(0+128)
 14673  0DCF  0020               	movlb	0	; select bank0
 14674  0DD0  085A               	movf	?___ftpack+2,w
 14675  0DD1  0021               	movlb	1	; select bank1
 14676  0DD2  00B5               	movwf	(?___ftadd+2)^(0+128)
 14677  0DD3  0008               	return
 14678  0DD4                     __end_of___ftadd:	
 14679                           
 14680                           	psect	text65
 14681  1F9F                     __ptext65:	
 14682 ;; *************** function ___ftpack *****************
 14683 ;; Defined at:
 14684 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\float.c"
 14685 ;; Parameters:    Size  Location     Type
 14686 ;;  arg             3    8[BANK0 ] unsigned um
 14687 ;;  exp             1   11[BANK0 ] unsigned char 
 14688 ;;  sign            1   12[BANK0 ] unsigned char 
 14689 ;; Auto vars:     Size  Location     Type
 14690 ;;		None
 14691 ;; Return value:  Size  Location     Type
 14692 ;;                  3    8[BANK0 ] float 
 14693 ;; Registers used:
 14694 ;;		wreg, status,2, status,0
 14695 ;; Tracked objects:
 14696 ;;		On entry : 0/0
 14697 ;;		On exit  : 0/0
 14698 ;;		Unchanged: 0/0
 14699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14700 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14702 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14703 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14704 ;;Total ram usage:        8 bytes
 14705 ;; Hardware stack levels used:    1
 14706 ;; Hardware stack levels required when called:    4
 14707 ;; This function calls:
 14708 ;;		Nothing
 14709 ;; This function is called by:
 14710 ;;		___awtoft
 14711 ;;		___ftadd
 14712 ;;		___ftdiv
 14713 ;;		___ftmul
 14714 ;;		___lltoft
 14715 ;; This function uses a non-reentrant model
 14716 ;;
 14717                           
 14718                           
 14719                           ;psect for function ___ftpack
 14720  1F9F                     ___ftpack:	
 14721                           
 14722                           ;incstack = 0
 14723                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 14724  1F9F  0020               	movlb	0	; select bank0
 14725  1FA0  085B               	movf	___ftpack@exp,w
 14726  1FA1  1903               	btfsc	3,2
 14727  1FA2  2FA8               	goto	l5931
 14728  1FA3  085A               	movf	___ftpack@arg+2,w
 14729  1FA4  0459               	iorwf	___ftpack@arg+1,w
 14730  1FA5  0458               	iorwf	___ftpack@arg,w
 14731  1FA6  1D03               	skipz
 14732  1FA7  2FB9               	goto	l5937
 14733  1FA8                     l5931:	
 14734  1FA8  3000               	movlw	0
 14735  1FA9  00D8               	movwf	?___ftpack
 14736  1FAA  3000               	movlw	0
 14737  1FAB  00D9               	movwf	?___ftpack+1
 14738  1FAC  3000               	movlw	0
 14739  1FAD  00DA               	movwf	?___ftpack+2
 14740  1FAE  0008               	return
 14741  1FAF                     l5935:	
 14742  1FAF  3001               	movlw	1
 14743  1FB0  00DD               	movwf	??___ftpack
 14744  1FB1  085D               	movf	??___ftpack,w
 14745  1FB2  07DB               	addwf	___ftpack@exp,f
 14746  1FB3  3001               	movlw	1
 14747  1FB4                     u5835:	
 14748  1FB4  36DA               	lsrf	___ftpack@arg+2,f
 14749  1FB5  0CD9               	rrf	___ftpack@arg+1,f
 14750  1FB6  0CD8               	rrf	___ftpack@arg,f
 14751  1FB7  0B89               	decfsz	9,f
 14752  1FB8  2FB4               	goto	u5835
 14753  1FB9                     l5937:	
 14754  1FB9  30FE               	movlw	254
 14755  1FBA  055A               	andwf	___ftpack@arg+2,w
 14756  1FBB  1903               	btfsc	3,2
 14757  1FBC  2FD2               	goto	l1057
 14758  1FBD  2FAF               	goto	l5935
 14759  1FBE                     l5939:	
 14760  1FBE  3001               	movlw	1
 14761  1FBF  00DD               	movwf	??___ftpack
 14762  1FC0  085D               	movf	??___ftpack,w
 14763  1FC1  07DB               	addwf	___ftpack@exp,f
 14764  1FC2  3001               	movlw	1
 14765  1FC3  07D8               	addwf	___ftpack@arg,f
 14766  1FC4  3000               	movlw	0
 14767  1FC5  1803               	skipnc
 14768  1FC6  3001               	movlw	1
 14769  1FC7  07D9               	addwf	___ftpack@arg+1,f
 14770  1FC8  3000               	movlw	0
 14771  1FC9  1803               	skipnc
 14772  1FCA  3001               	movlw	1
 14773  1FCB  07DA               	addwf	___ftpack@arg+2,f
 14774  1FCC  3001               	movlw	1
 14775  1FCD                     u5855:	
 14776  1FCD  36DA               	lsrf	___ftpack@arg+2,f
 14777  1FCE  0CD9               	rrf	___ftpack@arg+1,f
 14778  1FCF  0CD8               	rrf	___ftpack@arg,f
 14779  1FD0  0B89               	decfsz	9,f
 14780  1FD1  2FCD               	goto	u5855
 14781  1FD2                     l1057:	
 14782  1FD2  30FF               	movlw	255
 14783  1FD3  055A               	andwf	___ftpack@arg+2,w
 14784  1FD4  1903               	btfsc	3,2
 14785  1FD5  2FDF               	goto	l5947
 14786  1FD6  2FBE               	goto	l5939
 14787  1FD7                     l5945:	
 14788  1FD7  3001               	movlw	1
 14789  1FD8  02DB               	subwf	___ftpack@exp,f
 14790  1FD9  3001               	movlw	1
 14791  1FDA                     u5875:	
 14792  1FDA  35D8               	lslf	___ftpack@arg,f
 14793  1FDB  0DD9               	rlf	___ftpack@arg+1,f
 14794  1FDC  0DDA               	rlf	___ftpack@arg+2,f
 14795  1FDD  0B89               	decfsz	9,f
 14796  1FDE  2FDA               	goto	u5875
 14797  1FDF                     l5947:	
 14798  1FDF  1FD9               	btfss	___ftpack@arg+1,7
 14799  1FE0  2FD7               	goto	l5945
 14800  1FE1  185B               	btfsc	___ftpack@exp,0
 14801  1FE2  2FE9               	goto	l1063
 14802  1FE3  30FF               	movlw	255
 14803  1FE4  05D8               	andwf	___ftpack@arg,f
 14804  1FE5  307F               	movlw	127
 14805  1FE6  05D9               	andwf	___ftpack@arg+1,f
 14806  1FE7  30FF               	movlw	255
 14807  1FE8  05DA               	andwf	___ftpack@arg+2,f
 14808  1FE9                     l1063:	
 14809  1FE9  1003               	clrc
 14810  1FEA  0CDB               	rrf	___ftpack@exp,f
 14811  1FEB  085B               	movf	___ftpack@exp,w
 14812  1FEC  00DD               	movwf	??___ftpack
 14813  1FED  01DE               	clrf	??___ftpack+1
 14814  1FEE  01DF               	clrf	??___ftpack+2
 14815  1FEF  3010               	movlw	16
 14816  1FF0                     u5905:	
 14817  1FF0  35DD               	lslf	??___ftpack,f
 14818  1FF1  0DDE               	rlf	??___ftpack+1,f
 14819  1FF2  0DDF               	rlf	??___ftpack+2,f
 14820  1FF3  0B89               	decfsz	9,f
 14821  1FF4  2FF0               	goto	u5905
 14822  1FF5  085D               	movf	??___ftpack,w
 14823  1FF6  04D8               	iorwf	___ftpack@arg,f
 14824  1FF7  085E               	movf	??___ftpack+1,w
 14825  1FF8  04D9               	iorwf	___ftpack@arg+1,f
 14826  1FF9  085F               	movf	??___ftpack+2,w
 14827  1FFA  04DA               	iorwf	___ftpack@arg+2,f
 14828  1FFB  085C               	movf	___ftpack@sign,w
 14829  1FFC  1903               	btfsc	3,2
 14830  1FFD  0008               	return
 14831  1FFE  17DA               	bsf	___ftpack@arg+2,7
 14832  1FFF  0008               	return
 14833  2000                     __end_of___ftpack:	
 14834                           
 14835                           	psect	intentry
 14836  0004                     __pintentry:	
 14837 ;; *************** function _ISRCode *****************
 14838 ;; Defined at:
 14839 ;;		line 70 in file "main.c"
 14840 ;; Parameters:    Size  Location     Type
 14841 ;;		None
 14842 ;; Auto vars:     Size  Location     Type
 14843 ;;		None
 14844 ;; Return value:  Size  Location     Type
 14845 ;;		None               void
 14846 ;; Registers used:
 14847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 14848 ;; Tracked objects:
 14849 ;;		On entry : 0/0
 14850 ;;		On exit  : 0/0
 14851 ;;		Unchanged: 0/0
 14852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14855 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14857 ;;Total ram usage:        1 bytes
 14858 ;; Hardware stack levels used:    1
 14859 ;; Hardware stack levels required when called:    3
 14860 ;; This function calls:
 14861 ;;		_ResultRx
 14862 ;; This function is called by:
 14863 ;;		Interrupt level 1
 14864 ;; This function uses a non-reentrant model
 14865 ;;
 14866                           
 14867  0004                     _ISRCode:	
 14868                           
 14869                           ;incstack = 0
 14870                           ; Regs used in _ISRCode: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 14871  0004  3180               	pagesel	$
 14872  0005  0020               	movlb	0	; select bank0
 14873  0006  087F               	movf	127,w
 14874  0007  00FD               	movwf	??_ISRCode
 14875                           
 14876                           ;main.c: 72: if(IOCBF)
 14877  0008  0027               	movlb	7	; select bank7
 14878  0009  0816               	movf	22,w	;volatile
 14879  000A  1903               	btfsc	3,2
 14880  000B  280F               	goto	i1l826
 14881                           
 14882                           ;main.c: 73: ResultRx();
 14883  000C  319E  2687         	fcall	_ResultRx
 14884  000E  0027               	movlb	7	; select bank7
 14885  000F                     i1l826:	
 14886  000F  087D               	movf	??_ISRCode,w
 14887  0010  0020               	movlb	0	; select bank0
 14888  0011  00FF               	movwf	127
 14889  0012  0009               	retfie
 14890  0013                     __end_of_ISRCode:	
 14891                           
 14892                           	psect	text67
 14893  1E87                     __ptext67:	
 14894 ;; *************** function _ResultRx *****************
 14895 ;; Defined at:
 14896 ;;		line 164 in file "klondike.c"
 14897 ;; Parameters:    Size  Location     Type
 14898 ;;		None
 14899 ;; Auto vars:     Size  Location     Type
 14900 ;;		None
 14901 ;; Return value:  Size  Location     Type
 14902 ;;		None               void
 14903 ;; Registers used:
 14904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 14905 ;; Tracked objects:
 14906 ;;		On entry : 0/0
 14907 ;;		On exit  : 0/0
 14908 ;;		Unchanged: 0/0
 14909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14912 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14913 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14914 ;;Total ram usage:        1 bytes
 14915 ;; Hardware stack levels used:    1
 14916 ;; Hardware stack levels required when called:    2
 14917 ;; This function calls:
 14918 ;;		i1_SendCmdReply
 14919 ;; This function is called by:
 14920 ;;		_ISRCode
 14921 ;; This function uses a non-reentrant model
 14922 ;;
 14923                           
 14924                           
 14925                           ;psect for function _ResultRx
 14926  1E87                     _ResultRx:	
 14927                           
 14928                           ;klondike.c: 165: TimeOut = 0;
 14929                           
 14930                           ;incstack = 0
 14931                           ; Regs used in _ResultRx: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 14932  1E87  0023               	movlb	3	; select bank3
 14933  1E88  01B7               	clrf	_TimeOut^(0+384)
 14934  1E89                     i1l7951:	
 14935                           ;klondike.c: 167: while(ResultQC < 4) {
 14936                           
 14937  1E89  3004               	movlw	4
 14938  1E8A  0022               	movlb	2	; select bank2
 14939  1E8B  022A               	subwf	_ResultQC^(0+256),w
 14940  1E8C  1803               	btfsc	3,0
 14941  1E8D  2EBE               	goto	i1l7953
 14942                           
 14943                           ;klondike.c: 168: if(RCIF) {
 14944  1E8E  0020               	movlb	0	; select bank0
 14945  1E8F  1E91               	btfss	17,5	;volatile
 14946  1E90  2EA3               	goto	i1l7943
 14947                           
 14948                           ;klondike.c: 169: ResultQue[2+ResultQC++] = RCREG;
 14949  1E91  0023               	movlb	3	; select bank3
 14950  1E92  0819               	movf	25,w	;volatile
 14951  1E93  00FC               	movwf	??_ResultRx
 14952  1E94  0022               	movlb	2	; select bank2
 14953  1E95  082A               	movf	_ResultQC^(0+256),w
 14954  1E96  3E02               	addlw	2
 14955  1E97  3EDA               	addlw	_ResultQue& (0+255)
 14956  1E98  0086               	movwf	6
 14957  1E99  3001               	movlw	1	; select bank3/4
 14958  1E9A  0087               	movwf	7
 14959  1E9B  087C               	movf	??_ResultRx,w
 14960  1E9C  0081               	movwf	1
 14961  1E9D  3001               	movlw	1
 14962  1E9E  00FC               	movwf	??_ResultRx
 14963  1E9F  087C               	movf	??_ResultRx,w
 14964  1EA0  07AA               	addwf	_ResultQC^(0+256),f
 14965                           
 14966                           ;klondike.c: 170: TimeOut = 0;
 14967  1EA1  0023               	movlb	3	; select bank3
 14968  1EA2  01B7               	clrf	_TimeOut^(0+384)
 14969  1EA3                     i1l7943:	
 14970                           
 14971                           ;klondike.c: 171: }
 14972                           ;klondike.c: 172: if(TimeOut++ > 32) {
 14973  1EA3  3001               	movlw	1
 14974  1EA4  00FC               	movwf	??_ResultRx
 14975  1EA5  087C               	movf	??_ResultRx,w
 14976  1EA6  0023               	movlb	3	; select bank3
 14977  1EA7  07B7               	addwf	_TimeOut^(0+384),f
 14978  1EA8  3022               	movlw	34
 14979  1EA9  0237               	subwf	_TimeOut^(0+384),w
 14980  1EAA  1C03               	skipc
 14981  1EAB  2EB2               	goto	i1l712
 14982                           
 14983                           ;klondike.c: 173: Status.Noise++;
 14984  1EAC  3001               	movlw	1
 14985  1EAD  00FC               	movwf	??_ResultRx
 14986  1EAE  087C               	movf	??_ResultRx,w
 14987  1EAF  0022               	movlb	2	; select bank2
 14988  1EB0  07EF               	addwf	(_Status^(0+256)+12),f	;volatile
 14989                           
 14990                           ;klondike.c: 174: goto outrx;
 14991  1EB1  2EDB               	goto	i1l7959
 14992  1EB2                     i1l712:	
 14993                           
 14994                           ;klondike.c: 175: }
 14995                           ;klondike.c: 176: if(RCSTAbits.OERR) {
 14996  1EB2  1C9D               	btfss	29,1	;volatile
 14997  1EB3  2E89               	goto	i1l7951
 14998                           
 14999                           ;klondike.c: 177: if(Status.State == 'W') {
 15000  1EB4  0022               	movlb	2	; select bank2
 15001  1EB5  0863               	movf	_Status^(0+256),w	;volatile
 15002  1EB6  3A57               	xorlw	87
 15003  1EB7  1D03               	skipz
 15004  1EB8  2EDB               	goto	i1l7959
 15005                           
 15006                           ;klondike.c: 178: Status.ErrorCount++;
 15007  1EB9  3001               	movlw	1
 15008  1EBA  00FC               	movwf	??_ResultRx
 15009  1EBB  087C               	movf	??_ResultRx,w
 15010  1EBC  07EA               	addwf	(_Status^(0+256)+7),f	;volatile
 15011                           
 15012                           ;klondike.c: 179: }
 15013                           ;klondike.c: 180: goto outrx;
 15014  1EBD  2EDB               	goto	i1l7959
 15015  1EBE                     i1l7953:	
 15016                           
 15017                           ;klondike.c: 181: }
 15018                           ;klondike.c: 182: }
 15019                           ;klondike.c: 184: if(Status.State == 'W') {
 15020  1EBE  0863               	movf	_Status^(0+256),w	;volatile
 15021  1EBF  3A57               	xorlw	87
 15022  1EC0  1D03               	skipz
 15023  1EC1  2EDB               	goto	i1l7959
 15024                           
 15025                           ;klondike.c: 185: ResultQue[0] = '=';
 15026  1EC2  303D               	movlw	61
 15027  1EC3  00FC               	movwf	??_ResultRx
 15028  1EC4  087C               	movf	??_ResultRx,w
 15029  1EC5  0023               	movlb	3	; select bank3
 15030  1EC6  00DA               	movwf	_ResultQue^(0+384)	;volatile
 15031                           
 15032                           ;klondike.c: 186: ResultQue[1] = Status.WorkID;
 15033  1EC7  0022               	movlb	2	; select bank2
 15034  1EC8  0867               	movf	(_Status^(0+256)+4),w	;volatile
 15035  1EC9  00FC               	movwf	??_ResultRx
 15036  1ECA  087C               	movf	??_ResultRx,w
 15037  1ECB  0023               	movlb	3	; select bank3
 15038  1ECC  00DB               	movwf	(_ResultQue^(0+384)+1)	;volatile
 15039                           
 15040                           ;klondike.c: 187: SendCmdReply(&ResultQue, &ResultQue+1, sizeof(ResultQue)-1);
 15041  1ECD  30DA               	movlw	low _ResultQue
 15042  1ECE  00F6               	movwf	?i1_SendCmdReply
 15043  1ECF  3001               	movlw	high _ResultQue
 15044  1ED0  00F7               	movwf	?i1_SendCmdReply+1
 15045  1ED1  30DB               	movlw	low (_ResultQue+1)
 15046  1ED2  00F8               	movwf	?i1_SendCmdReply+2
 15047  1ED3  3001               	movlw	high (_ResultQue+1)
 15048  1ED4  00F9               	movwf	?i1_SendCmdReply+3
 15049  1ED5  3005               	movlw	5
 15050  1ED6  00FC               	movwf	??_ResultRx
 15051  1ED7  087C               	movf	??_ResultRx,w
 15052  1ED8  00FA               	movwf	?i1_SendCmdReply+4
 15053  1ED9  3194  24E0         	fcall	i1_SendCmdReply
 15054  1EDB                     i1l7959:	
 15055                           ;klondike.c: 188: }
 15056                           ;klondike.c: 190: outrx:
 15057                           
 15058                           
 15059                           ;klondike.c: 191: { RCSTAbits.SPEN = 0; RCSTAbits.SPEN = 1; };
 15060  1EDB  0023               	movlb	3	; select bank3
 15061  1EDC  139D               	bcf	29,7	;volatile
 15062  1EDD  179D               	bsf	29,7	;volatile
 15063                           
 15064                           ;klondike.c: 192: ResultQC = 0;
 15065  1EDE  0022               	movlb	2	; select bank2
 15066  1EDF  01AA               	clrf	_ResultQC^(0+256)
 15067                           
 15068                           ;klondike.c: 193: IOCBF = 0;
 15069  1EE0  0027               	movlb	7	; select bank7
 15070  1EE1  0196               	clrf	22	;volatile
 15071  1EE2  0008               	return
 15072  1EE3                     __end_of_ResultRx:	
 15073                           
 15074                           	psect	text68
 15075  14E0                     __ptext68:	
 15076 ;; *************** function i1_SendCmdReply *****************
 15077 ;; Defined at:
 15078 ;;		line 208 in file "main.c"
 15079 ;; Parameters:    Size  Location     Type
 15080 ;;  cmd             2    6[COMMON] PTR unsigned char 
 15081 ;;		 -> ResultQue(6), OUTPacket(64), 
 15082 ;;  data            2    8[COMMON] PTR unsigned char 
 15083 ;;		 -> ResultQue(6), Cfg(6), ID(12), Status(13), 
 15084 ;;  count           1   10[COMMON] unsigned char 
 15085 ;; Auto vars:     Size  Location     Type
 15086 ;;  SendCmdReply    1   11[COMMON] unsigned char 
 15087 ;; Return value:  Size  Location     Type
 15088 ;;		None               void
 15089 ;; Registers used:
 15090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 15091 ;; Tracked objects:
 15092 ;;		On entry : 0/0
 15093 ;;		On exit  : 0/0
 15094 ;;		Unchanged: 0/0
 15095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15096 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15098 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15099 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15100 ;;Total ram usage:       14 bytes
 15101 ;; Hardware stack levels used:    1
 15102 ;; Hardware stack levels required when called:    1
 15103 ;; This function calls:
 15104 ;;		i1___wmul
 15105 ;;		i1___bmul
 15106 ;; This function is called by:
 15107 ;;		_ResultRx
 15108 ;; This function uses a non-reentrant model
 15109 ;;
 15110                           
 15111                           
 15112                           ;psect for function i1_SendCmdReply
 15113  14E0                     i1_SendCmdReply:	
 15114                           
 15115                           ;main.c: 209: if(WQI*15 + count + 2 < 64) {
 15116                           
 15117                           ;incstack = 0
 15118                           ; Regs used in i1_SendCmdReply: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 15119  14E0  087A               	movf	i1SendCmdReply@count,w
 15120  14E1  0020               	movlb	0	; select bank0
 15121  14E2  00D0               	movwf	??i1_SendCmdReply
 15122  14E3  01D1               	clrf	??i1_SendCmdReply+1
 15123  14E4  0022               	movlb	2	; select bank2
 15124  14E5  0842               	movf	_WQI^(0+256),w
 15125  14E6  0020               	movlb	0	; select bank0
 15126  14E7  00D2               	movwf	??i1_SendCmdReply+2
 15127  14E8  01D3               	clrf	??i1_SendCmdReply+3
 15128  14E9  0852               	movf	??i1_SendCmdReply+2,w
 15129  14EA  00F0               	movwf	?i1___wmul
 15130  14EB  0853               	movf	??i1_SendCmdReply+3,w
 15131  14EC  00F1               	movwf	?i1___wmul+1
 15132  14ED  300F               	movlw	15
 15133  14EE  00F2               	movwf	?i1___wmul+2
 15134  14EF  3000               	movlw	0
 15135  14F0  00F3               	movwf	?i1___wmul+3
 15136  14F1  319A  2244  3194   	fcall	i1___wmul
 15137  14F4  0020               	movlb	0	; select bank0
 15138  14F5  0850               	movf	??i1_SendCmdReply,w
 15139  14F6  0770               	addwf	?i1___wmul,w
 15140  14F7  00D4               	movwf	??i1_SendCmdReply+4
 15141  14F8  0851               	movf	??i1_SendCmdReply+1,w
 15142  14F9  3D71               	addwfc	?i1___wmul+1,w
 15143  14FA  00D5               	movwf	??i1_SendCmdReply+5
 15144  14FB  0854               	movf	??i1_SendCmdReply+4,w
 15145  14FC  3E02               	addlw	2
 15146  14FD  00D6               	movwf	??i1_SendCmdReply+6
 15147  14FE  3000               	movlw	0
 15148  14FF  3D55               	addwfc	??i1_SendCmdReply+5,w
 15149  1500  00D7               	movwf	??i1_SendCmdReply+7
 15150  1501  0857               	movf	??i1_SendCmdReply+7,w
 15151  1502  3A80               	xorlw	128
 15152  1503  00FF               	movwf	127
 15153  1504  3080               	movlw	128
 15154  1505  027F               	subwf	127,w
 15155  1506  1D03               	skipz
 15156  1507  2D0A               	goto	u889_25
 15157  1508  3040               	movlw	64
 15158  1509  0256               	subwf	??i1_SendCmdReply+6,w
 15159  150A                     u889_25:	
 15160  150A  1803               	skipnc
 15161  150B  0008               	return
 15162                           
 15163                           ;main.c: 210: INPacket[WQI*15] = cmd[0];
 15164  150C  0876               	movf	i1SendCmdReply@cmd,w
 15165  150D  0086               	movwf	6
 15166  150E  0877               	movf	i1SendCmdReply@cmd+1,w
 15167  150F  0087               	movwf	7
 15168  1510  0801               	movf	1,w
 15169  1511  0020               	movlb	0	; select bank0
 15170  1512  00D0               	movwf	??i1_SendCmdReply
 15171  1513  300F               	movlw	15
 15172  1514  00D1               	movwf	??i1_SendCmdReply+1
 15173  1515  0851               	movf	??i1_SendCmdReply+1,w
 15174  1516  00F0               	movwf	?i1___bmul
 15175  1517  0022               	movlb	2	; select bank2
 15176  1518  0842               	movf	_WQI^(0+256),w
 15177  1519  3199  2128  3194   	fcall	i1___bmul
 15178  151C  3E20               	addlw	32
 15179  151D  0086               	movwf	6
 15180  151E  3002               	movlw	2	; select bank4/5
 15181  151F  0087               	movwf	7
 15182  1520  0020               	movlb	0	; select bank0
 15183  1521  0850               	movf	??i1_SendCmdReply,w
 15184  1522  0081               	movwf	1
 15185                           
 15186                           ;main.c: 211: INPacket[WQI*15 + 1] = SlaveAddress;
 15187  1523  0022               	movlb	2	; select bank2
 15188  1524  082B               	movf	_SlaveAddress^(0+256),w
 15189  1525  0020               	movlb	0	; select bank0
 15190  1526  00D0               	movwf	??i1_SendCmdReply
 15191  1527  300F               	movlw	15
 15192  1528  00D1               	movwf	??i1_SendCmdReply+1
 15193  1529  0851               	movf	??i1_SendCmdReply+1,w
 15194  152A  00F0               	movwf	?i1___bmul
 15195  152B  0022               	movlb	2	; select bank2
 15196  152C  0842               	movf	_WQI^(0+256),w
 15197  152D  3199  2128  3194   	fcall	i1___bmul
 15198  1530  3E01               	addlw	1
 15199  1531  3E20               	addlw	32
 15200  1532  0086               	movwf	6
 15201  1533  3002               	movlw	2	; select bank4/5
 15202  1534  0087               	movwf	7
 15203  1535  0020               	movlb	0	; select bank0
 15204  1536  0850               	movf	??i1_SendCmdReply,w
 15205  1537  0081               	movwf	1
 15206                           
 15207                           ;main.c: 212: for(BYTE n = 0; n < count; n++)
 15208  1538  01FB               	clrf	i1SendCmdReply@n
 15209  1539                     i1l7931:	
 15210  1539  087A               	movf	i1SendCmdReply@count,w
 15211  153A  027B               	subwf	i1SendCmdReply@n,w
 15212  153B  1803               	btfsc	3,0
 15213  153C  2D69               	goto	i1l7933
 15214                           
 15215                           ;main.c: 213: INPacket[WQI*15 + n + 2] = data[n];
 15216  153D  0879               	movf	i1SendCmdReply@data+1,w
 15217  153E  00D1               	movwf	??i1_SendCmdReply+1
 15218  153F  0878               	movf	i1SendCmdReply@data,w
 15219  1540  00D0               	movwf	??i1_SendCmdReply
 15220  1541  087B               	movf	i1SendCmdReply@n,w
 15221  1542  0750               	addwf	??i1_SendCmdReply,w
 15222  1543  0084               	movwf	4
 15223  1544  0851               	movf	??i1_SendCmdReply+1,w
 15224  1545  1803               	skipnc
 15225  1546  0A51               	incf	??i1_SendCmdReply+1,w
 15226  1547  0085               	movwf	5
 15227  1548  0800               	movf	0,w	;code access
 15228  1549  00D2               	movwf	??i1_SendCmdReply+2
 15229  154A  0022               	movlb	2	; select bank2
 15230  154B  0842               	movf	_WQI^(0+256),w
 15231  154C  0020               	movlb	0	; select bank0
 15232  154D  00D3               	movwf	??i1_SendCmdReply+3
 15233  154E  01D4               	clrf	??i1_SendCmdReply+4
 15234  154F  0853               	movf	??i1_SendCmdReply+3,w
 15235  1550  00F0               	movwf	?i1___wmul
 15236  1551  0854               	movf	??i1_SendCmdReply+4,w
 15237  1552  00F1               	movwf	?i1___wmul+1
 15238  1553  300F               	movlw	15
 15239  1554  00F2               	movwf	?i1___wmul+2
 15240  1555  3000               	movlw	0
 15241  1556  00F3               	movwf	?i1___wmul+3
 15242  1557  319A  2244  3194   	fcall	i1___wmul
 15243  155A  0870               	movf	?i1___wmul,w
 15244  155B  077B               	addwf	i1SendCmdReply@n,w
 15245  155C  3E02               	addlw	2
 15246  155D  3E20               	addlw	32
 15247  155E  0086               	movwf	6
 15248  155F  3002               	movlw	2	; select bank4/5
 15249  1560  0087               	movwf	7
 15250  1561  0020               	movlb	0	; select bank0
 15251  1562  0852               	movf	??i1_SendCmdReply+2,w
 15252  1563  0081               	movwf	1
 15253  1564  3001               	movlw	1
 15254  1565  00D0               	movwf	??i1_SendCmdReply
 15255  1566  0850               	movf	??i1_SendCmdReply,w
 15256  1567  07FB               	addwf	i1SendCmdReply@n,f
 15257  1568  2D39               	goto	i1l7931
 15258  1569                     i1l7933:	
 15259                           
 15260                           ;main.c: 214: WQI = (WQI+1) & 3;
 15261  1569  0022               	movlb	2	; select bank2
 15262  156A  0A42               	incf	_WQI^(0+256),w
 15263  156B  3903               	andlw	3
 15264  156C  0020               	movlb	0	; select bank0
 15265  156D  00D0               	movwf	??i1_SendCmdReply
 15266  156E  0850               	movf	??i1_SendCmdReply,w
 15267  156F  0022               	movlb	2	; select bank2
 15268  1570  00C2               	movwf	_WQI^(0+256)
 15269  1571  0008               	return
 15270  1572                     __end_ofi1_SendCmdReply:	
 15271                           
 15272                           	psect	text69
 15273  1928                     __ptext69:	
 15274 ;; *************** function i1___bmul *****************
 15275 ;; Defined at:
 15276 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\bmul.c"
 15277 ;; Parameters:    Size  Location     Type
 15278 ;;  multiplier      1    wreg     unsigned char 
 15279 ;;  multiplicand    1    0[COMMON] unsigned char 
 15280 ;; Auto vars:     Size  Location     Type
 15281 ;;  multiplier      1    2[COMMON] unsigned char 
 15282 ;;  __bmul          1    3[COMMON] unsigned char 
 15283 ;; Return value:  Size  Location     Type
 15284 ;;                  1    wreg      unsigned char 
 15285 ;; Registers used:
 15286 ;;		wreg, status,2, status,0
 15287 ;; Tracked objects:
 15288 ;;		On entry : 0/0
 15289 ;;		On exit  : 0/0
 15290 ;;		Unchanged: 0/0
 15291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15292 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15294 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15295 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15296 ;;Total ram usage:        4 bytes
 15297 ;; Hardware stack levels used:    1
 15298 ;; This function calls:
 15299 ;;		Nothing
 15300 ;; This function is called by:
 15301 ;;		i1_SendCmdReply
 15302 ;; This function uses a non-reentrant model
 15303 ;;
 15304                           
 15305                           
 15306                           ;psect for function i1___bmul
 15307  1928                     i1___bmul:	
 15308                           
 15309                           ;incstack = 0
 15310                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 15311                           ;i1___bmul@multiplier stored from wreg
 15312  1928  00F2               	movwf	i1___bmul@multiplier
 15313  1929  01F3               	clrf	i1___bmul@product
 15314  192A                     i1l6383:	
 15315  192A  1C72               	btfss	i1___bmul@multiplier,0
 15316  192B  2930               	goto	i1l6387
 15317  192C  0870               	movf	i1___bmul@multiplicand,w
 15318  192D  00F1               	movwf	??i1___bmul
 15319  192E  0871               	movf	??i1___bmul,w
 15320  192F  07F3               	addwf	i1___bmul@product,f
 15321  1930                     i1l6387:	
 15322  1930  1003               	clrc
 15323  1931  0DF0               	rlf	i1___bmul@multiplicand,f
 15324  1932  1003               	clrc
 15325  1933  0CF2               	rrf	i1___bmul@multiplier,f
 15326  1934  08F2               	movf	i1___bmul@multiplier,f
 15327  1935  1D03               	skipz
 15328  1936  292A               	goto	i1l6383
 15329  1937  0873               	movf	i1___bmul@product,w
 15330  1938  0020               	movlb	0	; select bank0
 15331  1939  0008               	return
 15332  193A                     __end_ofi1___bmul:	
 15333                           
 15334                           	psect	text70
 15335  1A44                     __ptext70:	
 15336 ;; *************** function i1___wmul *****************
 15337 ;; Defined at:
 15338 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\wmul.c"
 15339 ;; Parameters:    Size  Location     Type
 15340 ;;  multiplier      2    0[COMMON] unsigned int 
 15341 ;;  multiplicand    2    2[COMMON] unsigned int 
 15342 ;; Auto vars:     Size  Location     Type
 15343 ;;  __wmul          2    4[COMMON] unsigned int 
 15344 ;; Return value:  Size  Location     Type
 15345 ;;                  2    0[COMMON] unsigned int 
 15346 ;; Registers used:
 15347 ;;		wreg, status,2, status,0
 15348 ;; Tracked objects:
 15349 ;;		On entry : 0/0
 15350 ;;		On exit  : 0/0
 15351 ;;		Unchanged: 0/0
 15352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15353 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15356 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15357 ;;Total ram usage:        6 bytes
 15358 ;; Hardware stack levels used:    1
 15359 ;; This function calls:
 15360 ;;		Nothing
 15361 ;; This function is called by:
 15362 ;;		i1_SendCmdReply
 15363 ;; This function uses a non-reentrant model
 15364 ;;
 15365                           
 15366                           
 15367                           ;psect for function i1___wmul
 15368  1A44                     i1___wmul:	
 15369                           
 15370                           ;incstack = 0
 15371                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 15372  1A44  01F4               	clrf	i1___wmul@product
 15373  1A45  01F5               	clrf	i1___wmul@product+1
 15374  1A46                     i1l7911:	
 15375  1A46  1870               	btfsc	i1___wmul@multiplier,0
 15376  1A47  2A4A               	goto	i1l7913
 15377  1A48  0020               	movlb	0	; select bank0
 15378  1A49  2A4E               	goto	i1l1269
 15379  1A4A                     i1l7913:	
 15380  1A4A  0872               	movf	i1___wmul@multiplicand,w
 15381  1A4B  07F4               	addwf	i1___wmul@product,f
 15382  1A4C  0873               	movf	i1___wmul@multiplicand+1,w
 15383  1A4D  3DF5               	addwfc	i1___wmul@product+1,f
 15384  1A4E                     i1l1269:	
 15385  1A4E  3001               	movlw	1
 15386  1A4F                     u886_25:	
 15387  1A4F  35F2               	lslf	i1___wmul@multiplicand,f
 15388  1A50  0DF3               	rlf	i1___wmul@multiplicand+1,f
 15389  1A51  0B89               	decfsz	9,f
 15390  1A52  2A4F               	goto	u886_25
 15391  1A53  3001               	movlw	1
 15392  1A54                     u887_25:	
 15393  1A54  36F1               	lsrf	i1___wmul@multiplier+1,f
 15394  1A55  0CF0               	rrf	i1___wmul@multiplier,f
 15395  1A56  0B89               	decfsz	9,f
 15396  1A57  2A54               	goto	u887_25
 15397  1A58  0871               	movf	i1___wmul@multiplier+1,w
 15398  1A59  0470               	iorwf	i1___wmul@multiplier,w
 15399  1A5A  1D03               	skipz
 15400  1A5B  2A46               	goto	i1l7911
 15401  1A5C  0875               	movf	i1___wmul@product+1,w
 15402  1A5D  01F1               	clrf	?i1___wmul+1
 15403  1A5E  07F1               	addwf	?i1___wmul+1,f
 15404  1A5F  0874               	movf	i1___wmul@product,w
 15405  1A60  01F0               	clrf	?i1___wmul
 15406  1A61  07F0               	addwf	?i1___wmul,f
 15407  1A62  0020               	movlb	0	; select bank0
 15408  1A63  0008               	return
 15409  1A64                     __end_ofi1___wmul:	
 15410  007E                     btemp	set	126	;btemp
 15411  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    174
    Data        63
    BSS         160
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            32     24      32
    BANK1            80     78      80
    BANK2            80     31      80
    BANK3            80      0      74
    BANK4            16      0      12
    BANK5            16      0      16
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           28      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 4
		 -> UpdateClock@CLOCK_F_VALUE(BANK2[4]), 

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___lmul	unsigned long  size(1) Largest target is 0

    ?___lldiv	unsigned long  size(1) Largest target is 0

    ?___lltoft	float  size(1) Largest target is 0

    ?___ftdiv	float  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 0

    ?___ftadd	float  size(1) Largest target is 0

    ?___ftmul	float  size(1) Largest target is 0

    ?___ftneg	float  size(1) Largest target is 0

    ?___awtoft	float  size(1) Largest target is 0

    ?___awmod	int  size(1) Largest target is 0

    ?___awdiv	int  size(1) Largest target is 0

    ?___wmul	unsigned int  size(1) Largest target is 0

    ?_rotate	unsigned long  size(1) Largest target is 0

    ?_memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    ?_USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 32
		 -> USTATcopy(BANK1[1]), USBActiveConfiguration(BANK2[1]), NULL(NULL[0]), BDT(BANK0[32]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    SendCmdReply@data	PTR unsigned char  size(2) Largest target is 13
		 -> ResultQue(BANK3[6]), Cfg(BANK3[6]), ID(CODE[12]), Status(BANK2[13]), 

    SendCmdReply@cmd	PTR unsigned char  size(2) Largest target is 64
		 -> ResultQue(BANK3[6]), OUTPacket(BANK5[64]), 

    USBGenericInHandle	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBGenericOutHandle	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    ProcessCmd@cmd	PTR unsigned char  size(1) Largest target is 64
		 -> OUTPacket(BANK5[64]), 

    I2CInBuf	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    AsicPreCalc@work	PTR struct _worktask size(2) Largest target is 180
		 -> WorkQue(BIGRAM[180]), 

    SendAsicData@work	PTR struct _worktask size(2) Largest target is 180
		 -> WorkQue(BIGRAM[180]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 32
		 -> configDescriptor1(CODE[32]), 

    sp__memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@data	PTR unsigned char  size(1) Largest target is 64
		 -> INPacket(BANK4[64]), OUTPacket(BANK5[64]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    S118$pFunc	PTR FTN()void  size(1) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(1) Largest target is 0

    S108$wRam	PTR unsigned short  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned short  size(1) Largest target is 0

    S108$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S66$wRom	PTR const unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned short  size(1) Largest target is 0

    S66$wRam	PTR unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned short  size(1) Largest target is 0

    S66$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S66$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRCode in COMMON

    _ISRCode->_ResultRx
    _ResultRx->i1_SendCmdReply
    i1_SendCmdReply->i1___wmul

Critical Paths under _main in BANK0

    _SendCmdReply->___wmul
    _AsicPreCalc->_rotate
    _SendAsicData->___wmul
    _UserInit->_DetectAsics
    _UpdateClock->___lltoft
    ___lltoft->___ftpack
    ___lldiv->___lmul
    ___ftdiv->___lltoft
    _DetectAsics->___awdiv
    _UpdateFanLevel->___awtoft
    ___fttol->___awtoft
    ___fttol->___lltoft
    ___ftneg->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCBInitEP
    _USBCBInitEP->_USBEnableEndpoint
    _USBTransferOnePacket->___bmul
    _USBEnableEndpoint->_USBConfigureEndpoint
    ___ftadd->___awtoft
    ___ftadd->___lltoft

Critical Paths under _ISRCode in BANK0

    _ResultRx->i1_SendCmdReply

Critical Paths under _main in BANK1

    _ProcessCmd->_UpdateClock
    _AsicPushWork->_AsicPreCalc
    _InitWorkTick->_UpdateClock
    _UpdateClock->___fttol
    ___ftdiv->___ftadd
    _WorkTick->_UpdateFanLevel
    _UpdateFanLevel->___fttol
    ___fttol->___ftdiv
    ___ftneg->___ftmul
    _USBDeviceTasks->_USBCtrlEPService
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    ___ftadd->___ftneg

Critical Paths under _ISRCode in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_ProcessIO
    _ProcessIO->_ProcessCmd
    _ProcessCmd->_UpdateClock
    _InitWorkTick->_UpdateClock

Critical Paths under _ISRCode in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRCode in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRCode in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRCode in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRCode in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRCode in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRCode in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRCode in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRCode in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRCode in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRCode in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   23790
                     _USBDeviceTasks
                       _AsicPushWork
                           _WorkTick
                   _InitializeSystem
                          _ProcessIO
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            8     8      0    6479
                                             23 BANK2      8     8      0
               _USBTransferOnePacket
                         _ProcessCmd
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _ProcessCmd                                           7     7      0    5829
                                             16 BANK2      7     7      0
                       _AsicPushWork
                       _SendCmdReply
                        _UpdateClock
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _SendCmdReply                                        14     9      5     495
                                             14 BANK0      6     1      5
                                              0 BANK1      8     8      0
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     136
                                              8 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _AsicPushWork                                         5     5      0    2034
                                             69 BANK1      5     5      0
                       _SendAsicData
                        _AsicPreCalc
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     136
                                              8 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _AsicPreCalc                                         69    67      2    1836
                                              0 BANK1     69    67      2
                             _rotate
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _rotate                                              13     8      5      88
                                              8 BANK0     13     8      5
 ---------------------------------------------------------------------------------
 (4) _SendAsicData                                         6     4      2      62
                                             14 BANK0      6     4      2
                             _Send32
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _Send32                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     0     0      0    3729
                      _USBDeviceInit
                           _UserInit
 ---------------------------------------------------------------------------------
 (2) _UserInit                                             0     0      0    3333
                        _DetectAsics
                            _InitFAN
                     _InitTempSensor
                       _InitWorkTick
                       _InitResultRx
 ---------------------------------------------------------------------------------
 (3) _InitResultRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitWorkTick                                         0     0      0    2755
                        _UpdateClock
 ---------------------------------------------------------------------------------
 (3) _UpdateClock                                         32    28      4    2755
                                             62 BANK1     16    12      4
                                              0 BANK2     16    16      0
                            ___ftadd
                            ___ftdiv
                            ___fttol
                            ___lldiv
                           ___lltoft
                             ___lmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     162
                                              8 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8      92
                                              8 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             6     2      4     278
                                             16 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     162
                                             20 BANK0      1     1      0
                                              0 BANK1     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6     489
                                             32 BANK1     16    10      6
                           ___ftpack
                            ___ftadd (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitTempSensor                                       1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _InitFAN                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DetectAsics                                         10    10      0     578
                                             17 BANK0      7     7      0
                                              0 BANK1      3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     445
                                              8 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _WorkTick                                             3     3      0    2500
                                             69 BANK1      3     3      0
                     _UpdateFanLevel
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     296
                                              8 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _UpdateFanLevel                                       7     7      0    2204
                                             62 BANK1      7     7      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     252
                                             48 BANK1     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      45
                                             16 BANK1      3     0      3
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6     535
                                              0 BANK1     16    10      6
                           ___ftpack
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3     300
                                             16 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0    9048
                                             18 BANK1      3     3      0
                      _USBDeviceInit
                 _USBWakeFromSuspend
                         _USBSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
          _USBCtrlEPAllowStatusStage
                    _USBStallHandler
                   _USBCtrlEPService
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     4     4      0    5563
                                             14 BANK1      4     4      0
             _USBCtrlTrfSetupHandler
               _USBCtrlTrfOutHandler
                _USBCtrlTrfInHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     170
                                             11 BANK0      3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     167
                                             14 BANK0      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     167
                                             10 BANK0      4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0    5127
                                             13 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCtrlEPServiceComplete
                 _USBCheckStdRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0    3984
                                             12 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                _USBStdSetCfgHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
            _USBStdFeatureReqHandler
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    1530
                                              6 BANK1      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               2     2      0      68
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    1379
                                              6 BANK1      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               9     3      6     137
                                              8 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0     136
                                             13 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
            _USBCtrlEPAllowDataStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0     136
                                             11 BANK0      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfTxService                                  3     3      0     136
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0    1007
                                              6 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0    1007
                                              6 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    1007
                                              0 BANK1      6     0      6
                       _USBCBSuspend
               _USBCBWakeFromSuspend
                  _USBCB_SOF_Handler
                  _USBCBErrorHandler
                 _USBCBCheckOtherReq
              _USBCBStdSetDscHandler
                        _USBCBInitEP
 ---------------------------------------------------------------------------------
 (7) _USBCBInitEP                                          3     3      0     976
                                             21 BANK0      3     3      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                 7     4      3     440
                                             12 BANK0      7     4      3
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _USBEnableEndpoint                                    6     5      1     536
                                             15 BANK0      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) _USBConfigureEndpoint                                 7     6      1     316
                                              8 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (7) _USBCBStdSetDscHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBCheckOtherReq                                   0     0      0       0
              _USBCheckVendorRequest
 ---------------------------------------------------------------------------------
 (8) _USBCheckVendorRequest                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBErrorHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCB_SOF_Handler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBWakeFromSuspend                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBSuspend                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        6     6      0     396
                                              8 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    1049
                                             19 BANK1     13     7      6
                           ___ftpack
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5     209
                                              8 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5     209
                                              8 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISRCode                                             1     1      0    1210
                                             13 COMMON     1     1      0
                           _ResultRx
 ---------------------------------------------------------------------------------
 (11) _ResultRx                                            1     1      0    1210
                                             12 COMMON     1     1      0
                     i1_SendCmdReply
 ---------------------------------------------------------------------------------
 (12) i1_SendCmdReply                                     14     9      5    1210
                                              6 COMMON     6     1      5
                                              0 BANK0      8     8      0
                           i1___wmul
                           i1___bmul
 ---------------------------------------------------------------------------------
 (13) i1___bmul                                            4     3      1     212
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (13) i1___wmul                                            6     2      4     372
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USBDeviceTasks
     _USBDeviceInit
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
         _USBCBErrorHandler
         _USBCBCheckOtherReq
           _USBCheckVendorRequest
         _USBCBStdSetDscHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
             ___bmul (ARG)
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
         _USBCBErrorHandler
         _USBCBCheckOtherReq
           _USBCheckVendorRequest
         _USBCBStdSetDscHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
             ___bmul (ARG)
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCBSuspend
       _USBCBWakeFromSuspend
       _USBCB_SOF_Handler
       _USBCBErrorHandler
       _USBCBCheckOtherReq
         _USBCheckVendorRequest
       _USBCBStdSetDscHandler
       _USBCBInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
           ___bmul (ARG)
     _USBCtrlEPAllowStatusStage
     _USBStallHandler
     _USBCtrlEPService
       _USBCtrlTrfSetupHandler
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCBSuspend
           _USBCBWakeFromSuspend
           _USBCB_SOF_Handler
           _USBCBErrorHandler
           _USBCBCheckOtherReq
             _USBCheckVendorRequest
           _USBCBStdSetDscHandler
           _USBCBInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
               ___bmul (ARG)
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
         _USBCheckStdRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCBSuspend
             _USBCBWakeFromSuspend
             _USBCB_SOF_Handler
             _USBCBErrorHandler
             _USBCBCheckOtherReq
               _USBCheckVendorRequest
             _USBCBStdSetDscHandler
             _USBCBInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
                 ___bmul (ARG)
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
               _USBCBErrorHandler
               _USBCBCheckOtherReq
                 _USBCheckVendorRequest
               _USBCBStdSetDscHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
                   ___bmul (ARG)
             _memset
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
               _USBCBErrorHandler
               _USBCBCheckOtherReq
                 _USBCheckVendorRequest
               _USBCBStdSetDscHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
                   ___bmul (ARG)
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
   _AsicPushWork
     _SendAsicData
       _Send32
       ___wmul (ARG)
     _AsicPreCalc
       _rotate
       ___wmul (ARG)
     ___wmul
   _WorkTick
     _UpdateFanLevel
       ___awtoft
         ___ftpack
       ___ftadd
         ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___awtoft (ARG)
           ___ftpack
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftadd (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
         ___lltoft (ARG)
           ___ftpack
     ___awmod
   _InitializeSystem
     _USBDeviceInit
     _UserInit
       _DetectAsics
         ___awdiv
       _InitFAN
       _InitTempSensor
       _InitWorkTick
         _UpdateClock
           ___ftadd
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___ftadd (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
               ___lltoft (ARG)
                 ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
               ___lltoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___ftadd (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                 ___lltoft (ARG)
                   ___ftpack
               ___lltoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___lldiv
             ___lmul (ARG)
           ___lltoft
             ___ftpack
           ___lmul
           ___lwdiv
       _InitResultRx
   _ProcessIO
     _USBTransferOnePacket
       ___bmul (ARG)
     _ProcessCmd
       _AsicPushWork
         _SendAsicData
           _Send32
           ___wmul (ARG)
         _AsicPreCalc
           _rotate
           ___wmul (ARG)
         ___wmul
       _SendCmdReply
         ___bmul
         ___wmul
       _UpdateClock
         ___ftadd
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftpack
           ___ftadd (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___ftadd (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
               ___lltoft (ARG)
                 ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___lldiv
           ___lmul (ARG)
         ___lltoft
           ___ftpack
         ___lmul
         ___lwdiv
       ___wmul
     ___bmul

 _ISRCode (ROOT)
   _ResultRx
     i1_SendCmdReply
       i1___wmul
       i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0      11       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20     18      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4E      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     1F      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4A      11       92.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            10      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               10      0       C      13       75.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            10      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               10      0      10      15      100.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     174      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              1C      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     185      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Fri Nov 08 22:51:49 2013

                              _USB_SD_Ptr 0801                                         pc 0002  
                          ___bmul@product 005A                               _SSPSTATbits 0214  
                                      _ID 089F                    ?_USBCheckVendorRequest 0070  
                            ___awdiv@sign 005E                             _USBDeviceInit 1756  
                     ___wmul@multiplicand 005A                          i1___wmul@product 0074  
                            ___ftadd@exp1 00BF                              ___ftadd@exp2 00BE  
                     __end_of_AsicPreCalc 0491                                       LATC 010E  
                              _BankRanges 0340      USER_USB_CALLBACK_EVENT_HANDLER@event 00A0  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 00A2                              ___ftadd@sign 00BD  
                     __end_of_DetectAsics 0A60                                       l140 0BE6  
                                     l142 0BEA                                       l128 179B  
                                     l208 1102                                       l330 1F40  
                                     l146 0C10                                       l315 1021  
                                     l155 0C77                                       l332 1EEB  
                                     l156 0CCD                                       l341 1F15  
             __end_of_USBStdGetDscHandler 12B6                                       l318 1057  
                                     l271 1D90                                       l353 0F49  
                                     l274 1DCF                                       l354 0F4A  
                                     l275 1D9C                                       l276 1D9F  
                                     l366 0FBC                                       l358 0F7D  
                                     l722 07D8                                       l910 1C61  
                                     l742 0589                                       l673 0EE2  
                                     _BDT 0020                                       l829 19A3  
                                     l679 0E53                                       _GIE 005F  
                                     _PR2 001B                                       _UIE 0E92  
                                     _UIR 0E90                                       _Cfg 01E2  
                                     _WQI 0142                                       _WQX 0143  
                                     _buf 02E0                                _USBSuspend 19EE  
                                     _ptr 006F                              ___awmod@sign 005E  
                    USBStdSetCfgHandler@i 00AA                      USBStdSetCfgHandler@p 00A7  
                                     wreg 0009                            _USBDeviceTasks 0BD9  
                          _USBDeviceState 00EE                    ??_USBCBWakeFromSuspend 0058  
                                    S8031 1800                     ??_USBCtrlTrfRxService 005A  
                USBEnableEndpoint@options 005F                                      INDF1 0001  
                            __CFG_LVP$OFF 0000                                      FSR1H 0007  
                                    FSR1L 0006                              ___ftdiv@cntr 00CA  
                            ___ftdiv@sign 00CF                                      l1063 1FE9  
                                    l1057 1FD2                                      l1086 0D6F  
                                    l1269 1A2F                USBConfigureEndpoint@handle 005E  
                                    l6021 1CBA                                      l6013 1CB4  
                                    l6103 0D3B                                      l6023 1CC6  
                                    l6031 1CDB                                      l6121 0D81  
                                    l6105 0D45                                      l6009 1CAD  
                                    l6115 0D61                                      l6107 0D4A  
                                    l7011 161F                                      l6035 1CE3  
                                    l6027 1CD2                                      l6125 0D93  
                                    l6117 0D6B                                      l6109 0D4E  
                                    l7101 1A6B                                      l7021 1638  
                                    l6221 0BA3                                      l6205 0B7F  
                                    l6135 0DAE                                      l7031 1685  
                                    l7023 1654                                      l6047 1AF2  
                                    l6151 0A8D                                      l6303 1E7E  
                                    l6311 1B33                                      l7121 12A3  
                                    l6217 0B9B                                      l6209 0B87  
                                    l6145 0A77                                      l6313 1B43  
                                    l6075 0CF8                                      l7051 145C  
                                    l7123 12A6                                      l7115 1281  
                                    l7107 1242                                      l6323 1B98  
                                    l5283 00DB                                      l6085 0D0E  
                                    l7109 124C                                      l7037 16A6  
                                    l7029 167D                                      l7205 101B  
                                    l6245 1355                                      l6173 0AE7  
                                    l6165 0ACE                                      l6341 1BBE  
                                    l5277 00A5                                      l6079 0CFF  
                                    l7127 12A9                                      l7215 1043  
                                    l6271 13A0                                      l6263 1385  
                                    l6319 1B8E                                      l6343 1BCA  
                                    l6097 0D28                                      l8033 1C42  
                                    l4665 1ADE                                      l7305 0F58  
                                    l7225 1060                                      l6193 0B44  
                                    l6273 13A9                                      l6265 1393  
                                    l5721 1F66                                      l6353 1BE5  
                                    l8035 1C5C                                      l4667 1AE0  
                                    l7091 14CB                                      l7075 1498  
                                    l7059 146C                                      l7139 1DAB  
                                    l7315 0F76                                      l7251 1F09  
                                    l7235 1EF3                                      l7227 1061  
                                    l7219 104F                                      l6187 0B2E  
                                    l6275 13AC                                      l5723 1F6C  
                                    l6291 1E53                                      l6605 17E5  
                                    l7069 1484                                      l7149 1DC3  
                                    l7341 0FE2                                      l7317 0F86  
                                    l7261 1F25                                      l7237 1EF6  
                                    l6701 0C6F                                      l6349 1BDC  
                                    l7343 0FEA                                      l7327 0FAB  
                                    l7247 1F03                                      l7239 1EF9  
                                    l6711 0C7D                                      l6631 0BED  
                                    l6279 13BA                                      l5751 07BB  
                                    l5671 0515                                      l7337 0FC3  
                                    l7329 0FB0                                      l7281 0EFA  
                                    l7249 1F06                                      l7265 1F35  
                                    l7193 1B82                                      l6721 0C98  
                                    l6289 1E43                                      l5931 1FA8  
                                    l7283 0EFC                                      l7187 1B60  
                                    l6651 0C0A                                      l6643 0BFD  
                                    l5747 07A2                                      l6299 1E73  
                                    l6565 1782                                      l6557 1775  
                                    l6549 1765                                      l5935 1FAF  
                                    l6911 1D22                                      l6727 0CB1  
                                    l6671 0C2C                                      l6663 0C20  
                                    l5945 1FD7                                      l5937 1FB9  
                                    l6585 17A0                                      l6761 1C2D  
                                    l7297 0F2B                                      l6841 122C  
                                    l6729 0CC1                                      l7801 1190  
                                    l5947 1FDF                                      l5939 1FBE  
                                    l6587 17B0                                      l6763 1C30  
                                    l6755 1C24                                      l6771 1C39  
                                    l6907 1D0D                                      l6835 1218  
                                    l6683 0C4C                                      l7723 1713  
                                    l7635 0DD7                                      l6853 1B1A  
                                    l6765 1C33                                      l6757 1C27  
                                    l6925 13DC                                      l6829 11EF  
                                    l6693 0C59                                      l6677 0C40  
                                    l7725 174D                                      l7661 0E2F  
                                    l6599 17C6                                      l6767 1C36  
                                    l6759 1C2A                                      l6839 1229  
                                    l6687 0C52                                      l7743 0A07  
                                    l7671 0E5E                                      l7655 0E1A  
                                    l7647 0E16                                      l6849 1B12  
                                    l6793 1088                                      l6929 13E6  
                                    l7745 0A57                                      l7681 0E8F  
                                    l7657 0E2D                                      l6867 1C90  
                                    l6939 140D                                      l6947 142A  
                                    l7851 1DF4                                      l7755 19AB  
                                    l6885 08C7                                      l6877 08B9  
                                    l6949 142F                                      l6957 144C  
                                    l6981 110E                                      l6973 10DF  
                                    l7861 1DFC                                      l7845 1DE9  
                                    l7677 0E75                                      l6895 08F2  
                                    l7863 1E08                                      l7687 0EAC  
                                    l7679 0E7B                                      l7695 0ECA  
                                    l7759 19B3                                      l6969 10DB  
                                    l7873 1E23                                      l7793 117A  
                                    l7785 115A                                      l7883 193D  
                                    l7787 115C                                      l6989 1118  
                                    l7877 1E2B                                      l7869 1E1A  
                                    l7887 1943                                      l7799 118E  
                                    l7899 1A29                                      _LATC 010E  
                                    u5005 0266                                      u5015 027B  
                                    u5105 03CD                                      u5025 0290  
                                    u5115 03E2                                      u5035 02A5  
                                    u5125 0422                                      u5045 02BB  
                                    u5135 043A                                      u5055 02EA  
                                    u5145 044F                                      u5065 032D  
                                    u5155 0465                                      u5075 0371  
                                    u5165 047A                                      u5085 0386  
                                    u6055 1CBD                                      u5095 03A8  
                                    u7105 1785                                      u5505 0524  
                                    u5514 05E2                                      u6235 0D29  
                                    u6075 1CCC                                      u5515 05E0  
                                    _RCIF 008D                                      u6325 0D62  
                                    u6085 1CD3                                      u5605 1F5F  
                                    u6405 0AAF                                      u5525 061F  
                                    u6415 0ACF                                      u5535 063A  
                                    u4840 1BFF                                      u6265 0D3C  
                                    u6505 0B88                                      u6425 0ADE  
                                    u5545 0655                                      u4850 1C10  
                                    u6515 0B8E                                      u6435 0AE8  
                                    u4915 00E4                                      u4860 009B  
                                    u5645 0781                                      u5485 04A0  
                                    u4845 1BFA                                      u4925 00F9  
                                    u6295 0D4F                                      u5655 0798  
                                    u5495 04B0                                      u4855 1C0C  
                                    u4935 011A                     ??_USBCtrlTrfTxService 0058  
                                    u5905 1FF0                                      u6545 0BA4  
                                    u6625 1386                                      u5665 07B7  
                                    u4945 013E                                      u5835 1FB4  
                                    u6555 0BAA                                      u6475 0B50  
                                    u5675 07D0                                      u6395 0A9F  
                                    u6715 1E54                                      u4955 0161  
                                    u8420 0E06                                      u6485 0B60  
                                    u6725 1E68                                      u4965 0190  
                                    u4885 00C3                                      u5855 1FCD  
                                    u7535 1C6B                                      u7615 1D17  
                                    u6655 13A1                                      u6735 1E74  
                                    u4975 01A5                                      _UCFG 0E91  
                                    u7545 1C71                                      u7465 11CA  
                                    u6825 1BC1                                      u4985 01D4  
                                    u8505 16E0                                      u8450 0E43  
                                    u5875 1FDA                                      u7555 1C79  
                                    u6595 135C                                      u6755 1B38  
                                    u4995 0217                                      _UEP0 0E98  
                                    u8525 0A12                                      u6845 1BCB  
                                    _UEP1 0E99                                      u8535 0A29  
                                    u6695 1E46                                      u6855 1BD5  
                                    u8545 0A40                                      u6785 1B99  
                                    u6865 1BDD                                      u7755 1618  
                                    u6795 1BA0                                      _UEIE 0E97  
                                    u8725 1DFF                                      u7865 1A75  
                                    u8745 1E09                                      u8825 1A30  
                                    u8755 1E13                                      u8835 1A35  
                                    u8765 1E1B                                      _UEIR 0E93  
                                    _UCON 0E8E                                      _TMR0 0015  
                         __end_of_ISRCode 0013                                      _Step 0120  
  USBStdFeatureReqHandler@current_ep_data 00AA                                      _pDst 0137  
                                    _main 19A0                              ___ftpack@arg 0058  
                            ___ftpack@exp 005B                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                    __end_of_AsicPushWork 133C                                      start 0013  
                           __CFG_IESO$OFF 0000                        _USBCBCheckOtherReq 07FC  
              __end_of_USBCheckStdRequest 1F41                    ??_USBCtrlTrfOutHandler 005E  
                       ___bmul@multiplier 005B                              ___ftmul@cntr 00AE  
                            ___ftmul@sign 00AF                 ??_USBStdFeatureReqHandler 00A6  
                         __end_of_InitFAN 1A26                  ??_USBStdGetStatusHandler 0058  
                            ___fttol@exp1 00DD                              ___fttol@lval 00D9  
                          ?_USBDeviceInit 0070                             ?_InitResultRx 0070  
                     ?_USBCBCheckOtherReq 0070                           i1SendCmdReply@n 007B  
                                   ?_main 0070                           __end_of___awdiv 1E32  
                         __end_of___ftadd 0DD4                             __CFG_WDTE$OFF 0000  
                         __end_of___awmod 1CEA         __size_of_USBCtrlEPServiceComplete 0079  
                         __end_of___ftdiv 0B17                           __end_of___ftneg 1904  
                         __end_of___lldiv 1E87                           __end_of___ftmul 0BD9  
                         ___awdiv@divisor 0058                    __end_of_USBDeviceTasks 0CD0  
                         __end_of___fttol 13C3                 ?_USBCtrlEPServiceComplete 0070  
                                   _IOCBF 0396                           __end_of___lwdiv 1BEC  
                                   i1l712 1EB2                                     i1l826 000F  
                                   _UADDR 0E96                           ___awdiv@counter 005D  
                                   _RCREG 0199                             ?_InitWorkTick 0070  
                                   _USTAT 0E8F        __size_of_USBCtrlEPAllowStatusStage 0064  
                     ___lmul@multiplicand 005C                             __CFG_PWRTE$ON 0000  
                            ___lltoft@exp 0065                                     _Error 01E0  
                          __CFG_FCMEN$OFF 0000           __end_of_USBCtrlEPAllowDataStage 1D3A  
                                   _sd000 08AB                                     _sd001 0805  
                                   _sd002 0839                  UpdateClock@CLOCK_F_VALUE 014C  
                           ___awtoft@sign 0065                             ___ftpack@sign 005C  
                    ??_USBCBCheckOtherReq 0058                          __end_ofi1___bmul 193A  
                        __end_ofi1___wmul 1A64                  UpdateClock@CLOCK_R_VALUE 0148  
                        ??i1_SendCmdReply 0050                                     status 0003  
                     i1___wmul@multiplier 0070                                     wtemp0 007E  
            __size_of_USBStdSetCfgHandler 008F                            __CFG_MCLRE$OFF 0000  
                         __initialization 0015                               _AsicPreCalc 0091  
                            __end_of_main 19B7                               _DetectAsics 09A9  
                          ??_InitResultRx 0058                 __size_of_USBCtrlEPService 007C  
                                  ??_main 0068                             ___fttol@sign1 00D8  
                          ??_InitWorkTick 0066                 __size_of_InitializeSystem 0017  
                         ?_USBDeviceTasks 0070                               ?_USBSuspend 0070  
                        __end_of_ResultRx 1EE3                          UpdateClock@SPEED 00DE  
                               ??_ISRCode 007D                            _InitTempSensor 1972  
                        __end_of_UserInit 1972                                    _I2CCmd 006A  
                                  _ACTCON 039B                                    _ADRESH 009C  
                        ___awdiv@dividend 005A                          __end_of___awtoft 1B09  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                          __end_of___ftpack 2000  
                        __end_of_WorkTick 1F9F                          __end_of___lltoft 1B58  
                                  i1l1269 1A4E                                    i1l6383 192A  
                                  i1l6387 1930                                    i1l7911 1A46  
                                  i1l7913 1A4A                                    i1l7931 1539  
                                  i1l7933 1569                                    i1l7943 1EA3  
                                  i1l7951 1E89                                    i1l7953 1EBE  
                                  i1l7959 1EDB                                    _OSCCON 0099  
                                  _TMR0IF 005A                                    _TMR0CS 04AD  
                                  _PWM1OE 309E                                    _TMR2IF 0089  
                                  _TMR2ON 00E2                                    _SSP1EN 10AD  
                                  _SSP1IF 008B                                    u886_25 1A4F  
                                  u887_25 1A54                                    u889_25 150A  
                                  _SSPADD 0212                                    _SSPBUF 0211  
                               ??_InitFAN 0058                                _TempTarget 01E9  
                                  _Send32 08FD                         _shortPacketStatus 0139  
                           ?_SendCmdReply 005E                           USBDeviceTasks@i 00B4  
                           ?_SendAsicData 005E               USBStdFeatureReqHandler@pUEP 00A8  
                USBTransferOnePacket@data 005D                USBCtrlTrfInHandler@lastDTS 005D  
                                  _Status 0163                           ??_USBDeviceInit 0058  
                                  ___bmul 193A                                    ___lmul 1B85  
                                  ___wmul 1A26                                 ??___awdiv 005C  
                               ??___ftadd 00B9                                 ??___awmod 005C  
                               ??___ftdiv 00C6                                 ??___ftneg 0066  
                               ??___lldiv 0064                                 ??___ftmul 00A6  
                               ??___fttol 00D4                              ?_USBCBInitEP 0070  
                               ??___lwdiv 005C                         _USBEnableEndpoint 1B09  
         __size_of_USBStdGetStatusHandler 0053                                    _memset 1A64  
                        ___awdiv@quotient 005F                           ___awmod@divisor 0058  
                              _ProcessCmd 0DD4                           ___awmod@counter 005D  
                      ?_USBEnableEndpoint 005F                                    _rotate 1BEC  
                   _USBCBStdSetDscHandler 07FF                     ___ftmul@f3_as_product 00AB  
           __size_of_USBTransferOnePacket 004E                        __size_of_ProcessIO 007A  
                  __end_of_InitTempSensor 1989                       ??_USBEnableEndpoint 0060  
                             _CtrlTrfData 0048                     __size_of_AsicPushWork 0086  
                    _controlTransferState 006C                             ??_UpdateClock 00E2  
                 __end_of__initialization 008E                                ___ftadd@f1 00B3  
                              ___ftadd@f2 00B6                                ___ftdiv@f1 00C3  
                              ___ftdiv@f2 00C0                                ___ftdiv@f3 00CB  
                __size_of_USBStallHandler 0022                            ??_SendCmdReply 00A0  
                              ___ftneg@f1 00B0                                ___awtoft@c 0060  
                     ___bmul@multiplicand 0058                            ??_SendAsicData 0060  
                     __size_of_USBSuspend 001C                                ___ftmul@f1 00A0  
                              ___ftmul@f2 00A3                   ??_USBCheckVendorRequest 0058  
                              ___fttol@f1 00D0                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 1B2E                             __end_of_sd000 08AF  
                           __end_of_sd001 0839                             __end_of_sd002 086D  
                            __pidataBANK2 07EF                              __pidataBANK3 18F5  
                            __pidataBANK4 191C                              __pidataBANK6 1A84  
                       _USBCB_SOF_Handler 1000                                ___lltoft@c 0060  
        __size_of_USBCtrlEPAllowDataStage 0050             __size_of_USBConfigureEndpoint 0040  
             __end_of_USBCtrlTrfInHandler 1064                        ?_USBCB_SOF_Handler 0070  
                              __end_of_ID 08AB                                 ?i1___bmul 0070  
                               ?i1___wmul 0070                            _OPTION_REGbits 0095  
                            _AsicPushWork 12B6                           ?_InitTempSensor 0070  
                     i1SendCmdReply@count 007A                       ??_USBCB_SOF_Handler 0058  
                ??_USBCtrlTrfSetupHandler 00AD                          i1___bmul@product 0073  
                  _USBStdGetStatusHandler 1D8B                      __end_of_InitResultRx 195F  
                              __pbssBANK0 0068                                __pbssBANK1 00EE  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                              __pbssBANK5 02E0                                __pbssBANK6 0320  
                       i1SendCmdReply@cmd 0076                      __end_of_InitWorkTick 1AC5  
             __size_of_USBWakeFromSuspend 001B                               _pBDTEntryIn 0068  
                       __end_of_ProcessIO 11BB          __end_of_USBCtrlEPServiceComplete 1141  
                                 ?_Send32 0070                 __end_of_USBCB_SOF_Handler 1001  
                              __pmaintext 19A0                      USBCtrlTrfRxService@i 005C  
                               ?_ResultRx 0070                       __end_of_UpdateClock 06A7  
                                 ?___bmul 0058                                   ?___lmul 0058  
                                 ?___wmul 0058                                __pintentry 0004  
                               ?_UserInit 0070                                   _I2CAddr 01B3  
                                 ?_memset 0058                    ?_USBCBStdSetDscHandler 0070  
                          ___lmul@product 0060                                _device_dsc 088D  
                               ?___awtoft 0060                                 ?___ftpack 0058  
                        _USBCtrlEPService 11BB                                 ?_WorkTick 0070  
                             ?_ProcessCmd 0070                                ??i1___bmul 0071  
                              _ep_data_in 01AE                                 ?___lltoft 0060  
                                 ?_rotate 0058                                ??i1___wmul 0074  
                        _InitializeSystem 1989                               _NonceRanges 0320  
             __end_of_USBCtrlTrfRxService 16AE                        _USBCheckStdRequest 1EE3  
                       _configDescriptor1 086D               __end_of_USBCtrlTrfTxService 1451  
                     _USBStdSetCfgHandler 1451                                   _ISRCode 0004  
                                 _PWM1DCH 0612                                   _PWM1DCL 0611  
                                 _OSCTUNE 0098                                   _PWM1CON 0613  
                     ?_USBCheckStdRequest 0070              __size_of_USBStdGetDscHandler 007F  
                                 _UIEbits 0E92             __size_of_USBCBWakeFromSuspend 0001  
                              __stringtab 0800                                   _UIRbits 0E90  
                                 _InitFAN 1A0A                      ?_USBStdSetCfgHandler 0070  
                         __size_of_Send32 00AC                                   _TimeOut 01B7  
                              ??_ResultRx 007C                __size_of_USBEnableEndpoint 0025  
                            ?_AsicPreCalc 00A0                              ?_DetectAsics 0070  
                    ??_USBCheckStdRequest 00AC                           __size_of___bmul 0012  
           __size_of_USBCtrlTrfOutHandler 002D                                   ___awdiv 1DDE  
                         __size_of___lmul 0030                                   ___ftadd 0CD0  
                                 ___awmod 1CA2                                   ___ftdiv 0A60  
                                 ___ftneg 18FB                                   ___lldiv 1E32  
                        ??_USBDeviceTasks 00B2                           __size_of___wmul 001E  
                                 _WorkNow 0133                                   ___ftmul 0B17  
                                 _WorkQue 233C                                   ___fttol 133C  
                                 ___lwdiv 1BB5                         ??_USBStallHandler 0058  
                              ??_UserInit 0068                                ??___awtoft 0063  
                              ??___ftpack 005D                           __size_of_memset 0020  
                              ??_WorkTick 00E5                 __end_of_configDescriptor1 088D  
                    __size_of_USBCBInitEP 001C                                ??___lltoft 0064  
                                 __ptext1 1141                                   __ptext2 0DD4  
                                 __ptext3 16AE                                   __ptext4 193A  
                                 __ptext5 12B6                                   __ptext6 1A26  
                                 __ptext7 0091                                   __ptext8 1BEC  
                                 __ptext9 1572                                   _inPipes 013A  
                        _DetectAsics$2774 00A0                   __size_of_UpdateFanLevel 0148  
             _USBDeferOUTDataStagePackets 012D                           __size_of_rotate 0037  
                            ??_USBSuspend 00A6                                 _T2CONbits 001C  
                       _USBCBErrorHandler 0002                          ___awmod@dividend 005A  
                    __end_of_SendCmdReply 1756                       i1___bmul@multiplier 0072  
                               _IOCBPbits 0394                      __end_of_SendAsicData 1606  
                      ?_USBCBErrorHandler 0070                             ?_USBCBSuspend 0070  
                      __end_of_USB_CD_Ptr 0805           __size_of_USBCtrlTrfSetupHandler 0051  
                                 clrloop0 1911                      end_of_initialization 008E  
                          _ProcessIO$2311 0161                            _ProcessIO$2277 015F  
             __size_of_USBCBCheckOtherReq 0003                        __end_of_USB_SD_Ptr 0804  
                     _pBDTEntryEP0OutNext 006E                                   init_ram 1904  
                     ??_USBCBErrorHandler 0058                                   memset@c 005A  
                                 memset@n 005C                                   memset@p 005F  
                                 initloop 1905                               _UpdateClock 0491  
                     __size_of_ProcessCmd 0111                  ?_USBStdFeatureReqHandler 0070  
                   ??_USBStdSetCfgHandler 00A6                           ___lldiv@divisor 00A0  
                         ___lldiv@counter 00AC                          SendCmdReply@data 0060  
              __size_of_USBCB_SOF_Handler 0001                        __end_of_USBSuspend 1A0A  
                 _USBCtrlEPAllowDataStage 1CEA                                 _RCSTAbits 019D  
                                 rotate@x 0058                                   rotate@y 005C  
                         AsicPreCalc@work 00A0                  _USBCtrlEPServiceComplete 10C8  
                   i1___wmul@multiplicand 0072                _USBStatusStageEnabledFlag1 0130  
              _USBStatusStageEnabledFlag2 0131                        USBEnableEndpoint@p 0062  
               __end_of_USBCBErrorHandler 0003                          _UpdateClock$2776 0144  
                        __CFG_FOSC$INTOSC 0000                     __size_of_InitResultRx 0013  
                               _TRISAbits 008C                                 _TRISBbits 008D  
                               _TRISCbits 008E                            ??_USBCBSuspend 0058  
                      _BothEP0OutUOWNsSet 01B2                 USBStdSetCfgHandler@i_1089 00A9  
                               _OUTPacket 02A0                 USBConfigureEndpoint@EPNum 005D  
              ?_USBCtrlEPAllowStatusStage 0070                     __size_of_InitWorkTick 0021  
     USER_USB_CALLBACK_EVENT_HANDLER@size 00A4                                 _USTATcopy 00EF  
            __end_of_USBTransferOnePacket 08FD                               ___ftdiv@exp 00CE  
                               _TXSTAbits 019E                             _PrecalcHashes 01BA  
                             ___ftmul@exp 00AA                        USBDeviceInit@i_718 005C  
                          __end_of_Send32 09A9                    _USBCtrlTrfSetupHandler 1D3A  
          __size_of_USBCheckVendorRequest 0001             __end_of_USBCheckVendorRequest 0004  
                 __size_ofi1_SendCmdReply 0092                            __end_of___bmul 194C  
                   __end_of_USBDeviceInit 1800                            __end_of___lmul 1BB5  
                            _InitResultRx 194C                            __end_of___wmul 1A44  
                        ??_InitTempSensor 0058                               _BAUDCONbits 019F  
                          __end_of_memset 1A84                         _USBBusIsSuspended 01B8  
                          __end_of_rotate 1C23                              _InitWorkTick 1AA4  
                       __size_ofi1___bmul 0012                                 _LastError 01AC  
                     start_initialization 0015                         __size_ofi1___wmul 0020  
                 ?_USBStdGetStatusHandler 0070                             _CLOCK_LOW_CHG 01A6  
           USBCtrlTrfRxService@byteToRead 005D              __end_of_USBConfigureEndpoint 1CA2  
         __end_of_USBStdFeatureReqHandler 1000         __end_of_USBCtrlEPAllowStatusStage 10C8  
                __end_of_USBCtrlEPService 1237                          SendAsicData@work 005E  
                __end_of_InitializeSystem 19A0                 ??_USBCtrlEPAllowDataStage 005B  
                          USBDeviceInit@i 005D                                  ??_Send32 0058  
                          USBDeviceInit@p 005A                    _pBDTEntryEP0OutCurrent 006D  
                 USBTransferOnePacket@dir 005C                   USBTransferOnePacket@len 005E  
                 ??_USBCBStdSetDscHandler 0058                                  ??___bmul 0059  
                                ??___lmul 0060                                 _ResultQue 01DA  
                                ??___wmul 005C                       _USBStdGetDscHandler 1237  
                               _ProcessIO 1141                               __pdataBANK2 0163  
                             __pdataBANK3 01E2                               __pdataBANK4 0260  
                             __pdataBANK6 0340                         __size_of_ResultRx 005C  
                    __size_of_AsicPreCalc 0400                                  ??_memset 005E  
                    __size_of_DetectAsics 00B7                              ??_ProcessCmd 0154  
                   __size_of_SendCmdReply 00A8                            _UpdateFanLevel 06A7  
                                ??_rotate 005D                __size_of_USBCBErrorHandler 0001  
                   __size_of_SendAsicData 0094                         __size_of_UserInit 0013  
                  _USBActiveConfiguration 0140            __end_of_USBStdGetStatusHandler 1DDE  
                       __size_of___awtoft 0022                         __size_of___ftpack 0061  
                             __pbssBIGRAM 233C                         __size_of_WorkTick 005E  
                       __size_of___lltoft 002A                             __pcstackBANK0 0050  
                           __pcstackBANK1 00A0                             __pcstackBANK2 0144  
            __size_of_USBCtrlTrfInHandler 0063                                  ?_ISRCode 0070  
                    ?_USBStdGetDscHandler 0070                        i1SendCmdReply@data 0078  
              __end_of_USBWakeFromSuspend 19D2                           _USBStallHandler 1AC5  
                            _pBDTEntryOut 0122                                  ?_InitFAN 0070  
                            _send32_count 0138                                 __pnvBANK3 01E8  
                      __end_of_ProcessCmd 0EE5                          ___lwdiv@dividend 005A  
                            _SendCmdReply 16AE                              _SendAsicData 1572  
                    __end_of_USBCBSuspend 18F4              __end_of_USBCBWakeFromSuspend 18F5  
                                ?___awdiv 0058                                  ?___ftadd 00B3  
                                ?___awmod 0058                                  ?___ftdiv 00C0  
                                ?___ftneg 00B0                                  ?___lldiv 00A0  
                              ?_ProcessIO 0070                                  ?___ftmul 00A0  
                                ?___fttol 00D0                                  ?___lwdiv 0058  
                  __end_of_UpdateFanLevel 07EF                              AsicPreCalc@K 00AC  
                            AsicPreCalc@m 00B8                              AsicPreCalc@n 00E4  
                            AsicPreCalc@x 00E0                              AsicPreCalc@y 00DC  
                            AsicPreCalc@z 00D8                                 __pstrings 0800  
              USBCBSendResume@delay_count 01AA                                 __pswtext1 1800  
                    _USBTransferOnePacket 08AF                                  _I2CInBuf 01B4  
                            DetectAsics@x 00A2                                  _I2CCount 0127  
                                _I2CState 0128                                 _last_bit0 0135  
                               _last_bit1 0136              __end_of_USBCtrlTrfOutHandler 1B85  
                   ??_USBStdGetDscHandler 0058                               _ep_data_out 01B0  
                        ___lwdiv@quotient 005D              __size_of_USBCtrlTrfRxService 00A8  
           USBConfigureEndpoint@direction 0058              __size_of_USBCtrlTrfTxService 008E  
                            ?_UpdateClock 00DE                            ___wmul@product 005C  
                                _LATAbits 010C                ??_USBCtrlEPServiceComplete 005D  
                               clear_ram0 1910                                  _PIE2bits 0092  
                   i1___bmul@multiplicand 0070                           SendCmdReply@cmd 005E  
                                _PIR2bits 0012                                  _INPacket 0220  
               USBCtrlEPService@setup_cnt 00B1                                  _UEP0bits 0E98  
              _USBDeferINDataStagePackets 012C                            i1_SendCmdReply 14E0  
                           ??_USBCBInitEP 0065               __size_of_USBCheckStdRequest 005E  
                                _UCONbits 0E8E                           ?_UpdateFanLevel 0070  
                     _UpdateFanLevel$2775 00E2                      _USBConfigureEndpoint 1C62  
                           ProcessCmd@cmd 015A          __size_of_USBStdFeatureReqHandler 011B  
                                i1___bmul 1928                                _ADCON0bits 009D  
                              _ADCON1bits 009E                                _ADCON2bits 009F  
                       ___wmul@multiplier 0058                     ?_USBTransferOnePacket 005C  
                                i1___wmul 1A44                                  _BankSize 013F  
                                _FanLevel 01E8                              _RemoteWakeup 0129  
                                _ClockCfg 01D2                __end_of_USBCBCheckOtherReq 07FF  
                                _HashTime 0126                   __end_of_USBStallHandler 1AE7  
                        __size_of_ISRCode 000F                         ___lmul@multiplier 0058  
             ??_USBCtrlEPAllowStatusStage 0058               __end_of_USBStdSetCfgHandler 14E0  
                                _LastTemp 01B5                              _SlaveAddress 012B  
                      __end_of_device_dsc 089F                   ?_USBCtrlTrfSetupHandler 0070  
                        __size_of_InitFAN 001C                   USBStdGetStatusHandler@p 0059  
               UpdateClock@CLOCK_OD_VALUE 0150                    __end_ofi1_SendCmdReply 1572  
                  USBTransferOnePacket@ep 0061                                  _ResultQC 012A  
                                _ResultRx 1E87                                  _SetupPkt 0040  
                                _SlowTick 01B6                               ??_ProcessIO 015B  
                   ?_USBConfigureEndpoint 0058                                  _UserInit 195F  
                        __size_of___awdiv 0054                          __size_of___ftadd 0104  
                        __size_of___awmod 0048                          __size_of___ftdiv 00B7  
                        __size_of___ftneg 0009                          __size_of___lldiv 0055  
                        __size_of___ftmul 00C2                          __size_of___fttol 0087  
                        __size_of___lwdiv 0037                                  ___awtoft 1AE7  
                                ___ftpack 1F9F                                  _WorkTick 1F41  
                      __end_of__stringtab 0801                                  ___lltoft 1B2E  
                              _ANSELBbits 018D                       __end_of_USBCBInitEP 19EE  
                           ?_AsicPushWork 0070                               _send32_data 0124  
                 __size_of_USBDeviceTasks 00F7                           ___lwdiv@divisor 0058  
                         ___lwdiv@counter 005F                                  __ptext10 08FD  
                                __ptext11 1989                                  __ptext20 0A60  
                                __ptext12 195F                                  __ptext21 1972  
                                __ptext13 194C                                  __ptext30 0B17  
                                __ptext22 1A0A                                  __ptext14 1AA4  
                                __ptext31 1AE7                                  __ptext23 09A9  
                                __ptext15 0491                                  __ptext40 1D8B  
                                __ptext32 0BD9                                  __ptext24 1DDE  
                                __ptext16 1BB5                                  __ptext41 1237  
                                __ptext33 11BB                                  __ptext25 1F41  
                                __ptext17 1B85                                  __ptext50 19B7  
                                __ptext42 1451                                  __ptext34 1001  
                                __ptext26 1CA2                                  __ptext18 1B2E  
                                __ptext51 1C23                                  __ptext43 1A64  
                                __ptext35 1B58                                  __ptext27 06A7  
                                __ptext19 1E32                                  __ptext60 1000  
                                __ptext52 19D2                                  __ptext44 10C8  
                                __ptext36 1606                                  __ptext28 133C  
                                __ptext61 18F4                                  __ptext53 08AF  
                                __ptext45 1CEA                                  __ptext37 1D3A  
                                __ptext29 18FB                                  __ptext70 1A44  
                                __ptext62 18F3                                  __ptext54 1B09  
                                __ptext46 13C3                                  __ptext38 1EE3  
                                __ptext63 1756                                  __ptext55 1C62  
                                __ptext47 1064                                  __ptext39 0EE5  
                                __ptext64 0CD0                                  __ptext56 07FF  
                                __ptext48 1AC5                                  __ptext65 1F9F  
                                __ptext57 07FC                                  __ptext49 19EE  
                                __ptext58 0003                                  __ptext67 1E87  
                                __ptext59 0002                                  __ptext68 14E0  
                                __ptext69 1928                      _USBCBWakeFromSuspend 18F4  
          __end_of_USBCtrlTrfSetupHandler 1D8B                             __size_of_main 0017  
                       ?_USBCtrlEPService 0070                     __size_of_USBCBSuspend 0001  
                       ?_InitializeSystem 0070                        ??_USBCtrlEPService 00AE  
                     _USBGenericOutHandle 012F                       _USBCtrlTrfInHandler 1001  
                         ?i1_SendCmdReply 0076                        ??_InitializeSystem 0068  
                                _outPipes 01A0                      _USBCtrlTrfOutHandler 1B58  
               _USBCtrlEPAllowStatusStage 1064            __size_of_USBCBStdSetDscHandler 0001  
           __end_of_USBCBStdSetDscHandler 0800                    ??_USBTransferOnePacket 005F  
                   _USBCheckVendorRequest 0003                            ??_AsicPushWork 00E5  
               _USBDeferStatusStagePacket 006B                                _INTCONbits 000B  
                      _USBGenericInHandle 012E                      ?_USBCtrlTrfInHandler 0070  
           USBCtrlTrfTxService@byteToSend 005A                                  memset@p1 0058  
                            _USBCBSuspend 18F3                          ?_USBStallHandler 0070  
                USBStdFeatureReqHandler@p 00AB                     ?_USBCBWakeFromSuspend 0070  
                                intlevel1 0000                    __size_of_USBDeviceInit 00AA  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1C62  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 003F  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0068          ?_USER_USB_CALLBACK_EVENT_HANDLER 00A0  
         _USER_USB_CALLBACK_EVENT_HANDLER 1C23                          ___lldiv@dividend 00A4  
                        AsicPreCalc@F3344 0260                                  next_word 0902  
                    __size_of_UpdateClock 0216                         SendCmdReply@count 0062  
                           SendCmdReply@n 0063                             ??_AsicPreCalc 00A2  
                            _VerySlowTick 01B9                             ??_DetectAsics 0061  
                         _ProcessCmd$1977 0158                    ??_USBConfigureEndpoint 0059  
                   ?_USBCtrlTrfOutHandler 0070                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 1606                               _USBCBInitEP 19D2  
                      _USBWakeFromSuspend 19B7                   _USBStdFeatureReqHandler 0EE5  
                     _USBCtrlTrfTxService 13C3                       ?_USBWakeFromSuspend 0070  
                        ___lldiv@quotient 00A8                     ??_USBCtrlTrfInHandler 005B  
                   _USBAlternateInterface 0141                               _SSPCON1bits 0215  
                             _SSPCON2bits 0216                       USBEnableEndpoint@ep 0064  
                             _SSPCON3bits 0217                           _endpoint_number 0134  
                 __size_of_InitTempSensor 0017                      ?_USBCtrlTrfRxService 0070  
                ?_USBCtrlEPAllowDataStage 0070                      ?_USBCtrlTrfTxService 0070  
            _USBStatusStageTimeoutCounter 0132                      ??_USBWakeFromSuspend 00A6  
              USBTransferOnePacket@handle 0062                          ??_UpdateFanLevel 00DE  
                              _USB_CD_Ptr 0804  
