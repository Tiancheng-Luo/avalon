

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Wed Dec 25 01:35:24 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16LF1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	idataBANK4,global,class=CODE,delta=2
     7                           	psect	idataBANK6,global,class=CODE,delta=2
     8                           	psect	strings,global,class=STRING,delta=2
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    20                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	inittext,global,class=CODE,delta=2
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2
    37                           	psect	text10,local,class=CODE,merge=1,delta=2
    38                           	psect	text11,local,class=CODE,merge=1,delta=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	swtext1,local,class=CONST,delta=2
    67                           	psect	text39,local,class=CODE,merge=1,delta=2
    68                           	psect	text40,local,class=CODE,merge=1,delta=2
    69                           	psect	text41,local,class=CODE,merge=1,delta=2
    70                           	psect	text42,local,class=CODE,merge=1,delta=2
    71                           	psect	text43,local,class=CODE,merge=1,delta=2
    72                           	psect	text44,local,class=CODE,merge=1,delta=2
    73                           	psect	text45,local,class=CODE,merge=1,delta=2
    74                           	psect	text46,local,class=CODE,merge=1,delta=2
    75                           	psect	text47,local,class=CODE,merge=1,delta=2
    76                           	psect	text48,local,class=CODE,merge=1,delta=2
    77                           	psect	text49,local,class=CODE,merge=1,delta=2
    78                           	psect	text50,local,class=CODE,merge=1,delta=2
    79                           	psect	text51,local,class=CODE,merge=1,delta=2
    80                           	psect	text52,local,class=CODE,merge=1,delta=2
    81                           	psect	text53,local,class=CODE,merge=1,delta=2
    82                           	psect	text54,local,class=CODE,merge=1,delta=2
    83                           	psect	text55,local,class=CODE,merge=1,delta=2
    84                           	psect	text56,local,class=CODE,merge=1,delta=2
    85                           	psect	text57,local,class=CODE,merge=1,delta=2
    86                           	psect	text58,local,class=CODE,merge=1,delta=2
    87                           	psect	text59,local,class=CODE,merge=1,delta=2
    88                           	psect	text60,local,class=CODE,merge=1,delta=2
    89                           	psect	text61,local,class=CODE,merge=1,delta=2
    90                           	psect	text62,local,class=CODE,merge=1,delta=2
    91                           	psect	text63,local,class=CODE,merge=1,delta=2
    92                           	psect	text64,local,class=CODE,merge=1,delta=2
    93                           	psect	text65,local,class=CODE,merge=1,delta=2
    94                           	psect	intentry,global,class=CODE,delta=2
    95                           	psect	text67,local,class=CODE,merge=1,delta=2
    96                           	psect	text68,local,class=CODE,merge=1,delta=2
    97                           	psect	text69,local,class=CODE,merge=1,delta=2
    98                           	psect	text70,local,class=CODE,merge=1,delta=2
    99                           	dabs	1,0x620,48
   100                           	dabs	1,0x5A0,80
   101                           	dabs	1,0x520,80
   102                           	dabs	1,0x4A0,80
   103                           	dabs	1,0x428,72
   104                           	dabs	1,0x20,32,_BDT
   105                           	dabs	1,0x48,8,_CtrlTrfData
   106                           	dabs	1,0x40,8,_SetupPkt
   107                           	dabs	1,0x220,64,_INPacket
   108                           	dabs	1,0x2A0,64,_OUTPacket
   109                           	dabs	1,0x2288,0,_WorkQue
   110                           	dabs	1,0x7E,2
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  0091                     	;# 
   141  0092                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  0111                     	;# 
   158  0112                     	;# 
   159  0113                     	;# 
   160  0114                     	;# 
   161  0115                     	;# 
   162  0116                     	;# 
   163  0117                     	;# 
   164  0118                     	;# 
   165  0119                     	;# 
   166  011D                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  018E                     	;# 
   170  0191                     	;# 
   171  0191                     	;# 
   172  0192                     	;# 
   173  0193                     	;# 
   174  0193                     	;# 
   175  0194                     	;# 
   176  0195                     	;# 
   177  0196                     	;# 
   178  0199                     	;# 
   179  019A                     	;# 
   180  019B                     	;# 
   181  019B                     	;# 
   182  019C                     	;# 
   183  019D                     	;# 
   184  019E                     	;# 
   185  019F                     	;# 
   186  020C                     	;# 
   187  020D                     	;# 
   188  0211                     	;# 
   189  0211                     	;# 
   190  0212                     	;# 
   191  0212                     	;# 
   192  0213                     	;# 
   193  0213                     	;# 
   194  0214                     	;# 
   195  0214                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0216                     	;# 
   200  0216                     	;# 
   201  0217                     	;# 
   202  0217                     	;# 
   203  0391                     	;# 
   204  0392                     	;# 
   205  0393                     	;# 
   206  0394                     	;# 
   207  0395                     	;# 
   208  0396                     	;# 
   209  039A                     	;# 
   210  039B                     	;# 
   211  0611                     	;# 
   212  0612                     	;# 
   213  0613                     	;# 
   214  0613                     	;# 
   215  0614                     	;# 
   216  0615                     	;# 
   217  0616                     	;# 
   218  0616                     	;# 
   219  0691                     	;# 
   220  0692                     	;# 
   221  0693                     	;# 
   222  0694                     	;# 
   223  0695                     	;# 
   224  0E8E                     	;# 
   225  0E8F                     	;# 
   226  0E90                     	;# 
   227  0E91                     	;# 
   228  0E92                     	;# 
   229  0E93                     	;# 
   230  0E94                     	;# 
   231  0E94                     	;# 
   232  0E95                     	;# 
   233  0E96                     	;# 
   234  0E97                     	;# 
   235  0E98                     	;# 
   236  0E99                     	;# 
   237  0E9A                     	;# 
   238  0E9B                     	;# 
   239  0E9C                     	;# 
   240  0E9D                     	;# 
   241  0E9E                     	;# 
   242  0E9F                     	;# 
   243  0FE4                     	;# 
   244  0FE5                     	;# 
   245  0FE6                     	;# 
   246  0FE7                     	;# 
   247  0FE8                     	;# 
   248  0FE9                     	;# 
   249  0FEA                     	;# 
   250  0FEB                     	;# 
   251  0FED                     	;# 
   252  0FEE                     	;# 
   253  0FEF                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  0111                     	;# 
   301  0112                     	;# 
   302  0113                     	;# 
   303  0114                     	;# 
   304  0115                     	;# 
   305  0116                     	;# 
   306  0117                     	;# 
   307  0118                     	;# 
   308  0119                     	;# 
   309  011D                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  018E                     	;# 
   313  0191                     	;# 
   314  0191                     	;# 
   315  0192                     	;# 
   316  0193                     	;# 
   317  0193                     	;# 
   318  0194                     	;# 
   319  0195                     	;# 
   320  0196                     	;# 
   321  0199                     	;# 
   322  019A                     	;# 
   323  019B                     	;# 
   324  019B                     	;# 
   325  019C                     	;# 
   326  019D                     	;# 
   327  019E                     	;# 
   328  019F                     	;# 
   329  020C                     	;# 
   330  020D                     	;# 
   331  0211                     	;# 
   332  0211                     	;# 
   333  0212                     	;# 
   334  0212                     	;# 
   335  0213                     	;# 
   336  0213                     	;# 
   337  0214                     	;# 
   338  0214                     	;# 
   339  0215                     	;# 
   340  0215                     	;# 
   341  0215                     	;# 
   342  0216                     	;# 
   343  0216                     	;# 
   344  0217                     	;# 
   345  0217                     	;# 
   346  0391                     	;# 
   347  0392                     	;# 
   348  0393                     	;# 
   349  0394                     	;# 
   350  0395                     	;# 
   351  0396                     	;# 
   352  039A                     	;# 
   353  039B                     	;# 
   354  0611                     	;# 
   355  0612                     	;# 
   356  0613                     	;# 
   357  0613                     	;# 
   358  0614                     	;# 
   359  0615                     	;# 
   360  0616                     	;# 
   361  0616                     	;# 
   362  0691                     	;# 
   363  0692                     	;# 
   364  0693                     	;# 
   365  0694                     	;# 
   366  0695                     	;# 
   367  0E8E                     	;# 
   368  0E8F                     	;# 
   369  0E90                     	;# 
   370  0E91                     	;# 
   371  0E92                     	;# 
   372  0E93                     	;# 
   373  0E94                     	;# 
   374  0E94                     	;# 
   375  0E95                     	;# 
   376  0E96                     	;# 
   377  0E97                     	;# 
   378  0E98                     	;# 
   379  0E99                     	;# 
   380  0E9A                     	;# 
   381  0E9B                     	;# 
   382  0E9C                     	;# 
   383  0E9D                     	;# 
   384  0E9E                     	;# 
   385  0E9F                     	;# 
   386  0FE4                     	;# 
   387  0FE5                     	;# 
   388  0FE6                     	;# 
   389  0FE7                     	;# 
   390  0FE8                     	;# 
   391  0FE9                     	;# 
   392  0FEA                     	;# 
   393  0FEB                     	;# 
   394  0FED                     	;# 
   395  0FEE                     	;# 
   396  0FEF                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  000E                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  0091                     	;# 
   427  0092                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  0111                     	;# 
   444  0112                     	;# 
   445  0113                     	;# 
   446  0114                     	;# 
   447  0115                     	;# 
   448  0116                     	;# 
   449  0117                     	;# 
   450  0118                     	;# 
   451  0119                     	;# 
   452  011D                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  018E                     	;# 
   456  0191                     	;# 
   457  0191                     	;# 
   458  0192                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0194                     	;# 
   462  0195                     	;# 
   463  0196                     	;# 
   464  0199                     	;# 
   465  019A                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019C                     	;# 
   469  019D                     	;# 
   470  019E                     	;# 
   471  019F                     	;# 
   472  020C                     	;# 
   473  020D                     	;# 
   474  0211                     	;# 
   475  0211                     	;# 
   476  0212                     	;# 
   477  0212                     	;# 
   478  0213                     	;# 
   479  0213                     	;# 
   480  0214                     	;# 
   481  0214                     	;# 
   482  0215                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0216                     	;# 
   486  0216                     	;# 
   487  0217                     	;# 
   488  0217                     	;# 
   489  0391                     	;# 
   490  0392                     	;# 
   491  0393                     	;# 
   492  0394                     	;# 
   493  0395                     	;# 
   494  0396                     	;# 
   495  039A                     	;# 
   496  039B                     	;# 
   497  0611                     	;# 
   498  0612                     	;# 
   499  0613                     	;# 
   500  0613                     	;# 
   501  0614                     	;# 
   502  0615                     	;# 
   503  0616                     	;# 
   504  0616                     	;# 
   505  0691                     	;# 
   506  0692                     	;# 
   507  0693                     	;# 
   508  0694                     	;# 
   509  0695                     	;# 
   510  0E8E                     	;# 
   511  0E8F                     	;# 
   512  0E90                     	;# 
   513  0E91                     	;# 
   514  0E92                     	;# 
   515  0E93                     	;# 
   516  0E94                     	;# 
   517  0E94                     	;# 
   518  0E95                     	;# 
   519  0E96                     	;# 
   520  0E97                     	;# 
   521  0E98                     	;# 
   522  0E99                     	;# 
   523  0E9A                     	;# 
   524  0E9B                     	;# 
   525  0E9C                     	;# 
   526  0E9D                     	;# 
   527  0E9E                     	;# 
   528  0E9F                     	;# 
   529  0FE4                     	;# 
   530  0FE5                     	;# 
   531  0FE6                     	;# 
   532  0FE7                     	;# 
   533  0FE8                     	;# 
   534  0FE9                     	;# 
   535  0FEA                     	;# 
   536  0FEB                     	;# 
   537  0FED                     	;# 
   538  0FEE                     	;# 
   539  0FEF                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  000D                     	;# 
   554  000E                     	;# 
   555  0011                     	;# 
   556  0012                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0016                     	;# 
   560  0017                     	;# 
   561  0018                     	;# 
   562  0019                     	;# 
   563  001A                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  008C                     	;# 
   567  008D                     	;# 
   568  008E                     	;# 
   569  0091                     	;# 
   570  0092                     	;# 
   571  0095                     	;# 
   572  0096                     	;# 
   573  0097                     	;# 
   574  0098                     	;# 
   575  0099                     	;# 
   576  009A                     	;# 
   577  009B                     	;# 
   578  009B                     	;# 
   579  009C                     	;# 
   580  009D                     	;# 
   581  009E                     	;# 
   582  009F                     	;# 
   583  010C                     	;# 
   584  010D                     	;# 
   585  010E                     	;# 
   586  0111                     	;# 
   587  0112                     	;# 
   588  0113                     	;# 
   589  0114                     	;# 
   590  0115                     	;# 
   591  0116                     	;# 
   592  0117                     	;# 
   593  0118                     	;# 
   594  0119                     	;# 
   595  011D                     	;# 
   596  018C                     	;# 
   597  018D                     	;# 
   598  018E                     	;# 
   599  0191                     	;# 
   600  0191                     	;# 
   601  0192                     	;# 
   602  0193                     	;# 
   603  0193                     	;# 
   604  0194                     	;# 
   605  0195                     	;# 
   606  0196                     	;# 
   607  0199                     	;# 
   608  019A                     	;# 
   609  019B                     	;# 
   610  019B                     	;# 
   611  019C                     	;# 
   612  019D                     	;# 
   613  019E                     	;# 
   614  019F                     	;# 
   615  020C                     	;# 
   616  020D                     	;# 
   617  0211                     	;# 
   618  0211                     	;# 
   619  0212                     	;# 
   620  0212                     	;# 
   621  0213                     	;# 
   622  0213                     	;# 
   623  0214                     	;# 
   624  0214                     	;# 
   625  0215                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0216                     	;# 
   629  0216                     	;# 
   630  0217                     	;# 
   631  0217                     	;# 
   632  0391                     	;# 
   633  0392                     	;# 
   634  0393                     	;# 
   635  0394                     	;# 
   636  0395                     	;# 
   637  0396                     	;# 
   638  039A                     	;# 
   639  039B                     	;# 
   640  0611                     	;# 
   641  0612                     	;# 
   642  0613                     	;# 
   643  0613                     	;# 
   644  0614                     	;# 
   645  0615                     	;# 
   646  0616                     	;# 
   647  0616                     	;# 
   648  0691                     	;# 
   649  0692                     	;# 
   650  0693                     	;# 
   651  0694                     	;# 
   652  0695                     	;# 
   653  0E8E                     	;# 
   654  0E8F                     	;# 
   655  0E90                     	;# 
   656  0E91                     	;# 
   657  0E92                     	;# 
   658  0E93                     	;# 
   659  0E94                     	;# 
   660  0E94                     	;# 
   661  0E95                     	;# 
   662  0E96                     	;# 
   663  0E97                     	;# 
   664  0E98                     	;# 
   665  0E99                     	;# 
   666  0E9A                     	;# 
   667  0E9B                     	;# 
   668  0E9C                     	;# 
   669  0E9D                     	;# 
   670  0E9E                     	;# 
   671  0E9F                     	;# 
   672  0FE4                     	;# 
   673  0FE5                     	;# 
   674  0FE6                     	;# 
   675  0FE7                     	;# 
   676  0FE8                     	;# 
   677  0FE9                     	;# 
   678  0FEA                     	;# 
   679  0FEB                     	;# 
   680  0FED                     	;# 
   681  0FEE                     	;# 
   682  0FEF                     	;# 
   683  0000                     	;# 
   684  0001                     	;# 
   685  0002                     	;# 
   686  0003                     	;# 
   687  0004                     	;# 
   688  0005                     	;# 
   689  0006                     	;# 
   690  0007                     	;# 
   691  0008                     	;# 
   692  0009                     	;# 
   693  000A                     	;# 
   694  000B                     	;# 
   695  000C                     	;# 
   696  000D                     	;# 
   697  000E                     	;# 
   698  0011                     	;# 
   699  0012                     	;# 
   700  0015                     	;# 
   701  0016                     	;# 
   702  0016                     	;# 
   703  0017                     	;# 
   704  0018                     	;# 
   705  0019                     	;# 
   706  001A                     	;# 
   707  001B                     	;# 
   708  001C                     	;# 
   709  008C                     	;# 
   710  008D                     	;# 
   711  008E                     	;# 
   712  0091                     	;# 
   713  0092                     	;# 
   714  0095                     	;# 
   715  0096                     	;# 
   716  0097                     	;# 
   717  0098                     	;# 
   718  0099                     	;# 
   719  009A                     	;# 
   720  009B                     	;# 
   721  009B                     	;# 
   722  009C                     	;# 
   723  009D                     	;# 
   724  009E                     	;# 
   725  009F                     	;# 
   726  010C                     	;# 
   727  010D                     	;# 
   728  010E                     	;# 
   729  0111                     	;# 
   730  0112                     	;# 
   731  0113                     	;# 
   732  0114                     	;# 
   733  0115                     	;# 
   734  0116                     	;# 
   735  0117                     	;# 
   736  0118                     	;# 
   737  0119                     	;# 
   738  011D                     	;# 
   739  018C                     	;# 
   740  018D                     	;# 
   741  018E                     	;# 
   742  0191                     	;# 
   743  0191                     	;# 
   744  0192                     	;# 
   745  0193                     	;# 
   746  0193                     	;# 
   747  0194                     	;# 
   748  0195                     	;# 
   749  0196                     	;# 
   750  0199                     	;# 
   751  019A                     	;# 
   752  019B                     	;# 
   753  019B                     	;# 
   754  019C                     	;# 
   755  019D                     	;# 
   756  019E                     	;# 
   757  019F                     	;# 
   758  020C                     	;# 
   759  020D                     	;# 
   760  0211                     	;# 
   761  0211                     	;# 
   762  0212                     	;# 
   763  0212                     	;# 
   764  0213                     	;# 
   765  0213                     	;# 
   766  0214                     	;# 
   767  0214                     	;# 
   768  0215                     	;# 
   769  0215                     	;# 
   770  0215                     	;# 
   771  0216                     	;# 
   772  0216                     	;# 
   773  0217                     	;# 
   774  0217                     	;# 
   775  0391                     	;# 
   776  0392                     	;# 
   777  0393                     	;# 
   778  0394                     	;# 
   779  0395                     	;# 
   780  0396                     	;# 
   781  039A                     	;# 
   782  039B                     	;# 
   783  0611                     	;# 
   784  0612                     	;# 
   785  0613                     	;# 
   786  0613                     	;# 
   787  0614                     	;# 
   788  0615                     	;# 
   789  0616                     	;# 
   790  0616                     	;# 
   791  0691                     	;# 
   792  0692                     	;# 
   793  0693                     	;# 
   794  0694                     	;# 
   795  0695                     	;# 
   796  0E8E                     	;# 
   797  0E8F                     	;# 
   798  0E90                     	;# 
   799  0E91                     	;# 
   800  0E92                     	;# 
   801  0E93                     	;# 
   802  0E94                     	;# 
   803  0E94                     	;# 
   804  0E95                     	;# 
   805  0E96                     	;# 
   806  0E97                     	;# 
   807  0E98                     	;# 
   808  0E99                     	;# 
   809  0E9A                     	;# 
   810  0E9B                     	;# 
   811  0E9C                     	;# 
   812  0E9D                     	;# 
   813  0E9E                     	;# 
   814  0E9F                     	;# 
   815  0FE4                     	;# 
   816  0FE5                     	;# 
   817  0FE6                     	;# 
   818  0FE7                     	;# 
   819  0FE8                     	;# 
   820  0FE9                     	;# 
   821  0FEA                     	;# 
   822  0FEB                     	;# 
   823  0FED                     	;# 
   824  0FEE                     	;# 
   825  0FEF                     	;# 
   826  0000                     	;# 
   827  0001                     	;# 
   828  0002                     	;# 
   829  0003                     	;# 
   830  0004                     	;# 
   831  0005                     	;# 
   832  0006                     	;# 
   833  0007                     	;# 
   834  0008                     	;# 
   835  0009                     	;# 
   836  000A                     	;# 
   837  000B                     	;# 
   838  000C                     	;# 
   839  000D                     	;# 
   840  000E                     	;# 
   841  0011                     	;# 
   842  0012                     	;# 
   843  0015                     	;# 
   844  0016                     	;# 
   845  0016                     	;# 
   846  0017                     	;# 
   847  0018                     	;# 
   848  0019                     	;# 
   849  001A                     	;# 
   850  001B                     	;# 
   851  001C                     	;# 
   852  008C                     	;# 
   853  008D                     	;# 
   854  008E                     	;# 
   855  0091                     	;# 
   856  0092                     	;# 
   857  0095                     	;# 
   858  0096                     	;# 
   859  0097                     	;# 
   860  0098                     	;# 
   861  0099                     	;# 
   862  009A                     	;# 
   863  009B                     	;# 
   864  009B                     	;# 
   865  009C                     	;# 
   866  009D                     	;# 
   867  009E                     	;# 
   868  009F                     	;# 
   869  010C                     	;# 
   870  010D                     	;# 
   871  010E                     	;# 
   872  0111                     	;# 
   873  0112                     	;# 
   874  0113                     	;# 
   875  0114                     	;# 
   876  0115                     	;# 
   877  0116                     	;# 
   878  0117                     	;# 
   879  0118                     	;# 
   880  0119                     	;# 
   881  011D                     	;# 
   882  018C                     	;# 
   883  018D                     	;# 
   884  018E                     	;# 
   885  0191                     	;# 
   886  0191                     	;# 
   887  0192                     	;# 
   888  0193                     	;# 
   889  0193                     	;# 
   890  0194                     	;# 
   891  0195                     	;# 
   892  0196                     	;# 
   893  0199                     	;# 
   894  019A                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019C                     	;# 
   898  019D                     	;# 
   899  019E                     	;# 
   900  019F                     	;# 
   901  020C                     	;# 
   902  020D                     	;# 
   903  0211                     	;# 
   904  0211                     	;# 
   905  0212                     	;# 
   906  0212                     	;# 
   907  0213                     	;# 
   908  0213                     	;# 
   909  0214                     	;# 
   910  0214                     	;# 
   911  0215                     	;# 
   912  0215                     	;# 
   913  0215                     	;# 
   914  0216                     	;# 
   915  0216                     	;# 
   916  0217                     	;# 
   917  0217                     	;# 
   918  0391                     	;# 
   919  0392                     	;# 
   920  0393                     	;# 
   921  0394                     	;# 
   922  0395                     	;# 
   923  0396                     	;# 
   924  039A                     	;# 
   925  039B                     	;# 
   926  0611                     	;# 
   927  0612                     	;# 
   928  0613                     	;# 
   929  0613                     	;# 
   930  0614                     	;# 
   931  0615                     	;# 
   932  0616                     	;# 
   933  0616                     	;# 
   934  0691                     	;# 
   935  0692                     	;# 
   936  0693                     	;# 
   937  0694                     	;# 
   938  0695                     	;# 
   939  0E8E                     	;# 
   940  0E8F                     	;# 
   941  0E90                     	;# 
   942  0E91                     	;# 
   943  0E92                     	;# 
   944  0E93                     	;# 
   945  0E94                     	;# 
   946  0E94                     	;# 
   947  0E95                     	;# 
   948  0E96                     	;# 
   949  0E97                     	;# 
   950  0E98                     	;# 
   951  0E99                     	;# 
   952  0E9A                     	;# 
   953  0E9B                     	;# 
   954  0E9C                     	;# 
   955  0E9D                     	;# 
   956  0E9E                     	;# 
   957  0E9F                     	;# 
   958  0FE4                     	;# 
   959  0FE5                     	;# 
   960  0FE6                     	;# 
   961  0FE7                     	;# 
   962  0FE8                     	;# 
   963  0FE9                     	;# 
   964  0FEA                     	;# 
   965  0FEB                     	;# 
   966  0FED                     	;# 
   967  0FEE                     	;# 
   968  0FEF                     	;# 
   969  0000                     	;# 
   970  0001                     	;# 
   971  0002                     	;# 
   972  0003                     	;# 
   973  0004                     	;# 
   974  0005                     	;# 
   975  0006                     	;# 
   976  0007                     	;# 
   977  0008                     	;# 
   978  0009                     	;# 
   979  000A                     	;# 
   980  000B                     	;# 
   981  000C                     	;# 
   982  000D                     	;# 
   983  000E                     	;# 
   984  0011                     	;# 
   985  0012                     	;# 
   986  0015                     	;# 
   987  0016                     	;# 
   988  0016                     	;# 
   989  0017                     	;# 
   990  0018                     	;# 
   991  0019                     	;# 
   992  001A                     	;# 
   993  001B                     	;# 
   994  001C                     	;# 
   995  008C                     	;# 
   996  008D                     	;# 
   997  008E                     	;# 
   998  0091                     	;# 
   999  0092                     	;# 
  1000  0095                     	;# 
  1001  0096                     	;# 
  1002  0097                     	;# 
  1003  0098                     	;# 
  1004  0099                     	;# 
  1005  009A                     	;# 
  1006  009B                     	;# 
  1007  009B                     	;# 
  1008  009C                     	;# 
  1009  009D                     	;# 
  1010  009E                     	;# 
  1011  009F                     	;# 
  1012  010C                     	;# 
  1013  010D                     	;# 
  1014  010E                     	;# 
  1015  0111                     	;# 
  1016  0112                     	;# 
  1017  0113                     	;# 
  1018  0114                     	;# 
  1019  0115                     	;# 
  1020  0116                     	;# 
  1021  0117                     	;# 
  1022  0118                     	;# 
  1023  0119                     	;# 
  1024  011D                     	;# 
  1025  018C                     	;# 
  1026  018D                     	;# 
  1027  018E                     	;# 
  1028  0191                     	;# 
  1029  0191                     	;# 
  1030  0192                     	;# 
  1031  0193                     	;# 
  1032  0193                     	;# 
  1033  0194                     	;# 
  1034  0195                     	;# 
  1035  0196                     	;# 
  1036  0199                     	;# 
  1037  019A                     	;# 
  1038  019B                     	;# 
  1039  019B                     	;# 
  1040  019C                     	;# 
  1041  019D                     	;# 
  1042  019E                     	;# 
  1043  019F                     	;# 
  1044  020C                     	;# 
  1045  020D                     	;# 
  1046  0211                     	;# 
  1047  0211                     	;# 
  1048  0212                     	;# 
  1049  0212                     	;# 
  1050  0213                     	;# 
  1051  0213                     	;# 
  1052  0214                     	;# 
  1053  0214                     	;# 
  1054  0215                     	;# 
  1055  0215                     	;# 
  1056  0215                     	;# 
  1057  0216                     	;# 
  1058  0216                     	;# 
  1059  0217                     	;# 
  1060  0217                     	;# 
  1061  0391                     	;# 
  1062  0392                     	;# 
  1063  0393                     	;# 
  1064  0394                     	;# 
  1065  0395                     	;# 
  1066  0396                     	;# 
  1067  039A                     	;# 
  1068  039B                     	;# 
  1069  0611                     	;# 
  1070  0612                     	;# 
  1071  0613                     	;# 
  1072  0613                     	;# 
  1073  0614                     	;# 
  1074  0615                     	;# 
  1075  0616                     	;# 
  1076  0616                     	;# 
  1077  0691                     	;# 
  1078  0692                     	;# 
  1079  0693                     	;# 
  1080  0694                     	;# 
  1081  0695                     	;# 
  1082  0E8E                     	;# 
  1083  0E8F                     	;# 
  1084  0E90                     	;# 
  1085  0E91                     	;# 
  1086  0E92                     	;# 
  1087  0E93                     	;# 
  1088  0E94                     	;# 
  1089  0E94                     	;# 
  1090  0E95                     	;# 
  1091  0E96                     	;# 
  1092  0E97                     	;# 
  1093  0E98                     	;# 
  1094  0E99                     	;# 
  1095  0E9A                     	;# 
  1096  0E9B                     	;# 
  1097  0E9C                     	;# 
  1098  0E9D                     	;# 
  1099  0E9E                     	;# 
  1100  0E9F                     	;# 
  1101  0FE4                     	;# 
  1102  0FE5                     	;# 
  1103  0FE6                     	;# 
  1104  0FE7                     	;# 
  1105  0FE8                     	;# 
  1106  0FE9                     	;# 
  1107  0FEA                     	;# 
  1108  0FEB                     	;# 
  1109  0FED                     	;# 
  1110  0FEE                     	;# 
  1111  0FEF                     	;# 
  1112  0000                     	;# 
  1113  0001                     	;# 
  1114  0002                     	;# 
  1115  0003                     	;# 
  1116  0004                     	;# 
  1117  0005                     	;# 
  1118  0006                     	;# 
  1119  0007                     	;# 
  1120  0008                     	;# 
  1121  0009                     	;# 
  1122  000A                     	;# 
  1123  000B                     	;# 
  1124  000C                     	;# 
  1125  000D                     	;# 
  1126  000E                     	;# 
  1127  0011                     	;# 
  1128  0012                     	;# 
  1129  0015                     	;# 
  1130  0016                     	;# 
  1131  0016                     	;# 
  1132  0017                     	;# 
  1133  0018                     	;# 
  1134  0019                     	;# 
  1135  001A                     	;# 
  1136  001B                     	;# 
  1137  001C                     	;# 
  1138  008C                     	;# 
  1139  008D                     	;# 
  1140  008E                     	;# 
  1141  0091                     	;# 
  1142  0092                     	;# 
  1143  0095                     	;# 
  1144  0096                     	;# 
  1145  0097                     	;# 
  1146  0098                     	;# 
  1147  0099                     	;# 
  1148  009A                     	;# 
  1149  009B                     	;# 
  1150  009B                     	;# 
  1151  009C                     	;# 
  1152  009D                     	;# 
  1153  009E                     	;# 
  1154  009F                     	;# 
  1155  010C                     	;# 
  1156  010D                     	;# 
  1157  010E                     	;# 
  1158  0111                     	;# 
  1159  0112                     	;# 
  1160  0113                     	;# 
  1161  0114                     	;# 
  1162  0115                     	;# 
  1163  0116                     	;# 
  1164  0117                     	;# 
  1165  0118                     	;# 
  1166  0119                     	;# 
  1167  011D                     	;# 
  1168  018C                     	;# 
  1169  018D                     	;# 
  1170  018E                     	;# 
  1171  0191                     	;# 
  1172  0191                     	;# 
  1173  0192                     	;# 
  1174  0193                     	;# 
  1175  0193                     	;# 
  1176  0194                     	;# 
  1177  0195                     	;# 
  1178  0196                     	;# 
  1179  0199                     	;# 
  1180  019A                     	;# 
  1181  019B                     	;# 
  1182  019B                     	;# 
  1183  019C                     	;# 
  1184  019D                     	;# 
  1185  019E                     	;# 
  1186  019F                     	;# 
  1187  020C                     	;# 
  1188  020D                     	;# 
  1189  0211                     	;# 
  1190  0211                     	;# 
  1191  0212                     	;# 
  1192  0212                     	;# 
  1193  0213                     	;# 
  1194  0213                     	;# 
  1195  0214                     	;# 
  1196  0214                     	;# 
  1197  0215                     	;# 
  1198  0215                     	;# 
  1199  0215                     	;# 
  1200  0216                     	;# 
  1201  0216                     	;# 
  1202  0217                     	;# 
  1203  0217                     	;# 
  1204  0391                     	;# 
  1205  0392                     	;# 
  1206  0393                     	;# 
  1207  0394                     	;# 
  1208  0395                     	;# 
  1209  0396                     	;# 
  1210  039A                     	;# 
  1211  039B                     	;# 
  1212  0611                     	;# 
  1213  0612                     	;# 
  1214  0613                     	;# 
  1215  0613                     	;# 
  1216  0614                     	;# 
  1217  0615                     	;# 
  1218  0616                     	;# 
  1219  0616                     	;# 
  1220  0691                     	;# 
  1221  0692                     	;# 
  1222  0693                     	;# 
  1223  0694                     	;# 
  1224  0695                     	;# 
  1225  0E8E                     	;# 
  1226  0E8F                     	;# 
  1227  0E90                     	;# 
  1228  0E91                     	;# 
  1229  0E92                     	;# 
  1230  0E93                     	;# 
  1231  0E94                     	;# 
  1232  0E94                     	;# 
  1233  0E95                     	;# 
  1234  0E96                     	;# 
  1235  0E97                     	;# 
  1236  0E98                     	;# 
  1237  0E99                     	;# 
  1238  0E9A                     	;# 
  1239  0E9B                     	;# 
  1240  0E9C                     	;# 
  1241  0E9D                     	;# 
  1242  0E9E                     	;# 
  1243  0E9F                     	;# 
  1244  0FE4                     	;# 
  1245  0FE5                     	;# 
  1246  0FE6                     	;# 
  1247  0FE7                     	;# 
  1248  0FE8                     	;# 
  1249  0FE9                     	;# 
  1250  0FEA                     	;# 
  1251  0FEB                     	;# 
  1252  0FED                     	;# 
  1253  0FEE                     	;# 
  1254  0FEF                     	;_WorkQue
  1255                           
  1256                           	psect	idataBANK2
  1257  07EF                     __pidataBANK2:	
  1258                           
  1259                           ;initializer for _Status
  1260  07EF  3449               	retlw	73
  1261  07F0  3400               	retlw	0
  1262  07F1  3400               	retlw	0
  1263  07F2  3400               	retlw	0
  1264  07F3  3400               	retlw	0
  1265  07F4  3400               	retlw	0
  1266  07F5  3400               	retlw	0
  1267  07F6  3400               	retlw	0
  1268  07F7  3400               	retlw	0
  1269  07F8  3400               	retlw	0
  1270  07F9  3400               	retlw	0
  1271  07FA  3440               	retlw	64
  1272  07FB  3400               	retlw	0
  1273                           
  1274                           	psect	idataBANK3
  1275  18F5                     __pidataBANK3:	
  1276                           
  1277                           ;initializer for _Cfg
  1278  18F5  34F4               	retlw	244
  1279  18F6  3401               	retlw	1
  1280  18F7  348F               	retlw	143
  1281  18F8  3400               	retlw	0
  1282  18F9  3400               	retlw	0
  1283  18FA  3400               	retlw	0
  1284                           
  1285                           	psect	idataBANK4
  1286  191C                     __pidataBANK4:	
  1287                           
  1288                           ;initializer for AsicPreCalc@F3344
  1289  191C  3498               	retlw	152
  1290  191D  342F               	retlw	47
  1291  191E  348A               	retlw	138
  1292  191F  3442               	retlw	66
  1293  1920  3491               	retlw	145
  1294  1921  3444               	retlw	68
  1295  1922  3437               	retlw	55
  1296  1923  3471               	retlw	113
  1297  1924  34CF               	retlw	207
  1298  1925  34FB               	retlw	251
  1299  1926  34C0               	retlw	192
  1300  1927  34B5               	retlw	181
  1301                           
  1302                           	psect	idataBANK6
  1303  1A84                     __pidataBANK6:	
  1304                           
  1305                           ;initializer for _BankRanges
  1306  1A84  3400               	retlw	0
  1307  1A85  3400               	retlw	0
  1308  1A86  3400               	retlw	0
  1309  1A87  3400               	retlw	0
  1310  1A88  3400               	retlw	0
  1311  1A89  3400               	retlw	0
  1312  1A8A  3400               	retlw	0
  1313  1A8B  3440               	retlw	64
  1314  1A8C  34AA               	retlw	170
  1315  1A8D  34AA               	retlw	170
  1316  1A8E  34AA               	retlw	170
  1317  1A8F  342A               	retlw	42
  1318  1A90  3400               	retlw	0
  1319  1A91  3400               	retlw	0
  1320  1A92  3400               	retlw	0
  1321  1A93  3420               	retlw	32
  1322  1A94  3499               	retlw	153
  1323  1A95  3499               	retlw	153
  1324  1A96  3499               	retlw	153
  1325  1A97  3419               	retlw	25
  1326  1A98  3455               	retlw	85
  1327  1A99  3455               	retlw	85
  1328  1A9A  3455               	retlw	85
  1329  1A9B  3415               	retlw	21
  1330  1A9C  3492               	retlw	146
  1331  1A9D  3424               	retlw	36
  1332  1A9E  3449               	retlw	73
  1333  1A9F  3412               	retlw	18
  1334  1AA0  3400               	retlw	0
  1335  1AA1  3400               	retlw	0
  1336  1AA2  3400               	retlw	0
  1337  1AA3  3410               	retlw	16
  1338                           
  1339                           	psect	strings
  1340  0800                     __pstrings:	
  1341  0800                     __stringtab:	
  1342  0800  3400               	retlw	0
  1343  0801                     __end_of__stringtab:	
  1344  0801                     _USB_SD_Ptr:	
  1345  0801  34AB               	retlw	(_sd000| (0+32768))& (0+255)
  1346  0802  3405               	retlw	(_sd001| (0+32768))& (0+255)
  1347  0803  3439               	retlw	(_sd002| (0+32768))& (0+255)
  1348  0804                     __end_of_USB_SD_Ptr:	
  1349  0804                     _USB_CD_Ptr:	
  1350  0804  346D               	retlw	(_configDescriptor1| (0+32768))& (0+255)
  1351  0805                     __end_of_USB_CD_Ptr:	
  1352  0805                     _sd001:	
  1353  0805  3434               	retlw	52
  1354  0806  3403               	retlw	3
  1355  0807  344B               	retlw	75
  1356  0808  3400               	retlw	0
  1357  0809  346C               	retlw	108
  1358  080A  3400               	retlw	0
  1359  080B  346F               	retlw	111
  1360  080C  3400               	retlw	0
  1361  080D  346E               	retlw	110
  1362  080E  3400               	retlw	0
  1363  080F  3464               	retlw	100
  1364  0810  3400               	retlw	0
  1365  0811  3469               	retlw	105
  1366  0812  3400               	retlw	0
  1367  0813  346B               	retlw	107
  1368  0814  3400               	retlw	0
  1369  0815  3465               	retlw	101
  1370  0816  3400               	retlw	0
  1371  0817  3420               	retlw	32
  1372  0818  3400               	retlw	0
  1373  0819  3450               	retlw	80
  1374  081A  3400               	retlw	0
  1375  081B  3472               	retlw	114
  1376  081C  3400               	retlw	0
  1377  081D  346F               	retlw	111
  1378  081E  3400               	retlw	0
  1379  081F  346A               	retlw	106
  1380  0820  3400               	retlw	0
  1381  0821  3465               	retlw	101
  1382  0822  3400               	retlw	0
  1383  0823  3463               	retlw	99
  1384  0824  3400               	retlw	0
  1385  0825  3474               	retlw	116
  1386  0826  3400               	retlw	0
  1387  0827  3400               	retlw	0
  1388  0828  3400               	retlw	0
  1389  0829  3400               	retlw	0
  1390  082A  3400               	retlw	0
  1391  082B  3400               	retlw	0
  1392  082C  3400               	retlw	0
  1393  082D  3400               	retlw	0
  1394  082E  3400               	retlw	0
  1395  082F  3400               	retlw	0
  1396  0830  3400               	retlw	0
  1397  0831  3400               	retlw	0
  1398  0832  3400               	retlw	0
  1399  0833  3400               	retlw	0
  1400  0834  3400               	retlw	0
  1401  0835  3400               	retlw	0
  1402  0836  3400               	retlw	0
  1403  0837  3400               	retlw	0
  1404  0838  3400               	retlw	0
  1405  0839                     __end_of_sd001:	
  1406  0839                     _sd002:	
  1407  0839  3434               	retlw	52
  1408  083A  3403               	retlw	3
  1409  083B  344B               	retlw	75
  1410  083C  3400               	retlw	0
  1411  083D  3431               	retlw	49
  1412  083E  3400               	retlw	0
  1413  083F  3436               	retlw	54
  1414  0840  3400               	retlw	0
  1415  0841  3400               	retlw	0
  1416  0842  3400               	retlw	0
  1417  0843  3400               	retlw	0
  1418  0844  3400               	retlw	0
  1419  0845  3400               	retlw	0
  1420  0846  3400               	retlw	0
  1421  0847  3400               	retlw	0
  1422  0848  3400               	retlw	0
  1423  0849  3400               	retlw	0
  1424  084A  3400               	retlw	0
  1425  084B  3400               	retlw	0
  1426  084C  3400               	retlw	0
  1427  084D  3400               	retlw	0
  1428  084E  3400               	retlw	0
  1429  084F  3400               	retlw	0
  1430  0850  3400               	retlw	0
  1431  0851  3400               	retlw	0
  1432  0852  3400               	retlw	0
  1433  0853  3400               	retlw	0
  1434  0854  3400               	retlw	0
  1435  0855  3400               	retlw	0
  1436  0856  3400               	retlw	0
  1437  0857  3400               	retlw	0
  1438  0858  3400               	retlw	0
  1439  0859  3400               	retlw	0
  1440  085A  3400               	retlw	0
  1441  085B  3400               	retlw	0
  1442  085C  3400               	retlw	0
  1443  085D  3400               	retlw	0
  1444  085E  3400               	retlw	0
  1445  085F  3400               	retlw	0
  1446  0860  3400               	retlw	0
  1447  0861  3400               	retlw	0
  1448  0862  3400               	retlw	0
  1449  0863  3400               	retlw	0
  1450  0864  3400               	retlw	0
  1451  0865  3400               	retlw	0
  1452  0866  3400               	retlw	0
  1453  0867  3400               	retlw	0
  1454  0868  3400               	retlw	0
  1455  0869  3400               	retlw	0
  1456  086A  3400               	retlw	0
  1457  086B  3400               	retlw	0
  1458  086C  3400               	retlw	0
  1459  086D                     __end_of_sd002:	
  1460  086D                     _configDescriptor1:	
  1461  086D  3409               	retlw	9
  1462  086E  3402               	retlw	2
  1463  086F  3420               	retlw	32
  1464  0870  3400               	retlw	0
  1465  0871  3401               	retlw	1
  1466  0872  3401               	retlw	1
  1467  0873  3400               	retlw	0
  1468  0874  34C0               	retlw	192
  1469  0875  3432               	retlw	50
  1470  0876  3409               	retlw	9
  1471  0877  3404               	retlw	4
  1472  0878  3400               	retlw	0
  1473  0879  3400               	retlw	0
  1474  087A  3402               	retlw	2
  1475  087B  34FF               	retlw	255
  1476  087C  34FF               	retlw	255
  1477  087D  34FF               	retlw	255
  1478  087E  3400               	retlw	0
  1479  087F  3407               	retlw	7
  1480  0880  3405               	retlw	5
  1481  0881  3401               	retlw	1
  1482  0882  3402               	retlw	2
  1483  0883  3440               	retlw	64
  1484  0884  3400               	retlw	0
  1485  0885  3401               	retlw	1
  1486  0886  3407               	retlw	7
  1487  0887  3405               	retlw	5
  1488  0888  3481               	retlw	129
  1489  0889  3402               	retlw	2
  1490  088A  3440               	retlw	64
  1491  088B  3400               	retlw	0
  1492  088C  3401               	retlw	1
  1493  088D                     __end_of_configDescriptor1:	
  1494  088D                     _device_dsc:	
  1495  088D  3412               	retlw	18
  1496  088E  3401               	retlw	1
  1497  088F  3400               	retlw	0
  1498  0890  3402               	retlw	2
  1499  0891  3400               	retlw	0
  1500  0892  3400               	retlw	0
  1501  0893  3400               	retlw	0
  1502  0894  3408               	retlw	8
  1503  0895  34D8               	retlw	216
  1504  0896  3404               	retlw	4
  1505  0897  340A               	retlw	10
  1506  0898  34F6               	retlw	246
  1507  0899  3400               	retlw	0
  1508  089A  3400               	retlw	0
  1509  089B  3401               	retlw	1
  1510  089C  3402               	retlw	2
  1511  089D  3400               	retlw	0
  1512  089E  3401               	retlw	1
  1513  089F                     __end_of_device_dsc:	
  1514  089F                     _ID:	
  1515  089F  3410               	retlw	16
  1516  08A0  344B               	retlw	75
  1517  08A1  3431               	retlw	49
  1518  08A2  3436               	retlw	54
  1519  08A3  3400               	retlw	0
  1520  08A4  3400               	retlw	0
  1521  08A5  3400               	retlw	0
  1522  08A6  3400               	retlw	0
  1523  08A7  34EF               	retlw	239
  1524  08A8  34BE               	retlw	190
  1525  08A9  34AD               	retlw	173
  1526  08AA  34DE               	retlw	222
  1527  08AB                     __end_of_ID:	
  1528  08AB                     _sd000:	
  1529  08AB  3404               	retlw	4
  1530  08AC  3403               	retlw	3
  1531  08AD  3409               	retlw	9
  1532  08AE  3404               	retlw	4
  1533  08AF                     __end_of_sd000:	
  1534                           
  1535                           	psect	nvBANK3
  1536  01E8                     __pnvBANK3:	
  1537  01E8                     _FanLevel:	
  1538  01E8                     	ds	1
  1539  01E9                     _TempTarget:	
  1540  01E9                     	ds	1
  1541  000B                     _INTCONbits	set	11
  1542  0012                     _PIR2bits	set	18
  1543  001B                     _PR2	set	27
  1544  001C                     _T2CONbits	set	28
  1545  0015                     _TMR0	set	21
  1546  005F                     _GIE	set	95
  1547  008D                     _RCIF	set	141
  1548  008B                     _SSP1IF	set	139
  1549  005A                     _TMR0IF	set	90
  1550  0089                     _TMR2IF	set	137
  1551  00E2                     _TMR2ON	set	226
  1552  009D                     _ADCON0bits	set	157
  1553  009E                     _ADCON1bits	set	158
  1554  009F                     _ADCON2bits	set	159
  1555  009C                     _ADRESH	set	156
  1556  0095                     _OPTION_REGbits	set	149
  1557  0099                     _OSCCON	set	153
  1558  0098                     _OSCTUNE	set	152
  1559  0092                     _PIE2bits	set	146
  1560  008C                     _TRISAbits	set	140
  1561  008D                     _TRISBbits	set	141
  1562  008E                     _TRISCbits	set	142
  1563  04AD                     _TMR0CS	set	1197
  1564  010C                     _LATAbits	set	268
  1565  010E                     _LATC	set	270
  1566  018C                     _ANSELA	set	396
  1567  018D                     _ANSELB	set	397
  1568  018D                     _ANSELBbits	set	397
  1569  018E                     _ANSELC	set	398
  1570  019F                     _BAUDCONbits	set	415
  1571  0199                     _RCREG	set	409
  1572  019D                     _RCSTAbits	set	413
  1573  019E                     _TXSTAbits	set	414
  1574  0212                     _SSPADD	set	530
  1575  0211                     _SSPBUF	set	529
  1576  0215                     _SSPCON1bits	set	533
  1577  0216                     _SSPCON2bits	set	534
  1578  0217                     _SSPCON3bits	set	535
  1579  0214                     _SSPSTATbits	set	532
  1580  10AD                     _SSP1EN	set	4269
  1581  039B                     _ACTCON	set	923
  1582  0396                     _IOCBF	set	918
  1583  0394                     _IOCBPbits	set	916
  1584  0613                     _PWM1CON	set	1555
  1585  0612                     _PWM1DCH	set	1554
  1586  0611                     _PWM1DCL	set	1553
  1587  309E                     _PWM1OE	set	12446
  1588  0E96                     _UADDR	set	3734
  1589  0E91                     _UCFG	set	3729
  1590  0E8E                     _UCON	set	3726
  1591  0E8E                     _UCONbits	set	3726
  1592  0E97                     _UEIE	set	3735
  1593  0E93                     _UEIR	set	3731
  1594  0E98                     _UEP0bits	set	3736
  1595  0E92                     _UIE	set	3730
  1596  0E92                     _UIEbits	set	3730
  1597  0E90                     _UIR	set	3728
  1598  0E90                     _UIRbits	set	3728
  1599  0E8F                     _USTAT	set	3727
  1600  0E98                     _UEP0	set	3736
  1601  0E99                     _UEP1	set	3737
  1602                           
  1603                           ; #config settings
  1604  0000                     
  1605                           	psect	cinit
  1606  0015                     start_initialization:	
  1607  0015                     __initialization:		;BIGRAM
  1608                           
  1609                           ; Clear objects allocated to BIGRAM
  1610  0015  3088               	movlw	low (0+8840)
  1611  0016  0084               	movwf	4
  1612  0017  3022               	movlw	high (0+8840)
  1613  0018  0085               	movwf	5
  1614  0019  3068               	movlw	104
  1615  001A  00FE               	movwf	btemp
  1616  001B  3001               	movlw	1
  1617  001C  00FF               	movwf	btemp+1
  1618  001D  3199  2110  3180   	fcall	clear_ram0
  1619                           
  1620                           ; Clear objects allocated to BANK0
  1621  0020  01E8               	clrf	__pbssBANK0& (0+127)
  1622  0021  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  1623  0022  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  1624  0023  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  1625  0024  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  1626  0025  01ED               	clrf	(__pbssBANK0+5)& (0+127)
  1627  0026  01EE               	clrf	(__pbssBANK0+6)& (0+127)
  1628  0027  01EF               	clrf	(__pbssBANK0+7)& (0+127)
  1629                           
  1630                           ; Clear objects allocated to BANK1
  1631  0028  0021               	movlb	1	; select bank1
  1632  0029  01EE               	clrf	__pbssBANK1& (0+127)
  1633  002A  01EF               	clrf	(__pbssBANK1+1)& (0+127)
  1634                           
  1635                           ; Clear objects allocated to BANK2
  1636  002B  3020               	movlw	low __pbssBANK2
  1637  002C  0084               	movwf	4
  1638  002D  3001               	movlw	high __pbssBANK2
  1639  002E  0085               	movwf	5
  1640  002F  3024               	movlw	36
  1641  0030  00FE               	movwf	btemp
  1642  0031  3000               	movlw	0
  1643  0032  00FF               	movwf	btemp+1
  1644  0033  3199  2110  3180   	fcall	clear_ram0
  1645                           
  1646                           ; Clear objects allocated to BANK3
  1647  0036  30A0               	movlw	low __pbssBANK3
  1648  0037  0084               	movwf	4
  1649  0038  3001               	movlw	high __pbssBANK3
  1650  0039  0085               	movwf	5
  1651  003A  3042               	movlw	66
  1652  003B  00FE               	movwf	btemp
  1653  003C  3000               	movlw	0
  1654  003D  00FF               	movwf	btemp+1
  1655  003E  3199  2110  3180   	fcall	clear_ram0
  1656                           
  1657                           ; Clear objects allocated to BANK5
  1658  0041  30E0               	movlw	low __pbssBANK5
  1659  0042  0084               	movwf	4
  1660  0043  3002               	movlw	high __pbssBANK5
  1661  0044  0085               	movwf	5
  1662  0045  3010               	movlw	16
  1663  0046  00FE               	movwf	btemp
  1664  0047  3000               	movlw	0
  1665  0048  00FF               	movwf	btemp+1
  1666  0049  3199  2110  3180   	fcall	clear_ram0
  1667                           
  1668                           ; Clear objects allocated to BANK6
  1669  004C  3020               	movlw	low __pbssBANK6
  1670  004D  0084               	movwf	4
  1671  004E  3003               	movlw	high __pbssBANK6
  1672  004F  0085               	movwf	5
  1673  0050  3020               	movlw	32
  1674  0051  00FE               	movwf	btemp
  1675  0052  3000               	movlw	0
  1676  0053  00FF               	movwf	btemp+1
  1677  0054  3199  2110  3180   	fcall	clear_ram0
  1678                           
  1679                           ; Initialize objects allocated to BANK2
  1680  0057  30EF               	movlw	low __pidataBANK2
  1681  0058  0084               	movwf	4
  1682  0059  3087               	movlw	(high __pidataBANK2)| (0+128)
  1683  005A  0085               	movwf	5
  1684  005B  3063               	movlw	low __pdataBANK2
  1685  005C  0086               	movwf	6
  1686  005D  3001               	movlw	high __pdataBANK2
  1687  005E  0087               	movwf	7
  1688  005F  3000               	movlw	0
  1689  0060  00FF               	movwf	btemp+1
  1690  0061  300D               	movlw	13
  1691  0062  3199  2104  3180   	fcall	init_ram
  1692                           
  1693                           ; Initialize objects allocated to BANK3
  1694  0065  30F5               	movlw	low __pidataBANK3
  1695  0066  0084               	movwf	4
  1696  0067  3098               	movlw	(high __pidataBANK3)| (0+128)
  1697  0068  0085               	movwf	5
  1698  0069  30E2               	movlw	low __pdataBANK3
  1699  006A  0086               	movwf	6
  1700  006B  3001               	movlw	high __pdataBANK3
  1701  006C  0087               	movwf	7
  1702  006D  3000               	movlw	0
  1703  006E  00FF               	movwf	btemp+1
  1704  006F  3006               	movlw	6
  1705  0070  3199  2104  3180   	fcall	init_ram
  1706                           
  1707                           ; Initialize objects allocated to BANK4
  1708  0073  301C               	movlw	low __pidataBANK4
  1709  0074  0084               	movwf	4
  1710  0075  3099               	movlw	(high __pidataBANK4)| (0+128)
  1711  0076  0085               	movwf	5
  1712  0077  3060               	movlw	low __pdataBANK4
  1713  0078  0086               	movwf	6
  1714  0079  3002               	movlw	high __pdataBANK4
  1715  007A  0087               	movwf	7
  1716  007B  3000               	movlw	0
  1717  007C  00FF               	movwf	btemp+1
  1718  007D  300C               	movlw	12
  1719  007E  3199  2104  3180   	fcall	init_ram
  1720                           
  1721                           ; Initialize objects allocated to BANK6
  1722  0081  3084               	movlw	low __pidataBANK6
  1723  0082  0084               	movwf	4
  1724  0083  309A               	movlw	(high __pidataBANK6)| (0+128)
  1725  0084  0085               	movwf	5
  1726  0085  3040               	movlw	low __pdataBANK6
  1727  0086  0086               	movwf	6
  1728  0087  3003               	movlw	high __pdataBANK6
  1729  0088  0087               	movwf	7
  1730  0089  3000               	movlw	0
  1731  008A  00FF               	movwf	btemp+1
  1732  008B  3020               	movlw	32
  1733  008C  3199  2104         	fcall	init_ram
  1734  008E                     end_of_initialization:	
  1735                           ;End of C runtime variable initialization code
  1736                           
  1737  008E                     __end_of__initialization:	
  1738  008E  0020               	movlb	0
  1739  008F  3199  29A0         	ljmp	_main	;jump to C main() function
  1740                           
  1741                           	psect	bssBANK0
  1742  0068                     __pbssBANK0:	
  1743  0068                     _pBDTEntryIn:	
  1744  0068                     	ds	2
  1745  006A                     _I2CCmd:	
  1746  006A                     	ds	1
  1747  006B                     _USBDeferStatusStagePacket:	
  1748  006B                     	ds	1
  1749  006C                     _controlTransferState:	
  1750  006C                     	ds	1
  1751  006D                     _pBDTEntryEP0OutCurrent:	
  1752  006D                     	ds	1
  1753  006E                     _pBDTEntryEP0OutNext:	
  1754  006E                     	ds	1
  1755  006F                     _ptr:	
  1756  006F                     	ds	1
  1757                           
  1758                           	psect	bssBANK1
  1759  00EE                     __pbssBANK1:	
  1760  00EE                     _USBDeviceState:	
  1761  00EE                     	ds	1
  1762  00EF                     _USTATcopy:	
  1763  00EF                     	ds	1
  1764                           
  1765                           	psect	bssBANK2
  1766  0120                     __pbssBANK2:	
  1767  0120                     _Step:	
  1768  0120                     	ds	2
  1769  0122                     _pBDTEntryOut:	
  1770  0122                     	ds	2
  1771  0124                     _send32_data:	
  1772  0124                     	ds	2
  1773  0126                     _HashTime:	
  1774  0126                     	ds	1
  1775  0127                     _I2CCount:	
  1776  0127                     	ds	1
  1777  0128                     _I2CState:	
  1778  0128                     	ds	1
  1779  0129                     _RemoteWakeup:	
  1780  0129                     	ds	1
  1781  012A                     _ResultQC:	
  1782  012A                     	ds	1
  1783  012B                     _SlaveAddress:	
  1784  012B                     	ds	1
  1785  012C                     _USBDeferINDataStagePackets:	
  1786  012C                     	ds	1
  1787  012D                     _USBDeferOUTDataStagePackets:	
  1788  012D                     	ds	1
  1789  012E                     _USBGenericInHandle:	
  1790  012E                     	ds	1
  1791  012F                     _USBGenericOutHandle:	
  1792  012F                     	ds	1
  1793  0130                     _USBStatusStageEnabledFlag1:	
  1794  0130                     	ds	1
  1795  0131                     _USBStatusStageEnabledFlag2:	
  1796  0131                     	ds	1
  1797  0132                     _USBStatusStageTimeoutCounter:	
  1798  0132                     	ds	1
  1799  0133                     _WorkNow:	
  1800  0133                     	ds	1
  1801  0134                     _endpoint_number:	
  1802  0134                     	ds	1
  1803  0135                     _last_bit0:	
  1804  0135                     	ds	1
  1805  0136                     _last_bit1:	
  1806  0136                     	ds	1
  1807  0137                     _pDst:	
  1808  0137                     	ds	1
  1809  0138                     _send32_count:	
  1810  0138                     	ds	1
  1811  0139                     _shortPacketStatus:	
  1812  0139                     	ds	1
  1813  013A                     _inPipes:	
  1814  013A                     	ds	5
  1815  013F                     _BankSize:	
  1816  013F                     	ds	1
  1817  0140                     _USBActiveConfiguration:	
  1818  0140                     	ds	1
  1819  0141                     _USBAlternateInterface:	
  1820  0141                     	ds	1
  1821  0142                     _WQI:	
  1822  0142                     	ds	1
  1823  0143                     _WQX:	
  1824  0143                     	ds	1
  1825                           
  1826                           	psect	dataBANK2
  1827  0163                     __pdataBANK2:	
  1828  0163                     _Status:	
  1829  0163                     	ds	13
  1830                           
  1831                           	psect	bssBANK3
  1832  01A0                     __pbssBANK3:	
  1833  01A0                     _outPipes:	
  1834  01A0                     	ds	6
  1835  01A6                     _CLOCK_LOW_CHG:	
  1836  01A6                     	ds	4
  1837  01AA                     USBCBSendResume@delay_count:	
  1838  01AA                     	ds	2
  1839  01AC                     _LastError:	
  1840  01AC                     	ds	2
  1841  01AE                     _ep_data_in:	
  1842  01AE                     	ds	2
  1843  01B0                     _ep_data_out:	
  1844  01B0                     	ds	2
  1845  01B2                     _BothEP0OutUOWNsSet:	
  1846  01B2                     	ds	1
  1847  01B3                     _I2CAddr:	
  1848  01B3                     	ds	1
  1849  01B4                     _I2CInBuf:	
  1850  01B4                     	ds	1
  1851  01B5                     _LastTemp:	
  1852  01B5                     	ds	1
  1853  01B6                     _SlowTick:	
  1854  01B6                     	ds	1
  1855  01B7                     _TimeOut:	
  1856  01B7                     	ds	1
  1857  01B8                     _USBBusIsSuspended:	
  1858  01B8                     	ds	1
  1859  01B9                     _VerySlowTick:	
  1860  01B9                     	ds	1
  1861  01BA                     _PrecalcHashes:	
  1862  01BA                     	ds	24
  1863  01D2                     _ClockCfg:	
  1864  01D2                     	ds	8
  1865  01DA                     _ResultQue:	
  1866  01DA                     	ds	6
  1867  01E0                     _Error:	
  1868  01E0                     	ds	2
  1869                           
  1870                           	psect	dataBANK3
  1871  01E2                     __pdataBANK3:	
  1872  01E2                     _Cfg:	
  1873  01E2                     	ds	6
  1874                           
  1875                           	psect	dataBANK4
  1876  0260                     __pdataBANK4:	
  1877  0260                     AsicPreCalc@F3344:	
  1878  0260                     	ds	12
  1879                           
  1880                           	psect	bssBANK5
  1881  02E0                     __pbssBANK5:	
  1882  02E0                     _buf:	
  1883  02E0                     	ds	16
  1884                           
  1885                           	psect	bssBANK6
  1886  0320                     __pbssBANK6:	
  1887  0320                     _NonceRanges:	
  1888  0320                     	ds	32
  1889                           
  1890                           	psect	dataBANK6
  1891  0340                     __pdataBANK6:	
  1892  0340                     _BankRanges:	
  1893  0340                     	ds	32
  1894                           
  1895                           	psect	clrtext
  1896  1910                     clear_ram0:	
  1897                           ;	Called with FSR0 containing the base address, and
  1898                           ;	btemp/btemp+1 has the size to clear
  1899                           
  1900  1910  0064               	clrwdt	;clear the watchdog before getting into this loop
  1901  1911                     clrloop0:	
  1902  1911  0180               	clrf	0	;clear RAM location pointed to by FSR
  1903  1912  3101               	addfsr 0,1
  1904  1913  3001               	movlw	1
  1905  1914  02FE               	subwf	126,f
  1906  1915  3000               	movlw	0
  1907  1916  3BFF               	subwfb	127,f
  1908  1917  087F               	movf	127,w
  1909  1918  047E               	iorwf	126,w
  1910  1919  1903               	btfsc	3,2
  1911  191A  3400               	retlw	0	;all done for this memory range, return
  1912  191B  2911               	goto	clrloop0	;have we reached the end yet?
  1913                           
  1914                           	psect	inittext
  1915  1904                     init_ram:	
  1916  1904  00FE               	movwf	126
  1917  1905                     initloop:	
  1918  1905  0012               	moviw fsr0++
  1919  1906  001E               	movwi fsr1++
  1920  1907  3001               	movlw	1
  1921  1908  02FE               	subwf	126,f
  1922  1909  3000               	movlw	0
  1923  190A  3BFF               	subwfb	127,f
  1924  190B  087F               	movf	127,w
  1925  190C  047E               	iorwf	126,w
  1926  190D  1903               	btfsc	3,2
  1927  190E  3400               	retlw	0
  1928  190F  2905               	goto	initloop
  1929                           
  1930                           	psect	cstackBANK2
  1931  0144                     __pcstackBANK2:	
  1932  0144                     _UpdateClock$2776:	
  1933                           
  1934                           ; 4 bytes @ 0x0
  1935  0144                     	ds	4
  1936  0148                     UpdateClock@CLOCK_R_VALUE:	
  1937                           
  1938                           ; 4 bytes @ 0x4
  1939  0148                     	ds	4
  1940  014C                     UpdateClock@CLOCK_F_VALUE:	
  1941                           
  1942                           ; 4 bytes @ 0x8
  1943  014C                     	ds	4
  1944  0150                     UpdateClock@CLOCK_OD_VALUE:	
  1945                           
  1946                           ; 4 bytes @ 0xC
  1947  0150                     	ds	4
  1948  0154                     ??_ProcessCmd:	
  1949                           
  1950                           ; 0 bytes @ 0x10
  1951  0154                     	ds	4
  1952  0158                     _ProcessCmd$1977:	
  1953                           
  1954                           ; 2 bytes @ 0x14
  1955  0158                     	ds	2
  1956  015A                     ProcessCmd@cmd:	
  1957                           
  1958                           ; 1 bytes @ 0x16
  1959  015A                     	ds	1
  1960  015B                     ??_ProcessIO:	
  1961                           
  1962                           ; 0 bytes @ 0x17
  1963  015B                     	ds	4
  1964  015F                     _ProcessIO$2277:	
  1965                           
  1966                           ; 2 bytes @ 0x1B
  1967  015F                     	ds	2
  1968  0161                     _ProcessIO$2311:	
  1969                           
  1970                           ; 2 bytes @ 0x1D
  1971  0161                     	ds	2
  1972                           
  1973                           	psect	cstackBANK1
  1974  00A0                     __pcstackBANK1:	
  1975  00A0                     ??_SendCmdReply:	
  1976  00A0                     ?_AsicPreCalc:	
  1977                           ; 0 bytes @ 0x0
  1978                           
  1979  00A0                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  1980                           ; 0 bytes @ 0x0
  1981                           
  1982  00A0                     ?___ftmul:	
  1983                           ; 1 bytes @ 0x0
  1984                           
  1985  00A0                     ?___lldiv:	
  1986                           ; 3 bytes @ 0x0
  1987                           
  1988  00A0                     AsicPreCalc@work:	
  1989                           ; 4 bytes @ 0x0
  1990                           
  1991  00A0                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  1992                           ; 2 bytes @ 0x0
  1993                           
  1994  00A0                     _DetectAsics$2774:	
  1995                           ; 2 bytes @ 0x0
  1996                           
  1997  00A0                     ___ftmul@f1:	
  1998                           ; 2 bytes @ 0x0
  1999                           
  2000  00A0                     ___lldiv@divisor:	
  2001                           ; 3 bytes @ 0x0
  2002                           
  2003                           
  2004                           ; 4 bytes @ 0x0
  2005  00A0                     	ds	2
  2006  00A2                     ??_AsicPreCalc:	
  2007  00A2                     DetectAsics@x:	
  2008                           ; 0 bytes @ 0x2
  2009                           
  2010  00A2                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  2011                           ; 1 bytes @ 0x2
  2012                           
  2013                           
  2014                           ; 2 bytes @ 0x2
  2015  00A2                     	ds	1
  2016  00A3                     ___ftmul@f2:	
  2017                           
  2018                           ; 3 bytes @ 0x3
  2019  00A3                     	ds	1
  2020  00A4                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  2021  00A4                     ___lldiv@dividend:	
  2022                           ; 2 bytes @ 0x4
  2023                           
  2024                           
  2025                           ; 4 bytes @ 0x4
  2026  00A4                     	ds	2
  2027  00A6                     ??_USBWakeFromSuspend:	
  2028  00A6                     ??_USBSuspend:	
  2029                           ; 0 bytes @ 0x6
  2030                           
  2031  00A6                     ??_USBStdFeatureReqHandler:	
  2032                           ; 0 bytes @ 0x6
  2033                           
  2034  00A6                     ??_USBStdSetCfgHandler:	
  2035                           ; 0 bytes @ 0x6
  2036                           
  2037  00A6                     ??___ftmul:	
  2038                           ; 0 bytes @ 0x6
  2039                           
  2040                           
  2041                           ; 0 bytes @ 0x6
  2042  00A6                     	ds	1
  2043  00A7                     USBStdSetCfgHandler@p:	
  2044                           
  2045                           ; 2 bytes @ 0x7
  2046  00A7                     	ds	1
  2047  00A8                     USBStdFeatureReqHandler@pUEP:	
  2048  00A8                     ___lldiv@quotient:	
  2049                           ; 2 bytes @ 0x8
  2050                           
  2051                           
  2052                           ; 4 bytes @ 0x8
  2053  00A8                     	ds	1
  2054  00A9                     USBStdSetCfgHandler@i_1089:	
  2055                           
  2056                           ; 1 bytes @ 0x9
  2057  00A9                     	ds	1
  2058  00AA                     USBStdSetCfgHandler@i:	
  2059  00AA                     USBStdFeatureReqHandler@current_ep_data:	
  2060                           ; 1 bytes @ 0xA
  2061                           
  2062  00AA                     ___ftmul@exp:	
  2063                           ; 1 bytes @ 0xA
  2064                           
  2065                           
  2066                           ; 1 bytes @ 0xA
  2067  00AA                     	ds	1
  2068  00AB                     USBStdFeatureReqHandler@p:	
  2069  00AB                     ___ftmul@f3_as_product:	
  2070                           ; 1 bytes @ 0xB
  2071                           
  2072                           
  2073                           ; 3 bytes @ 0xB
  2074  00AB                     	ds	1
  2075  00AC                     ??_USBCheckStdRequest:	
  2076  00AC                     ___lldiv@counter:	
  2077                           ; 0 bytes @ 0xC
  2078                           
  2079  00AC                     AsicPreCalc@K:	
  2080                           ; 1 bytes @ 0xC
  2081                           
  2082                           
  2083                           ; 12 bytes @ 0xC
  2084  00AC                     	ds	1
  2085  00AD                     ??_USBCtrlTrfSetupHandler:	
  2086                           
  2087                           ; 0 bytes @ 0xD
  2088  00AD                     	ds	1
  2089  00AE                     ??_USBCtrlEPService:	
  2090  00AE                     ___ftmul@cntr:	
  2091                           ; 0 bytes @ 0xE
  2092                           
  2093                           
  2094                           ; 1 bytes @ 0xE
  2095  00AE                     	ds	1
  2096  00AF                     ___ftmul@sign:	
  2097                           
  2098                           ; 1 bytes @ 0xF
  2099  00AF                     	ds	1
  2100  00B0                     ?___ftneg:	
  2101  00B0                     ___ftneg@f1:	
  2102                           ; 3 bytes @ 0x10
  2103                           
  2104                           
  2105                           ; 3 bytes @ 0x10
  2106  00B0                     	ds	1
  2107  00B1                     USBCtrlEPService@setup_cnt:	
  2108                           
  2109                           ; 1 bytes @ 0x11
  2110  00B1                     	ds	1
  2111  00B2                     ??_USBDeviceTasks:	
  2112                           
  2113                           ; 0 bytes @ 0x12
  2114  00B2                     	ds	1
  2115  00B3                     ?___ftadd:	
  2116  00B3                     ___ftadd@f1:	
  2117                           ; 3 bytes @ 0x13
  2118                           
  2119                           
  2120                           ; 3 bytes @ 0x13
  2121  00B3                     	ds	1
  2122  00B4                     USBDeviceTasks@i:	
  2123                           
  2124                           ; 1 bytes @ 0x14
  2125  00B4                     	ds	2
  2126  00B6                     ___ftadd@f2:	
  2127                           
  2128                           ; 3 bytes @ 0x16
  2129  00B6                     	ds	2
  2130  00B8                     AsicPreCalc@m:	
  2131                           
  2132                           ; 32 bytes @ 0x18
  2133  00B8                     	ds	1
  2134  00B9                     ??___ftadd:	
  2135                           
  2136                           ; 0 bytes @ 0x19
  2137  00B9                     	ds	4
  2138  00BD                     ___ftadd@sign:	
  2139                           
  2140                           ; 1 bytes @ 0x1D
  2141  00BD                     	ds	1
  2142  00BE                     ___ftadd@exp2:	
  2143                           
  2144                           ; 1 bytes @ 0x1E
  2145  00BE                     	ds	1
  2146  00BF                     ___ftadd@exp1:	
  2147                           
  2148                           ; 1 bytes @ 0x1F
  2149  00BF                     	ds	1
  2150  00C0                     ?___ftdiv:	
  2151  00C0                     ___ftdiv@f2:	
  2152                           ; 3 bytes @ 0x20
  2153                           
  2154                           
  2155                           ; 3 bytes @ 0x20
  2156  00C0                     	ds	3
  2157  00C3                     ___ftdiv@f1:	
  2158                           
  2159                           ; 3 bytes @ 0x23
  2160  00C3                     	ds	3
  2161  00C6                     ??___ftdiv:	
  2162                           
  2163                           ; 0 bytes @ 0x26
  2164  00C6                     	ds	4
  2165  00CA                     ___ftdiv@cntr:	
  2166                           
  2167                           ; 1 bytes @ 0x2A
  2168  00CA                     	ds	1
  2169  00CB                     ___ftdiv@f3:	
  2170                           
  2171                           ; 3 bytes @ 0x2B
  2172  00CB                     	ds	3
  2173  00CE                     ___ftdiv@exp:	
  2174                           
  2175                           ; 1 bytes @ 0x2E
  2176  00CE                     	ds	1
  2177  00CF                     ___ftdiv@sign:	
  2178                           
  2179                           ; 1 bytes @ 0x2F
  2180  00CF                     	ds	1
  2181  00D0                     ?___fttol:	
  2182  00D0                     ___fttol@f1:	
  2183                           ; 4 bytes @ 0x30
  2184                           
  2185                           
  2186                           ; 3 bytes @ 0x30
  2187  00D0                     	ds	4
  2188  00D4                     ??___fttol:	
  2189                           
  2190                           ; 0 bytes @ 0x34
  2191  00D4                     	ds	4
  2192  00D8                     ___fttol@sign1:	
  2193  00D8                     AsicPreCalc@z:	
  2194                           ; 1 bytes @ 0x38
  2195                           
  2196                           
  2197                           ; 4 bytes @ 0x38
  2198  00D8                     	ds	1
  2199  00D9                     ___fttol@lval:	
  2200                           
  2201                           ; 4 bytes @ 0x39
  2202  00D9                     	ds	3
  2203  00DC                     AsicPreCalc@y:	
  2204                           
  2205                           ; 4 bytes @ 0x3C
  2206  00DC                     	ds	1
  2207  00DD                     ___fttol@exp1:	
  2208                           
  2209                           ; 1 bytes @ 0x3D
  2210  00DD                     	ds	1
  2211  00DE                     ?_UpdateClock:	
  2212  00DE                     ??_UpdateFanLevel:	
  2213                           ; 0 bytes @ 0x3E
  2214                           
  2215  00DE                     UpdateClock@SPEED:	
  2216                           ; 0 bytes @ 0x3E
  2217                           
  2218                           
  2219                           ; 4 bytes @ 0x3E
  2220  00DE                     	ds	2
  2221  00E0                     AsicPreCalc@x:	
  2222                           
  2223                           ; 4 bytes @ 0x40
  2224  00E0                     	ds	2
  2225  00E2                     ??_UpdateClock:	
  2226  00E2                     _UpdateFanLevel$2775:	
  2227                           ; 0 bytes @ 0x42
  2228                           
  2229                           
  2230                           ; 3 bytes @ 0x42
  2231  00E2                     	ds	2
  2232  00E4                     AsicPreCalc@n:	
  2233                           
  2234                           ; 1 bytes @ 0x44
  2235  00E4                     	ds	1
  2236  00E5                     ??_AsicPushWork:	
  2237  00E5                     ??_WorkTick:	
  2238                           ; 0 bytes @ 0x45
  2239                           
  2240                           
  2241                           ; 0 bytes @ 0x45
  2242  00E5                     	ds	9
  2243                           
  2244                           	psect	cstackCOMMON
  2245  0070                     __pcstackCOMMON:	
  2246  0070                     ?_USBWakeFromSuspend:	
  2247  0070                     ?_USBSuspend:	
  2248                           ; 0 bytes @ 0x0
  2249                           
  2250  0070                     ?_USBCtrlEPAllowStatusStage:	
  2251                           ; 0 bytes @ 0x0
  2252                           
  2253  0070                     ?_USBStallHandler:	
  2254                           ; 0 bytes @ 0x0
  2255                           
  2256  0070                     ?_USBCtrlEPService:	
  2257                           ; 0 bytes @ 0x0
  2258                           
  2259  0070                     ?_USBCtrlTrfTxService:	
  2260                           ; 0 bytes @ 0x0
  2261                           
  2262  0070                     ?_USBCtrlTrfSetupHandler:	
  2263                           ; 0 bytes @ 0x0
  2264                           
  2265  0070                     ?_USBCtrlTrfOutHandler:	
  2266                           ; 0 bytes @ 0x0
  2267                           
  2268  0070                     ?_USBCtrlTrfInHandler:	
  2269                           ; 0 bytes @ 0x0
  2270                           
  2271  0070                     ?_USBCheckStdRequest:	
  2272                           ; 0 bytes @ 0x0
  2273                           
  2274  0070                     ?_USBStdFeatureReqHandler:	
  2275                           ; 0 bytes @ 0x0
  2276                           
  2277  0070                     ?_Send32:	
  2278                           ; 0 bytes @ 0x0
  2279                           
  2280  0070                     ?_AsicPushWork:	
  2281                           ; 0 bytes @ 0x0
  2282                           
  2283  0070                     ?_UpdateFanLevel:	
  2284                           ; 0 bytes @ 0x0
  2285                           
  2286  0070                     ?_InitializeSystem:	
  2287                           ; 0 bytes @ 0x0
  2288                           
  2289  0070                     ?_ProcessIO:	
  2290                           ; 0 bytes @ 0x0
  2291                           
  2292  0070                     ?_UserInit:	
  2293                           ; 0 bytes @ 0x0
  2294                           
  2295  0070                     ?_USBDeviceInit:	
  2296                           ; 0 bytes @ 0x0
  2297                           
  2298  0070                     ?_USBDeviceTasks:	
  2299                           ; 0 bytes @ 0x0
  2300                           
  2301  0070                     ?_USBCtrlEPAllowDataStage:	
  2302                           ; 0 bytes @ 0x0
  2303                           
  2304  0070                     ?_USBCtrlEPServiceComplete:	
  2305                           ; 0 bytes @ 0x0
  2306                           
  2307  0070                     ?_USBCtrlTrfRxService:	
  2308                           ; 0 bytes @ 0x0
  2309                           
  2310  0070                     ?_USBStdSetCfgHandler:	
  2311                           ; 0 bytes @ 0x0
  2312                           
  2313  0070                     ?_USBStdGetDscHandler:	
  2314                           ; 0 bytes @ 0x0
  2315                           
  2316  0070                     ?_USBStdGetStatusHandler:	
  2317                           ; 0 bytes @ 0x0
  2318                           
  2319  0070                     ?_USBCheckVendorRequest:	
  2320                           ; 0 bytes @ 0x0
  2321                           
  2322  0070                     ?_ProcessCmd:	
  2323                           ; 0 bytes @ 0x0
  2324                           
  2325  0070                     ?_DetectAsics:	
  2326                           ; 0 bytes @ 0x0
  2327                           
  2328  0070                     ?_WorkTick:	
  2329                           ; 0 bytes @ 0x0
  2330                           
  2331  0070                     ?_ResultRx:	
  2332                           ; 0 bytes @ 0x0
  2333                           
  2334  0070                     ?_InitFAN:	
  2335                           ; 0 bytes @ 0x0
  2336                           
  2337  0070                     ?_InitTempSensor:	
  2338                           ; 0 bytes @ 0x0
  2339                           
  2340  0070                     ?_InitWorkTick:	
  2341                           ; 0 bytes @ 0x0
  2342                           
  2343  0070                     ?_InitResultRx:	
  2344                           ; 0 bytes @ 0x0
  2345                           
  2346  0070                     ?_ISRCode:	
  2347                           ; 0 bytes @ 0x0
  2348                           
  2349  0070                     ?_USBCBSuspend:	
  2350                           ; 0 bytes @ 0x0
  2351                           
  2352  0070                     ?_USBCBWakeFromSuspend:	
  2353                           ; 0 bytes @ 0x0
  2354                           
  2355  0070                     ?_USBCB_SOF_Handler:	
  2356                           ; 0 bytes @ 0x0
  2357                           
  2358  0070                     ?_USBCBErrorHandler:	
  2359                           ; 0 bytes @ 0x0
  2360                           
  2361  0070                     ?_USBCBCheckOtherReq:	
  2362                           ; 0 bytes @ 0x0
  2363                           
  2364  0070                     ?_USBCBStdSetDscHandler:	
  2365                           ; 0 bytes @ 0x0
  2366                           
  2367  0070                     ?_USBCBInitEP:	
  2368                           ; 0 bytes @ 0x0
  2369                           
  2370  0070                     ?i1___bmul:	
  2371                           ; 0 bytes @ 0x0
  2372                           
  2373  0070                     ?_main:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0070                     ?i1___wmul:	
  2377                           ; 2 bytes @ 0x0
  2378                           
  2379  0070                     i1___bmul@multiplicand:	
  2380                           ; 2 bytes @ 0x0
  2381                           
  2382  0070                     i1___wmul@multiplier:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385                           
  2386                           ; 2 bytes @ 0x0
  2387  0070                     	ds	1
  2388  0071                     ??i1___bmul:	
  2389                           
  2390                           ; 0 bytes @ 0x1
  2391  0071                     	ds	1
  2392  0072                     i1___bmul@multiplier:	
  2393  0072                     i1___wmul@multiplicand:	
  2394                           ; 1 bytes @ 0x2
  2395                           
  2396                           
  2397                           ; 2 bytes @ 0x2
  2398  0072                     	ds	1
  2399  0073                     i1___bmul@product:	
  2400                           
  2401                           ; 1 bytes @ 0x3
  2402  0073                     	ds	1
  2403  0074                     ??i1___wmul:	
  2404  0074                     i1___wmul@product:	
  2405                           ; 0 bytes @ 0x4
  2406                           
  2407                           
  2408                           ; 2 bytes @ 0x4
  2409  0074                     	ds	2
  2410  0076                     ?i1_SendCmdReply:	
  2411  0076                     i1SendCmdReply@cmd:	
  2412                           ; 0 bytes @ 0x6
  2413                           
  2414                           
  2415                           ; 2 bytes @ 0x6
  2416  0076                     	ds	2
  2417  0078                     i1SendCmdReply@data:	
  2418                           
  2419                           ; 2 bytes @ 0x8
  2420  0078                     	ds	2
  2421  007A                     i1SendCmdReply@count:	
  2422                           
  2423                           ; 1 bytes @ 0xA
  2424  007A                     	ds	1
  2425  007B                     i1SendCmdReply@n:	
  2426                           
  2427                           ; 1 bytes @ 0xB
  2428  007B                     	ds	1
  2429  007C                     ??_ResultRx:	
  2430                           
  2431                           ; 0 bytes @ 0xC
  2432  007C                     	ds	1
  2433  007D                     ??_ISRCode:	
  2434                           
  2435                           ; 0 bytes @ 0xD
  2436  007D                     	ds	1
  2437                           
  2438                           	psect	cstackBANK0
  2439  0050                     __pcstackBANK0:	
  2440  0050                     ??i1_SendCmdReply:	
  2441                           
  2442                           ; 0 bytes @ 0x0
  2443  0050                     	ds	8
  2444  0058                     ??_USBCtrlEPAllowStatusStage:	
  2445  0058                     ??_USBStallHandler:	
  2446                           ; 0 bytes @ 0x8
  2447                           
  2448  0058                     ?_USBConfigureEndpoint:	
  2449                           ; 0 bytes @ 0x8
  2450                           
  2451  0058                     ??_USBCtrlTrfTxService:	
  2452                           ; 0 bytes @ 0x8
  2453                           
  2454  0058                     ??_Send32:	
  2455                           ; 0 bytes @ 0x8
  2456                           
  2457  0058                     ??_USBDeviceInit:	
  2458                           ; 0 bytes @ 0x8
  2459                           
  2460  0058                     ??_USBStdGetDscHandler:	
  2461                           ; 0 bytes @ 0x8
  2462                           
  2463  0058                     ??_USBStdGetStatusHandler:	
  2464                           ; 0 bytes @ 0x8
  2465                           
  2466  0058                     ??_USBCheckVendorRequest:	
  2467                           ; 0 bytes @ 0x8
  2468                           
  2469  0058                     ??_InitFAN:	
  2470                           ; 0 bytes @ 0x8
  2471                           
  2472  0058                     ??_InitTempSensor:	
  2473                           ; 0 bytes @ 0x8
  2474                           
  2475  0058                     ??_InitResultRx:	
  2476                           ; 0 bytes @ 0x8
  2477                           
  2478  0058                     ??_USBCBSuspend:	
  2479                           ; 0 bytes @ 0x8
  2480                           
  2481  0058                     ??_USBCBWakeFromSuspend:	
  2482                           ; 0 bytes @ 0x8
  2483                           
  2484  0058                     ??_USBCB_SOF_Handler:	
  2485                           ; 0 bytes @ 0x8
  2486                           
  2487  0058                     ??_USBCBErrorHandler:	
  2488                           ; 0 bytes @ 0x8
  2489                           
  2490  0058                     ??_USBCBCheckOtherReq:	
  2491                           ; 0 bytes @ 0x8
  2492                           
  2493  0058                     ??_USBCBStdSetDscHandler:	
  2494                           ; 0 bytes @ 0x8
  2495                           
  2496  0058                     ?___bmul:	
  2497                           ; 0 bytes @ 0x8
  2498                           
  2499  0058                     ?_memset:	
  2500                           ; 1 bytes @ 0x8
  2501                           
  2502  0058                     ?___awdiv:	
  2503                           ; 2 bytes @ 0x8
  2504                           
  2505  0058                     ?___awmod:	
  2506                           ; 2 bytes @ 0x8
  2507                           
  2508  0058                     ?___lwdiv:	
  2509                           ; 2 bytes @ 0x8
  2510                           
  2511  0058                     ?___wmul:	
  2512                           ; 2 bytes @ 0x8
  2513                           
  2514  0058                     ?___ftpack:	
  2515                           ; 2 bytes @ 0x8
  2516                           
  2517  0058                     ?_rotate:	
  2518                           ; 3 bytes @ 0x8
  2519                           
  2520  0058                     ?___lmul:	
  2521                           ; 4 bytes @ 0x8
  2522                           
  2523  0058                     USBConfigureEndpoint@direction:	
  2524                           ; 4 bytes @ 0x8
  2525                           
  2526  0058                     ___bmul@multiplicand:	
  2527                           ; 1 bytes @ 0x8
  2528                           
  2529  0058                     ___awdiv@divisor:	
  2530                           ; 1 bytes @ 0x8
  2531                           
  2532  0058                     ___awmod@divisor:	
  2533                           ; 2 bytes @ 0x8
  2534                           
  2535  0058                     ___lwdiv@divisor:	
  2536                           ; 2 bytes @ 0x8
  2537                           
  2538  0058                     memset@p1:	
  2539                           ; 2 bytes @ 0x8
  2540                           
  2541  0058                     ___wmul@multiplier:	
  2542                           ; 2 bytes @ 0x8
  2543                           
  2544  0058                     ___ftpack@arg:	
  2545                           ; 2 bytes @ 0x8
  2546                           
  2547  0058                     rotate@x:	
  2548                           ; 3 bytes @ 0x8
  2549                           
  2550  0058                     ___lmul@multiplier:	
  2551                           ; 4 bytes @ 0x8
  2552                           
  2553                           
  2554                           ; 4 bytes @ 0x8
  2555  0058                     	ds	1
  2556  0059                     ??_USBConfigureEndpoint:	
  2557  0059                     ??___bmul:	
  2558                           ; 0 bytes @ 0x9
  2559                           
  2560  0059                     USBStdGetStatusHandler@p:	
  2561                           ; 0 bytes @ 0x9
  2562                           
  2563                           
  2564                           ; 1 bytes @ 0x9
  2565  0059                     	ds	1
  2566  005A                     ??_USBCtrlTrfRxService:	
  2567  005A                     USBCtrlTrfTxService@byteToSend:	
  2568                           ; 0 bytes @ 0xA
  2569                           
  2570  005A                     ___bmul@product:	
  2571                           ; 1 bytes @ 0xA
  2572                           
  2573  005A                     USBDeviceInit@p:	
  2574                           ; 1 bytes @ 0xA
  2575                           
  2576  005A                     ___awdiv@dividend:	
  2577                           ; 2 bytes @ 0xA
  2578                           
  2579  005A                     ___awmod@dividend:	
  2580                           ; 2 bytes @ 0xA
  2581                           
  2582  005A                     ___lwdiv@dividend:	
  2583                           ; 2 bytes @ 0xA
  2584                           
  2585  005A                     memset@c:	
  2586                           ; 2 bytes @ 0xA
  2587                           
  2588  005A                     ___wmul@multiplicand:	
  2589                           ; 2 bytes @ 0xA
  2590                           
  2591                           
  2592                           ; 2 bytes @ 0xA
  2593  005A                     	ds	1
  2594  005B                     ??_USBCtrlTrfInHandler:	
  2595  005B                     ??_USBCtrlEPAllowDataStage:	
  2596                           ; 0 bytes @ 0xB
  2597                           
  2598  005B                     ___bmul@multiplier:	
  2599                           ; 0 bytes @ 0xB
  2600                           
  2601  005B                     ___ftpack@exp:	
  2602                           ; 1 bytes @ 0xB
  2603                           
  2604                           
  2605                           ; 1 bytes @ 0xB
  2606  005B                     	ds	1
  2607  005C                     ??___awdiv:	
  2608  005C                     ??___awmod:	
  2609                           ; 0 bytes @ 0xC
  2610                           
  2611  005C                     ??___lwdiv:	
  2612                           ; 0 bytes @ 0xC
  2613                           
  2614  005C                     ??___wmul:	
  2615                           ; 0 bytes @ 0xC
  2616                           
  2617  005C                     ?_USBTransferOnePacket:	
  2618                           ; 0 bytes @ 0xC
  2619                           
  2620  005C                     USBDeviceInit@i_718:	
  2621                           ; 1 bytes @ 0xC
  2622                           
  2623  005C                     USBTransferOnePacket@dir:	
  2624                           ; 1 bytes @ 0xC
  2625                           
  2626  005C                     USBCtrlTrfRxService@i:	
  2627                           ; 1 bytes @ 0xC
  2628                           
  2629  005C                     rotate@y:	
  2630                           ; 1 bytes @ 0xC
  2631                           
  2632  005C                     ___ftpack@sign:	
  2633                           ; 1 bytes @ 0xC
  2634                           
  2635  005C                     memset@n:	
  2636                           ; 1 bytes @ 0xC
  2637                           
  2638  005C                     ___wmul@product:	
  2639                           ; 2 bytes @ 0xC
  2640                           
  2641  005C                     ___lmul@multiplicand:	
  2642                           ; 2 bytes @ 0xC
  2643                           
  2644                           
  2645                           ; 4 bytes @ 0xC
  2646  005C                     	ds	1
  2647  005D                     ??___ftpack:	
  2648  005D                     ??_USBCtrlEPServiceComplete:	
  2649                           ; 0 bytes @ 0xD
  2650                           
  2651  005D                     ??_rotate:	
  2652                           ; 0 bytes @ 0xD
  2653                           
  2654  005D                     USBDeviceInit@i:	
  2655                           ; 0 bytes @ 0xD
  2656                           
  2657  005D                     USBTransferOnePacket@data:	
  2658                           ; 1 bytes @ 0xD
  2659                           
  2660  005D                     USBConfigureEndpoint@EPNum:	
  2661                           ; 1 bytes @ 0xD
  2662                           
  2663  005D                     USBCtrlTrfRxService@byteToRead:	
  2664                           ; 1 bytes @ 0xD
  2665                           
  2666  005D                     USBCtrlTrfInHandler@lastDTS:	
  2667                           ; 1 bytes @ 0xD
  2668                           
  2669  005D                     ___awdiv@counter:	
  2670                           ; 1 bytes @ 0xD
  2671                           
  2672  005D                     ___awmod@counter:	
  2673                           ; 1 bytes @ 0xD
  2674                           
  2675  005D                     ___lwdiv@quotient:	
  2676                           ; 1 bytes @ 0xD
  2677                           
  2678                           
  2679                           ; 2 bytes @ 0xD
  2680  005D                     	ds	1
  2681  005E                     ??_memset:	
  2682  005E                     ??_USBCtrlTrfOutHandler:	
  2683                           ; 0 bytes @ 0xE
  2684                           
  2685  005E                     ?_SendCmdReply:	
  2686                           ; 0 bytes @ 0xE
  2687                           
  2688  005E                     ?_SendAsicData:	
  2689                           ; 0 bytes @ 0xE
  2690                           
  2691  005E                     USBTransferOnePacket@len:	
  2692                           ; 0 bytes @ 0xE
  2693                           
  2694  005E                     USBConfigureEndpoint@handle:	
  2695                           ; 1 bytes @ 0xE
  2696                           
  2697  005E                     ___awdiv@sign:	
  2698                           ; 1 bytes @ 0xE
  2699                           
  2700  005E                     ___awmod@sign:	
  2701                           ; 1 bytes @ 0xE
  2702                           
  2703  005E                     SendAsicData@work:	
  2704                           ; 1 bytes @ 0xE
  2705                           
  2706  005E                     SendCmdReply@cmd:	
  2707                           ; 2 bytes @ 0xE
  2708                           
  2709                           
  2710                           ; 2 bytes @ 0xE
  2711  005E                     	ds	1
  2712  005F                     ?_USBEnableEndpoint:	
  2713  005F                     ??_USBTransferOnePacket:	
  2714                           ; 0 bytes @ 0xF
  2715                           
  2716  005F                     USBEnableEndpoint@options:	
  2717                           ; 0 bytes @ 0xF
  2718                           
  2719  005F                     ___lwdiv@counter:	
  2720                           ; 1 bytes @ 0xF
  2721                           
  2722  005F                     ___awdiv@quotient:	
  2723                           ; 1 bytes @ 0xF
  2724                           
  2725  005F                     memset@p:	
  2726                           ; 2 bytes @ 0xF
  2727                           
  2728                           
  2729                           ; 2 bytes @ 0xF
  2730  005F                     	ds	1
  2731  0060                     ??_USBEnableEndpoint:	
  2732  0060                     ??_SendAsicData:	
  2733                           ; 0 bytes @ 0x10
  2734                           
  2735  0060                     ??___lmul:	
  2736                           ; 0 bytes @ 0x10
  2737                           
  2738  0060                     ?___awtoft:	
  2739                           ; 0 bytes @ 0x10
  2740                           
  2741  0060                     ?___lltoft:	
  2742                           ; 3 bytes @ 0x10
  2743                           
  2744  0060                     SendCmdReply@data:	
  2745                           ; 3 bytes @ 0x10
  2746                           
  2747  0060                     ___awtoft@c:	
  2748                           ; 2 bytes @ 0x10
  2749                           
  2750  0060                     ___lltoft@c:	
  2751                           ; 2 bytes @ 0x10
  2752                           
  2753  0060                     ___lmul@product:	
  2754                           ; 4 bytes @ 0x10
  2755                           
  2756                           
  2757                           ; 4 bytes @ 0x10
  2758  0060                     	ds	1
  2759  0061                     ??_DetectAsics:	
  2760  0061                     USBTransferOnePacket@ep:	
  2761                           ; 0 bytes @ 0x11
  2762                           
  2763                           
  2764                           ; 1 bytes @ 0x11
  2765  0061                     	ds	1
  2766  0062                     USBTransferOnePacket@handle:	
  2767  0062                     SendCmdReply@count:	
  2768                           ; 1 bytes @ 0x12
  2769                           
  2770  0062                     USBEnableEndpoint@p:	
  2771                           ; 1 bytes @ 0x12
  2772                           
  2773                           
  2774                           ; 2 bytes @ 0x12
  2775  0062                     	ds	1
  2776  0063                     ??___awtoft:	
  2777  0063                     SendCmdReply@n:	
  2778                           ; 0 bytes @ 0x13
  2779                           
  2780                           
  2781                           ; 1 bytes @ 0x13
  2782  0063                     	ds	1
  2783  0064                     ??___lldiv:	
  2784  0064                     ??___lltoft:	
  2785                           ; 0 bytes @ 0x14
  2786                           
  2787  0064                     USBEnableEndpoint@ep:	
  2788                           ; 0 bytes @ 0x14
  2789                           
  2790                           
  2791                           ; 1 bytes @ 0x14
  2792  0064                     	ds	1
  2793  0065                     ??_USBCBInitEP:	
  2794  0065                     ___awtoft@sign:	
  2795                           ; 0 bytes @ 0x15
  2796                           
  2797  0065                     ___lltoft@exp:	
  2798                           ; 1 bytes @ 0x15
  2799                           
  2800                           
  2801                           ; 1 bytes @ 0x15
  2802  0065                     	ds	1
  2803  0066                     ??_InitWorkTick:	
  2804  0066                     ??___ftneg:	
  2805                           ; 0 bytes @ 0x16
  2806                           
  2807                           
  2808                           ; 0 bytes @ 0x16
  2809  0066                     	ds	2
  2810  0068                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  2811  0068                     ??_InitializeSystem:	
  2812                           ; 0 bytes @ 0x18
  2813                           
  2814  0068                     ??_UserInit:	
  2815                           ; 0 bytes @ 0x18
  2816                           
  2817  0068                     ??_main:	
  2818                           ; 0 bytes @ 0x18
  2819                           
  2820                           
  2821                           	psect	maintext
  2822  19A0                     __pmaintext:	
  2823                           ; 0 bytes @ 0x18
  2824 ;;
  2825 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2826 ;;
  2827 ;; *************** function _main *****************
  2828 ;; Defined at:
  2829 ;;		line 98 in file "main.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  2  828[COMMON] int 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 17F/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels required when called:   13
  2849 ;; This function calls:
  2850 ;;		_USBDeviceTasks
  2851 ;;		_AsicPushWork
  2852 ;;		_WorkTick
  2853 ;;		_InitializeSystem
  2854 ;;		_ProcessIO
  2855 ;; This function is called by:
  2856 ;;		Startup code after reset
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           
  2861                           ;psect for function _main
  2862  19A0                     _main:	
  2863                           
  2864                           ;main.c: 99: InitializeSystem();
  2865                           
  2866                           ;incstack = 0
  2867                           ; Regs used in _main: [allreg]
  2868  19A0  3199  2189  3199   	fcall	_InitializeSystem
  2869  19A3                     l829:	
  2870                           ;main.c: 101: while(1)
  2871                           
  2872                           
  2873                           ;main.c: 102: {
  2874                           ;main.c: 119: USBDeviceTasks();
  2875  19A3  318B  23D9  3199   	fcall	_USBDeviceTasks
  2876                           
  2877                           ;main.c: 133: if(TMR0IF)
  2878  19A6  1D0B               	btfss	11,2	;volatile
  2879  19A7  29AB               	goto	l7755
  2880                           
  2881                           ;main.c: 134: WorkTick();
  2882  19A8  319F  2741  3199   	fcall	_WorkTick
  2883  19AB                     l7755:	
  2884                           
  2885                           ;main.c: 136: if(Status.State == 'P'){
  2886  19AB  0022               	movlb	2	; select bank2
  2887  19AC  0863               	movf	_Status^(0+256),w	;volatile
  2888  19AD  3A50               	xorlw	80
  2889  19AE  1D03               	skipz
  2890  19AF  29B3               	goto	l7759
  2891                           
  2892                           ;main.c: 137: AsicPushWork();
  2893  19B0  3192  22B6  3199   	fcall	_AsicPushWork
  2894  19B3                     l7759:	
  2895                           
  2896                           ;main.c: 138: }
  2897                           ;main.c: 140: ProcessIO();
  2898  19B3  3191  2141  3199   	fcall	_ProcessIO
  2899  19B6  29A3               	goto	l829
  2900  19B7                     __end_of_main:	
  2901                           
  2902                           	psect	text1
  2903  1141                     __ptext1:	
  2904 ;; *************** function _ProcessIO *****************
  2905 ;; Defined at:
  2906 ;;		line 182 in file "main.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;		None               void
  2913 ;; Registers used:
  2914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2921 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2922 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  2923 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  2924 ;;Total ram usage:        8 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    8
  2927 ;; This function calls:
  2928 ;;		_USBTransferOnePacket
  2929 ;;		_ProcessCmd
  2930 ;;		___bmul
  2931 ;; This function is called by:
  2932 ;;		_main
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           
  2937                           ;psect for function _ProcessIO
  2938  1141                     _ProcessIO:	
  2939                           
  2940                           ;main.c: 184: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
  2941                           
  2942                           ;incstack = 0
  2943                           ; Regs used in _ProcessIO: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  2944  1141  3020               	movlw	32
  2945  1142  0021               	movlb	1	; select bank1
  2946  1143  026E               	subwf	_USBDeviceState^(0+128),w
  2947  1144  1C03               	skipc
  2948  1145  0008               	return
  2949  1146  003D               	movlb	29	; select bank29
  2950  1147  188E               	btfsc	14,1	;volatile
  2951  1148  0008               	return
  2952                           
  2953                           ;main.c: 193: if(!(USBGenericOutHandle==0?0:((volatile BDT_ENTRY*)USBGenericOutHandle)->
      +                          STAT.UOWN)) {
  2954  1149  0022               	movlb	2	; select bank2
  2955  114A  082F               	movf	_USBGenericOutHandle^(0+256),w
  2956  114B  1903               	btfsc	3,2
  2957  114C  295A               	goto	l7785
  2958  114D  082F               	movf	_USBGenericOutHandle^(0+256),w
  2959  114E  0086               	movwf	6
  2960  114F  0187               	clrf	7
  2961  1150  0D01               	rlf	1,w
  2962  1151  0D01               	rlf	1,w
  2963  1152  3901               	andlw	1
  2964  1153  00DB               	movwf	??_ProcessIO^(0+256)
  2965  1154  01DC               	clrf	(??_ProcessIO^(0+256)+1)
  2966  1155  085B               	movf	??_ProcessIO^(0+256),w
  2967  1156  00DF               	movwf	_ProcessIO$2277^(0+256)
  2968  1157  085C               	movf	(??_ProcessIO+1)^(0+256),w
  2969  1158  00E0               	movwf	(_ProcessIO$2277+1)^(0+256)
  2970  1159  295C               	goto	l7787
  2971  115A                     l7785:	
  2972  115A  01DF               	clrf	_ProcessIO$2277^(0+256)
  2973  115B  01E0               	clrf	(_ProcessIO$2277+1)^(0+256)
  2974  115C                     l7787:	
  2975  115C  0860               	movf	(_ProcessIO$2277+1)^(0+256),w
  2976  115D  045F               	iorwf	_ProcessIO$2277^(0+256),w
  2977  115E  1D03               	skipz
  2978  115F  297A               	goto	l7793
  2979                           
  2980                           ;main.c: 197: ProcessCmd(OUTPacket);
  2981  1160  30A0               	movlw	160
  2982  1161  318D  25D4  3191   	fcall	_ProcessCmd
  2983                           
  2984                           ;main.c: 198: USBGenericOutHandle = USBTransferOnePacket(1,0,(BYTE*)&OUTPacket,64);
  2985  1164  0020               	movlb	0	; select bank0
  2986  1165  01DC               	clrf	?_USBTransferOnePacket
  2987  1166  30A0               	movlw	160
  2988  1167  0022               	movlb	2	; select bank2
  2989  1168  00DB               	movwf	??_ProcessIO^(0+256)
  2990  1169  085B               	movf	??_ProcessIO^(0+256),w
  2991  116A  0020               	movlb	0	; select bank0
  2992  116B  00DD               	movwf	?_USBTransferOnePacket+1
  2993  116C  3040               	movlw	64
  2994  116D  0022               	movlb	2	; select bank2
  2995  116E  00DC               	movwf	(??_ProcessIO+1)^(0+256)
  2996  116F  085C               	movf	(??_ProcessIO+1)^(0+256),w
  2997  1170  0020               	movlb	0	; select bank0
  2998  1171  00DE               	movwf	?_USBTransferOnePacket+2
  2999  1172  3001               	movlw	1
  3000  1173  3188  20AF  3191   	fcall	_USBTransferOnePacket
  3001  1176  0022               	movlb	2	; select bank2
  3002  1177  00DD               	movwf	(??_ProcessIO+2)^(0+256)
  3003  1178  085D               	movf	(??_ProcessIO+2)^(0+256),w
  3004  1179  00AF               	movwf	_USBGenericOutHandle^(0+256)
  3005  117A                     l7793:	
  3006                           
  3007                           ;main.c: 199: }
  3008                           ;main.c: 201: if(WQI != WQX && !(USBGenericInHandle==0?0:((volatile BDT_ENTRY*)USBGeneri
      +                          cInHandle)->STAT.UOWN)) {
  3009  117A  0842               	movf	_WQI^(0+256),w
  3010  117B  0643               	xorwf	_WQX^(0+256),w
  3011  117C  1903               	skipnz
  3012  117D  0008               	return
  3013  117E  082E               	movf	_USBGenericInHandle^(0+256),w
  3014  117F  1903               	btfsc	3,2
  3015  1180  298E               	goto	l7799
  3016  1181  082E               	movf	_USBGenericInHandle^(0+256),w
  3017  1182  0086               	movwf	6
  3018  1183  0187               	clrf	7
  3019  1184  0D01               	rlf	1,w
  3020  1185  0D01               	rlf	1,w
  3021  1186  3901               	andlw	1
  3022  1187  00DB               	movwf	??_ProcessIO^(0+256)
  3023  1188  01DC               	clrf	(??_ProcessIO^(0+256)+1)
  3024  1189  085B               	movf	??_ProcessIO^(0+256),w
  3025  118A  00E1               	movwf	_ProcessIO$2311^(0+256)
  3026  118B  085C               	movf	(??_ProcessIO+1)^(0+256),w
  3027  118C  00E2               	movwf	(_ProcessIO$2311+1)^(0+256)
  3028  118D  2990               	goto	l7801
  3029  118E                     l7799:	
  3030  118E  01E1               	clrf	_ProcessIO$2311^(0+256)
  3031  118F  01E2               	clrf	(_ProcessIO$2311+1)^(0+256)
  3032  1190                     l7801:	
  3033  1190  0862               	movf	(_ProcessIO$2311+1)^(0+256),w
  3034  1191  0461               	iorwf	_ProcessIO$2311^(0+256),w
  3035  1192  1D03               	skipz
  3036  1193  0008               	return
  3037                           
  3038                           ;main.c: 202: USBGenericInHandle = USBTransferOnePacket(1,1,(BYTE*)&INPacket[WQX*15],15);
  3039  1194  0020               	movlb	0	; select bank0
  3040  1195  01DC               	clrf	?_USBTransferOnePacket
  3041  1196  0ADC               	incf	?_USBTransferOnePacket,f
  3042  1197  300F               	movlw	15
  3043  1198  0022               	movlb	2	; select bank2
  3044  1199  00DB               	movwf	??_ProcessIO^(0+256)
  3045  119A  085B               	movf	??_ProcessIO^(0+256),w
  3046  119B  0020               	movlb	0	; select bank0
  3047  119C  00D8               	movwf	?___bmul
  3048  119D  0022               	movlb	2	; select bank2
  3049  119E  0843               	movf	_WQX^(0+256),w
  3050  119F  3199  213A  3191   	fcall	___bmul
  3051  11A2  3E20               	addlw	32
  3052  11A3  0022               	movlb	2	; select bank2
  3053  11A4  00DC               	movwf	(??_ProcessIO+1)^(0+256)
  3054  11A5  085C               	movf	(??_ProcessIO+1)^(0+256),w
  3055  11A6  0020               	movlb	0	; select bank0
  3056  11A7  00DD               	movwf	?_USBTransferOnePacket+1
  3057  11A8  300F               	movlw	15
  3058  11A9  0022               	movlb	2	; select bank2
  3059  11AA  00DD               	movwf	(??_ProcessIO+2)^(0+256)
  3060  11AB  085D               	movf	(??_ProcessIO+2)^(0+256),w
  3061  11AC  0020               	movlb	0	; select bank0
  3062  11AD  00DE               	movwf	?_USBTransferOnePacket+2
  3063  11AE  3001               	movlw	1
  3064  11AF  3188  20AF         	fcall	_USBTransferOnePacket
  3065  11B1  0022               	movlb	2	; select bank2
  3066  11B2  00DE               	movwf	(??_ProcessIO+3)^(0+256)
  3067  11B3  085E               	movf	(??_ProcessIO+3)^(0+256),w
  3068  11B4  00AE               	movwf	_USBGenericInHandle^(0+256)
  3069                           
  3070                           ;main.c: 203: WQX = (WQX+1) & 3;
  3071  11B5  0A43               	incf	_WQX^(0+256),w
  3072  11B6  3903               	andlw	3
  3073  11B7  00DB               	movwf	??_ProcessIO^(0+256)
  3074  11B8  085B               	movf	??_ProcessIO^(0+256),w
  3075  11B9  00C3               	movwf	_WQX^(0+256)
  3076  11BA  0008               	return
  3077  11BB                     __end_of_ProcessIO:	
  3078                           
  3079                           	psect	text2
  3080  0DD4                     __ptext2:	
  3081 ;; *************** function _ProcessCmd *****************
  3082 ;; Defined at:
  3083 ;;		line 47 in file "klondike.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  cmd             1    wreg     PTR unsigned char 
  3086 ;;		 -> OUTPacket(64), 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  cmd             1   22[BANK2 ] PTR unsigned char 
  3089 ;;		 -> OUTPacket(64), 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;		None               void
  3092 ;; Registers used:
  3093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3100 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
  3101 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  3102 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  3103 ;;Total ram usage:        7 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    7
  3106 ;; This function calls:
  3107 ;;		_AsicPushWork
  3108 ;;		_SendCmdReply
  3109 ;;		_UpdateClock
  3110 ;;		___wmul
  3111 ;; This function is called by:
  3112 ;;		_ProcessIO
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           
  3117                           ;psect for function _ProcessCmd
  3118  0DD4                     _ProcessCmd:	
  3119                           
  3120                           ;incstack = 0
  3121                           ; Regs used in _ProcessCmd: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3122                           ;ProcessCmd@cmd stored from wreg
  3123  0DD4  0022               	movlb	2	; select bank2
  3124  0DD5  00DA               	movwf	ProcessCmd@cmd^(0+256)
  3125                           
  3126                           ;klondike.c: 50: switch(cmd[0]) {
  3127  0DD6  2ECA               	goto	l7695
  3128  0DD7                     l7635:	
  3129                           ;klondike.c: 51: case 'W':
  3130                           
  3131                           
  3132                           ;klondike.c: 52: if( Status.WorkQC < 8-1 ) {
  3133  0DD7  3007               	movlw	7
  3134  0DD8  0266               	subwf	(_Status^(0+256)+3),w	;volatile
  3135  0DD9  1803               	skipnc
  3136  0DDA  2E2D               	goto	l7657
  3137                           
  3138                           ;klondike.c: 53: WorkQue[ (WorkNow + Status.WorkQC++) & 8-1 ] = *(WORKTASK *)(cmd+2);
  3139  0DDB  085A               	movf	ProcessCmd@cmd^(0+256),w
  3140  0DDC  3E02               	addlw	2
  3141  0DDD  0086               	movwf	6
  3142  0DDE  3002               	movlw	2	; select bank4/5
  3143  0DDF  0087               	movwf	7
  3144  0DE0  0833               	movf	_WorkNow^(0+256),w
  3145  0DE1  0766               	addwf	(_Status^(0+256)+3),w	;volatile
  3146  0DE2  00D4               	movwf	??_ProcessCmd^(0+256)
  3147  0DE3  01D5               	clrf	(??_ProcessCmd^(0+256)+1)
  3148  0DE4  0DD5               	rlf	(??_ProcessCmd+1)^(0+256),f
  3149  0DE5  3007               	movlw	7
  3150  0DE6  0554               	andwf	??_ProcessCmd^(0+256),w
  3151  0DE7  0020               	movlb	0	; select bank0
  3152  0DE8  00D8               	movwf	?___wmul
  3153  0DE9  3000               	movlw	0
  3154  0DEA  0022               	movlb	2	; select bank2
  3155  0DEB  0555               	andwf	(??_ProcessCmd+1)^(0+256),w
  3156  0DEC  0020               	movlb	0	; select bank0
  3157  0DED  00D9               	movwf	?___wmul+1
  3158  0DEE  302D               	movlw	45
  3159  0DEF  00DA               	movwf	?___wmul+2
  3160  0DF0  3000               	movlw	0
  3161  0DF1  00DB               	movwf	?___wmul+3
  3162  0DF2  319A  2226  318D   	fcall	___wmul
  3163  0DF5  3088               	movlw	136
  3164  0DF6  0022               	movlb	2	; select bank2
  3165  0DF7  00D6               	movwf	(??_ProcessCmd+2)^(0+256)
  3166  0DF8  3022               	movlw	34
  3167  0DF9  00D7               	movwf	((??_ProcessCmd+2)^(0+256)+1)
  3168  0DFA  0020               	movlb	0	; select bank0
  3169  0DFB  0858               	movf	?___wmul,w
  3170  0DFC  0022               	movlb	2	; select bank2
  3171  0DFD  0756               	addwf	(??_ProcessCmd+2)^(0+256),w
  3172  0DFE  0084               	movwf	4
  3173  0DFF  0020               	movlb	0	; select bank0
  3174  0E00  0859               	movf	?___wmul+1,w
  3175  0E01  0022               	movlb	2	; select bank2
  3176  0E02  3D57               	addwfc	(??_ProcessCmd+3)^(0+256),w
  3177  0E03  0085               	movwf	5
  3178  0E04  302D               	movlw	45
  3179  0E05  00FF               	movwf	127
  3180  0E06                     u8420:	
  3181  0E06  0016               	moviw fsr1++
  3182  0E07  001A               	movwi fsr0++
  3183  0E08  0BFF               	decfsz	127,f
  3184  0E09  2E06               	goto	u8420
  3185  0E0A  3001               	movlw	1
  3186  0E0B  00D4               	movwf	??_ProcessCmd^(0+256)
  3187  0E0C  0854               	movf	??_ProcessCmd^(0+256),w
  3188  0E0D  07E6               	addwf	(_Status^(0+256)+3),f	;volatile
  3189                           
  3190                           ;klondike.c: 54: if(Status.State == 'R') {
  3191  0E0E  0863               	movf	_Status^(0+256),w	;volatile
  3192  0E0F  3A52               	xorlw	82
  3193  0E10  1D03               	skipz
  3194  0E11  2E2D               	goto	l7657
  3195                           
  3196                           ;klondike.c: 55: AsicPushWork();
  3197  0E12  3192  22B6  318D   	fcall	_AsicPushWork
  3198  0E15  2E2D               	goto	l7657
  3199  0E16                     l7647:	
  3200                           ;klondike.c: 61: case 'A':
  3201                           
  3202                           ;klondike.c: 60: break;
  3203                           
  3204                           ;klondike.c: 59: Status.Noise = Status.ErrorCount = 0;
  3205                           
  3206                           ;klondike.c: 56: }
  3207                           ;klondike.c: 57: }
  3208                           ;klondike.c: 58: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3209                           
  3210                           
  3211                           ;klondike.c: 62: Status.WorkQC = WorkNow = 0;
  3212  0E16  01B3               	clrf	_WorkNow^(0+256)
  3213  0E17  01E6               	clrf	(_Status^(0+256)+3)	;volatile
  3214                           
  3215                           ;klondike.c: 63: Status.State = 'R';
  3216  0E18  3052               	movlw	82
  3217  0E19  2EB1               	goto	L2
  3218  0E1A                     l7655:	
  3219                           ;klondike.c: 67: case 'I':
  3220                           
  3221                           ;klondike.c: 66: break;
  3222                           
  3223                           ;klondike.c: 65: Status.Noise = Status.ErrorCount = 0;
  3224                           
  3225                           ;klondike.c: 64: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3226                           
  3227                           
  3228                           ;klondike.c: 68: SendCmdReply(cmd, (char *)&ID, sizeof(ID));
  3229  0E1A  085A               	movf	ProcessCmd@cmd^(0+256),w
  3230  0E1B  0020               	movlb	0	; select bank0
  3231  0E1C  00DE               	movwf	?_SendCmdReply
  3232  0E1D  3002               	movlw	2
  3233  0E1E  00DF               	movwf	?_SendCmdReply+1
  3234  0E1F  309F               	movlw	low (_ID| (0+32768))
  3235  0E20  00E0               	movwf	?_SendCmdReply+2
  3236  0E21  3088               	movlw	high (_ID| (0+32768))
  3237  0E22  00E1               	movwf	?_SendCmdReply+3
  3238  0E23  300C               	movlw	12
  3239  0E24  0022               	movlb	2	; select bank2
  3240  0E25  00D4               	movwf	??_ProcessCmd^(0+256)
  3241  0E26  0854               	movf	??_ProcessCmd^(0+256),w
  3242  0E27  0020               	movlb	0	; select bank0
  3243  0E28  00E2               	movwf	?_SendCmdReply+4
  3244  0E29  3196  26AE  318D   	fcall	_SendCmdReply
  3245                           
  3246                           ;klondike.c: 69: break;
  3247  0E2C  2EE2               	goto	l673
  3248  0E2D                     l7657:	
  3249                           ;klondike.c: 70: case 'S':
  3250                           
  3251                           
  3252                           ;klondike.c: 71: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3253  0E2D  0022               	movlb	2	; select bank2
  3254  0E2E  2EB4               	goto	L3
  3255  0E2F                     l7661:	
  3256                           ;klondike.c: 74: case 'C':
  3257                           
  3258                           ;klondike.c: 73: break;
  3259                           
  3260                           ;klondike.c: 72: Status.Noise = Status.ErrorCount = 0;
  3261                           
  3262                           
  3263                           ;klondike.c: 75: if( *(WORD *)&cmd[2] != 0 ) {
  3264  0E2F  085A               	movf	ProcessCmd@cmd^(0+256),w
  3265  0E30  3E02               	addlw	2
  3266  0E31  0086               	movwf	6
  3267  0E32  3002               	movlw	2	; select bank4/5
  3268  0E33  0087               	movwf	7
  3269  0E34  0016               	moviw fsr1++
  3270  0E35  0401               	iorwf	1,w
  3271  0E36  1903               	skipnz
  3272  0E37  2E7B               	goto	l7679
  3273                           
  3274                           ;klondike.c: 76: Cfg = *(WORKCFG *)(cmd+2);
  3275  0E38  085A               	movf	ProcessCmd@cmd^(0+256),w
  3276  0E39  3E02               	addlw	2
  3277  0E3A  0086               	movwf	6
  3278  0E3B  3002               	movlw	2	; select bank4/5
  3279  0E3C  0087               	movwf	7
  3280  0E3D  30E2               	movlw	low _Cfg
  3281  0E3E  0084               	movwf	4
  3282  0E3F  3001               	movlw	high _Cfg
  3283  0E40  0085               	movwf	5
  3284  0E41  3006               	movlw	6
  3285  0E42  00FF               	movwf	127
  3286  0E43                     u8450:	
  3287  0E43  0016               	moviw fsr1++
  3288  0E44  001A               	movwi fsr0++
  3289  0E45  0BFF               	decfsz	127,f
  3290  0E46  2E43               	goto	u8450
  3291                           
  3292                           ;klondike.c: 77: if(Cfg.HashClock < 62)
  3293  0E47  3000               	movlw	0
  3294  0E48  0023               	movlb	3	; select bank3
  3295  0E49  0263               	subwf	(_Cfg+1)^(0+384),w
  3296  0E4A  303E               	movlw	62
  3297  0E4B  1903               	skipnz
  3298  0E4C  0262               	subwf	_Cfg^(0+384),w
  3299  0E4D  1803               	skipnc
  3300  0E4E  2E53               	goto	l679
  3301                           
  3302                           ;klondike.c: 78: Cfg.HashClock = 62;
  3303  0E4F  303E               	movlw	62
  3304  0E50  00E2               	movwf	_Cfg^(0+384)
  3305  0E51  3000               	movlw	0
  3306  0E52  00E3               	movwf	(_Cfg^(0+384)+1)
  3307  0E53                     l679:	
  3308                           
  3309                           ;klondike.c: 79: if(Cfg.HashClock > 5000)
  3310  0E53  3013               	movlw	19
  3311  0E54  0263               	subwf	(_Cfg+1)^(0+384),w
  3312  0E55  3089               	movlw	137
  3313  0E56  1903               	skipnz
  3314  0E57  0262               	subwf	_Cfg^(0+384),w
  3315  0E58  1C03               	skipc
  3316  0E59  2E5E               	goto	l7671
  3317                           
  3318                           ;klondike.c: 80: Cfg.HashClock = 5000;
  3319  0E5A  3088               	movlw	136
  3320  0E5B  00E2               	movwf	_Cfg^(0+384)
  3321  0E5C  3013               	movlw	19
  3322  0E5D  00E3               	movwf	(_Cfg^(0+384)+1)
  3323  0E5E                     l7671:	
  3324                           
  3325                           ;klondike.c: 81: UpdateClock(Cfg.HashClock);
  3326  0E5E  0862               	movf	_Cfg^(0+384),w
  3327  0E5F  0021               	movlb	1	; select bank1
  3328  0E60  00DE               	movwf	?_UpdateClock^(0+128)
  3329  0E61  0023               	movlb	3	; select bank3
  3330  0E62  0863               	movf	(_Cfg+1)^(0+384),w
  3331  0E63  0021               	movlb	1	; select bank1
  3332  0E64  00DF               	movwf	(?_UpdateClock^(0+128)+1)
  3333  0E65  01E0               	clrf	(?_UpdateClock^(0+128)+2)
  3334  0E66  01E1               	clrf	(?_UpdateClock^(0+128)+3)
  3335  0E67  3184  2491  318D   	fcall	_UpdateClock
  3336                           
  3337                           ;klondike.c: 82: if(Cfg.TempTarget != 0)
  3338  0E6A  0023               	movlb	3	; select bank3
  3339  0E6B  0864               	movf	(_Cfg^(0+384)+2),w
  3340  0E6C  1903               	btfsc	3,2
  3341  0E6D  2E75               	goto	l7677
  3342                           
  3343                           ;klondike.c: 83: TempTarget = Cfg.TempTarget;
  3344  0E6E  0864               	movf	(_Cfg^(0+384)+2),w
  3345  0E6F  0022               	movlb	2	; select bank2
  3346  0E70  00D4               	movwf	??_ProcessCmd^(0+256)
  3347  0E71  0854               	movf	??_ProcessCmd^(0+256),w
  3348  0E72  0023               	movlb	3	; select bank3
  3349  0E73  00E9               	movwf	_TempTarget^(0+384)
  3350  0E74  2E7B               	goto	l7679
  3351  0E75                     l7677:	
  3352                           
  3353                           ;klondike.c: 84: else
  3354                           ;klondike.c: 85: Cfg.TempTarget = 143;
  3355  0E75  308F               	movlw	143
  3356  0E76  0022               	movlb	2	; select bank2
  3357  0E77  00D4               	movwf	??_ProcessCmd^(0+256)
  3358  0E78  0854               	movf	??_ProcessCmd^(0+256),w
  3359  0E79  0023               	movlb	3	; select bank3
  3360  0E7A  00E4               	movwf	(_Cfg^(0+384)+2)
  3361  0E7B                     l7679:	
  3362                           
  3363                           ;klondike.c: 86: }
  3364                           ;klondike.c: 87: SendCmdReply(cmd, (char *)&Cfg, sizeof(Cfg));
  3365  0E7B  0022               	movlb	2	; select bank2
  3366  0E7C  085A               	movf	ProcessCmd@cmd^(0+256),w
  3367  0E7D  0020               	movlb	0	; select bank0
  3368  0E7E  00DE               	movwf	?_SendCmdReply
  3369  0E7F  3002               	movlw	2
  3370  0E80  00DF               	movwf	?_SendCmdReply+1
  3371  0E81  30E2               	movlw	low _Cfg
  3372  0E82  00E0               	movwf	?_SendCmdReply+2
  3373  0E83  3001               	movlw	high _Cfg
  3374  0E84  00E1               	movwf	?_SendCmdReply+3
  3375  0E85  3006               	movlw	6
  3376  0E86  0022               	movlb	2	; select bank2
  3377  0E87  00D4               	movwf	??_ProcessCmd^(0+256)
  3378  0E88  0854               	movf	??_ProcessCmd^(0+256),w
  3379  0E89  0020               	movlb	0	; select bank0
  3380  0E8A  00E2               	movwf	?_SendCmdReply+4
  3381  0E8B  3196  26AE  318D   	fcall	_SendCmdReply
  3382                           
  3383                           ;klondike.c: 88: break;
  3384  0E8E  2EE2               	goto	l673
  3385  0E8F                     l7681:	
  3386                           ;klondike.c: 89: case 'E':
  3387                           
  3388                           
  3389                           ;klondike.c: 90: LATAbits.LATA4 = (cmd[2] == '1');
  3390  0E8F  0022               	movlb	2	; select bank2
  3391  0E90  085A               	movf	ProcessCmd@cmd^(0+256),w
  3392  0E91  3E02               	addlw	2
  3393  0E92  0086               	movwf	6
  3394  0E93  3002               	movlw	2	; select bank4/5
  3395  0E94  0087               	movwf	7
  3396  0E95  0801               	movf	1,w
  3397  0E96  3A31               	xorlw	49
  3398  0E97  3000               	movlw	0
  3399  0E98  1903               	skipnz
  3400  0E99  3001               	movlw	1
  3401  0E9A  00D4               	movwf	??_ProcessCmd^(0+256)
  3402  0E9B  0ED4               	swapf	??_ProcessCmd^(0+256),f
  3403  0E9C  080C               	movf	12,w	;volatile
  3404  0E9D  0654               	xorwf	??_ProcessCmd^(0+256),w
  3405  0E9E  39EF               	andlw	-17
  3406  0E9F  0654               	xorwf	??_ProcessCmd^(0+256),w
  3407  0EA0  008C               	movwf	12	;volatile
  3408                           
  3409                           ;klondike.c: 91: Status.State = (cmd[2] == '1') ? 'R' : 'D';
  3410  0EA1  085A               	movf	ProcessCmd@cmd^(0+256),w
  3411  0EA2  3E02               	addlw	2
  3412  0EA3  0086               	movwf	6
  3413  0EA4  3002               	movlw	2	; select bank4/5
  3414  0EA5  0087               	movwf	7
  3415  0EA6  0801               	movf	1,w
  3416  0EA7  3A31               	xorlw	49
  3417  0EA8  1903               	skipnz
  3418  0EA9  2EAC               	goto	l7687
  3419  0EAA  3044               	movlw	68
  3420  0EAB  2EAD               	goto	L1
  3421  0EAC                     l7687:	
  3422  0EAC  3052               	movlw	82
  3423  0EAD                     L1:	
  3424  0EAD  00D8               	movwf	_ProcessCmd$1977^(0+256)
  3425  0EAE  3000               	movlw	0
  3426  0EAF  00D9               	movwf	(_ProcessCmd$1977^(0+256)+1)
  3427  0EB0  0858               	movf	_ProcessCmd$1977^(0+256),w
  3428  0EB1                     L2:	
  3429  0EB1  00D4               	movwf	??_ProcessCmd^(0+256)
  3430  0EB2  0854               	movf	??_ProcessCmd^(0+256),w
  3431  0EB3  00E3               	movwf	_Status^(0+256)	;volatile
  3432  0EB4                     L3:	
  3433                           
  3434                           ;klondike.c: 92: SendCmdReply(cmd, (char *)&Status, sizeof(Status));
  3435  0EB4  085A               	movf	ProcessCmd@cmd^(0+256),w
  3436  0EB5  0020               	movlb	0	; select bank0
  3437  0EB6  00DE               	movwf	?_SendCmdReply
  3438  0EB7  3002               	movlw	2
  3439  0EB8  00DF               	movwf	?_SendCmdReply+1
  3440  0EB9  3063               	movlw	low _Status
  3441  0EBA  00E0               	movwf	?_SendCmdReply+2
  3442  0EBB  3001               	movlw	high _Status
  3443  0EBC  00E1               	movwf	?_SendCmdReply+3
  3444  0EBD  300D               	movlw	13
  3445  0EBE  0022               	movlb	2	; select bank2
  3446  0EBF  00D4               	movwf	??_ProcessCmd^(0+256)
  3447  0EC0  0854               	movf	??_ProcessCmd^(0+256),w
  3448  0EC1  0020               	movlb	0	; select bank0
  3449  0EC2  00E2               	movwf	?_SendCmdReply+4
  3450  0EC3  3196  26AE  318D   	fcall	_SendCmdReply
  3451                           
  3452                           ;klondike.c: 93: Status.Noise = Status.ErrorCount = 0;
  3453  0EC6  0022               	movlb	2	; select bank2
  3454  0EC7  01EA               	clrf	(_Status^(0+256)+7)	;volatile
  3455  0EC8  01EF               	clrf	(_Status^(0+256)+12)	;volatile
  3456                           
  3457                           ;klondike.c: 103: }
  3458                           
  3459                           ;klondike.c: 102: break;
  3460                           
  3461                           ;klondike.c: 101: default:
  3462                           
  3463                           ;klondike.c: 94: break;
  3464  0EC9  2EE2               	goto	l673
  3465  0ECA                     l7695:	
  3466  0ECA  085A               	movf	ProcessCmd@cmd^(0+256),w
  3467  0ECB  0086               	movwf	6
  3468  0ECC  3002               	movlw	2	; select bank4/5
  3469  0ECD  0087               	movwf	7
  3470  0ECE  0801               	movf	1,w
  3471                           
  3472                           ; Switch size 1, requested type "space"
  3473                           ; Number of cases is 6, Range of values is 65 to 87
  3474                           ; switch strategies available:
  3475                           ; Name         Instructions Cycles
  3476                           ; simple_byte           19    10 (average)
  3477                           ; direct_byte           55     9 (fixed)
  3478                           ; jumptable            263     9 (fixed)
  3479                           ;	Chosen strategy is simple_byte
  3480  0ECF  3A41               	xorlw	65	; case 65
  3481  0ED0  1903               	skipnz
  3482  0ED1  2E16               	goto	l7647
  3483  0ED2  3A02               	xorlw	2	; case 67
  3484  0ED3  1903               	skipnz
  3485  0ED4  2E2F               	goto	l7661
  3486  0ED5  3A06               	xorlw	6	; case 69
  3487  0ED6  1903               	skipnz
  3488  0ED7  2E8F               	goto	l7681
  3489  0ED8  3A0C               	xorlw	12	; case 73
  3490  0ED9  1903               	skipnz
  3491  0EDA  2E1A               	goto	l7655
  3492  0EDB  3A1A               	xorlw	26	; case 83
  3493  0EDC  1903               	skipnz
  3494  0EDD  2E2D               	goto	l7657
  3495  0EDE  3A04               	xorlw	4	; case 87
  3496  0EDF  1903               	skipnz
  3497  0EE0  2DD7               	goto	l7635
  3498  0EE1  2EE2               	goto	l673
  3499  0EE2                     l673:	
  3500                           
  3501                           ;klondike.c: 104: LATAbits.LATA5 = 1;;
  3502  0EE2  0022               	movlb	2	; select bank2
  3503  0EE3  168C               	bsf	12,5	;volatile
  3504  0EE4  0008               	return
  3505  0EE5                     __end_of_ProcessCmd:	
  3506                           
  3507                           	psect	text3
  3508  16AE                     __ptext3:	
  3509 ;; *************** function _SendCmdReply *****************
  3510 ;; Defined at:
  3511 ;;		line 208 in file "main.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  cmd             2   14[BANK0 ] PTR unsigned char 
  3514 ;;		 -> ResultQue(6), OUTPacket(64), 
  3515 ;;  data            2   16[BANK0 ] PTR unsigned char 
  3516 ;;		 -> ResultQue(6), Cfg(6), ID(12), Status(13), 
  3517 ;;  count           1   18[BANK0 ] unsigned char 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  n               1   19[BANK0 ] unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;		None               void
  3522 ;; Registers used:
  3523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3529 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3530 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3531 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3532 ;;      Totals:         0       6       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3533 ;;Total ram usage:       14 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    5
  3536 ;; This function calls:
  3537 ;;		___bmul
  3538 ;;		___wmul
  3539 ;; This function is called by:
  3540 ;;		_ProcessCmd
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           
  3545                           ;psect for function _SendCmdReply
  3546  16AE                     _SendCmdReply:	
  3547                           
  3548                           ;main.c: 209: if(WQI*15 + count + 2 < 64) {
  3549                           
  3550                           ;incstack = 0
  3551                           ; Regs used in _SendCmdReply: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3552  16AE  0020               	movlb	0	; select bank0
  3553  16AF  0862               	movf	SendCmdReply@count,w
  3554  16B0  0021               	movlb	1	; select bank1
  3555  16B1  00A0               	movwf	??_SendCmdReply^(0+128)
  3556  16B2  01A1               	clrf	(??_SendCmdReply^(0+128)+1)
  3557  16B3  0022               	movlb	2	; select bank2
  3558  16B4  0842               	movf	_WQI^(0+256),w
  3559  16B5  0021               	movlb	1	; select bank1
  3560  16B6  00A2               	movwf	(??_SendCmdReply+2)^(0+128)
  3561  16B7  01A3               	clrf	((??_SendCmdReply+2)^(0+128)+1)
  3562  16B8  0822               	movf	(??_SendCmdReply+2)^(0+128),w
  3563  16B9  0020               	movlb	0	; select bank0
  3564  16BA  00D8               	movwf	?___wmul
  3565  16BB  0021               	movlb	1	; select bank1
  3566  16BC  0823               	movf	(??_SendCmdReply+3)^(0+128),w
  3567  16BD  0020               	movlb	0	; select bank0
  3568  16BE  00D9               	movwf	?___wmul+1
  3569  16BF  300F               	movlw	15
  3570  16C0  00DA               	movwf	?___wmul+2
  3571  16C1  3000               	movlw	0
  3572  16C2  00DB               	movwf	?___wmul+3
  3573  16C3  319A  2226  3196   	fcall	___wmul
  3574  16C6  0021               	movlb	1	; select bank1
  3575  16C7  0820               	movf	??_SendCmdReply^(0+128),w
  3576  16C8  0020               	movlb	0	; select bank0
  3577  16C9  0758               	addwf	?___wmul,w
  3578  16CA  0021               	movlb	1	; select bank1
  3579  16CB  00A4               	movwf	(??_SendCmdReply+4)^(0+128)
  3580  16CC  0821               	movf	(??_SendCmdReply+1)^(0+128),w
  3581  16CD  0020               	movlb	0	; select bank0
  3582  16CE  3D59               	addwfc	?___wmul+1,w
  3583  16CF  0021               	movlb	1	; select bank1
  3584  16D0  00A5               	movwf	(??_SendCmdReply+5)^(0+128)
  3585  16D1  0824               	movf	(??_SendCmdReply+4)^(0+128),w
  3586  16D2  3E02               	addlw	2
  3587  16D3  00A6               	movwf	(??_SendCmdReply+6)^(0+128)
  3588  16D4  3000               	movlw	0
  3589  16D5  3D25               	addwfc	(??_SendCmdReply+5)^(0+128),w
  3590  16D6  00A7               	movwf	(??_SendCmdReply+7)^(0+128)
  3591  16D7  0827               	movf	(??_SendCmdReply+7)^(0+128),w
  3592  16D8  3A80               	xorlw	128
  3593  16D9  00FF               	movwf	127
  3594  16DA  3080               	movlw	128
  3595  16DB  027F               	subwf	127,w
  3596  16DC  1D03               	skipz
  3597  16DD  2EE0               	goto	u8505
  3598  16DE  3040               	movlw	64
  3599  16DF  0226               	subwf	(??_SendCmdReply+6)^(0+128),w
  3600  16E0                     u8505:	
  3601  16E0  1803               	skipnc
  3602  16E1  0008               	return
  3603                           
  3604                           ;main.c: 210: INPacket[WQI*15] = cmd[0];
  3605  16E2  0020               	movlb	0	; select bank0
  3606  16E3  085E               	movf	SendCmdReply@cmd,w
  3607  16E4  0086               	movwf	6
  3608  16E5  085F               	movf	SendCmdReply@cmd+1,w
  3609  16E6  0087               	movwf	7
  3610  16E7  0801               	movf	1,w
  3611  16E8  0021               	movlb	1	; select bank1
  3612  16E9  00A0               	movwf	??_SendCmdReply^(0+128)
  3613  16EA  300F               	movlw	15
  3614  16EB  00A1               	movwf	(??_SendCmdReply+1)^(0+128)
  3615  16EC  0821               	movf	(??_SendCmdReply+1)^(0+128),w
  3616  16ED  0020               	movlb	0	; select bank0
  3617  16EE  00D8               	movwf	?___bmul
  3618  16EF  0022               	movlb	2	; select bank2
  3619  16F0  0842               	movf	_WQI^(0+256),w
  3620  16F1  3199  213A  3196   	fcall	___bmul
  3621  16F4  3E20               	addlw	32
  3622  16F5  0086               	movwf	6
  3623  16F6  3002               	movlw	2	; select bank4/5
  3624  16F7  0087               	movwf	7
  3625  16F8  0021               	movlb	1	; select bank1
  3626  16F9  0820               	movf	??_SendCmdReply^(0+128),w
  3627  16FA  0081               	movwf	1
  3628                           
  3629                           ;main.c: 211: INPacket[WQI*15 + 1] = SlaveAddress;
  3630  16FB  0022               	movlb	2	; select bank2
  3631  16FC  082B               	movf	_SlaveAddress^(0+256),w
  3632  16FD  0021               	movlb	1	; select bank1
  3633  16FE  00A0               	movwf	??_SendCmdReply^(0+128)
  3634  16FF  300F               	movlw	15
  3635  1700  00A1               	movwf	(??_SendCmdReply+1)^(0+128)
  3636  1701  0821               	movf	(??_SendCmdReply+1)^(0+128),w
  3637  1702  0020               	movlb	0	; select bank0
  3638  1703  00D8               	movwf	?___bmul
  3639  1704  0022               	movlb	2	; select bank2
  3640  1705  0842               	movf	_WQI^(0+256),w
  3641  1706  3199  213A  3196   	fcall	___bmul
  3642  1709  3E01               	addlw	1
  3643  170A  3E20               	addlw	32
  3644  170B  0086               	movwf	6
  3645  170C  3002               	movlw	2	; select bank4/5
  3646  170D  0087               	movwf	7
  3647  170E  0021               	movlb	1	; select bank1
  3648  170F  0820               	movf	??_SendCmdReply^(0+128),w
  3649  1710  0081               	movwf	1
  3650                           
  3651                           ;main.c: 212: for(BYTE n = 0; n < count; n++)
  3652  1711  0020               	movlb	0	; select bank0
  3653  1712  01E3               	clrf	SendCmdReply@n
  3654  1713                     l7723:	
  3655  1713  0862               	movf	SendCmdReply@count,w
  3656  1714  0263               	subwf	SendCmdReply@n,w
  3657  1715  1803               	btfsc	3,0
  3658  1716  2F4D               	goto	l7725
  3659                           
  3660                           ;main.c: 213: INPacket[WQI*15 + n + 2] = data[n];
  3661  1717  0861               	movf	SendCmdReply@data+1,w
  3662  1718  0021               	movlb	1	; select bank1
  3663  1719  00A1               	movwf	(??_SendCmdReply^(0+128)+1)
  3664  171A  0020               	movlb	0	; select bank0
  3665  171B  0860               	movf	SendCmdReply@data,w
  3666  171C  0021               	movlb	1	; select bank1
  3667  171D  00A0               	movwf	??_SendCmdReply^(0+128)
  3668  171E  0020               	movlb	0	; select bank0
  3669  171F  0863               	movf	SendCmdReply@n,w
  3670  1720  0021               	movlb	1	; select bank1
  3671  1721  0720               	addwf	??_SendCmdReply^(0+128),w
  3672  1722  0084               	movwf	4
  3673  1723  0821               	movf	(??_SendCmdReply^(0+128)+1),w
  3674  1724  1803               	skipnc
  3675  1725  0A21               	incf	(??_SendCmdReply^(0+128)+1),w
  3676  1726  0085               	movwf	5
  3677  1727  0800               	movf	0,w	;code access
  3678  1728  00A2               	movwf	(??_SendCmdReply+2)^(0+128)
  3679  1729  0022               	movlb	2	; select bank2
  3680  172A  0842               	movf	_WQI^(0+256),w
  3681  172B  0021               	movlb	1	; select bank1
  3682  172C  00A3               	movwf	(??_SendCmdReply+3)^(0+128)
  3683  172D  01A4               	clrf	((??_SendCmdReply+3)^(0+128)+1)
  3684  172E  0823               	movf	(??_SendCmdReply+3)^(0+128),w
  3685  172F  0020               	movlb	0	; select bank0
  3686  1730  00D8               	movwf	?___wmul
  3687  1731  0021               	movlb	1	; select bank1
  3688  1732  0824               	movf	(??_SendCmdReply+4)^(0+128),w
  3689  1733  0020               	movlb	0	; select bank0
  3690  1734  00D9               	movwf	?___wmul+1
  3691  1735  300F               	movlw	15
  3692  1736  00DA               	movwf	?___wmul+2
  3693  1737  3000               	movlw	0
  3694  1738  00DB               	movwf	?___wmul+3
  3695  1739  319A  2226  3196   	fcall	___wmul
  3696  173C  0020               	movlb	0	; select bank0
  3697  173D  0858               	movf	?___wmul,w
  3698  173E  0763               	addwf	SendCmdReply@n,w
  3699  173F  3E02               	addlw	2
  3700  1740  3E20               	addlw	32
  3701  1741  0086               	movwf	6
  3702  1742  3002               	movlw	2	; select bank4/5
  3703  1743  0087               	movwf	7
  3704  1744  0021               	movlb	1	; select bank1
  3705  1745  0822               	movf	(??_SendCmdReply+2)^(0+128),w
  3706  1746  0081               	movwf	1
  3707  1747  3001               	movlw	1
  3708  1748  00A0               	movwf	??_SendCmdReply^(0+128)
  3709  1749  0820               	movf	??_SendCmdReply^(0+128),w
  3710  174A  0020               	movlb	0	; select bank0
  3711  174B  07E3               	addwf	SendCmdReply@n,f
  3712  174C  2F13               	goto	l7723
  3713  174D                     l7725:	
  3714                           
  3715                           ;main.c: 214: WQI = (WQI+1) & 3;
  3716  174D  0022               	movlb	2	; select bank2
  3717  174E  0A42               	incf	_WQI^(0+256),w
  3718  174F  3903               	andlw	3
  3719  1750  0021               	movlb	1	; select bank1
  3720  1751  00A0               	movwf	??_SendCmdReply^(0+128)
  3721  1752  0820               	movf	??_SendCmdReply^(0+128),w
  3722  1753  0022               	movlb	2	; select bank2
  3723  1754  00C2               	movwf	_WQI^(0+256)
  3724  1755  0008               	return
  3725  1756                     __end_of_SendCmdReply:	
  3726                           
  3727                           	psect	text4
  3728  193A                     __ptext4:	
  3729 ;; *************** function ___bmul *****************
  3730 ;; Defined at:
  3731 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\bmul.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  multiplier      1    wreg     unsigned char 
  3734 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  multiplier      1   11[BANK0 ] unsigned char 
  3737 ;;  product         1   10[BANK0 ] unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      unsigned char 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3747 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3748 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3750 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3751 ;;Total ram usage:        4 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    4
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_ProcessIO
  3758 ;;		_SendCmdReply
  3759 ;;		i1_SendCmdReply
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           
  3764                           ;psect for function ___bmul
  3765  193A                     ___bmul:	
  3766                           
  3767                           ;incstack = 0
  3768                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3769                           ;___bmul@multiplier stored from wreg
  3770  193A  0020               	movlb	0	; select bank0
  3771  193B  00DB               	movwf	___bmul@multiplier
  3772  193C  01DA               	clrf	___bmul@product
  3773  193D                     l7883:	
  3774  193D  1C5B               	btfss	___bmul@multiplier,0
  3775  193E  2943               	goto	l7887
  3776  193F  0858               	movf	___bmul@multiplicand,w
  3777  1940  00D9               	movwf	??___bmul
  3778  1941  0859               	movf	??___bmul,w
  3779  1942  07DA               	addwf	___bmul@product,f
  3780  1943                     l7887:	
  3781  1943  1003               	clrc
  3782  1944  0DD8               	rlf	___bmul@multiplicand,f
  3783  1945  1003               	clrc
  3784  1946  0CDB               	rrf	___bmul@multiplier,f
  3785  1947  08DB               	movf	___bmul@multiplier,f
  3786  1948  1D03               	skipz
  3787  1949  293D               	goto	l7883
  3788  194A  085A               	movf	___bmul@product,w
  3789  194B  0008               	return
  3790  194C                     __end_of___bmul:	
  3791                           
  3792                           	psect	text5
  3793  12B6                     __ptext5:	
  3794 ;; *************** function _AsicPushWork *****************
  3795 ;; Defined at:
  3796 ;;		line 108 in file "klondike.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;		None               void
  3803 ;; Registers used:
  3804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3812 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3813 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3814 ;;Total ram usage:        5 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    6
  3817 ;; This function calls:
  3818 ;;		_SendAsicData
  3819 ;;		_AsicPreCalc
  3820 ;;		___wmul
  3821 ;; This function is called by:
  3822 ;;		_ProcessCmd
  3823 ;;		_main
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           
  3828                           ;psect for function _AsicPushWork
  3829  12B6                     _AsicPushWork:	
  3830                           
  3831                           ;klondike.c: 109: AsicPreCalc(&WorkQue[WorkNow]);
  3832                           
  3833                           ;incstack = 0
  3834                           ; Regs used in _AsicPushWork: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  3835  12B6  0022               	movlb	2	; select bank2
  3836  12B7  0833               	movf	_WorkNow^(0+256),w
  3837  12B8  0021               	movlb	1	; select bank1
  3838  12B9  00E5               	movwf	??_AsicPushWork^(0+128)
  3839  12BA  01E6               	clrf	(??_AsicPushWork^(0+128)+1)
  3840  12BB  0865               	movf	??_AsicPushWork^(0+128),w
  3841  12BC  0020               	movlb	0	; select bank0
  3842  12BD  00D8               	movwf	?___wmul
  3843  12BE  0021               	movlb	1	; select bank1
  3844  12BF  0866               	movf	(??_AsicPushWork+1)^(0+128),w
  3845  12C0  0020               	movlb	0	; select bank0
  3846  12C1  00D9               	movwf	?___wmul+1
  3847  12C2  302D               	movlw	45
  3848  12C3  00DA               	movwf	?___wmul+2
  3849  12C4  3000               	movlw	0
  3850  12C5  00DB               	movwf	?___wmul+3
  3851  12C6  319A  2226  3192   	fcall	___wmul
  3852  12C9  3088               	movlw	136
  3853  12CA  0021               	movlb	1	; select bank1
  3854  12CB  00E7               	movwf	(??_AsicPushWork+2)^(0+128)
  3855  12CC  3022               	movlw	34
  3856  12CD  00E8               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  3857  12CE  0020               	movlb	0	; select bank0
  3858  12CF  0858               	movf	?___wmul,w
  3859  12D0  0021               	movlb	1	; select bank1
  3860  12D1  0767               	addwf	(??_AsicPushWork+2)^(0+128),w
  3861  12D2  00A0               	movwf	?_AsicPreCalc^(0+128)
  3862  12D3  0020               	movlb	0	; select bank0
  3863  12D4  0859               	movf	?___wmul+1,w
  3864  12D5  0021               	movlb	1	; select bank1
  3865  12D6  3D68               	addwfc	(??_AsicPushWork+3)^(0+128),w
  3866  12D7  00A1               	movwf	(?_AsicPreCalc+1)^(0+128)
  3867  12D8  3180  2091  3192   	fcall	_AsicPreCalc
  3868                           
  3869                           ;klondike.c: 110: Status.WorkID = WorkQue[WorkNow].WorkID;
  3870  12DB  0022               	movlb	2	; select bank2
  3871  12DC  0833               	movf	_WorkNow^(0+256),w
  3872  12DD  0021               	movlb	1	; select bank1
  3873  12DE  00E5               	movwf	??_AsicPushWork^(0+128)
  3874  12DF  01E6               	clrf	(??_AsicPushWork^(0+128)+1)
  3875  12E0  0865               	movf	??_AsicPushWork^(0+128),w
  3876  12E1  0020               	movlb	0	; select bank0
  3877  12E2  00D8               	movwf	?___wmul
  3878  12E3  0021               	movlb	1	; select bank1
  3879  12E4  0866               	movf	(??_AsicPushWork+1)^(0+128),w
  3880  12E5  0020               	movlb	0	; select bank0
  3881  12E6  00D9               	movwf	?___wmul+1
  3882  12E7  302D               	movlw	45
  3883  12E8  00DA               	movwf	?___wmul+2
  3884  12E9  3000               	movlw	0
  3885  12EA  00DB               	movwf	?___wmul+3
  3886  12EB  319A  2226  3192   	fcall	___wmul
  3887  12EE  3088               	movlw	136
  3888  12EF  0021               	movlb	1	; select bank1
  3889  12F0  00E7               	movwf	(??_AsicPushWork+2)^(0+128)
  3890  12F1  3022               	movlw	34
  3891  12F2  00E8               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  3892  12F3  0020               	movlb	0	; select bank0
  3893  12F4  0858               	movf	?___wmul,w
  3894  12F5  0021               	movlb	1	; select bank1
  3895  12F6  0767               	addwf	(??_AsicPushWork+2)^(0+128),w
  3896  12F7  0086               	movwf	6
  3897  12F8  0020               	movlb	0	; select bank0
  3898  12F9  0859               	movf	?___wmul+1,w
  3899  12FA  0021               	movlb	1	; select bank1
  3900  12FB  3D68               	addwfc	(??_AsicPushWork+3)^(0+128),w
  3901  12FC  0087               	movwf	7
  3902  12FD  0801               	movf	1,w
  3903  12FE  00E9               	movwf	(??_AsicPushWork+4)^(0+128)
  3904  12FF  0869               	movf	(??_AsicPushWork+4)^(0+128),w
  3905  1300  0022               	movlb	2	; select bank2
  3906  1301  00E7               	movwf	(_Status^(0+256)+4)	;volatile
  3907                           
  3908                           ;klondike.c: 111: SendAsicData(&WorkQue[WorkNow]);
  3909  1302  0833               	movf	_WorkNow^(0+256),w
  3910  1303  0021               	movlb	1	; select bank1
  3911  1304  00E5               	movwf	??_AsicPushWork^(0+128)
  3912  1305  01E6               	clrf	(??_AsicPushWork^(0+128)+1)
  3913  1306  0865               	movf	??_AsicPushWork^(0+128),w
  3914  1307  0020               	movlb	0	; select bank0
  3915  1308  00D8               	movwf	?___wmul
  3916  1309  0021               	movlb	1	; select bank1
  3917  130A  0866               	movf	(??_AsicPushWork+1)^(0+128),w
  3918  130B  0020               	movlb	0	; select bank0
  3919  130C  00D9               	movwf	?___wmul+1
  3920  130D  302D               	movlw	45
  3921  130E  00DA               	movwf	?___wmul+2
  3922  130F  3000               	movlw	0
  3923  1310  00DB               	movwf	?___wmul+3
  3924  1311  319A  2226  3192   	fcall	___wmul
  3925  1314  3088               	movlw	136
  3926  1315  0021               	movlb	1	; select bank1
  3927  1316  00E7               	movwf	(??_AsicPushWork+2)^(0+128)
  3928  1317  3022               	movlw	34
  3929  1318  00E8               	movwf	((??_AsicPushWork+2)^(0+128)+1)
  3930  1319  0020               	movlb	0	; select bank0
  3931  131A  0858               	movf	?___wmul,w
  3932  131B  0021               	movlb	1	; select bank1
  3933  131C  0767               	addwf	(??_AsicPushWork+2)^(0+128),w
  3934  131D  0020               	movlb	0	; select bank0
  3935  131E  00DE               	movwf	?_SendAsicData
  3936  131F  0859               	movf	?___wmul+1,w
  3937  1320  0021               	movlb	1	; select bank1
  3938  1321  3D68               	addwfc	(??_AsicPushWork+3)^(0+128),w
  3939  1322  0020               	movlb	0	; select bank0
  3940  1323  00DF               	movwf	?_SendAsicData+1
  3941  1324  3195  2572         	fcall	_SendAsicData
  3942                           
  3943                           ;klondike.c: 112: WorkNow = (WorkNow+1) & 8-1;
  3944  1326  0022               	movlb	2	; select bank2
  3945  1327  0A33               	incf	_WorkNow^(0+256),w
  3946  1328  3907               	andlw	7
  3947  1329  0021               	movlb	1	; select bank1
  3948  132A  00E5               	movwf	??_AsicPushWork^(0+128)
  3949  132B  0865               	movf	??_AsicPushWork^(0+128),w
  3950  132C  0022               	movlb	2	; select bank2
  3951  132D  00B3               	movwf	_WorkNow^(0+256)
  3952                           
  3953                           ;klondike.c: 113: Status.HashCount = 0;
  3954  132E  01EB               	clrf	(_Status^(0+256)+8)	;volatile
  3955  132F  01EC               	clrf	((_Status+1)^(0+256)+8)	;volatile
  3956                           
  3957                           ;klondike.c: 114: TMR0 = HashTime;
  3958  1330  0826               	movf	_HashTime^(0+256),w
  3959  1331  0020               	movlb	0	; select bank0
  3960  1332  0095               	movwf	21	;volatile
  3961                           
  3962                           ;klondike.c: 115: Status.State = 'W';
  3963  1333  3057               	movlw	87
  3964  1334  0021               	movlb	1	; select bank1
  3965  1335  00E5               	movwf	??_AsicPushWork^(0+128)
  3966  1336  0865               	movf	??_AsicPushWork^(0+128),w
  3967  1337  0022               	movlb	2	; select bank2
  3968  1338  00E3               	movwf	_Status^(0+256)	;volatile
  3969                           
  3970                           ;klondike.c: 116: Status.WorkQC--;
  3971  1339  3001               	movlw	1
  3972  133A  02E6               	subwf	(_Status^(0+256)+3),f	;volatile
  3973  133B  0008               	return
  3974  133C                     __end_of_AsicPushWork:	
  3975                           
  3976                           	psect	text6
  3977  1A26                     __ptext6:	
  3978 ;; *************** function ___wmul *****************
  3979 ;; Defined at:
  3980 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\wmul.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  multiplier      2    8[BANK0 ] unsigned int 
  3983 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;  product         2   12[BANK0 ] unsigned int 
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  2    8[BANK0 ] unsigned int 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3995 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3996 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3998 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3999 ;;Total ram usage:        6 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    4
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_ProcessCmd
  4006 ;;		_AsicPushWork
  4007 ;;		_SendCmdReply
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           
  4012                           ;psect for function ___wmul
  4013  1A26                     ___wmul:	
  4014                           
  4015                           ;incstack = 0
  4016                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4017  1A26  0020               	movlb	0	; select bank0
  4018  1A27  01DC               	clrf	___wmul@product
  4019  1A28  01DD               	clrf	___wmul@product+1
  4020  1A29                     l7899:	
  4021  1A29  1C58               	btfss	___wmul@multiplier,0
  4022  1A2A  2A2F               	goto	l1269
  4023  1A2B  085A               	movf	___wmul@multiplicand,w
  4024  1A2C  07DC               	addwf	___wmul@product,f
  4025  1A2D  085B               	movf	___wmul@multiplicand+1,w
  4026  1A2E  3DDD               	addwfc	___wmul@product+1,f
  4027  1A2F                     l1269:	
  4028  1A2F  3001               	movlw	1
  4029  1A30                     u8825:	
  4030  1A30  35DA               	lslf	___wmul@multiplicand,f
  4031  1A31  0DDB               	rlf	___wmul@multiplicand+1,f
  4032  1A32  0B89               	decfsz	9,f
  4033  1A33  2A30               	goto	u8825
  4034  1A34  3001               	movlw	1
  4035  1A35                     u8835:	
  4036  1A35  36D9               	lsrf	___wmul@multiplier+1,f
  4037  1A36  0CD8               	rrf	___wmul@multiplier,f
  4038  1A37  0B89               	decfsz	9,f
  4039  1A38  2A35               	goto	u8835
  4040  1A39  0859               	movf	___wmul@multiplier+1,w
  4041  1A3A  0458               	iorwf	___wmul@multiplier,w
  4042  1A3B  1D03               	skipz
  4043  1A3C  2A29               	goto	l7899
  4044  1A3D  085D               	movf	___wmul@product+1,w
  4045  1A3E  01D9               	clrf	?___wmul+1
  4046  1A3F  07D9               	addwf	?___wmul+1,f
  4047  1A40  085C               	movf	___wmul@product,w
  4048  1A41  01D8               	clrf	?___wmul
  4049  1A42  07D8               	addwf	?___wmul,f
  4050  1A43  0008               	return
  4051  1A44                     __end_of___wmul:	
  4052                           
  4053                           	psect	text7
  4054  0091                     __ptext7:	
  4055 ;; *************** function _AsicPreCalc *****************
  4056 ;; Defined at:
  4057 ;;		line 318 in file "asic.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  work            2    0[BANK1 ] PTR struct _worktask
  4060 ;;		 -> WorkQue(360), 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;  m              32   24[BANK1 ] unsigned long [8]
  4063 ;;  K              12   12[BANK1 ] unsigned long [3]
  4064 ;;  x               4   64[BANK1 ] unsigned long 
  4065 ;;  y               4   60[BANK1 ] unsigned long 
  4066 ;;  z               4   56[BANK1 ] unsigned long 
  4067 ;;  n               1   68[BANK1 ] unsigned char 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;		None               void
  4070 ;; Registers used:
  4071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4077 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;      Temps:          0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;      Totals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0
  4081 ;;Total ram usage:       69 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:    5
  4084 ;; This function calls:
  4085 ;;		_rotate
  4086 ;; This function is called by:
  4087 ;;		_AsicPushWork
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           
  4092                           ;psect for function _AsicPreCalc
  4093  0091                     _AsicPreCalc:	
  4094                           
  4095                           ;asic.c: 319: DWORD K[3] = { 0x428a2f98, 0x71374491, 0xb5c0fbcf };
  4096                           
  4097                           ;incstack = 0
  4098                           ; Regs used in _AsicPreCalc: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  4099  0091  3060               	movlw	low AsicPreCalc@F3344
  4100  0092  0086               	movwf	6
  4101  0093  3002               	movlw	high AsicPreCalc@F3344
  4102  0094  0087               	movwf	7
  4103  0095  30AC               	movlw	low AsicPreCalc@K
  4104  0096  0084               	movwf	4
  4105  0097  3000               	movlw	high AsicPreCalc@K
  4106  0098  0085               	movwf	5
  4107  0099  300C               	movlw	12
  4108  009A  00FF               	movwf	127
  4109  009B                     u4860:	
  4110  009B  0016               	moviw fsr1++
  4111  009C  001A               	movwi fsr0++
  4112  009D  0BFF               	decfsz	127,f
  4113  009E  289B               	goto	u4860
  4114                           
  4115                           ;asic.c: 320: DWORD x, y, z;
  4116                           ;asic.c: 321: DWORD m[8];
  4117                           ;asic.c: 322: BYTE n;
  4118                           ;asic.c: 324: for(n = 0; n < 8; n++)
  4119  009F  0021               	movlb	1	; select bank1
  4120  00A0  01E4               	clrf	AsicPreCalc@n^(0+128)
  4121  00A1  3008               	movlw	8
  4122  00A2  0264               	subwf	AsicPreCalc@n^(0+128),w
  4123  00A3  1803               	btfsc	3,0
  4124  00A4  28DB               	goto	l5283
  4125  00A5                     l5277:	
  4126                           
  4127                           ;asic.c: 325: m[n] = work->MidState[n];
  4128  00A5  0864               	movf	AsicPreCalc@n^(0+128),w
  4129  00A6  00A2               	movwf	??_AsicPreCalc^(0+128)
  4130  00A7  01A3               	clrf	(??_AsicPreCalc^(0+128)+1)
  4131  00A8  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4132  00A9  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4133  00AA  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4134  00AB  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4135  00AC  0822               	movf	??_AsicPreCalc^(0+128),w
  4136  00AD  3E01               	addlw	1
  4137  00AE  00A4               	movwf	(??_AsicPreCalc+2)^(0+128)
  4138  00AF  3000               	movlw	0
  4139  00B0  3D23               	addwfc	(??_AsicPreCalc+1)^(0+128),w
  4140  00B1  00A5               	movwf	(??_AsicPreCalc+3)^(0+128)
  4141  00B2  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4142  00B3  0720               	addwf	AsicPreCalc@work^(0+128),w
  4143  00B4  0086               	movwf	6
  4144  00B5  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4145  00B6  3D21               	addwfc	(AsicPreCalc@work+1)^(0+128),w
  4146  00B7  0087               	movwf	7
  4147  00B8  3F40               	moviw [0]fsr1
  4148  00B9  00A6               	movwf	(??_AsicPreCalc+4)^(0+128)
  4149  00BA  3F41               	moviw [1]fsr1
  4150  00BB  00A7               	movwf	((??_AsicPreCalc+4)^(0+128)+1)
  4151  00BC  3F42               	moviw [2]fsr1
  4152  00BD  00A8               	movwf	((??_AsicPreCalc+4)^(0+128)+2)
  4153  00BE  3F43               	moviw [3]fsr1
  4154  00BF  00A9               	movwf	((??_AsicPreCalc+4)^(0+128)+3)
  4155  00C0  0864               	movf	AsicPreCalc@n^(0+128),w
  4156  00C1  00AA               	movwf	(??_AsicPreCalc+8)^(0+128)
  4157  00C2  3001               	movlw	1
  4158  00C3                     u4885:	
  4159  00C3  35AA               	lslf	(??_AsicPreCalc+8)^(0+128),f
  4160  00C4  3EFF               	addlw	-1
  4161  00C5  1D03               	skipz
  4162  00C6  28C3               	goto	u4885
  4163  00C7  352A               	lslf	(??_AsicPreCalc+8)^(0+128),w
  4164  00C8  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4165  00C9  0086               	movwf	6
  4166  00CA  0187               	clrf	7
  4167  00CB  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4168  00CC  3FC0               	movwi [0]fsr1
  4169  00CD  0827               	movf	(??_AsicPreCalc+5)^(0+128),w
  4170  00CE  3FC1               	movwi [1]fsr1
  4171  00CF  0828               	movf	(??_AsicPreCalc+6)^(0+128),w
  4172  00D0  3FC2               	movwi [2]fsr1
  4173  00D1  0829               	movf	(??_AsicPreCalc+7)^(0+128),w
  4174  00D2  3FC3               	movwi [3]fsr1
  4175  00D3  3001               	movlw	1
  4176  00D4  00A2               	movwf	??_AsicPreCalc^(0+128)
  4177  00D5  0822               	movf	??_AsicPreCalc^(0+128),w
  4178  00D6  07E4               	addwf	AsicPreCalc@n^(0+128),f
  4179  00D7  3008               	movlw	8
  4180  00D8  0264               	subwf	AsicPreCalc@n^(0+128),w
  4181  00D9  1C03               	skipc
  4182  00DA  28A5               	goto	l5277
  4183  00DB                     l5283:	
  4184                           
  4185                           ;asic.c: 327: for(n = 0; n < 3; n++) {
  4186  00DB  01E4               	clrf	AsicPreCalc@n^(0+128)
  4187  00DC                     L4:	
  4188  00DC  3003               	movlw	3
  4189  00DD  0264               	subwf	AsicPreCalc@n^(0+128),w
  4190  00DE  1803               	btfsc	3,0
  4191  00DF  0008               	return
  4192                           
  4193                           ;asic.c: 329: x = m[5-n] ^ m[6-n];
  4194  00E0  0364               	decf	AsicPreCalc@n^(0+128),w
  4195  00E1  3AFF               	xorlw	255
  4196  00E2  00A2               	movwf	??_AsicPreCalc^(0+128)
  4197  00E3  3001               	movlw	1
  4198  00E4                     u4915:	
  4199  00E4  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4200  00E5  3EFF               	addlw	-1
  4201  00E6  1D03               	skipz
  4202  00E7  28E4               	goto	u4915
  4203  00E8  3522               	lslf	??_AsicPreCalc^(0+128),w
  4204  00E9  3E18               	addlw	24
  4205  00EA  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4206  00EB  0086               	movwf	6
  4207  00EC  0187               	clrf	7
  4208  00ED  3F40               	moviw [0]fsr1
  4209  00EE  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4210  00EF  3F41               	moviw [1]fsr1
  4211  00F0  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4212  00F1  3F42               	moviw [2]fsr1
  4213  00F2  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4214  00F3  3F43               	moviw [3]fsr1
  4215  00F4  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4216  00F5  0364               	decf	AsicPreCalc@n^(0+128),w
  4217  00F6  3AFF               	xorlw	255
  4218  00F7  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  4219  00F8  3001               	movlw	1
  4220  00F9                     u4925:	
  4221  00F9  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4222  00FA  3EFF               	addlw	-1
  4223  00FB  1D03               	skipz
  4224  00FC  28F9               	goto	u4925
  4225  00FD  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4226  00FE  3E14               	addlw	20
  4227  00FF  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4228  0100  0086               	movwf	6
  4229  0101  0187               	clrf	7
  4230  0102  3F40               	moviw [0]fsr1
  4231  0103  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  4232  0104  3F41               	moviw [1]fsr1
  4233  0105  00A9               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  4234  0106  3F42               	moviw [2]fsr1
  4235  0107  00AA               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  4236  0108  3F43               	moviw [3]fsr1
  4237  0109  00AB               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  4238  010A  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4239  010B  0628               	xorwf	(??_AsicPreCalc+6)^(0+128),w
  4240  010C  00E0               	movwf	AsicPreCalc@x^(0+128)
  4241  010D  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4242  010E  0629               	xorwf	(??_AsicPreCalc+7)^(0+128),w
  4243  010F  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4244  0110  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4245  0111  062A               	xorwf	(??_AsicPreCalc+8)^(0+128),w
  4246  0112  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4247  0113  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4248  0114  062B               	xorwf	(??_AsicPreCalc+9)^(0+128),w
  4249  0115  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4250                           
  4251                           ;asic.c: 330: x = x & m[4-n];
  4252  0116  0364               	decf	AsicPreCalc@n^(0+128),w
  4253  0117  3AFF               	xorlw	255
  4254  0118  00A2               	movwf	??_AsicPreCalc^(0+128)
  4255  0119  3001               	movlw	1
  4256  011A                     u4935:	
  4257  011A  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4258  011B  3EFF               	addlw	-1
  4259  011C  1D03               	skipz
  4260  011D  291A               	goto	u4935
  4261  011E  3522               	lslf	??_AsicPreCalc^(0+128),w
  4262  011F  3E10               	addlw	16
  4263  0120  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4264  0121  0086               	movwf	6
  4265  0122  0187               	clrf	7
  4266  0123  0860               	movf	AsicPreCalc@x^(0+128),w
  4267  0124  0501               	andwf	1,w
  4268  0125  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4269  0126  3141               	addfsr 1,1
  4270  0127  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4271  0128  0501               	andwf	1,w
  4272  0129  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4273  012A  3141               	addfsr 1,1
  4274  012B  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  4275  012C  0501               	andwf	1,w
  4276  012D  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4277  012E  3141               	addfsr 1,1
  4278  012F  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  4279  0130  0501               	andwf	1,w
  4280  0131  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4281  0132  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4282  0133  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4283  0134  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4284  0135  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4285  0136  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4286  0137  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4287  0138  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4288  0139  00E0               	movwf	AsicPreCalc@x^(0+128)
  4289                           
  4290                           ;asic.c: 331: x = m[6-n] ^ x;
  4291  013A  0364               	decf	AsicPreCalc@n^(0+128),w
  4292  013B  3AFF               	xorlw	255
  4293  013C  00A2               	movwf	??_AsicPreCalc^(0+128)
  4294  013D  3001               	movlw	1
  4295  013E                     u4945:	
  4296  013E  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4297  013F  3EFF               	addlw	-1
  4298  0140  1D03               	skipz
  4299  0141  293E               	goto	u4945
  4300  0142  3522               	lslf	??_AsicPreCalc^(0+128),w
  4301  0143  3E18               	addlw	24
  4302  0144  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4303  0145  0086               	movwf	6
  4304  0146  0187               	clrf	7
  4305  0147  0860               	movf	AsicPreCalc@x^(0+128),w
  4306  0148  0601               	xorwf	1,w
  4307  0149  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4308  014A  3141               	addfsr 1,1
  4309  014B  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4310  014C  0601               	xorwf	1,w
  4311  014D  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4312  014E  3141               	addfsr 1,1
  4313  014F  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  4314  0150  0601               	xorwf	1,w
  4315  0151  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4316  0152  3141               	addfsr 1,1
  4317  0153  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  4318  0154  0601               	xorwf	1,w
  4319  0155  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4320  0156  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4321  0157  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4322  0158  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4323  0159  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4324  015A  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4325  015B  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4326  015C  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4327  015D  00E0               	movwf	AsicPreCalc@x^(0+128)
  4328                           
  4329                           ;asic.c: 332: x += K[n];
  4330  015E  0864               	movf	AsicPreCalc@n^(0+128),w
  4331  015F  00A2               	movwf	??_AsicPreCalc^(0+128)
  4332  0160  3001               	movlw	1
  4333  0161                     u4955:	
  4334  0161  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4335  0162  3EFF               	addlw	-1
  4336  0163  1D03               	skipz
  4337  0164  2961               	goto	u4955
  4338  0165  3522               	lslf	??_AsicPreCalc^(0+128),w
  4339  0166  3EAC               	addlw	AsicPreCalc@K& (0+255)
  4340  0167  0086               	movwf	6
  4341  0168  0187               	clrf	7
  4342  0169  3F40               	moviw [0]fsr1
  4343  016A  07E0               	addwf	AsicPreCalc@x^(0+128),f
  4344  016B  3F41               	moviw [1]fsr1
  4345  016C  3DE1               	addwfc	(AsicPreCalc@x+1)^(0+128),f
  4346  016D  3F42               	moviw [2]fsr1
  4347  016E  3DE2               	addwfc	(AsicPreCalc@x+2)^(0+128),f
  4348  016F  3F43               	moviw [3]fsr1
  4349  0170  3DE3               	addwfc	(AsicPreCalc@x+3)^(0+128),f
  4350                           
  4351                           ;asic.c: 333: x += work->Merkle[n];
  4352  0171  0864               	movf	AsicPreCalc@n^(0+128),w
  4353  0172  00A2               	movwf	??_AsicPreCalc^(0+128)
  4354  0173  01A3               	clrf	(??_AsicPreCalc^(0+128)+1)
  4355  0174  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4356  0175  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4357  0176  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4358  0177  0DA3               	rlf	(??_AsicPreCalc^(0+128)+1),f
  4359  0178  0822               	movf	??_AsicPreCalc^(0+128),w
  4360  0179  3E21               	addlw	33
  4361  017A  00A4               	movwf	(??_AsicPreCalc+2)^(0+128)
  4362  017B  3000               	movlw	0
  4363  017C  3D23               	addwfc	(??_AsicPreCalc+1)^(0+128),w
  4364  017D  00A5               	movwf	(??_AsicPreCalc+3)^(0+128)
  4365  017E  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4366  017F  0720               	addwf	AsicPreCalc@work^(0+128),w
  4367  0180  0086               	movwf	6
  4368  0181  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4369  0182  3D21               	addwfc	(AsicPreCalc@work+1)^(0+128),w
  4370  0183  0087               	movwf	7
  4371  0184  3F40               	moviw [0]fsr1
  4372  0185  07E0               	addwf	AsicPreCalc@x^(0+128),f
  4373  0186  3F41               	moviw [1]fsr1
  4374  0187  3DE1               	addwfc	(AsicPreCalc@x+1)^(0+128),f
  4375  0188  3F42               	moviw [2]fsr1
  4376  0189  3DE2               	addwfc	(AsicPreCalc@x+2)^(0+128),f
  4377  018A  3F43               	moviw [3]fsr1
  4378  018B  3DE3               	addwfc	(AsicPreCalc@x+3)^(0+128),f
  4379                           
  4380                           ;asic.c: 334: x += m[7-n];
  4381  018C  0364               	decf	AsicPreCalc@n^(0+128),w
  4382  018D  3AFF               	xorlw	255
  4383  018E  00A2               	movwf	??_AsicPreCalc^(0+128)
  4384  018F  3001               	movlw	1
  4385  0190                     u4965:	
  4386  0190  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4387  0191  3EFF               	addlw	-1
  4388  0192  1D03               	skipz
  4389  0193  2990               	goto	u4965
  4390  0194  3522               	lslf	??_AsicPreCalc^(0+128),w
  4391  0195  3E1C               	addlw	28
  4392  0196  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4393  0197  0086               	movwf	6
  4394  0198  0187               	clrf	7
  4395  0199  3F40               	moviw [0]fsr1
  4396  019A  07E0               	addwf	AsicPreCalc@x^(0+128),f
  4397  019B  3F41               	moviw [1]fsr1
  4398  019C  3DE1               	addwfc	(AsicPreCalc@x+1)^(0+128),f
  4399  019D  3F42               	moviw [2]fsr1
  4400  019E  3DE2               	addwfc	(AsicPreCalc@x+2)^(0+128),f
  4401  019F  3F43               	moviw [3]fsr1
  4402  01A0  3DE3               	addwfc	(AsicPreCalc@x+3)^(0+128),f
  4403                           
  4404                           ;asic.c: 335: y = rotate(m[4-n], 26);
  4405  01A1  0364               	decf	AsicPreCalc@n^(0+128),w
  4406  01A2  3AFF               	xorlw	255
  4407  01A3  00A2               	movwf	??_AsicPreCalc^(0+128)
  4408  01A4  3001               	movlw	1
  4409  01A5                     u4975:	
  4410  01A5  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4411  01A6  3EFF               	addlw	-1
  4412  01A7  1D03               	skipz
  4413  01A8  29A5               	goto	u4975
  4414  01A9  3522               	lslf	??_AsicPreCalc^(0+128),w
  4415  01AA  3E10               	addlw	16
  4416  01AB  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4417  01AC  0086               	movwf	6
  4418  01AD  0187               	clrf	7
  4419  01AE  3F40               	moviw [0]fsr1
  4420  01AF  0020               	movlb	0	; select bank0
  4421  01B0  00D8               	movwf	?_rotate
  4422  01B1  3F41               	moviw [1]fsr1
  4423  01B2  00D9               	movwf	?_rotate+1
  4424  01B3  3F42               	moviw [2]fsr1
  4425  01B4  00DA               	movwf	?_rotate+2
  4426  01B5  3F43               	moviw [3]fsr1
  4427  01B6  00DB               	movwf	?_rotate+3
  4428  01B7  301A               	movlw	26
  4429  01B8  0021               	movlb	1	; select bank1
  4430  01B9  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4431  01BA  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4432  01BB  0020               	movlb	0	; select bank0
  4433  01BC  00DC               	movwf	?_rotate+4
  4434  01BD  319B  23EC  3180   	fcall	_rotate
  4435  01C0  0020               	movlb	0	; select bank0
  4436  01C1  085B               	movf	?_rotate+3,w
  4437  01C2  0021               	movlb	1	; select bank1
  4438  01C3  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4439  01C4  0020               	movlb	0	; select bank0
  4440  01C5  085A               	movf	?_rotate+2,w
  4441  01C6  0021               	movlb	1	; select bank1
  4442  01C7  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4443  01C8  0020               	movlb	0	; select bank0
  4444  01C9  0859               	movf	?_rotate+1,w
  4445  01CA  0021               	movlb	1	; select bank1
  4446  01CB  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4447  01CC  0020               	movlb	0	; select bank0
  4448  01CD  0858               	movf	?_rotate,w
  4449  01CE  0021               	movlb	1	; select bank1
  4450  01CF  00DC               	movwf	AsicPreCalc@y^(0+128)
  4451                           
  4452                           ;asic.c: 336: z = rotate(m[4-n], 21);
  4453  01D0  0364               	decf	AsicPreCalc@n^(0+128),w
  4454  01D1  3AFF               	xorlw	255
  4455  01D2  00A2               	movwf	??_AsicPreCalc^(0+128)
  4456  01D3  3001               	movlw	1
  4457  01D4                     u4985:	
  4458  01D4  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4459  01D5  3EFF               	addlw	-1
  4460  01D6  1D03               	skipz
  4461  01D7  29D4               	goto	u4985
  4462  01D8  3522               	lslf	??_AsicPreCalc^(0+128),w
  4463  01D9  3E10               	addlw	16
  4464  01DA  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4465  01DB  0086               	movwf	6
  4466  01DC  0187               	clrf	7
  4467  01DD  3F40               	moviw [0]fsr1
  4468  01DE  0020               	movlb	0	; select bank0
  4469  01DF  00D8               	movwf	?_rotate
  4470  01E0  3F41               	moviw [1]fsr1
  4471  01E1  00D9               	movwf	?_rotate+1
  4472  01E2  3F42               	moviw [2]fsr1
  4473  01E3  00DA               	movwf	?_rotate+2
  4474  01E4  3F43               	moviw [3]fsr1
  4475  01E5  00DB               	movwf	?_rotate+3
  4476  01E6  3015               	movlw	21
  4477  01E7  0021               	movlb	1	; select bank1
  4478  01E8  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4479  01E9  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4480  01EA  0020               	movlb	0	; select bank0
  4481  01EB  00DC               	movwf	?_rotate+4
  4482  01EC  319B  23EC  3180   	fcall	_rotate
  4483  01EF  0020               	movlb	0	; select bank0
  4484  01F0  085B               	movf	?_rotate+3,w
  4485  01F1  0021               	movlb	1	; select bank1
  4486  01F2  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  4487  01F3  0020               	movlb	0	; select bank0
  4488  01F4  085A               	movf	?_rotate+2,w
  4489  01F5  0021               	movlb	1	; select bank1
  4490  01F6  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  4491  01F7  0020               	movlb	0	; select bank0
  4492  01F8  0859               	movf	?_rotate+1,w
  4493  01F9  0021               	movlb	1	; select bank1
  4494  01FA  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  4495  01FB  0020               	movlb	0	; select bank0
  4496  01FC  0858               	movf	?_rotate,w
  4497  01FD  0021               	movlb	1	; select bank1
  4498  01FE  00D8               	movwf	AsicPreCalc@z^(0+128)
  4499                           
  4500                           ;asic.c: 337: z = y^z;
  4501  01FF  085C               	movf	AsicPreCalc@y^(0+128),w
  4502  0200  0658               	xorwf	AsicPreCalc@z^(0+128),w
  4503  0201  00A2               	movwf	??_AsicPreCalc^(0+128)
  4504  0202  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  4505  0203  0659               	xorwf	(AsicPreCalc@z+1)^(0+128),w
  4506  0204  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4507  0205  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  4508  0206  065A               	xorwf	(AsicPreCalc@z+2)^(0+128),w
  4509  0207  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4510  0208  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  4511  0209  065B               	xorwf	(AsicPreCalc@z+3)^(0+128),w
  4512  020A  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4513  020B  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4514  020C  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  4515  020D  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4516  020E  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  4517  020F  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4518  0210  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  4519  0211  0822               	movf	??_AsicPreCalc^(0+128),w
  4520  0212  00D8               	movwf	AsicPreCalc@z^(0+128)
  4521                           
  4522                           ;asic.c: 338: y = rotate(m[4-n], 7);
  4523  0213  0364               	decf	AsicPreCalc@n^(0+128),w
  4524  0214  3AFF               	xorlw	255
  4525  0215  00A2               	movwf	??_AsicPreCalc^(0+128)
  4526  0216  3001               	movlw	1
  4527  0217                     u4995:	
  4528  0217  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4529  0218  3EFF               	addlw	-1
  4530  0219  1D03               	skipz
  4531  021A  2A17               	goto	u4995
  4532  021B  3522               	lslf	??_AsicPreCalc^(0+128),w
  4533  021C  3E10               	addlw	16
  4534  021D  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4535  021E  0086               	movwf	6
  4536  021F  0187               	clrf	7
  4537  0220  3F40               	moviw [0]fsr1
  4538  0221  0020               	movlb	0	; select bank0
  4539  0222  00D8               	movwf	?_rotate
  4540  0223  3F41               	moviw [1]fsr1
  4541  0224  00D9               	movwf	?_rotate+1
  4542  0225  3F42               	moviw [2]fsr1
  4543  0226  00DA               	movwf	?_rotate+2
  4544  0227  3F43               	moviw [3]fsr1
  4545  0228  00DB               	movwf	?_rotate+3
  4546  0229  3007               	movlw	7
  4547  022A  0021               	movlb	1	; select bank1
  4548  022B  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4549  022C  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4550  022D  0020               	movlb	0	; select bank0
  4551  022E  00DC               	movwf	?_rotate+4
  4552  022F  319B  23EC  3180   	fcall	_rotate
  4553  0232  0020               	movlb	0	; select bank0
  4554  0233  085B               	movf	?_rotate+3,w
  4555  0234  0021               	movlb	1	; select bank1
  4556  0235  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4557  0236  0020               	movlb	0	; select bank0
  4558  0237  085A               	movf	?_rotate+2,w
  4559  0238  0021               	movlb	1	; select bank1
  4560  0239  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4561  023A  0020               	movlb	0	; select bank0
  4562  023B  0859               	movf	?_rotate+1,w
  4563  023C  0021               	movlb	1	; select bank1
  4564  023D  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4565  023E  0020               	movlb	0	; select bank0
  4566  023F  0858               	movf	?_rotate,w
  4567  0240  0021               	movlb	1	; select bank1
  4568  0241  00DC               	movwf	AsicPreCalc@y^(0+128)
  4569                           
  4570                           ;asic.c: 339: z = y^z;
  4571  0242  085C               	movf	AsicPreCalc@y^(0+128),w
  4572  0243  0658               	xorwf	AsicPreCalc@z^(0+128),w
  4573  0244  00A2               	movwf	??_AsicPreCalc^(0+128)
  4574  0245  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  4575  0246  0659               	xorwf	(AsicPreCalc@z+1)^(0+128),w
  4576  0247  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4577  0248  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  4578  0249  065A               	xorwf	(AsicPreCalc@z+2)^(0+128),w
  4579  024A  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4580  024B  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  4581  024C  065B               	xorwf	(AsicPreCalc@z+3)^(0+128),w
  4582  024D  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4583  024E  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4584  024F  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  4585  0250  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4586  0251  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  4587  0252  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4588  0253  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  4589  0254  0822               	movf	??_AsicPreCalc^(0+128),w
  4590  0255  00D8               	movwf	AsicPreCalc@z^(0+128)
  4591                           
  4592                           ;asic.c: 340: m[7-n] = z+x;
  4593  0256  0858               	movf	AsicPreCalc@z^(0+128),w
  4594  0257  0760               	addwf	AsicPreCalc@x^(0+128),w
  4595  0258  00A2               	movwf	??_AsicPreCalc^(0+128)
  4596  0259  0859               	movf	(AsicPreCalc@z+1)^(0+128),w
  4597  025A  3D61               	addwfc	(AsicPreCalc@x+1)^(0+128),w
  4598  025B  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4599  025C  085A               	movf	(AsicPreCalc@z+2)^(0+128),w
  4600  025D  3D62               	addwfc	(AsicPreCalc@x+2)^(0+128),w
  4601  025E  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4602  025F  085B               	movf	(AsicPreCalc@z+3)^(0+128),w
  4603  0260  3D63               	addwfc	(AsicPreCalc@x+3)^(0+128),w
  4604  0261  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4605  0262  0364               	decf	AsicPreCalc@n^(0+128),w
  4606  0263  3AFF               	xorlw	255
  4607  0264  00A6               	movwf	(??_AsicPreCalc+4)^(0+128)
  4608  0265  3001               	movlw	1
  4609  0266                     u5005:	
  4610  0266  35A6               	lslf	(??_AsicPreCalc+4)^(0+128),f
  4611  0267  3EFF               	addlw	-1
  4612  0268  1D03               	skipz
  4613  0269  2A66               	goto	u5005
  4614  026A  3526               	lslf	(??_AsicPreCalc+4)^(0+128),w
  4615  026B  3E1C               	addlw	28
  4616  026C  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4617  026D  0086               	movwf	6
  4618  026E  0187               	clrf	7
  4619  026F  0822               	movf	??_AsicPreCalc^(0+128),w
  4620  0270  3FC0               	movwi [0]fsr1
  4621  0271  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4622  0272  3FC1               	movwi [1]fsr1
  4623  0273  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4624  0274  3FC2               	movwi [2]fsr1
  4625  0275  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4626  0276  3FC3               	movwi [3]fsr1
  4627                           
  4628                           ;asic.c: 341: m[3-n] = m[3-n] + m[7-n];
  4629  0277  0364               	decf	AsicPreCalc@n^(0+128),w
  4630  0278  3AFF               	xorlw	255
  4631  0279  00A2               	movwf	??_AsicPreCalc^(0+128)
  4632  027A  3001               	movlw	1
  4633  027B                     u5015:	
  4634  027B  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4635  027C  3EFF               	addlw	-1
  4636  027D  1D03               	skipz
  4637  027E  2A7B               	goto	u5015
  4638  027F  3522               	lslf	??_AsicPreCalc^(0+128),w
  4639  0280  3E1C               	addlw	28
  4640  0281  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4641  0282  0086               	movwf	6
  4642  0283  0187               	clrf	7
  4643  0284  3F40               	moviw [0]fsr1
  4644  0285  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4645  0286  3F41               	moviw [1]fsr1
  4646  0287  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4647  0288  3F42               	moviw [2]fsr1
  4648  0289  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4649  028A  3F43               	moviw [3]fsr1
  4650  028B  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4651  028C  0364               	decf	AsicPreCalc@n^(0+128),w
  4652  028D  3AFF               	xorlw	255
  4653  028E  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  4654  028F  3001               	movlw	1
  4655  0290                     u5025:	
  4656  0290  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4657  0291  3EFF               	addlw	-1
  4658  0292  1D03               	skipz
  4659  0293  2A90               	goto	u5025
  4660  0294  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4661  0295  3E0C               	addlw	12
  4662  0296  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4663  0297  0086               	movwf	6
  4664  0298  0187               	clrf	7
  4665  0299  3F40               	moviw [0]fsr1
  4666  029A  07A3               	addwf	(??_AsicPreCalc+1)^(0+128),f
  4667  029B  3F41               	moviw [1]fsr1
  4668  029C  3DA4               	addwfc	((??_AsicPreCalc+1)^(0+128)+1),f
  4669  029D  3F42               	moviw [2]fsr1
  4670  029E  3DA5               	addwfc	((??_AsicPreCalc+1)^(0+128)+2),f
  4671  029F  3F43               	moviw [3]fsr1
  4672  02A0  3DA6               	addwfc	((??_AsicPreCalc+1)^(0+128)+3),f
  4673  02A1  0364               	decf	AsicPreCalc@n^(0+128),w
  4674  02A2  3AFF               	xorlw	255
  4675  02A3  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  4676  02A4  3001               	movlw	1
  4677  02A5                     u5035:	
  4678  02A5  35A8               	lslf	(??_AsicPreCalc+6)^(0+128),f
  4679  02A6  3EFF               	addlw	-1
  4680  02A7  1D03               	skipz
  4681  02A8  2AA5               	goto	u5035
  4682  02A9  3528               	lslf	(??_AsicPreCalc+6)^(0+128),w
  4683  02AA  3E0C               	addlw	12
  4684  02AB  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4685  02AC  0086               	movwf	6
  4686  02AD  0187               	clrf	7
  4687  02AE  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4688  02AF  3FC0               	movwi [0]fsr1
  4689  02B0  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4690  02B1  3FC1               	movwi [1]fsr1
  4691  02B2  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4692  02B3  3FC2               	movwi [2]fsr1
  4693  02B4  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4694  02B5  3FC3               	movwi [3]fsr1
  4695                           
  4696                           ;asic.c: 342: x = rotate(m[((0-n)&7)], 30);
  4697  02B6  0364               	decf	AsicPreCalc@n^(0+128),w
  4698  02B7  3AFF               	xorlw	255
  4699  02B8  3907               	andlw	7
  4700  02B9  00A2               	movwf	??_AsicPreCalc^(0+128)
  4701  02BA  3001               	movlw	1
  4702  02BB                     u5045:	
  4703  02BB  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4704  02BC  3EFF               	addlw	-1
  4705  02BD  1D03               	skipz
  4706  02BE  2ABB               	goto	u5045
  4707  02BF  3522               	lslf	??_AsicPreCalc^(0+128),w
  4708  02C0  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4709  02C1  0086               	movwf	6
  4710  02C2  0187               	clrf	7
  4711  02C3  3F40               	moviw [0]fsr1
  4712  02C4  0020               	movlb	0	; select bank0
  4713  02C5  00D8               	movwf	?_rotate
  4714  02C6  3F41               	moviw [1]fsr1
  4715  02C7  00D9               	movwf	?_rotate+1
  4716  02C8  3F42               	moviw [2]fsr1
  4717  02C9  00DA               	movwf	?_rotate+2
  4718  02CA  3F43               	moviw [3]fsr1
  4719  02CB  00DB               	movwf	?_rotate+3
  4720  02CC  301E               	movlw	30
  4721  02CD  0021               	movlb	1	; select bank1
  4722  02CE  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4723  02CF  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4724  02D0  0020               	movlb	0	; select bank0
  4725  02D1  00DC               	movwf	?_rotate+4
  4726  02D2  319B  23EC  3180   	fcall	_rotate
  4727  02D5  0020               	movlb	0	; select bank0
  4728  02D6  085B               	movf	?_rotate+3,w
  4729  02D7  0021               	movlb	1	; select bank1
  4730  02D8  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4731  02D9  0020               	movlb	0	; select bank0
  4732  02DA  085A               	movf	?_rotate+2,w
  4733  02DB  0021               	movlb	1	; select bank1
  4734  02DC  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4735  02DD  0020               	movlb	0	; select bank0
  4736  02DE  0859               	movf	?_rotate+1,w
  4737  02DF  0021               	movlb	1	; select bank1
  4738  02E0  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4739  02E1  0020               	movlb	0	; select bank0
  4740  02E2  0858               	movf	?_rotate,w
  4741  02E3  0021               	movlb	1	; select bank1
  4742  02E4  00E0               	movwf	AsicPreCalc@x^(0+128)
  4743                           
  4744                           ;asic.c: 343: y = rotate(m[((0-n)&7)], 19);
  4745  02E5  0364               	decf	AsicPreCalc@n^(0+128),w
  4746  02E6  3AFF               	xorlw	255
  4747  02E7  3907               	andlw	7
  4748  02E8  00A2               	movwf	??_AsicPreCalc^(0+128)
  4749  02E9  3001               	movlw	1
  4750  02EA                     u5055:	
  4751  02EA  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4752  02EB  3EFF               	addlw	-1
  4753  02EC  1D03               	skipz
  4754  02ED  2AEA               	goto	u5055
  4755  02EE  3522               	lslf	??_AsicPreCalc^(0+128),w
  4756  02EF  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4757  02F0  0086               	movwf	6
  4758  02F1  0187               	clrf	7
  4759  02F2  3F40               	moviw [0]fsr1
  4760  02F3  0020               	movlb	0	; select bank0
  4761  02F4  00D8               	movwf	?_rotate
  4762  02F5  3F41               	moviw [1]fsr1
  4763  02F6  00D9               	movwf	?_rotate+1
  4764  02F7  3F42               	moviw [2]fsr1
  4765  02F8  00DA               	movwf	?_rotate+2
  4766  02F9  3F43               	moviw [3]fsr1
  4767  02FA  00DB               	movwf	?_rotate+3
  4768  02FB  3013               	movlw	19
  4769  02FC  0021               	movlb	1	; select bank1
  4770  02FD  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4771  02FE  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4772  02FF  0020               	movlb	0	; select bank0
  4773  0300  00DC               	movwf	?_rotate+4
  4774  0301  319B  23EC  3180   	fcall	_rotate
  4775  0304  0020               	movlb	0	; select bank0
  4776  0305  085B               	movf	?_rotate+3,w
  4777  0306  0021               	movlb	1	; select bank1
  4778  0307  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4779  0308  0020               	movlb	0	; select bank0
  4780  0309  085A               	movf	?_rotate+2,w
  4781  030A  0021               	movlb	1	; select bank1
  4782  030B  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4783  030C  0020               	movlb	0	; select bank0
  4784  030D  0859               	movf	?_rotate+1,w
  4785  030E  0021               	movlb	1	; select bank1
  4786  030F  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4787  0310  0020               	movlb	0	; select bank0
  4788  0311  0858               	movf	?_rotate,w
  4789  0312  0021               	movlb	1	; select bank1
  4790  0313  00DC               	movwf	AsicPreCalc@y^(0+128)
  4791                           
  4792                           ;asic.c: 344: y = y^x;
  4793  0314  085C               	movf	AsicPreCalc@y^(0+128),w
  4794  0315  0660               	xorwf	AsicPreCalc@x^(0+128),w
  4795  0316  00A2               	movwf	??_AsicPreCalc^(0+128)
  4796  0317  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  4797  0318  0661               	xorwf	(AsicPreCalc@x+1)^(0+128),w
  4798  0319  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4799  031A  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  4800  031B  0662               	xorwf	(AsicPreCalc@x+2)^(0+128),w
  4801  031C  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4802  031D  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  4803  031E  0663               	xorwf	(AsicPreCalc@x+3)^(0+128),w
  4804  031F  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4805  0320  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4806  0321  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4807  0322  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4808  0323  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4809  0324  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4810  0325  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4811  0326  0822               	movf	??_AsicPreCalc^(0+128),w
  4812  0327  00DC               	movwf	AsicPreCalc@y^(0+128)
  4813                           
  4814                           ;asic.c: 345: x = rotate(m[((0-n)&7)], 10);
  4815  0328  0364               	decf	AsicPreCalc@n^(0+128),w
  4816  0329  3AFF               	xorlw	255
  4817  032A  3907               	andlw	7
  4818  032B  00A2               	movwf	??_AsicPreCalc^(0+128)
  4819  032C  3001               	movlw	1
  4820  032D                     u5065:	
  4821  032D  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4822  032E  3EFF               	addlw	-1
  4823  032F  1D03               	skipz
  4824  0330  2B2D               	goto	u5065
  4825  0331  3522               	lslf	??_AsicPreCalc^(0+128),w
  4826  0332  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4827  0333  0086               	movwf	6
  4828  0334  0187               	clrf	7
  4829  0335  3F40               	moviw [0]fsr1
  4830  0336  0020               	movlb	0	; select bank0
  4831  0337  00D8               	movwf	?_rotate
  4832  0338  3F41               	moviw [1]fsr1
  4833  0339  00D9               	movwf	?_rotate+1
  4834  033A  3F42               	moviw [2]fsr1
  4835  033B  00DA               	movwf	?_rotate+2
  4836  033C  3F43               	moviw [3]fsr1
  4837  033D  00DB               	movwf	?_rotate+3
  4838  033E  300A               	movlw	10
  4839  033F  0021               	movlb	1	; select bank1
  4840  0340  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4841  0341  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4842  0342  0020               	movlb	0	; select bank0
  4843  0343  00DC               	movwf	?_rotate+4
  4844  0344  319B  23EC  3180   	fcall	_rotate
  4845  0347  0020               	movlb	0	; select bank0
  4846  0348  085B               	movf	?_rotate+3,w
  4847  0349  0021               	movlb	1	; select bank1
  4848  034A  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4849  034B  0020               	movlb	0	; select bank0
  4850  034C  085A               	movf	?_rotate+2,w
  4851  034D  0021               	movlb	1	; select bank1
  4852  034E  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4853  034F  0020               	movlb	0	; select bank0
  4854  0350  0859               	movf	?_rotate+1,w
  4855  0351  0021               	movlb	1	; select bank1
  4856  0352  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4857  0353  0020               	movlb	0	; select bank0
  4858  0354  0858               	movf	?_rotate,w
  4859  0355  0021               	movlb	1	; select bank1
  4860  0356  00E0               	movwf	AsicPreCalc@x^(0+128)
  4861                           
  4862                           ;asic.c: 346: y = x^y;
  4863  0357  0860               	movf	AsicPreCalc@x^(0+128),w
  4864  0358  065C               	xorwf	AsicPreCalc@y^(0+128),w
  4865  0359  00A2               	movwf	??_AsicPreCalc^(0+128)
  4866  035A  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4867  035B  065D               	xorwf	(AsicPreCalc@y+1)^(0+128),w
  4868  035C  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  4869  035D  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  4870  035E  065E               	xorwf	(AsicPreCalc@y+2)^(0+128),w
  4871  035F  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  4872  0360  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  4873  0361  065F               	xorwf	(AsicPreCalc@y+3)^(0+128),w
  4874  0362  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  4875  0363  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4876  0364  00DF               	movwf	(AsicPreCalc@y+3)^(0+128)
  4877  0365  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4878  0366  00DE               	movwf	(AsicPreCalc@y+2)^(0+128)
  4879  0367  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4880  0368  00DD               	movwf	(AsicPreCalc@y+1)^(0+128)
  4881  0369  0822               	movf	??_AsicPreCalc^(0+128),w
  4882  036A  00DC               	movwf	AsicPreCalc@y^(0+128)
  4883                           
  4884                           ;asic.c: 347: x = m[((0-n)&7)] | m[((1-n)&7)];
  4885  036B  0364               	decf	AsicPreCalc@n^(0+128),w
  4886  036C  3AFF               	xorlw	255
  4887  036D  3E01               	addlw	1
  4888  036E  3907               	andlw	7
  4889  036F  00A2               	movwf	??_AsicPreCalc^(0+128)
  4890  0370  3001               	movlw	1
  4891  0371                     u5075:	
  4892  0371  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4893  0372  3EFF               	addlw	-1
  4894  0373  1D03               	skipz
  4895  0374  2B71               	goto	u5075
  4896  0375  3522               	lslf	??_AsicPreCalc^(0+128),w
  4897  0376  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4898  0377  0086               	movwf	6
  4899  0378  0187               	clrf	7
  4900  0379  3F40               	moviw [0]fsr1
  4901  037A  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4902  037B  3F41               	moviw [1]fsr1
  4903  037C  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4904  037D  3F42               	moviw [2]fsr1
  4905  037E  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4906  037F  3F43               	moviw [3]fsr1
  4907  0380  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4908  0381  0364               	decf	AsicPreCalc@n^(0+128),w
  4909  0382  3AFF               	xorlw	255
  4910  0383  3907               	andlw	7
  4911  0384  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  4912  0385  3001               	movlw	1
  4913  0386                     u5085:	
  4914  0386  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  4915  0387  3EFF               	addlw	-1
  4916  0388  1D03               	skipz
  4917  0389  2B86               	goto	u5085
  4918  038A  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  4919  038B  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4920  038C  0086               	movwf	6
  4921  038D  0187               	clrf	7
  4922  038E  3F40               	moviw [0]fsr1
  4923  038F  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  4924  0390  3F41               	moviw [1]fsr1
  4925  0391  00A9               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  4926  0392  3F42               	moviw [2]fsr1
  4927  0393  00AA               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  4928  0394  3F43               	moviw [3]fsr1
  4929  0395  00AB               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  4930  0396  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4931  0397  0428               	iorwf	(??_AsicPreCalc+6)^(0+128),w
  4932  0398  00E0               	movwf	AsicPreCalc@x^(0+128)
  4933  0399  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4934  039A  0429               	iorwf	(??_AsicPreCalc+7)^(0+128),w
  4935  039B  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4936  039C  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4937  039D  042A               	iorwf	(??_AsicPreCalc+8)^(0+128),w
  4938  039E  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4939  039F  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4940  03A0  042B               	iorwf	(??_AsicPreCalc+9)^(0+128),w
  4941  03A1  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4942                           
  4943                           ;asic.c: 348: x = m[((2-n)&7)] & x;
  4944  03A2  0364               	decf	AsicPreCalc@n^(0+128),w
  4945  03A3  3AFF               	xorlw	255
  4946  03A4  3E02               	addlw	2
  4947  03A5  3907               	andlw	7
  4948  03A6  00A2               	movwf	??_AsicPreCalc^(0+128)
  4949  03A7  3001               	movlw	1
  4950  03A8                     u5095:	
  4951  03A8  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4952  03A9  3EFF               	addlw	-1
  4953  03AA  1D03               	skipz
  4954  03AB  2BA8               	goto	u5095
  4955  03AC  3522               	lslf	??_AsicPreCalc^(0+128),w
  4956  03AD  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4957  03AE  0086               	movwf	6
  4958  03AF  0187               	clrf	7
  4959  03B0  0860               	movf	AsicPreCalc@x^(0+128),w
  4960  03B1  0501               	andwf	1,w
  4961  03B2  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  4962  03B3  3141               	addfsr 1,1
  4963  03B4  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  4964  03B5  0501               	andwf	1,w
  4965  03B6  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  4966  03B7  3141               	addfsr 1,1
  4967  03B8  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  4968  03B9  0501               	andwf	1,w
  4969  03BA  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  4970  03BB  3141               	addfsr 1,1
  4971  03BC  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  4972  03BD  0501               	andwf	1,w
  4973  03BE  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  4974  03BF  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  4975  03C0  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  4976  03C1  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  4977  03C2  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  4978  03C3  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  4979  03C4  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  4980  03C5  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  4981  03C6  00E0               	movwf	AsicPreCalc@x^(0+128)
  4982                           
  4983                           ;asic.c: 349: z = m[((0-n)&7)] & m[((1-n)&7)];
  4984  03C7  0364               	decf	AsicPreCalc@n^(0+128),w
  4985  03C8  3AFF               	xorlw	255
  4986  03C9  3E01               	addlw	1
  4987  03CA  3907               	andlw	7
  4988  03CB  00A2               	movwf	??_AsicPreCalc^(0+128)
  4989  03CC  3001               	movlw	1
  4990  03CD                     u5105:	
  4991  03CD  35A2               	lslf	??_AsicPreCalc^(0+128),f
  4992  03CE  3EFF               	addlw	-1
  4993  03CF  1D03               	skipz
  4994  03D0  2BCD               	goto	u5105
  4995  03D1  3522               	lslf	??_AsicPreCalc^(0+128),w
  4996  03D2  3EB8               	addlw	AsicPreCalc@m& (0+255)
  4997  03D3  0086               	movwf	6
  4998  03D4  0187               	clrf	7
  4999  03D5  3F40               	moviw [0]fsr1
  5000  03D6  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  5001  03D7  3F41               	moviw [1]fsr1
  5002  03D8  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5003  03D9  3F42               	moviw [2]fsr1
  5004  03DA  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5005  03DB  3F43               	moviw [3]fsr1
  5006  03DC  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5007  03DD  0364               	decf	AsicPreCalc@n^(0+128),w
  5008  03DE  3AFF               	xorlw	255
  5009  03DF  3907               	andlw	7
  5010  03E0  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  5011  03E1  3001               	movlw	1
  5012  03E2                     u5115:	
  5013  03E2  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5014  03E3  3EFF               	addlw	-1
  5015  03E4  1D03               	skipz
  5016  03E5  2BE2               	goto	u5115
  5017  03E6  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5018  03E7  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5019  03E8  0086               	movwf	6
  5020  03E9  0187               	clrf	7
  5021  03EA  3F40               	moviw [0]fsr1
  5022  03EB  00A8               	movwf	(??_AsicPreCalc+6)^(0+128)
  5023  03EC  3F41               	moviw [1]fsr1
  5024  03ED  00A9               	movwf	((??_AsicPreCalc+6)^(0+128)+1)
  5025  03EE  3F42               	moviw [2]fsr1
  5026  03EF  00AA               	movwf	((??_AsicPreCalc+6)^(0+128)+2)
  5027  03F0  3F43               	moviw [3]fsr1
  5028  03F1  00AB               	movwf	((??_AsicPreCalc+6)^(0+128)+3)
  5029  03F2  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5030  03F3  0528               	andwf	(??_AsicPreCalc+6)^(0+128),w
  5031  03F4  00D8               	movwf	AsicPreCalc@z^(0+128)
  5032  03F5  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5033  03F6  0529               	andwf	(??_AsicPreCalc+7)^(0+128),w
  5034  03F7  00D9               	movwf	(AsicPreCalc@z+1)^(0+128)
  5035  03F8  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5036  03F9  052A               	andwf	(??_AsicPreCalc+8)^(0+128),w
  5037  03FA  00DA               	movwf	(AsicPreCalc@z+2)^(0+128)
  5038  03FB  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  5039  03FC  052B               	andwf	(??_AsicPreCalc+9)^(0+128),w
  5040  03FD  00DB               	movwf	(AsicPreCalc@z+3)^(0+128)
  5041                           
  5042                           ;asic.c: 350: x = x | z;
  5043  03FE  0860               	movf	AsicPreCalc@x^(0+128),w
  5044  03FF  0458               	iorwf	AsicPreCalc@z^(0+128),w
  5045  0400  00A2               	movwf	??_AsicPreCalc^(0+128)
  5046  0401  0861               	movf	(AsicPreCalc@x+1)^(0+128),w
  5047  0402  0459               	iorwf	(AsicPreCalc@z+1)^(0+128),w
  5048  0403  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  5049  0404  0862               	movf	(AsicPreCalc@x+2)^(0+128),w
  5050  0405  045A               	iorwf	(AsicPreCalc@z+2)^(0+128),w
  5051  0406  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  5052  0407  0863               	movf	(AsicPreCalc@x+3)^(0+128),w
  5053  0408  045B               	iorwf	(AsicPreCalc@z+3)^(0+128),w
  5054  0409  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  5055  040A  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5056  040B  00E3               	movwf	(AsicPreCalc@x+3)^(0+128)
  5057  040C  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5058  040D  00E2               	movwf	(AsicPreCalc@x+2)^(0+128)
  5059  040E  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5060  040F  00E1               	movwf	(AsicPreCalc@x+1)^(0+128)
  5061  0410  0822               	movf	??_AsicPreCalc^(0+128),w
  5062  0411  00E0               	movwf	AsicPreCalc@x^(0+128)
  5063                           
  5064                           ;asic.c: 351: m[7-n] += y + x;
  5065  0412  085C               	movf	AsicPreCalc@y^(0+128),w
  5066  0413  0760               	addwf	AsicPreCalc@x^(0+128),w
  5067  0414  00A2               	movwf	??_AsicPreCalc^(0+128)
  5068  0415  085D               	movf	(AsicPreCalc@y+1)^(0+128),w
  5069  0416  3D61               	addwfc	(AsicPreCalc@x+1)^(0+128),w
  5070  0417  00A3               	movwf	(??_AsicPreCalc^(0+128)+1)
  5071  0418  085E               	movf	(AsicPreCalc@y+2)^(0+128),w
  5072  0419  3D62               	addwfc	(AsicPreCalc@x+2)^(0+128),w
  5073  041A  00A4               	movwf	(??_AsicPreCalc^(0+128)+2)
  5074  041B  085F               	movf	(AsicPreCalc@y+3)^(0+128),w
  5075  041C  3D63               	addwfc	(AsicPreCalc@x+3)^(0+128),w
  5076  041D  00A5               	movwf	(??_AsicPreCalc^(0+128)+3)
  5077  041E  0364               	decf	AsicPreCalc@n^(0+128),w
  5078  041F  3AFF               	xorlw	255
  5079  0420  00A6               	movwf	(??_AsicPreCalc+4)^(0+128)
  5080  0421  3001               	movlw	1
  5081  0422                     u5125:	
  5082  0422  35A6               	lslf	(??_AsicPreCalc+4)^(0+128),f
  5083  0423  3EFF               	addlw	-1
  5084  0424  1D03               	skipz
  5085  0425  2C22               	goto	u5125
  5086  0426  3526               	lslf	(??_AsicPreCalc+4)^(0+128),w
  5087  0427  3E1C               	addlw	28
  5088  0428  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5089  0429  0086               	movwf	6
  5090  042A  0187               	clrf	7
  5091  042B  0822               	movf	??_AsicPreCalc^(0+128),w
  5092  042C  0781               	addwf	1,f
  5093  042D  3141               	addfsr 1,1
  5094  042E  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5095  042F  3D81               	addwfc	1,f
  5096  0430  3141               	addfsr 1,1
  5097  0431  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5098  0432  3D81               	addwfc	1,f
  5099  0433  3141               	addfsr 1,1
  5100  0434  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5101  0435  3D81               	addwfc	1,f
  5102                           
  5103                           ;asic.c: 353: PrecalcHashes[2-n] = m[7-n];
  5104  0436  0364               	decf	AsicPreCalc@n^(0+128),w
  5105  0437  3AFF               	xorlw	255
  5106  0438  00A2               	movwf	??_AsicPreCalc^(0+128)
  5107  0439  3001               	movlw	1
  5108  043A                     u5135:	
  5109  043A  35A2               	lslf	??_AsicPreCalc^(0+128),f
  5110  043B  3EFF               	addlw	-1
  5111  043C  1D03               	skipz
  5112  043D  2C3A               	goto	u5135
  5113  043E  3522               	lslf	??_AsicPreCalc^(0+128),w
  5114  043F  3E1C               	addlw	28
  5115  0440  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5116  0441  0086               	movwf	6
  5117  0442  0187               	clrf	7
  5118  0443  3F40               	moviw [0]fsr1
  5119  0444  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  5120  0445  3F41               	moviw [1]fsr1
  5121  0446  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5122  0447  3F42               	moviw [2]fsr1
  5123  0448  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5124  0449  3F43               	moviw [3]fsr1
  5125  044A  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5126  044B  0364               	decf	AsicPreCalc@n^(0+128),w
  5127  044C  3AFF               	xorlw	255
  5128  044D  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  5129  044E  3001               	movlw	1
  5130  044F                     u5145:	
  5131  044F  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5132  0450  3EFF               	addlw	-1
  5133  0451  1D03               	skipz
  5134  0452  2C4F               	goto	u5145
  5135  0453  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5136  0454  3E08               	addlw	8
  5137  0455  3EBA               	addlw	_PrecalcHashes& (0+255)
  5138  0456  0086               	movwf	6
  5139  0457  3001               	movlw	1	; select bank3/4
  5140  0458  0087               	movwf	7
  5141  0459  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5142  045A  3FC0               	movwi [0]fsr1
  5143  045B  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5144  045C  3FC1               	movwi [1]fsr1
  5145  045D  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5146  045E  3FC2               	movwi [2]fsr1
  5147  045F  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  5148  0460  3FC3               	movwi [3]fsr1
  5149                           
  5150                           ;asic.c: 354: PrecalcHashes[5-n] = m[3-n];
  5151  0461  0364               	decf	AsicPreCalc@n^(0+128),w
  5152  0462  3AFF               	xorlw	255
  5153  0463  00A2               	movwf	??_AsicPreCalc^(0+128)
  5154  0464  3001               	movlw	1
  5155  0465                     u5155:	
  5156  0465  35A2               	lslf	??_AsicPreCalc^(0+128),f
  5157  0466  3EFF               	addlw	-1
  5158  0467  1D03               	skipz
  5159  0468  2C65               	goto	u5155
  5160  0469  3522               	lslf	??_AsicPreCalc^(0+128),w
  5161  046A  3E0C               	addlw	12
  5162  046B  3EB8               	addlw	AsicPreCalc@m& (0+255)
  5163  046C  0086               	movwf	6
  5164  046D  0187               	clrf	7
  5165  046E  3F40               	moviw [0]fsr1
  5166  046F  00A3               	movwf	(??_AsicPreCalc+1)^(0+128)
  5167  0470  3F41               	moviw [1]fsr1
  5168  0471  00A4               	movwf	((??_AsicPreCalc+1)^(0+128)+1)
  5169  0472  3F42               	moviw [2]fsr1
  5170  0473  00A5               	movwf	((??_AsicPreCalc+1)^(0+128)+2)
  5171  0474  3F43               	moviw [3]fsr1
  5172  0475  00A6               	movwf	((??_AsicPreCalc+1)^(0+128)+3)
  5173  0476  0364               	decf	AsicPreCalc@n^(0+128),w
  5174  0477  3AFF               	xorlw	255
  5175  0478  00A7               	movwf	(??_AsicPreCalc+5)^(0+128)
  5176  0479  3001               	movlw	1
  5177  047A                     u5165:	
  5178  047A  35A7               	lslf	(??_AsicPreCalc+5)^(0+128),f
  5179  047B  3EFF               	addlw	-1
  5180  047C  1D03               	skipz
  5181  047D  2C7A               	goto	u5165
  5182  047E  3527               	lslf	(??_AsicPreCalc+5)^(0+128),w
  5183  047F  3E14               	addlw	20
  5184  0480  3EBA               	addlw	_PrecalcHashes& (0+255)
  5185  0481  0086               	movwf	6
  5186  0482  3001               	movlw	1	; select bank3/4
  5187  0483  0087               	movwf	7
  5188  0484  0823               	movf	(??_AsicPreCalc+1)^(0+128),w
  5189  0485  3FC0               	movwi [0]fsr1
  5190  0486  0824               	movf	(??_AsicPreCalc+2)^(0+128),w
  5191  0487  3FC1               	movwi [1]fsr1
  5192  0488  0825               	movf	(??_AsicPreCalc+3)^(0+128),w
  5193  0489  3FC2               	movwi [2]fsr1
  5194  048A  0826               	movf	(??_AsicPreCalc+4)^(0+128),w
  5195  048B  3FC3               	movwi [3]fsr1
  5196  048C  3001               	movlw	1
  5197  048D  00A2               	movwf	??_AsicPreCalc^(0+128)
  5198  048E  0822               	movf	??_AsicPreCalc^(0+128),w
  5199  048F  07E4               	addwf	AsicPreCalc@n^(0+128),f
  5200  0490  28DC               	goto	L4
  5201  0491                     __end_of_AsicPreCalc:	
  5202                           
  5203                           	psect	text8
  5204  1BEC                     __ptext8:	
  5205 ;; *************** function _rotate *****************
  5206 ;; Defined at:
  5207 ;;		line 313 in file "asic.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  x               4    8[BANK0 ] unsigned long 
  5210 ;;  y               1   12[BANK0 ] unsigned char 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;		None
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  4    8[BANK0 ] unsigned long 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5222 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5224 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5225 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5226 ;;Total ram usage:       13 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    4
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_AsicPreCalc
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           
  5237                           ;psect for function _rotate
  5238  1BEC                     _rotate:	
  5239                           
  5240                           ;asic.c: 314: return ((x<<y) | (x>>(32-y)));
  5241                           
  5242                           ;incstack = 0
  5243                           ; Regs used in _rotate: [wreg+status,2+status,0]
  5244  1BEC  0020               	movlb	0	; select bank0
  5245  1BED  0858               	movf	rotate@x,w
  5246  1BEE  00DD               	movwf	??_rotate
  5247  1BEF  0859               	movf	rotate@x+1,w
  5248  1BF0  00DE               	movwf	??_rotate+1
  5249  1BF1  085A               	movf	rotate@x+2,w
  5250  1BF2  00DF               	movwf	??_rotate+2
  5251  1BF3  085B               	movf	rotate@x+3,w
  5252  1BF4  00E0               	movwf	??_rotate+3
  5253  1BF5  035C               	decf	rotate@y,w
  5254  1BF6  3AFF               	xorlw	255
  5255  1BF7  3E20               	addlw	32
  5256  1BF8  0A89               	incf	9,f
  5257  1BF9  2BFF               	goto	u4840
  5258  1BFA                     u4845:	
  5259  1BFA  1003               	clrc
  5260  1BFB  0CE0               	rrf	??_rotate+3,f
  5261  1BFC  0CDF               	rrf	??_rotate+2,f
  5262  1BFD  0CDE               	rrf	??_rotate+1,f
  5263  1BFE  0CDD               	rrf	??_rotate,f
  5264  1BFF                     u4840:	
  5265  1BFF  3EFF               	addlw	-1
  5266  1C00  1D03               	skipz
  5267  1C01  2BFA               	goto	u4845
  5268  1C02  0858               	movf	rotate@x,w
  5269  1C03  00E1               	movwf	??_rotate+4
  5270  1C04  0859               	movf	rotate@x+1,w
  5271  1C05  00E2               	movwf	??_rotate+5
  5272  1C06  085A               	movf	rotate@x+2,w
  5273  1C07  00E3               	movwf	??_rotate+6
  5274  1C08  085B               	movf	rotate@x+3,w
  5275  1C09  00E4               	movwf	??_rotate+7
  5276  1C0A  0A5C               	incf	rotate@y,w
  5277  1C0B  2C10               	goto	u4850
  5278  1C0C                     u4855:	
  5279  1C0C  35E1               	lslf	??_rotate+4,f
  5280  1C0D  0DE2               	rlf	??_rotate+5,f
  5281  1C0E  0DE3               	rlf	??_rotate+6,f
  5282  1C0F  0DE4               	rlf	??_rotate+7,f
  5283  1C10                     u4850:	
  5284  1C10  0B89               	decfsz	9,f
  5285  1C11  2C0C               	goto	u4855
  5286  1C12  0861               	movf	??_rotate+4,w
  5287  1C13  04DD               	iorwf	??_rotate,f
  5288  1C14  0862               	movf	??_rotate+5,w
  5289  1C15  04DE               	iorwf	??_rotate+1,f
  5290  1C16  0863               	movf	??_rotate+6,w
  5291  1C17  04DF               	iorwf	??_rotate+2,f
  5292  1C18  0864               	movf	??_rotate+7,w
  5293  1C19  04E0               	iorwf	??_rotate+3,f
  5294  1C1A  0860               	movf	??_rotate+3,w
  5295  1C1B  00DB               	movwf	?_rotate+3
  5296  1C1C  085F               	movf	??_rotate+2,w
  5297  1C1D  00DA               	movwf	?_rotate+2
  5298  1C1E  085E               	movf	??_rotate+1,w
  5299  1C1F  00D9               	movwf	?_rotate+1
  5300  1C20  085D               	movf	??_rotate,w
  5301  1C21  00D8               	movwf	?_rotate
  5302  1C22  0008               	return
  5303  1C23                     __end_of_rotate:	
  5304                           
  5305                           	psect	text9
  5306  1572                     __ptext9:	
  5307 ;; *************** function _SendAsicData *****************
  5308 ;; Defined at:
  5309 ;;		line 36 in file "asic.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;  work            2   14[BANK0 ] PTR struct _worktask
  5312 ;;		 -> WorkQue(360), 
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;		None
  5315 ;; Return value:  Size  Location     Type
  5316 ;;		None               void
  5317 ;; Registers used:
  5318 ;;		wreg, status,2, status,0, pclath, cstack
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5324 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5326 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5327 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5328 ;;Total ram usage:        6 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; Hardware stack levels required when called:    5
  5331 ;; This function calls:
  5332 ;;		_Send32
  5333 ;; This function is called by:
  5334 ;;		_AsicPushWork
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           
  5339                           ;psect for function _SendAsicData
  5340  1572                     _SendAsicData:	
  5341                           
  5342                           ;asic.c: 37: GIE = 0;
  5343                           
  5344                           ;incstack = 0
  5345                           ; Regs used in _SendAsicData: [wreg+status,2+status,0+pclath+cstack]
  5346  1572  138B               	bcf	11,7	;volatile
  5347                           
  5348                           ;asic.c: 38: last_bit0 = 0x48; last_bit1 = 0x90;
  5349  1573  3048               	movlw	72
  5350  1574  0020               	movlb	0	; select bank0
  5351  1575  00E0               	movwf	??_SendAsicData
  5352  1576  0860               	movf	??_SendAsicData,w
  5353  1577  0022               	movlb	2	; select bank2
  5354  1578  00B5               	movwf	_last_bit0^(0+256)
  5355  1579  3090               	movlw	144
  5356  157A  0020               	movlb	0	; select bank0
  5357  157B  00E0               	movwf	??_SendAsicData
  5358  157C  0860               	movf	??_SendAsicData,w
  5359  157D  0022               	movlb	2	; select bank2
  5360  157E  00B6               	movwf	_last_bit1^(0+256)
  5361                           
  5362                           ;asic.c: 39: send32_data = (WORD)&ClockCfg; send32_count = 2;
  5363  157F  30D2               	movlw	low _ClockCfg
  5364  1580  00A4               	movwf	_send32_data^(0+256)
  5365  1581  3001               	movlw	high _ClockCfg
  5366  1582  00A5               	movwf	(_send32_data+1)^(0+256)
  5367  1583  3002               	movlw	2
  5368  1584  0020               	movlb	0	; select bank0
  5369  1585  00E0               	movwf	??_SendAsicData
  5370  1586  0860               	movf	??_SendAsicData,w
  5371  1587  0022               	movlb	2	; select bank2
  5372  1588  00B8               	movwf	_send32_count^(0+256)
  5373                           
  5374                           ;asic.c: 40: Send32();
  5375  1589  3188  20FD  3195   	fcall	_Send32
  5376                           
  5377                           ;asic.c: 41: send32_data = (WORD)&work->Merkle; send32_count = 3;
  5378  158C  0020               	movlb	0	; select bank0
  5379  158D  085E               	movf	SendAsicData@work,w
  5380  158E  3E21               	addlw	33
  5381  158F  0022               	movlb	2	; select bank2
  5382  1590  00A4               	movwf	_send32_data^(0+256)
  5383  1591  3000               	movlw	0
  5384  1592  0020               	movlb	0	; select bank0
  5385  1593  3D5F               	addwfc	SendAsicData@work+1,w
  5386  1594  0022               	movlb	2	; select bank2
  5387  1595  00A5               	movwf	(_send32_data+1)^(0+256)
  5388  1596  3003               	movlw	3
  5389  1597  0020               	movlb	0	; select bank0
  5390  1598  00E0               	movwf	??_SendAsicData
  5391  1599  0860               	movf	??_SendAsicData,w
  5392  159A  0022               	movlb	2	; select bank2
  5393  159B  00B8               	movwf	_send32_count^(0+256)
  5394                           
  5395                           ;asic.c: 42: Send32();
  5396  159C  3188  20FD  3195   	fcall	_Send32
  5397                           
  5398                           ;asic.c: 43: send32_data = (WORD)&PrecalcHashes[1]; send32_count = 5;
  5399  159F  30BE               	movlw	low (_PrecalcHashes+4)
  5400  15A0  0022               	movlb	2	; select bank2
  5401  15A1  00A4               	movwf	_send32_data^(0+256)
  5402  15A2  3001               	movlw	high (_PrecalcHashes+4)
  5403  15A3  00A5               	movwf	(_send32_data+1)^(0+256)
  5404  15A4  3005               	movlw	5
  5405  15A5  0020               	movlb	0	; select bank0
  5406  15A6  00E0               	movwf	??_SendAsicData
  5407  15A7  0860               	movf	??_SendAsicData,w
  5408  15A8  0022               	movlb	2	; select bank2
  5409  15A9  00B8               	movwf	_send32_count^(0+256)
  5410                           
  5411                           ;asic.c: 44: Send32();
  5412  15AA  3188  20FD  3195   	fcall	_Send32
  5413                           
  5414                           ;asic.c: 45: send32_data = (WORD)&work->MidState; send32_count = 8;
  5415  15AD  0020               	movlb	0	; select bank0
  5416  15AE  085E               	movf	SendAsicData@work,w
  5417  15AF  3E01               	addlw	1
  5418  15B0  0022               	movlb	2	; select bank2
  5419  15B1  00A4               	movwf	_send32_data^(0+256)
  5420  15B2  3000               	movlw	0
  5421  15B3  0020               	movlb	0	; select bank0
  5422  15B4  3D5F               	addwfc	SendAsicData@work+1,w
  5423  15B5  0022               	movlb	2	; select bank2
  5424  15B6  00A5               	movwf	(_send32_data+1)^(0+256)
  5425  15B7  3008               	movlw	8
  5426  15B8  0020               	movlb	0	; select bank0
  5427  15B9  00E0               	movwf	??_SendAsicData
  5428  15BA  0860               	movf	??_SendAsicData,w
  5429  15BB  0022               	movlb	2	; select bank2
  5430  15BC  00B8               	movwf	_send32_count^(0+256)
  5431                           
  5432                           ;asic.c: 46: Send32();
  5433  15BD  3188  20FD  3195   	fcall	_Send32
  5434                           
  5435                           ;asic.c: 47: send32_data = (WORD)&PrecalcHashes; send32_count = 1;
  5436  15C0  30BA               	movlw	low _PrecalcHashes
  5437  15C1  0022               	movlb	2	; select bank2
  5438  15C2  00A4               	movwf	_send32_data^(0+256)
  5439  15C3  3001               	movlw	high _PrecalcHashes
  5440  15C4  00A5               	movwf	(_send32_data+1)^(0+256)
  5441  15C5  01B8               	clrf	_send32_count^(0+256)
  5442  15C6  0AB8               	incf	_send32_count^(0+256),f
  5443                           
  5444                           ;asic.c: 48: Send32();
  5445  15C7  3188  20FD  3195   	fcall	_Send32
  5446                           
  5447                           ;asic.c: 49: last_bit0 = last_bit1 = 0x50;
  5448  15CA  3050               	movlw	80
  5449  15CB  0022               	movlb	2	; select bank2
  5450  15CC  00B6               	movwf	_last_bit1^(0+256)
  5451  15CD  0020               	movlb	0	; select bank0
  5452  15CE  00E0               	movwf	??_SendAsicData
  5453  15CF  0860               	movf	??_SendAsicData,w
  5454  15D0  0022               	movlb	2	; select bank2
  5455  15D1  00B5               	movwf	_last_bit0^(0+256)
  5456                           
  5457                           ;asic.c: 50: send32_data = (WORD)&NonceRanges; send32_count = BankSize;
  5458  15D2  3020               	movlw	low _NonceRanges
  5459  15D3  00A4               	movwf	_send32_data^(0+256)
  5460  15D4  3003               	movlw	high _NonceRanges
  5461  15D5  00A5               	movwf	(_send32_data+1)^(0+256)
  5462  15D6  083F               	movf	_BankSize^(0+256),w
  5463  15D7  0020               	movlb	0	; select bank0
  5464  15D8  00E0               	movwf	??_SendAsicData
  5465  15D9  0860               	movf	??_SendAsicData,w
  5466  15DA  0022               	movlb	2	; select bank2
  5467  15DB  00B8               	movwf	_send32_count^(0+256)
  5468                           
  5469                           ;asic.c: 51: Send32();
  5470  15DC  3188  20FD         	fcall	_Send32
  5471                           
  5472                           ;asic.c: 52: LATC = 0xD8;;
  5473  15DE  30D8               	movlw	216
  5474  15DF  0022               	movlb	2	; select bank2
  5475  15E0  008E               	movwf	14	;volatile
  5476                           
  5477                           ;asic.c: 53: GIE = 1;
  5478  15E1  178B               	bsf	11,7	;volatile
  5479                           
  5480                           ;asic.c: 54: ClockCfg[0] = ClockCfg[0] & ~0x00000002;
  5481  15E2  30FD               	movlw	253
  5482  15E3  0023               	movlb	3	; select bank3
  5483  15E4  0552               	andwf	_ClockCfg^(0+384),w
  5484  15E5  0020               	movlb	0	; select bank0
  5485  15E6  00E0               	movwf	??_SendAsicData
  5486  15E7  30FF               	movlw	255
  5487  15E8  0023               	movlb	3	; select bank3
  5488  15E9  0553               	andwf	(_ClockCfg+1)^(0+384),w
  5489  15EA  0020               	movlb	0	; select bank0
  5490  15EB  00E1               	movwf	??_SendAsicData+1
  5491  15EC  30FF               	movlw	255
  5492  15ED  0023               	movlb	3	; select bank3
  5493  15EE  0554               	andwf	(_ClockCfg+2)^(0+384),w
  5494  15EF  0020               	movlb	0	; select bank0
  5495  15F0  00E2               	movwf	??_SendAsicData+2
  5496  15F1  30FF               	movlw	255
  5497  15F2  0023               	movlb	3	; select bank3
  5498  15F3  0555               	andwf	(_ClockCfg+3)^(0+384),w
  5499  15F4  0020               	movlb	0	; select bank0
  5500  15F5  00E3               	movwf	??_SendAsicData+3
  5501  15F6  0863               	movf	??_SendAsicData+3,w
  5502  15F7  0023               	movlb	3	; select bank3
  5503  15F8  00D5               	movwf	(_ClockCfg+3)^(0+384)
  5504  15F9  0020               	movlb	0	; select bank0
  5505  15FA  0862               	movf	??_SendAsicData+2,w
  5506  15FB  0023               	movlb	3	; select bank3
  5507  15FC  00D4               	movwf	(_ClockCfg+2)^(0+384)
  5508  15FD  0020               	movlb	0	; select bank0
  5509  15FE  0861               	movf	??_SendAsicData+1,w
  5510  15FF  0023               	movlb	3	; select bank3
  5511  1600  00D3               	movwf	(_ClockCfg+1)^(0+384)
  5512  1601  0020               	movlb	0	; select bank0
  5513  1602  0860               	movf	??_SendAsicData,w
  5514  1603  0023               	movlb	3	; select bank3
  5515  1604  00D2               	movwf	_ClockCfg^(0+384)
  5516  1605  0008               	return
  5517  1606                     __end_of_SendAsicData:	
  5518                           
  5519                           	psect	text10
  5520  08FD                     __ptext10:	
  5521 ;; *************** function _Send32 *****************
  5522 ;; Defined at:
  5523 ;;		line 58 in file "asic.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;		None
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;		None
  5528 ;; Return value:  Size  Location     Type
  5529 ;;		None               void
  5530 ;; Registers used:
  5531 ;;		None
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5541 ;;Total ram usage:        0 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:    4
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_SendAsicData
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           
  5552                           ;psect for function _Send32
  5553  08FD                     _Send32:	
  5554                           
  5555                           ;incstack = 0
  5556                           ; Regs used in _Send32: []
  5557  08FD  0022               	banksel	270	;# 
  5558  08FE  0824               	movf	_send32_data& (0+127),w	;# 
  5559  08FF  0086               	movwf	6	;# 
  5560  0900  0825               	movf	(_send32_data+1)& (0+127),w	;# 
  5561  0901  0087               	movwf	7	;# 
  5562  0902                     next_word:	
  5563                           
  5564                           ;# 
  5565  0902  3048               	movlw	72	;# 
  5566  0903  018E               	clrf	14	;# 
  5567  0904  1801               	btfsc	1,0	;# 
  5568  0905  3090               	movlw	144	;# 
  5569  0906  008E               	movwf	14	;# 
  5570  0907  3048               	movlw	72	;# 
  5571  0908  018E               	clrf	14	;# 
  5572  0909  1881               	btfsc	1,1	;# 
  5573  090A  3090               	movlw	144	;# 
  5574  090B  008E               	movwf	14	;# 
  5575  090C  3048               	movlw	72	;# 
  5576  090D  018E               	clrf	14	;# 
  5577  090E  1901               	btfsc	1,2	;# 
  5578  090F  3090               	movlw	144	;# 
  5579  0910  008E               	movwf	14	;# 
  5580  0911  3048               	movlw	72	;# 
  5581  0912  018E               	clrf	14	;# 
  5582  0913  1981               	btfsc	1,3	;# 
  5583  0914  3090               	movlw	144	;# 
  5584  0915  008E               	movwf	14	;# 
  5585  0916  3048               	movlw	72	;# 
  5586  0917  018E               	clrf	14	;# 
  5587  0918  1A01               	btfsc	1,4	;# 
  5588  0919  3090               	movlw	144	;# 
  5589  091A  008E               	movwf	14	;# 
  5590  091B  3048               	movlw	72	;# 
  5591  091C  018E               	clrf	14	;# 
  5592  091D  1A81               	btfsc	1,5	;# 
  5593  091E  3090               	movlw	144	;# 
  5594  091F  008E               	movwf	14	;# 
  5595  0920  3048               	movlw	72	;# 
  5596  0921  018E               	clrf	14	;# 
  5597  0922  1B01               	btfsc	1,6	;# 
  5598  0923  3090               	movlw	144	;# 
  5599  0924  008E               	movwf	14	;# 
  5600  0925  3048               	movlw	72	;# 
  5601  0926  018E               	clrf	14	;# 
  5602  0927  1B81               	btfsc	1,7	;# 
  5603  0928  3090               	movlw	144	;# 
  5604  0929  008E               	movwf	14	;# 
  5605  092A  3141               	addfsr 1,1	;# 
  5606  092B  3048               	movlw	72	;# 
  5607  092C  018E               	clrf	14	;# 
  5608  092D  1801               	btfsc	1,0	;# 
  5609  092E  3090               	movlw	144	;# 
  5610  092F  008E               	movwf	14	;# 
  5611  0930  3048               	movlw	72	;# 
  5612  0931  018E               	clrf	14	;# 
  5613  0932  1881               	btfsc	1,1	;# 
  5614  0933  3090               	movlw	144	;# 
  5615  0934  008E               	movwf	14	;# 
  5616  0935  3048               	movlw	72	;# 
  5617  0936  018E               	clrf	14	;# 
  5618  0937  1901               	btfsc	1,2	;# 
  5619  0938  3090               	movlw	144	;# 
  5620  0939  008E               	movwf	14	;# 
  5621  093A  3048               	movlw	72	;# 
  5622  093B  018E               	clrf	14	;# 
  5623  093C  1981               	btfsc	1,3	;# 
  5624  093D  3090               	movlw	144	;# 
  5625  093E  008E               	movwf	14	;# 
  5626  093F  3048               	movlw	72	;# 
  5627  0940  018E               	clrf	14	;# 
  5628  0941  1A01               	btfsc	1,4	;# 
  5629  0942  3090               	movlw	144	;# 
  5630  0943  008E               	movwf	14	;# 
  5631  0944  3048               	movlw	72	;# 
  5632  0945  018E               	clrf	14	;# 
  5633  0946  1A81               	btfsc	1,5	;# 
  5634  0947  3090               	movlw	144	;# 
  5635  0948  008E               	movwf	14	;# 
  5636  0949  3048               	movlw	72	;# 
  5637  094A  018E               	clrf	14	;# 
  5638  094B  1B01               	btfsc	1,6	;# 
  5639  094C  3090               	movlw	144	;# 
  5640  094D  008E               	movwf	14	;# 
  5641  094E  3048               	movlw	72	;# 
  5642  094F  018E               	clrf	14	;# 
  5643  0950  1B81               	btfsc	1,7	;# 
  5644  0951  3090               	movlw	144	;# 
  5645  0952  008E               	movwf	14	;# 
  5646  0953  3141               	addfsr 1,1	;# 
  5647  0954  3048               	movlw	72	;# 
  5648  0955  018E               	clrf	14	;# 
  5649  0956  1801               	btfsc	1,0	;# 
  5650  0957  3090               	movlw	144	;# 
  5651  0958  008E               	movwf	14	;# 
  5652  0959  3048               	movlw	72	;# 
  5653  095A  018E               	clrf	14	;# 
  5654  095B  1881               	btfsc	1,1	;# 
  5655  095C  3090               	movlw	144	;# 
  5656  095D  008E               	movwf	14	;# 
  5657  095E  3048               	movlw	72	;# 
  5658  095F  018E               	clrf	14	;# 
  5659  0960  1901               	btfsc	1,2	;# 
  5660  0961  3090               	movlw	144	;# 
  5661  0962  008E               	movwf	14	;# 
  5662  0963  3048               	movlw	72	;# 
  5663  0964  018E               	clrf	14	;# 
  5664  0965  1981               	btfsc	1,3	;# 
  5665  0966  3090               	movlw	144	;# 
  5666  0967  008E               	movwf	14	;# 
  5667  0968  3048               	movlw	72	;# 
  5668  0969  018E               	clrf	14	;# 
  5669  096A  1A01               	btfsc	1,4	;# 
  5670  096B  3090               	movlw	144	;# 
  5671  096C  008E               	movwf	14	;# 
  5672  096D  3048               	movlw	72	;# 
  5673  096E  018E               	clrf	14	;# 
  5674  096F  1A81               	btfsc	1,5	;# 
  5675  0970  3090               	movlw	144	;# 
  5676  0971  008E               	movwf	14	;# 
  5677  0972  3048               	movlw	72	;# 
  5678  0973  018E               	clrf	14	;# 
  5679  0974  1B01               	btfsc	1,6	;# 
  5680  0975  3090               	movlw	144	;# 
  5681  0976  008E               	movwf	14	;# 
  5682  0977  3048               	movlw	72	;# 
  5683  0978  018E               	clrf	14	;# 
  5684  0979  1B81               	btfsc	1,7	;# 
  5685  097A  3090               	movlw	144	;# 
  5686  097B  008E               	movwf	14	;# 
  5687  097C  3141               	addfsr 1,1	;# 
  5688  097D  3048               	movlw	72	;# 
  5689  097E  018E               	clrf	14	;# 
  5690  097F  1801               	btfsc	1,0	;# 
  5691  0980  3090               	movlw	144	;# 
  5692  0981  008E               	movwf	14	;# 
  5693  0982  3048               	movlw	72	;# 
  5694  0983  018E               	clrf	14	;# 
  5695  0984  1881               	btfsc	1,1	;# 
  5696  0985  3090               	movlw	144	;# 
  5697  0986  008E               	movwf	14	;# 
  5698  0987  3048               	movlw	72	;# 
  5699  0988  018E               	clrf	14	;# 
  5700  0989  1901               	btfsc	1,2	;# 
  5701  098A  3090               	movlw	144	;# 
  5702  098B  008E               	movwf	14	;# 
  5703  098C  3048               	movlw	72	;# 
  5704  098D  018E               	clrf	14	;# 
  5705  098E  1981               	btfsc	1,3	;# 
  5706  098F  3090               	movlw	144	;# 
  5707  0990  008E               	movwf	14	;# 
  5708  0991  3048               	movlw	72	;# 
  5709  0992  018E               	clrf	14	;# 
  5710  0993  1A01               	btfsc	1,4	;# 
  5711  0994  3090               	movlw	144	;# 
  5712  0995  008E               	movwf	14	;# 
  5713  0996  3048               	movlw	72	;# 
  5714  0997  018E               	clrf	14	;# 
  5715  0998  1A81               	btfsc	1,5	;# 
  5716  0999  3090               	movlw	144	;# 
  5717  099A  008E               	movwf	14	;# 
  5718  099B  3048               	movlw	72	;# 
  5719  099C  018E               	clrf	14	;# 
  5720  099D  1B01               	btfsc	1,6	;# 
  5721  099E  3090               	movlw	144	;# 
  5722  099F  008E               	movwf	14	;# 
  5723  09A0  0835               	movf	_last_bit0& (0+127),w	;# 
  5724  09A1  018E               	clrf	14	;# 
  5725  09A2  1B81               	btfsc	1,7	;# 
  5726  09A3  0836               	movf	_last_bit1& (0+127),w	;# 
  5727  09A4  008E               	movwf	14	;# 
  5728  09A5  3141               	addfsr 1,1	;# 
  5729  09A6  0BB8               	decfsz	_send32_count& (0+127),f	;# 
  5730  09A7  2902               	goto	next_word	;# 
  5731  09A8  0008               	return
  5732  09A9                     __end_of_Send32:	
  5733                           
  5734                           	psect	text11
  5735  1989                     __ptext11:	
  5736 ;; *************** function _InitializeSystem *****************
  5737 ;; Defined at:
  5738 ;;		line 146 in file "main.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;		None
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;		None
  5743 ;; Return value:  Size  Location     Type
  5744 ;;		None               void
  5745 ;; Registers used:
  5746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5756 ;;Total ram usage:        0 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:    9
  5759 ;; This function calls:
  5760 ;;		_USBDeviceInit
  5761 ;;		_UserInit
  5762 ;; This function is called by:
  5763 ;;		_main
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           
  5768                           ;psect for function _InitializeSystem
  5769  1989                     _InitializeSystem:	
  5770                           
  5771                           ;main.c: 148: ANSELA = 0x00;
  5772                           
  5773                           ;incstack = 0
  5774                           ; Regs used in _InitializeSystem: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5775  1989  0023               	movlb	3	; select bank3
  5776  198A  018C               	clrf	12	;volatile
  5777                           
  5778                           ;main.c: 149: ANSELB = 0x00;
  5779  198B  018D               	clrf	13	;volatile
  5780                           
  5781                           ;main.c: 150: ANSELC = 0x04;
  5782  198C  3004               	movlw	4
  5783  198D  008E               	movwf	14	;volatile
  5784                           
  5785                           ;main.c: 153: OSCTUNE = 0;
  5786  198E  0021               	movlb	1	; select bank1
  5787  198F  0198               	clrf	24	;volatile
  5788                           
  5789                           ;main.c: 154: OSCCON = 0xFC;
  5790  1990  30FC               	movlw	252
  5791  1991  0099               	movwf	25	;volatile
  5792                           
  5793                           ;main.c: 155: ACTCON = 0x90;
  5794  1992  3090               	movlw	144
  5795  1993  0027               	movlb	7	; select bank7
  5796  1994  009B               	movwf	27	;volatile
  5797                           
  5798                           ;main.c: 158: USBGenericOutHandle = 0;
  5799  1995  0022               	movlb	2	; select bank2
  5800  1996  01AF               	clrf	_USBGenericOutHandle^(0+256)
  5801                           
  5802                           ;main.c: 159: USBGenericInHandle = 0;
  5803  1997  01AE               	clrf	_USBGenericInHandle^(0+256)
  5804                           
  5805                           ;main.c: 160: WQI = WQX = 0;
  5806  1998  01C3               	clrf	_WQX^(0+256)
  5807  1999  01C2               	clrf	_WQI^(0+256)
  5808                           
  5809                           ;main.c: 162: UserInit();
  5810  199A  3199  215F  3199   	fcall	_UserInit
  5811                           
  5812                           ;main.c: 164: USBDeviceInit();
  5813  199D  3197  2756         	fcall	_USBDeviceInit
  5814  199F  0008               	return
  5815  19A0                     __end_of_InitializeSystem:	
  5816                           
  5817                           	psect	text12
  5818  195F                     __ptext12:	
  5819 ;; *************** function _UserInit *****************
  5820 ;; Defined at:
  5821 ;;		line 170 in file "main.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;		None
  5824 ;; Auto vars:     Size  Location     Type
  5825 ;;		None
  5826 ;; Return value:  Size  Location     Type
  5827 ;;		None               void
  5828 ;; Registers used:
  5829 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5839 ;;Total ram usage:        0 bytes
  5840 ;; Hardware stack levels used:    1
  5841 ;; Hardware stack levels required when called:    8
  5842 ;; This function calls:
  5843 ;;		_DetectAsics
  5844 ;;		_InitFAN
  5845 ;;		_InitTempSensor
  5846 ;;		_InitWorkTick
  5847 ;;		_InitResultRx
  5848 ;; This function is called by:
  5849 ;;		_InitializeSystem
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           
  5854                           ;psect for function _UserInit
  5855  195F                     _UserInit:	
  5856                           
  5857                           ;main.c: 171: TRISAbits.TRISA5 = 0; LATAbits.LATA5 = 1;;
  5858                           
  5859                           ;incstack = 0
  5860                           ; Regs used in _UserInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5861  195F  0021               	movlb	1	; select bank1
  5862  1960  128C               	bcf	12,5	;volatile
  5863  1961  0022               	movlb	2	; select bank2
  5864  1962  168C               	bsf	12,5	;volatile
  5865                           
  5866                           ;main.c: 172: InitTempSensor();
  5867  1963  3199  2172  3199   	fcall	_InitTempSensor
  5868                           
  5869                           ;main.c: 173: InitFAN();
  5870  1966  319A  220A  3199   	fcall	_InitFAN
  5871                           
  5872                           ;main.c: 174: InitWorkTick();
  5873  1969  319A  22A4  3199   	fcall	_InitWorkTick
  5874                           
  5875                           ;main.c: 176: InitResultRx();
  5876  196C  3199  214C  3199   	fcall	_InitResultRx
  5877                           
  5878                           ;main.c: 177: DetectAsics();
  5879  196F  3189  21A9         	fcall	_DetectAsics
  5880  1971  0008               	return
  5881  1972                     __end_of_UserInit:	
  5882                           
  5883                           	psect	text13
  5884  194C                     __ptext13:	
  5885 ;; *************** function _InitResultRx *****************
  5886 ;; Defined at:
  5887 ;;		line 272 in file "klondike.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;		None
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;		None
  5892 ;; Return value:  Size  Location     Type
  5893 ;;		None               void
  5894 ;; Registers used:
  5895 ;;		wreg, status,2
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5905 ;;Total ram usage:        0 bytes
  5906 ;; Hardware stack levels used:    1
  5907 ;; Hardware stack levels required when called:    4
  5908 ;; This function calls:
  5909 ;;		Nothing
  5910 ;; This function is called by:
  5911 ;;		_UserInit
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           
  5916                           ;psect for function _InitResultRx
  5917  194C                     _InitResultRx:	
  5918                           
  5919                           ;klondike.c: 273: ResultQC = 0;
  5920                           
  5921                           ;incstack = 0
  5922                           ; Regs used in _InitResultRx: [wreg+status,2]
  5923  194C  0022               	movlb	2	; select bank2
  5924  194D  01AA               	clrf	_ResultQC^(0+256)
  5925                           
  5926                           ;klondike.c: 274: TXSTAbits.SYNC = 1;
  5927  194E  0023               	movlb	3	; select bank3
  5928  194F  161E               	bsf	30,4	;volatile
  5929                           
  5930                           ;klondike.c: 275: RCSTAbits.SPEN = 1;
  5931  1950  179D               	bsf	29,7	;volatile
  5932                           
  5933                           ;klondike.c: 276: TXSTAbits.CSRC = 0;
  5934  1951  139E               	bcf	30,7	;volatile
  5935                           
  5936                           ;klondike.c: 277: BAUDCONbits.SCKP = 0;
  5937  1952  121F               	bcf	31,4	;volatile
  5938                           
  5939                           ;klondike.c: 278: BAUDCONbits.BRG16 = 1;
  5940  1953  159F               	bsf	31,3	;volatile
  5941                           
  5942                           ;klondike.c: 279: ANSELBbits.ANSB5 = 0;
  5943  1954  128D               	bcf	13,5	;volatile
  5944                           
  5945                           ;klondike.c: 280: IOCBPbits.IOCBP7 = 1;
  5946  1955  0027               	movlb	7	; select bank7
  5947  1956  1794               	bsf	20,7	;volatile
  5948                           
  5949                           ;klondike.c: 281: INTCONbits.IOCIE = 1;
  5950  1957  158B               	bsf	11,3	;volatile
  5951                           
  5952                           ;klondike.c: 282: IOCBF = 0;
  5953  1958  0196               	clrf	22	;volatile
  5954                           
  5955                           ;klondike.c: 283: INTCONbits.GIE = 1;
  5956  1959  178B               	bsf	11,7	;volatile
  5957                           
  5958                           ;klondike.c: 284: RCSTAbits.CREN = 1;
  5959  195A  0023               	movlb	3	; select bank3
  5960  195B  161D               	bsf	29,4	;volatile
  5961                           
  5962                           ;klondike.c: 285: RCREG = 0xFF;
  5963  195C  30FF               	movlw	255
  5964  195D  0099               	movwf	25	;volatile
  5965  195E  0008               	return
  5966  195F                     __end_of_InitResultRx:	
  5967                           
  5968                           	psect	text14
  5969  1AA4                     __ptext14:	
  5970 ;; *************** function _InitWorkTick *****************
  5971 ;; Defined at:
  5972 ;;		line 255 in file "klondike.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;		None
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;		None
  5977 ;; Return value:  Size  Location     Type
  5978 ;;		None               void
  5979 ;; Registers used:
  5980 ;;		wreg, status,2, status,0, pclath, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5990 ;;Total ram usage:        0 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; Hardware stack levels required when called:    7
  5993 ;; This function calls:
  5994 ;;		_UpdateClock
  5995 ;; This function is called by:
  5996 ;;		_UserInit
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           
  6001                           ;psect for function _InitWorkTick
  6002  1AA4                     _InitWorkTick:	
  6003                           
  6004                           ;klondike.c: 256: UpdateClock(500);
  6005                           
  6006                           ;incstack = 0
  6007                           ; Regs used in _InitWorkTick: [wreg+status,2+status,0+pclath+cstack]
  6008  1AA4  3000               	movlw	0
  6009  1AA5  0021               	movlb	1	; select bank1
  6010  1AA6  00E1               	movwf	(?_UpdateClock+3)^(0+128)
  6011  1AA7  3000               	movlw	0
  6012  1AA8  00E0               	movwf	(?_UpdateClock+2)^(0+128)
  6013  1AA9  3001               	movlw	1
  6014  1AAA  00DF               	movwf	(?_UpdateClock+1)^(0+128)
  6015  1AAB  30F4               	movlw	244
  6016  1AAC  00DE               	movwf	?_UpdateClock^(0+128)
  6017  1AAD  3184  2491         	fcall	_UpdateClock
  6018                           
  6019                           ;klondike.c: 257: TMR0CS = 0;
  6020  1AAF  0021               	movlb	1	; select bank1
  6021  1AB0  1295               	bcf	21,5	;volatile
  6022                           
  6023                           ;klondike.c: 258: OPTION_REGbits.PSA = 0;
  6024  1AB1  1195               	bcf	21,3	;volatile
  6025                           
  6026                           ;klondike.c: 259: OPTION_REGbits.PS = 7;
  6027  1AB2  3007               	movlw	7
  6028  1AB3  0495               	iorwf	21,f	;volatile
  6029                           
  6030                           ;klondike.c: 260: TMR0 = HashTime;
  6031  1AB4  0022               	movlb	2	; select bank2
  6032  1AB5  0826               	movf	_HashTime^(0+256),w
  6033  1AB6  0020               	movlb	0	; select bank0
  6034  1AB7  0095               	movwf	21	;volatile
  6035                           
  6036                           ;klondike.c: 262: TRISCbits.TRISC7 = 0;
  6037  1AB8  0021               	movlb	1	; select bank1
  6038  1AB9  138E               	bcf	14,7	;volatile
  6039                           
  6040                           ;klondike.c: 263: TRISCbits.TRISC6 = 0;
  6041  1ABA  130E               	bcf	14,6	;volatile
  6042                           
  6043                           ;klondike.c: 264: TRISCbits.TRISC4 = 0;
  6044  1ABB  120E               	bcf	14,4	;volatile
  6045                           
  6046                           ;klondike.c: 265: TRISCbits.TRISC3 = 0;
  6047  1ABC  118E               	bcf	14,3	;volatile
  6048                           
  6049                           ;klondike.c: 266: LATC = 0xD8;;
  6050  1ABD  30D8               	movlw	216
  6051  1ABE  0022               	movlb	2	; select bank2
  6052  1ABF  008E               	movwf	14	;volatile
  6053                           
  6054                           ;klondike.c: 267: TRISAbits.TRISA4 = 0;
  6055  1AC0  0021               	movlb	1	; select bank1
  6056  1AC1  120C               	bcf	12,4	;volatile
  6057                           
  6058                           ;klondike.c: 268: LATAbits.LATA4 = 0;
  6059  1AC2  0022               	movlb	2	; select bank2
  6060  1AC3  120C               	bcf	12,4	;volatile
  6061  1AC4  0008               	return
  6062  1AC5                     __end_of_InitWorkTick:	
  6063                           
  6064                           	psect	text15
  6065  0491                     __ptext15:	
  6066 ;; *************** function _UpdateClock *****************
  6067 ;; Defined at:
  6068 ;;		line 330 in file "klondike.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  SPEED           4   62[BANK1 ] unsigned long 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;  CLOCK_OD_VAL    4   12[BANK2 ] unsigned long 
  6073 ;;  CLOCK_F_VALU    4    8[BANK2 ] unsigned long 
  6074 ;;  CLOCK_R_VALU    4    4[BANK2 ] unsigned long 
  6075 ;; Return value:  Size  Location     Type
  6076 ;;		None               void
  6077 ;; Registers used:
  6078 ;;		wreg, status,2, status,0, pclath, cstack
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6084 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6085 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0
  6086 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  6087 ;;      Totals:         0       0      16      16       0       0       0       0       0       0       0       0       
      +0       0
  6088 ;;Total ram usage:       32 bytes
  6089 ;; Hardware stack levels used:    1
  6090 ;; Hardware stack levels required when called:    6
  6091 ;; This function calls:
  6092 ;;		___ftadd
  6093 ;;		___ftdiv
  6094 ;;		___fttol
  6095 ;;		___lldiv
  6096 ;;		___lltoft
  6097 ;;		___lmul
  6098 ;;		___lwdiv
  6099 ;; This function is called by:
  6100 ;;		_ProcessCmd
  6101 ;;		_InitWorkTick
  6102 ;; This function uses a non-reentrant model
  6103 ;;
  6104                           
  6105                           
  6106                           ;psect for function _UpdateClock
  6107  0491                     _UpdateClock:	
  6108                           
  6109                           ;klondike.c: 331: DWORD CLOCK_R_VALUE, CLOCK_F_VALUE, CLOCK_OD_VALUE;
  6110                           ;klondike.c: 348: if (SPEED > 250 && SPEED <= 500)
  6111                           
  6112                           ;incstack = 0
  6113                           ; Regs used in _UpdateClock: [wreg+status,2+status,0+pclath+cstack]
  6114  0491  3000               	movlw	0
  6115  0492  0021               	movlb	1	; select bank1
  6116  0493  0261               	subwf	(UpdateClock@SPEED+3)^(0+128),w
  6117  0494  1D03               	skipz
  6118  0495  2CA0               	goto	u5485
  6119  0496  3000               	movlw	0
  6120  0497  0260               	subwf	(UpdateClock@SPEED+2)^(0+128),w
  6121  0498  1D03               	skipz
  6122  0499  2CA0               	goto	u5485
  6123  049A  3000               	movlw	0
  6124  049B  025F               	subwf	(UpdateClock@SPEED+1)^(0+128),w
  6125  049C  1D03               	skipz
  6126  049D  2CA0               	goto	u5485
  6127  049E  30FB               	movlw	251
  6128  049F  025E               	subwf	UpdateClock@SPEED^(0+128),w
  6129  04A0                     u5485:	
  6130  04A0  1C03               	skipc
  6131  04A1  2D15               	goto	l5671
  6132  04A2  3000               	movlw	0
  6133  04A3  0261               	subwf	(UpdateClock@SPEED+3)^(0+128),w
  6134  04A4  1D03               	skipz
  6135  04A5  2CB0               	goto	u5495
  6136  04A6  3000               	movlw	0
  6137  04A7  0260               	subwf	(UpdateClock@SPEED+2)^(0+128),w
  6138  04A8  1D03               	skipz
  6139  04A9  2CB0               	goto	u5495
  6140  04AA  3001               	movlw	1
  6141  04AB  025F               	subwf	(UpdateClock@SPEED+1)^(0+128),w
  6142  04AC  1D03               	skipz
  6143  04AD  2CB0               	goto	u5495
  6144  04AE  30F5               	movlw	245
  6145  04AF  025E               	subwf	UpdateClock@SPEED^(0+128),w
  6146  04B0                     u5495:	
  6147  04B0  1803               	skipnc
  6148  04B1  2D15               	goto	l5671
  6149                           
  6150                           ;klondike.c: 349: {
  6151                           ;klondike.c: 350: CLOCK_R_VALUE = 2;
  6152  04B2  3000               	movlw	0
  6153  04B3  0022               	movlb	2	; select bank2
  6154  04B4  00CB               	movwf	(UpdateClock@CLOCK_R_VALUE+3)^(0+256)
  6155  04B5  3000               	movlw	0
  6156  04B6  00CA               	movwf	(UpdateClock@CLOCK_R_VALUE+2)^(0+256)
  6157  04B7  3000               	movlw	0
  6158  04B8  00C9               	movwf	(UpdateClock@CLOCK_R_VALUE+1)^(0+256)
  6159  04B9  3002               	movlw	2
  6160  04BA  00C8               	movwf	UpdateClock@CLOCK_R_VALUE^(0+256)
  6161                           
  6162                           ;klondike.c: 351: CLOCK_F_VALUE = (SPEED + 3.125) / 6.25;
  6163  04BB  0021               	movlb	1	; select bank1
  6164  04BC  0861               	movf	(UpdateClock@SPEED+3)^(0+128),w
  6165  04BD  0020               	movlb	0	; select bank0
  6166  04BE  00E3               	movwf	?___lltoft+3
  6167  04BF  0021               	movlb	1	; select bank1
  6168  04C0  0860               	movf	(UpdateClock@SPEED+2)^(0+128),w
  6169  04C1  0020               	movlb	0	; select bank0
  6170  04C2  00E2               	movwf	?___lltoft+2
  6171  04C3  0021               	movlb	1	; select bank1
  6172  04C4  085F               	movf	(UpdateClock@SPEED+1)^(0+128),w
  6173  04C5  0020               	movlb	0	; select bank0
  6174  04C6  00E1               	movwf	?___lltoft+1
  6175  04C7  0021               	movlb	1	; select bank1
  6176  04C8  085E               	movf	UpdateClock@SPEED^(0+128),w
  6177  04C9  0020               	movlb	0	; select bank0
  6178  04CA  00E0               	movwf	?___lltoft
  6179  04CB  319B  232E  3184   	fcall	___lltoft
  6180  04CE  0020               	movlb	0	; select bank0
  6181  04CF  0860               	movf	?___lltoft,w
  6182  04D0  0021               	movlb	1	; select bank1
  6183  04D1  00B6               	movwf	(?___ftadd^(0+128)+3)
  6184  04D2  0020               	movlb	0	; select bank0
  6185  04D3  0861               	movf	?___lltoft+1,w
  6186  04D4  0021               	movlb	1	; select bank1
  6187  04D5  00B7               	movwf	((?___ftadd+1)^(0+128)+3)
  6188  04D6  0020               	movlb	0	; select bank0
  6189  04D7  0862               	movf	?___lltoft+2,w
  6190  04D8  0021               	movlb	1	; select bank1
  6191  04D9  00B8               	movwf	((?___ftadd+2)^(0+128)+3)
  6192  04DA  3000               	movlw	0
  6193  04DB  00B3               	movwf	?___ftadd^(0+128)
  6194  04DC  3048               	movlw	72
  6195  04DD  00B4               	movwf	(?___ftadd+1)^(0+128)
  6196  04DE  3040               	movlw	64
  6197  04DF  00B5               	movwf	(?___ftadd+2)^(0+128)
  6198  04E0  318C  24D0  3184   	fcall	___ftadd
  6199  04E3  0021               	movlb	1	; select bank1
  6200  04E4  0833               	movf	?___ftadd^(0+128),w
  6201  04E5  00C3               	movwf	(?___ftdiv^(0+128)+3)
  6202  04E6  0834               	movf	(?___ftadd+1)^(0+128),w
  6203  04E7  00C4               	movwf	((?___ftdiv+1)^(0+128)+3)
  6204  04E8  0835               	movf	(?___ftadd+2)^(0+128),w
  6205  04E9  00C5               	movwf	((?___ftdiv+2)^(0+128)+3)
  6206  04EA  3000               	movlw	0
  6207  04EB  00C0               	movwf	?___ftdiv^(0+128)
  6208  04EC  30C8               	movlw	200
  6209  04ED  00C1               	movwf	(?___ftdiv+1)^(0+128)
  6210  04EE  3040               	movlw	64
  6211  04EF  00C2               	movwf	(?___ftdiv+2)^(0+128)
  6212  04F0  318A  2260  3184   	fcall	___ftdiv
  6213  04F3  0021               	movlb	1	; select bank1
  6214  04F4  0840               	movf	?___ftdiv^(0+128),w
  6215  04F5  00D0               	movwf	?___fttol^(0+128)
  6216  04F6  0841               	movf	(?___ftdiv+1)^(0+128),w
  6217  04F7  00D1               	movwf	(?___fttol+1)^(0+128)
  6218  04F8  0842               	movf	(?___ftdiv+2)^(0+128),w
  6219  04F9  00D2               	movwf	(?___fttol+2)^(0+128)
  6220  04FA  3193  233C  3184   	fcall	___fttol
  6221  04FD  0021               	movlb	1	; select bank1
  6222  04FE  0853               	movf	(?___fttol+3)^(0+128),w
  6223  04FF  0022               	movlb	2	; select bank2
  6224  0500  00CF               	movwf	(UpdateClock@CLOCK_F_VALUE+3)^(0+256)
  6225  0501  0021               	movlb	1	; select bank1
  6226  0502  0852               	movf	(?___fttol+2)^(0+128),w
  6227  0503  0022               	movlb	2	; select bank2
  6228  0504  00CE               	movwf	(UpdateClock@CLOCK_F_VALUE+2)^(0+256)
  6229  0505  0021               	movlb	1	; select bank1
  6230  0506  0851               	movf	(?___fttol+1)^(0+128),w
  6231  0507  0022               	movlb	2	; select bank2
  6232  0508  00CD               	movwf	(UpdateClock@CLOCK_F_VALUE+1)^(0+256)
  6233  0509  0021               	movlb	1	; select bank1
  6234  050A  0850               	movf	?___fttol^(0+128),w
  6235  050B  0022               	movlb	2	; select bank2
  6236  050C  00CC               	movwf	UpdateClock@CLOCK_F_VALUE^(0+256)
  6237                           
  6238                           ;klondike.c: 352: CLOCK_OD_VALUE = 1;
  6239  050D  3000               	movlw	0
  6240  050E  00D3               	movwf	(UpdateClock@CLOCK_OD_VALUE+3)^(0+256)
  6241  050F  3000               	movlw	0
  6242  0510  00D2               	movwf	(UpdateClock@CLOCK_OD_VALUE+2)^(0+256)
  6243  0511  3000               	movlw	0
  6244  0512  00D1               	movwf	(UpdateClock@CLOCK_OD_VALUE+1)^(0+256)
  6245  0513  3001               	movlw	1
  6246  0514  2D88               	goto	L5
  6247  0515                     l5671:	
  6248                           ;klondike.c: 353: }
  6249                           
  6250                           
  6251                           ;klondike.c: 355: else if (SPEED > 500)
  6252  0515  3000               	movlw	0
  6253  0516  0021               	movlb	1	; select bank1
  6254  0517  0261               	subwf	(UpdateClock@SPEED+3)^(0+128),w
  6255  0518  1D03               	skipz
  6256  0519  2D24               	goto	u5505
  6257  051A  3000               	movlw	0
  6258  051B  0260               	subwf	(UpdateClock@SPEED+2)^(0+128),w
  6259  051C  1D03               	skipz
  6260  051D  2D24               	goto	u5505
  6261  051E  3001               	movlw	1
  6262  051F  025F               	subwf	(UpdateClock@SPEED+1)^(0+128),w
  6263  0520  1D03               	skipz
  6264  0521  2D24               	goto	u5505
  6265  0522  30F5               	movlw	245
  6266  0523  025E               	subwf	UpdateClock@SPEED^(0+128),w
  6267  0524                     u5505:	
  6268  0524  1C03               	skipc
  6269  0525  2D89               	goto	l742
  6270                           
  6271                           ;klondike.c: 356: {
  6272                           ;klondike.c: 357: CLOCK_R_VALUE = 2;
  6273  0526  3000               	movlw	0
  6274  0527  0022               	movlb	2	; select bank2
  6275  0528  00CB               	movwf	(UpdateClock@CLOCK_R_VALUE+3)^(0+256)
  6276  0529  3000               	movlw	0
  6277  052A  00CA               	movwf	(UpdateClock@CLOCK_R_VALUE+2)^(0+256)
  6278  052B  3000               	movlw	0
  6279  052C  00C9               	movwf	(UpdateClock@CLOCK_R_VALUE+1)^(0+256)
  6280  052D  3002               	movlw	2
  6281  052E  00C8               	movwf	UpdateClock@CLOCK_R_VALUE^(0+256)
  6282                           
  6283                           ;klondike.c: 358: CLOCK_F_VALUE = (SPEED + 6.25) / 12.5;
  6284  052F  0021               	movlb	1	; select bank1
  6285  0530  0861               	movf	(UpdateClock@SPEED+3)^(0+128),w
  6286  0531  0020               	movlb	0	; select bank0
  6287  0532  00E3               	movwf	?___lltoft+3
  6288  0533  0021               	movlb	1	; select bank1
  6289  0534  0860               	movf	(UpdateClock@SPEED+2)^(0+128),w
  6290  0535  0020               	movlb	0	; select bank0
  6291  0536  00E2               	movwf	?___lltoft+2
  6292  0537  0021               	movlb	1	; select bank1
  6293  0538  085F               	movf	(UpdateClock@SPEED+1)^(0+128),w
  6294  0539  0020               	movlb	0	; select bank0
  6295  053A  00E1               	movwf	?___lltoft+1
  6296  053B  0021               	movlb	1	; select bank1
  6297  053C  085E               	movf	UpdateClock@SPEED^(0+128),w
  6298  053D  0020               	movlb	0	; select bank0
  6299  053E  00E0               	movwf	?___lltoft
  6300  053F  319B  232E  3184   	fcall	___lltoft
  6301  0542  0020               	movlb	0	; select bank0
  6302  0543  0860               	movf	?___lltoft,w
  6303  0544  0021               	movlb	1	; select bank1
  6304  0545  00B6               	movwf	(?___ftadd^(0+128)+3)
  6305  0546  0020               	movlb	0	; select bank0
  6306  0547  0861               	movf	?___lltoft+1,w
  6307  0548  0021               	movlb	1	; select bank1
  6308  0549  00B7               	movwf	((?___ftadd+1)^(0+128)+3)
  6309  054A  0020               	movlb	0	; select bank0
  6310  054B  0862               	movf	?___lltoft+2,w
  6311  054C  0021               	movlb	1	; select bank1
  6312  054D  00B8               	movwf	((?___ftadd+2)^(0+128)+3)
  6313  054E  3000               	movlw	0
  6314  054F  00B3               	movwf	?___ftadd^(0+128)
  6315  0550  30C8               	movlw	200
  6316  0551  00B4               	movwf	(?___ftadd+1)^(0+128)
  6317  0552  3040               	movlw	64
  6318  0553  00B5               	movwf	(?___ftadd+2)^(0+128)
  6319  0554  318C  24D0  3184   	fcall	___ftadd
  6320  0557  0021               	movlb	1	; select bank1
  6321  0558  0833               	movf	?___ftadd^(0+128),w
  6322  0559  00C3               	movwf	(?___ftdiv^(0+128)+3)
  6323  055A  0834               	movf	(?___ftadd+1)^(0+128),w
  6324  055B  00C4               	movwf	((?___ftdiv+1)^(0+128)+3)
  6325  055C  0835               	movf	(?___ftadd+2)^(0+128),w
  6326  055D  00C5               	movwf	((?___ftdiv+2)^(0+128)+3)
  6327  055E  3000               	movlw	0
  6328  055F  00C0               	movwf	?___ftdiv^(0+128)
  6329  0560  3048               	movlw	72
  6330  0561  00C1               	movwf	(?___ftdiv+1)^(0+128)
  6331  0562  3041               	movlw	65
  6332  0563  00C2               	movwf	(?___ftdiv+2)^(0+128)
  6333  0564  318A  2260  3184   	fcall	___ftdiv
  6334  0567  0021               	movlb	1	; select bank1
  6335  0568  0840               	movf	?___ftdiv^(0+128),w
  6336  0569  00D0               	movwf	?___fttol^(0+128)
  6337  056A  0841               	movf	(?___ftdiv+1)^(0+128),w
  6338  056B  00D1               	movwf	(?___fttol+1)^(0+128)
  6339  056C  0842               	movf	(?___ftdiv+2)^(0+128),w
  6340  056D  00D2               	movwf	(?___fttol+2)^(0+128)
  6341  056E  3193  233C  3184   	fcall	___fttol
  6342  0571  0021               	movlb	1	; select bank1
  6343  0572  0853               	movf	(?___fttol+3)^(0+128),w
  6344  0573  0022               	movlb	2	; select bank2
  6345  0574  00CF               	movwf	(UpdateClock@CLOCK_F_VALUE+3)^(0+256)
  6346  0575  0021               	movlb	1	; select bank1
  6347  0576  0852               	movf	(?___fttol+2)^(0+128),w
  6348  0577  0022               	movlb	2	; select bank2
  6349  0578  00CE               	movwf	(UpdateClock@CLOCK_F_VALUE+2)^(0+256)
  6350  0579  0021               	movlb	1	; select bank1
  6351  057A  0851               	movf	(?___fttol+1)^(0+128),w
  6352  057B  0022               	movlb	2	; select bank2
  6353  057C  00CD               	movwf	(UpdateClock@CLOCK_F_VALUE+1)^(0+256)
  6354  057D  0021               	movlb	1	; select bank1
  6355  057E  0850               	movf	?___fttol^(0+128),w
  6356  057F  0022               	movlb	2	; select bank2
  6357  0580  00CC               	movwf	UpdateClock@CLOCK_F_VALUE^(0+256)
  6358                           
  6359                           ;klondike.c: 359: CLOCK_OD_VALUE = 0;
  6360  0581  3000               	movlw	0
  6361  0582  00D3               	movwf	(UpdateClock@CLOCK_OD_VALUE+3)^(0+256)
  6362  0583  3000               	movlw	0
  6363  0584  00D2               	movwf	(UpdateClock@CLOCK_OD_VALUE+2)^(0+256)
  6364  0585  3000               	movlw	0
  6365  0586  00D1               	movwf	(UpdateClock@CLOCK_OD_VALUE+1)^(0+256)
  6366  0587  3000               	movlw	0
  6367  0588                     L5:	
  6368  0588  00D0               	movwf	UpdateClock@CLOCK_OD_VALUE^(0+256)
  6369  0589                     l742:	
  6370                           
  6371                           ;klondike.c: 360: }
  6372                           ;klondike.c: 363: Cfg.HashClock = 25 * CLOCK_F_VALUE / CLOCK_R_VALUE / (1 << CLOCK_OD_VA
      +                          LUE);
  6373  0589  0022               	movlb	2	; select bank2
  6374  058A  084B               	movf	(UpdateClock@CLOCK_R_VALUE+3)^(0+256),w
  6375  058B  0021               	movlb	1	; select bank1
  6376  058C  00A3               	movwf	(?___lldiv+3)^(0+128)
  6377  058D  0022               	movlb	2	; select bank2
  6378  058E  084A               	movf	(UpdateClock@CLOCK_R_VALUE+2)^(0+256),w
  6379  058F  0021               	movlb	1	; select bank1
  6380  0590  00A2               	movwf	(?___lldiv+2)^(0+128)
  6381  0591  0022               	movlb	2	; select bank2
  6382  0592  0849               	movf	(UpdateClock@CLOCK_R_VALUE+1)^(0+256),w
  6383  0593  0021               	movlb	1	; select bank1
  6384  0594  00A1               	movwf	(?___lldiv+1)^(0+128)
  6385  0595  0022               	movlb	2	; select bank2
  6386  0596  0848               	movf	UpdateClock@CLOCK_R_VALUE^(0+256),w
  6387  0597  0021               	movlb	1	; select bank1
  6388  0598  00A0               	movwf	?___lldiv^(0+128)
  6389  0599  0022               	movlb	2	; select bank2
  6390  059A  084F               	movf	(UpdateClock@CLOCK_F_VALUE+3)^(0+256),w
  6391  059B  0020               	movlb	0	; select bank0
  6392  059C  00DB               	movwf	?___lmul+3
  6393  059D  0022               	movlb	2	; select bank2
  6394  059E  084E               	movf	(UpdateClock@CLOCK_F_VALUE+2)^(0+256),w
  6395  059F  0020               	movlb	0	; select bank0
  6396  05A0  00DA               	movwf	?___lmul+2
  6397  05A1  0022               	movlb	2	; select bank2
  6398  05A2  084D               	movf	(UpdateClock@CLOCK_F_VALUE+1)^(0+256),w
  6399  05A3  0020               	movlb	0	; select bank0
  6400  05A4  00D9               	movwf	?___lmul+1
  6401  05A5  0022               	movlb	2	; select bank2
  6402  05A6  084C               	movf	UpdateClock@CLOCK_F_VALUE^(0+256),w
  6403  05A7  0020               	movlb	0	; select bank0
  6404  05A8  00D8               	movwf	?___lmul
  6405  05A9  3000               	movlw	0
  6406  05AA  00DF               	movwf	?___lmul+7
  6407  05AB  3000               	movlw	0
  6408  05AC  00DE               	movwf	?___lmul+6
  6409  05AD  3000               	movlw	0
  6410  05AE  00DD               	movwf	?___lmul+5
  6411  05AF  3019               	movlw	25
  6412  05B0  00DC               	movwf	?___lmul+4
  6413  05B1  319B  2385  3184   	fcall	___lmul
  6414  05B4  0020               	movlb	0	; select bank0
  6415  05B5  085B               	movf	?___lmul+3,w
  6416  05B6  0021               	movlb	1	; select bank1
  6417  05B7  00A7               	movwf	((?___lldiv+3)^(0+128)+4)
  6418  05B8  0020               	movlb	0	; select bank0
  6419  05B9  085A               	movf	?___lmul+2,w
  6420  05BA  0021               	movlb	1	; select bank1
  6421  05BB  00A6               	movwf	((?___lldiv+2)^(0+128)+4)
  6422  05BC  0020               	movlb	0	; select bank0
  6423  05BD  0859               	movf	?___lmul+1,w
  6424  05BE  0021               	movlb	1	; select bank1
  6425  05BF  00A5               	movwf	((?___lldiv+1)^(0+128)+4)
  6426  05C0  0020               	movlb	0	; select bank0
  6427  05C1  0858               	movf	?___lmul,w
  6428  05C2  0021               	movlb	1	; select bank1
  6429  05C3  00A4               	movwf	(?___lldiv^(0+128)+4)
  6430  05C4  319E  2632  3184   	fcall	___lldiv
  6431  05C7  0021               	movlb	1	; select bank1
  6432  05C8  0823               	movf	(?___lldiv+3)^(0+128),w
  6433  05C9  0022               	movlb	2	; select bank2
  6434  05CA  00C7               	movwf	(_UpdateClock$2776+3)^(0+256)
  6435  05CB  0021               	movlb	1	; select bank1
  6436  05CC  0822               	movf	(?___lldiv+2)^(0+128),w
  6437  05CD  0022               	movlb	2	; select bank2
  6438  05CE  00C6               	movwf	(_UpdateClock$2776+2)^(0+256)
  6439  05CF  0021               	movlb	1	; select bank1
  6440  05D0  0821               	movf	(?___lldiv+1)^(0+128),w
  6441  05D1  0022               	movlb	2	; select bank2
  6442  05D2  00C5               	movwf	(_UpdateClock$2776+1)^(0+256)
  6443  05D3  0021               	movlb	1	; select bank1
  6444  05D4  0820               	movf	?___lldiv^(0+128),w
  6445  05D5  0022               	movlb	2	; select bank2
  6446  05D6  00C4               	movwf	_UpdateClock$2776^(0+256)
  6447                           
  6448                           ;klondike.c: 360: }
  6449                           ;klondike.c: 363: Cfg.HashClock = 25 * CLOCK_F_VALUE / CLOCK_R_VALUE / (1 << CLOCK_OD_VA
      +                          LUE);
  6450  05D7  3001               	movlw	1
  6451  05D8  0021               	movlb	1	; select bank1
  6452  05D9  00E2               	movwf	??_UpdateClock^(0+128)
  6453  05DA  3000               	movlw	0
  6454  05DB  00E3               	movwf	(??_UpdateClock^(0+128)+1)
  6455  05DC  0022               	movlb	2	; select bank2
  6456  05DD  0A50               	incf	UpdateClock@CLOCK_OD_VALUE^(0+256),w
  6457  05DE  0021               	movlb	1	; select bank1
  6458  05DF  2DE2               	goto	u5514
  6459  05E0                     u5515:	
  6460  05E0  35E2               	lslf	??_UpdateClock^(0+128),f
  6461  05E1  0DE3               	rlf	(??_UpdateClock^(0+128)+1),f
  6462  05E2                     u5514:	
  6463  05E2  0B89               	decfsz	9,f
  6464  05E3  2DE0               	goto	u5515
  6465  05E4  0862               	movf	??_UpdateClock^(0+128),w
  6466  05E5  00A0               	movwf	?___lldiv^(0+128)
  6467  05E6  0863               	movf	(??_UpdateClock+1)^(0+128),w
  6468  05E7  00A1               	movwf	(?___lldiv+1)^(0+128)
  6469  05E8  0D89               	rlf	9,f
  6470  05E9  3B89               	subwfb	9,f
  6471  05EA  0989               	comf	9,f
  6472  05EB  00A2               	movwf	(?___lldiv+2)^(0+128)
  6473  05EC  00A3               	movwf	(?___lldiv+3)^(0+128)
  6474  05ED  0022               	movlb	2	; select bank2
  6475  05EE  0847               	movf	(_UpdateClock$2776+3)^(0+256),w
  6476  05EF  0021               	movlb	1	; select bank1
  6477  05F0  00A7               	movwf	((?___lldiv+3)^(0+128)+4)
  6478  05F1  0022               	movlb	2	; select bank2
  6479  05F2  0846               	movf	(_UpdateClock$2776+2)^(0+256),w
  6480  05F3  0021               	movlb	1	; select bank1
  6481  05F4  00A6               	movwf	((?___lldiv+2)^(0+128)+4)
  6482  05F5  0022               	movlb	2	; select bank2
  6483  05F6  0845               	movf	(_UpdateClock$2776+1)^(0+256),w
  6484  05F7  0021               	movlb	1	; select bank1
  6485  05F8  00A5               	movwf	((?___lldiv+1)^(0+128)+4)
  6486  05F9  0022               	movlb	2	; select bank2
  6487  05FA  0844               	movf	_UpdateClock$2776^(0+256),w
  6488  05FB  0021               	movlb	1	; select bank1
  6489  05FC  00A4               	movwf	(?___lldiv^(0+128)+4)
  6490  05FD  319E  2632  3184   	fcall	___lldiv
  6491  0600  0021               	movlb	1	; select bank1
  6492  0601  0821               	movf	(?___lldiv^(0+128)+1),w
  6493  0602  0023               	movlb	3	; select bank3
  6494  0603  01E3               	clrf	(_Cfg+1)^(0+384)
  6495  0604  07E3               	addwf	(_Cfg+1)^(0+384),f
  6496  0605  0021               	movlb	1	; select bank1
  6497  0606  0820               	movf	?___lldiv^(0+128),w
  6498  0607  0023               	movlb	3	; select bank3
  6499  0608  01E2               	clrf	_Cfg^(0+384)
  6500  0609  07E2               	addwf	_Cfg^(0+384),f
  6501                           
  6502                           ;klondike.c: 365: CLOCK_LOW_CHG = 0b00000000000000000000000001000111 | ((CLOCK_R_VALUE &
      +                           0b11111) << 16) | ((CLOCK_F_VALUE & 0b1111111) << 21) | ((CLOCK_OD_VALUE & 0b11) << 28);
  6503  060A  3003               	movlw	3
  6504  060B  0022               	movlb	2	; select bank2
  6505  060C  0550               	andwf	UpdateClock@CLOCK_OD_VALUE^(0+256),w
  6506  060D  0021               	movlb	1	; select bank1
  6507  060E  00E2               	movwf	??_UpdateClock^(0+128)
  6508  060F  3000               	movlw	0
  6509  0610  0022               	movlb	2	; select bank2
  6510  0611  0551               	andwf	(UpdateClock@CLOCK_OD_VALUE+1)^(0+256),w
  6511  0612  0021               	movlb	1	; select bank1
  6512  0613  00E3               	movwf	(??_UpdateClock^(0+128)+1)
  6513  0614  3000               	movlw	0
  6514  0615  0022               	movlb	2	; select bank2
  6515  0616  0552               	andwf	(UpdateClock@CLOCK_OD_VALUE+2)^(0+256),w
  6516  0617  0021               	movlb	1	; select bank1
  6517  0618  00E4               	movwf	(??_UpdateClock^(0+128)+2)
  6518  0619  3000               	movlw	0
  6519  061A  0022               	movlb	2	; select bank2
  6520  061B  0553               	andwf	(UpdateClock@CLOCK_OD_VALUE+3)^(0+256),w
  6521  061C  0021               	movlb	1	; select bank1
  6522  061D  00E5               	movwf	(??_UpdateClock^(0+128)+3)
  6523  061E  301C               	movlw	28
  6524  061F                     u5525:	
  6525  061F  35E2               	lslf	??_UpdateClock^(0+128),f
  6526  0620  0DE3               	rlf	(??_UpdateClock^(0+128)+1),f
  6527  0621  0DE4               	rlf	(??_UpdateClock^(0+128)+2),f
  6528  0622  0DE5               	rlf	(??_UpdateClock^(0+128)+3),f
  6529  0623  0B89               	decfsz	9,f
  6530  0624  2E1F               	goto	u5525
  6531  0625  307F               	movlw	127
  6532  0626  0022               	movlb	2	; select bank2
  6533  0627  054C               	andwf	UpdateClock@CLOCK_F_VALUE^(0+256),w
  6534  0628  0021               	movlb	1	; select bank1
  6535  0629  00E6               	movwf	(??_UpdateClock+4)^(0+128)
  6536  062A  3000               	movlw	0
  6537  062B  0022               	movlb	2	; select bank2
  6538  062C  054D               	andwf	(UpdateClock@CLOCK_F_VALUE+1)^(0+256),w
  6539  062D  0021               	movlb	1	; select bank1
  6540  062E  00E7               	movwf	((??_UpdateClock+4)^(0+128)+1)
  6541  062F  3000               	movlw	0
  6542  0630  0022               	movlb	2	; select bank2
  6543  0631  054E               	andwf	(UpdateClock@CLOCK_F_VALUE+2)^(0+256),w
  6544  0632  0021               	movlb	1	; select bank1
  6545  0633  00E8               	movwf	((??_UpdateClock+4)^(0+128)+2)
  6546  0634  3000               	movlw	0
  6547  0635  0022               	movlb	2	; select bank2
  6548  0636  054F               	andwf	(UpdateClock@CLOCK_F_VALUE+3)^(0+256),w
  6549  0637  0021               	movlb	1	; select bank1
  6550  0638  00E9               	movwf	((??_UpdateClock+4)^(0+128)+3)
  6551  0639  3015               	movlw	21
  6552  063A                     u5535:	
  6553  063A  35E6               	lslf	(??_UpdateClock+4)^(0+128),f
  6554  063B  0DE7               	rlf	((??_UpdateClock+4)^(0+128)+1),f
  6555  063C  0DE8               	rlf	((??_UpdateClock+4)^(0+128)+2),f
  6556  063D  0DE9               	rlf	((??_UpdateClock+4)^(0+128)+3),f
  6557  063E  0B89               	decfsz	9,f
  6558  063F  2E3A               	goto	u5535
  6559  0640  301F               	movlw	31
  6560  0641  0022               	movlb	2	; select bank2
  6561  0642  0548               	andwf	UpdateClock@CLOCK_R_VALUE^(0+256),w
  6562  0643  0021               	movlb	1	; select bank1
  6563  0644  00EA               	movwf	(??_UpdateClock+8)^(0+128)
  6564  0645  3000               	movlw	0
  6565  0646  0022               	movlb	2	; select bank2
  6566  0647  0549               	andwf	(UpdateClock@CLOCK_R_VALUE+1)^(0+256),w
  6567  0648  0021               	movlb	1	; select bank1
  6568  0649  00EB               	movwf	((??_UpdateClock+8)^(0+128)+1)
  6569  064A  3000               	movlw	0
  6570  064B  0022               	movlb	2	; select bank2
  6571  064C  054A               	andwf	(UpdateClock@CLOCK_R_VALUE+2)^(0+256),w
  6572  064D  0021               	movlb	1	; select bank1
  6573  064E  00EC               	movwf	((??_UpdateClock+8)^(0+128)+2)
  6574  064F  3000               	movlw	0
  6575  0650  0022               	movlb	2	; select bank2
  6576  0651  054B               	andwf	(UpdateClock@CLOCK_R_VALUE+3)^(0+256),w
  6577  0652  0021               	movlb	1	; select bank1
  6578  0653  00ED               	movwf	((??_UpdateClock+8)^(0+128)+3)
  6579  0654  3010               	movlw	16
  6580  0655                     u5545:	
  6581  0655  35EA               	lslf	(??_UpdateClock+8)^(0+128),f
  6582  0656  0DEB               	rlf	((??_UpdateClock+8)^(0+128)+1),f
  6583  0657  0DEC               	rlf	((??_UpdateClock+8)^(0+128)+2),f
  6584  0658  0DED               	rlf	((??_UpdateClock+8)^(0+128)+3),f
  6585  0659  0B89               	decfsz	9,f
  6586  065A  2E55               	goto	u5545
  6587  065B  086A               	movf	(??_UpdateClock+8)^(0+128),w
  6588  065C  04E6               	iorwf	(??_UpdateClock+4)^(0+128),f
  6589  065D  086B               	movf	(??_UpdateClock+9)^(0+128),w
  6590  065E  04E7               	iorwf	((??_UpdateClock+4)^(0+128)+1),f
  6591  065F  086C               	movf	(??_UpdateClock+10)^(0+128),w
  6592  0660  04E8               	iorwf	((??_UpdateClock+4)^(0+128)+2),f
  6593  0661  086D               	movf	(??_UpdateClock+11)^(0+128),w
  6594  0662  04E9               	iorwf	((??_UpdateClock+4)^(0+128)+3),f
  6595  0663  0866               	movf	(??_UpdateClock+4)^(0+128),w
  6596  0664  04E2               	iorwf	??_UpdateClock^(0+128),f
  6597  0665  0867               	movf	(??_UpdateClock+5)^(0+128),w
  6598  0666  04E3               	iorwf	(??_UpdateClock^(0+128)+1),f
  6599  0667  0868               	movf	(??_UpdateClock+6)^(0+128),w
  6600  0668  04E4               	iorwf	(??_UpdateClock^(0+128)+2),f
  6601  0669  0869               	movf	(??_UpdateClock+7)^(0+128),w
  6602  066A  04E5               	iorwf	(??_UpdateClock^(0+128)+3),f
  6603  066B  3047               	movlw	71
  6604  066C  0462               	iorwf	??_UpdateClock^(0+128),w
  6605  066D  0023               	movlb	3	; select bank3
  6606  066E  00A6               	movwf	_CLOCK_LOW_CHG^(0+384)
  6607  066F  3000               	movlw	0
  6608  0670  0021               	movlb	1	; select bank1
  6609  0671  0463               	iorwf	(??_UpdateClock+1)^(0+128),w
  6610  0672  0023               	movlb	3	; select bank3
  6611  0673  00A7               	movwf	(_CLOCK_LOW_CHG+1)^(0+384)
  6612  0674  3000               	movlw	0
  6613  0675  0021               	movlb	1	; select bank1
  6614  0676  0464               	iorwf	(??_UpdateClock+2)^(0+128),w
  6615  0677  0023               	movlb	3	; select bank3
  6616  0678  00A8               	movwf	(_CLOCK_LOW_CHG+2)^(0+384)
  6617  0679  3000               	movlw	0
  6618  067A  0021               	movlb	1	; select bank1
  6619  067B  0465               	iorwf	(??_UpdateClock+3)^(0+128),w
  6620  067C  0023               	movlb	3	; select bank3
  6621  067D  00A9               	movwf	(_CLOCK_LOW_CHG+3)^(0+384)
  6622                           
  6623                           ;klondike.c: 367: ClockCfg[0] = CLOCK_LOW_CHG;
  6624  067E  0829               	movf	(_CLOCK_LOW_CHG+3)^(0+384),w
  6625  067F  00D5               	movwf	(_ClockCfg+3)^(0+384)
  6626  0680  0828               	movf	(_CLOCK_LOW_CHG+2)^(0+384),w
  6627  0681  00D4               	movwf	(_ClockCfg+2)^(0+384)
  6628  0682  0827               	movf	(_CLOCK_LOW_CHG+1)^(0+384),w
  6629  0683  00D3               	movwf	(_ClockCfg+1)^(0+384)
  6630  0684  0826               	movf	_CLOCK_LOW_CHG^(0+384),w
  6631  0685  00D2               	movwf	_ClockCfg^(0+384)
  6632                           
  6633                           ;klondike.c: 368: ClockCfg[1] = 0x00;
  6634  0686  3000               	movlw	0
  6635  0687  00D9               	movwf	((_ClockCfg+3)^(0+384)+4)
  6636  0688  3000               	movlw	0
  6637  0689  00D8               	movwf	((_ClockCfg+2)^(0+384)+4)
  6638  068A  3000               	movlw	0
  6639  068B  00D7               	movwf	((_ClockCfg+1)^(0+384)+4)
  6640  068C  3000               	movlw	0
  6641  068D  00D6               	movwf	(_ClockCfg^(0+384)+4)
  6642                           
  6643                           ;klondike.c: 369: HashTime = 256 - ((WORD)20800/Cfg.HashClock);
  6644  068E  0863               	movf	(_Cfg+1)^(0+384),w
  6645  068F  0020               	movlb	0	; select bank0
  6646  0690  01D9               	clrf	?___lwdiv+1
  6647  0691  07D9               	addwf	?___lwdiv+1,f
  6648  0692  0023               	movlb	3	; select bank3
  6649  0693  0862               	movf	_Cfg^(0+384),w
  6650  0694  0020               	movlb	0	; select bank0
  6651  0695  01D8               	clrf	?___lwdiv
  6652  0696  07D8               	addwf	?___lwdiv,f
  6653  0697  3040               	movlw	64
  6654  0698  00DA               	movwf	?___lwdiv+2
  6655  0699  3051               	movlw	81
  6656  069A  00DB               	movwf	?___lwdiv+3
  6657  069B  319B  23B5         	fcall	___lwdiv
  6658  069D  0020               	movlb	0	; select bank0
  6659  069E  0858               	movf	?___lwdiv,w
  6660  069F  3AFF               	xorlw	255
  6661  06A0  3E01               	addlw	1
  6662  06A1  0021               	movlb	1	; select bank1
  6663  06A2  00E2               	movwf	??_UpdateClock^(0+128)
  6664  06A3  0862               	movf	??_UpdateClock^(0+128),w
  6665  06A4  0022               	movlb	2	; select bank2
  6666  06A5  00A6               	movwf	_HashTime^(0+256)
  6667  06A6  0008               	return
  6668  06A7                     __end_of_UpdateClock:	
  6669                           
  6670                           	psect	text16
  6671  1BB5                     __ptext16:	
  6672 ;; *************** function ___lwdiv *****************
  6673 ;; Defined at:
  6674 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lwdiv.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  divisor         2    8[BANK0 ] unsigned int 
  6677 ;;  dividend        2   10[BANK0 ] unsigned int 
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;  quotient        2   13[BANK0 ] unsigned int 
  6680 ;;  counter         1   15[BANK0 ] unsigned char 
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  2    8[BANK0 ] unsigned int 
  6683 ;; Registers used:
  6684 ;;		wreg, status,2, status,0
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6690 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6693 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6694 ;;Total ram usage:        8 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; Hardware stack levels required when called:    4
  6697 ;; This function calls:
  6698 ;;		Nothing
  6699 ;; This function is called by:
  6700 ;;		_UpdateClock
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           
  6705                           ;psect for function ___lwdiv
  6706  1BB5                     ___lwdiv:	
  6707                           
  6708                           ;incstack = 0
  6709                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6710  1BB5  0020               	movlb	0	; select bank0
  6711  1BB6  01DD               	clrf	___lwdiv@quotient
  6712  1BB7  01DE               	clrf	___lwdiv@quotient+1
  6713  1BB8  0859               	movf	___lwdiv@divisor+1,w
  6714  1BB9  0458               	iorwf	___lwdiv@divisor,w
  6715  1BBA  1903               	skipnz
  6716  1BBB  2BE5               	goto	l6353
  6717  1BBC  01DF               	clrf	___lwdiv@counter
  6718  1BBD  0ADF               	incf	___lwdiv@counter,f
  6719  1BBE                     l6341:	
  6720  1BBE  1BD9               	btfsc	___lwdiv@divisor+1,7
  6721  1BBF  2BCA               	goto	l6343
  6722  1BC0  3001               	movlw	1
  6723  1BC1                     u6825:	
  6724  1BC1  35D8               	lslf	___lwdiv@divisor,f
  6725  1BC2  0DD9               	rlf	___lwdiv@divisor+1,f
  6726  1BC3  0B89               	decfsz	9,f
  6727  1BC4  2BC1               	goto	u6825
  6728  1BC5  3001               	movlw	1
  6729  1BC6  00DC               	movwf	??___lwdiv
  6730  1BC7  085C               	movf	??___lwdiv,w
  6731  1BC8  07DF               	addwf	___lwdiv@counter,f
  6732  1BC9  2BBE               	goto	l6341
  6733  1BCA                     l6343:	
  6734  1BCA  3001               	movlw	1
  6735  1BCB                     u6845:	
  6736  1BCB  35DD               	lslf	___lwdiv@quotient,f
  6737  1BCC  0DDE               	rlf	___lwdiv@quotient+1,f
  6738  1BCD  0B89               	decfsz	9,f
  6739  1BCE  2BCB               	goto	u6845
  6740  1BCF  0859               	movf	___lwdiv@divisor+1,w
  6741  1BD0  025B               	subwf	___lwdiv@dividend+1,w
  6742  1BD1  1D03               	skipz
  6743  1BD2  2BD5               	goto	u6855
  6744  1BD3  0858               	movf	___lwdiv@divisor,w
  6745  1BD4  025A               	subwf	___lwdiv@dividend,w
  6746  1BD5                     u6855:	
  6747  1BD5  1C03               	skipc
  6748  1BD6  2BDC               	goto	l6349
  6749  1BD7  0858               	movf	___lwdiv@divisor,w
  6750  1BD8  02DA               	subwf	___lwdiv@dividend,f
  6751  1BD9  0859               	movf	___lwdiv@divisor+1,w
  6752  1BDA  3BDB               	subwfb	___lwdiv@dividend+1,f
  6753  1BDB  145D               	bsf	___lwdiv@quotient,0
  6754  1BDC                     l6349:	
  6755  1BDC  3001               	movlw	1
  6756  1BDD                     u6865:	
  6757  1BDD  36D9               	lsrf	___lwdiv@divisor+1,f
  6758  1BDE  0CD8               	rrf	___lwdiv@divisor,f
  6759  1BDF  0B89               	decfsz	9,f
  6760  1BE0  2BDD               	goto	u6865
  6761  1BE1  3001               	movlw	1
  6762  1BE2  02DF               	subwf	___lwdiv@counter,f
  6763  1BE3  1D03               	btfss	3,2
  6764  1BE4  2BCA               	goto	l6343
  6765  1BE5                     l6353:	
  6766  1BE5  085E               	movf	___lwdiv@quotient+1,w
  6767  1BE6  01D9               	clrf	?___lwdiv+1
  6768  1BE7  07D9               	addwf	?___lwdiv+1,f
  6769  1BE8  085D               	movf	___lwdiv@quotient,w
  6770  1BE9  01D8               	clrf	?___lwdiv
  6771  1BEA  07D8               	addwf	?___lwdiv,f
  6772  1BEB  0008               	return
  6773  1BEC                     __end_of___lwdiv:	
  6774                           
  6775                           	psect	text17
  6776  1B85                     __ptext17:	
  6777 ;; *************** function ___lmul *****************
  6778 ;; Defined at:
  6779 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lmul.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;  multiplier      4    8[BANK0 ] unsigned long 
  6782 ;;  multiplicand    4   12[BANK0 ] unsigned long 
  6783 ;; Auto vars:     Size  Location     Type
  6784 ;;  product         4   16[BANK0 ] unsigned long 
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  4    8[BANK0 ] unsigned long 
  6787 ;; Registers used:
  6788 ;;		wreg, status,2, status,0
  6789 ;; Tracked objects:
  6790 ;;		On entry : 0/0
  6791 ;;		On exit  : 0/0
  6792 ;;		Unchanged: 0/0
  6793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6794 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6795 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6797 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6798 ;;Total ram usage:       12 bytes
  6799 ;; Hardware stack levels used:    1
  6800 ;; Hardware stack levels required when called:    4
  6801 ;; This function calls:
  6802 ;;		Nothing
  6803 ;; This function is called by:
  6804 ;;		_UpdateClock
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           
  6809                           ;psect for function ___lmul
  6810  1B85                     ___lmul:	
  6811                           
  6812                           ;incstack = 0
  6813                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6814  1B85  3000               	movlw	0
  6815  1B86  0020               	movlb	0	; select bank0
  6816  1B87  00E3               	movwf	___lmul@product+3
  6817  1B88  3000               	movlw	0
  6818  1B89  00E2               	movwf	___lmul@product+2
  6819  1B8A  3000               	movlw	0
  6820  1B8B  00E1               	movwf	___lmul@product+1
  6821  1B8C  3000               	movlw	0
  6822  1B8D  00E0               	movwf	___lmul@product
  6823  1B8E                     l6319:	
  6824  1B8E  1C58               	btfss	___lmul@multiplier,0
  6825  1B8F  2B98               	goto	l6323
  6826  1B90  085C               	movf	___lmul@multiplicand,w
  6827  1B91  07E0               	addwf	___lmul@product,f
  6828  1B92  085D               	movf	___lmul@multiplicand+1,w
  6829  1B93  3DE1               	addwfc	___lmul@product+1,f
  6830  1B94  085E               	movf	___lmul@multiplicand+2,w
  6831  1B95  3DE2               	addwfc	___lmul@product+2,f
  6832  1B96  085F               	movf	___lmul@multiplicand+3,w
  6833  1B97  3DE3               	addwfc	___lmul@product+3,f
  6834  1B98                     l6323:	
  6835  1B98  3001               	movlw	1
  6836  1B99                     u6785:	
  6837  1B99  35DC               	lslf	___lmul@multiplicand,f
  6838  1B9A  0DDD               	rlf	___lmul@multiplicand+1,f
  6839  1B9B  0DDE               	rlf	___lmul@multiplicand+2,f
  6840  1B9C  0DDF               	rlf	___lmul@multiplicand+3,f
  6841  1B9D  0B89               	decfsz	9,f
  6842  1B9E  2B99               	goto	u6785
  6843  1B9F  3001               	movlw	1
  6844  1BA0                     u6795:	
  6845  1BA0  36DB               	lsrf	___lmul@multiplier+3,f
  6846  1BA1  0CDA               	rrf	___lmul@multiplier+2,f
  6847  1BA2  0CD9               	rrf	___lmul@multiplier+1,f
  6848  1BA3  0CD8               	rrf	___lmul@multiplier,f
  6849  1BA4  0B89               	decfsz	9,f
  6850  1BA5  2BA0               	goto	u6795
  6851  1BA6  085B               	movf	___lmul@multiplier+3,w
  6852  1BA7  045A               	iorwf	___lmul@multiplier+2,w
  6853  1BA8  0459               	iorwf	___lmul@multiplier+1,w
  6854  1BA9  0458               	iorwf	___lmul@multiplier,w
  6855  1BAA  1D03               	skipz
  6856  1BAB  2B8E               	goto	l6319
  6857  1BAC  0863               	movf	___lmul@product+3,w
  6858  1BAD  00DB               	movwf	?___lmul+3
  6859  1BAE  0862               	movf	___lmul@product+2,w
  6860  1BAF  00DA               	movwf	?___lmul+2
  6861  1BB0  0861               	movf	___lmul@product+1,w
  6862  1BB1  00D9               	movwf	?___lmul+1
  6863  1BB2  0860               	movf	___lmul@product,w
  6864  1BB3  00D8               	movwf	?___lmul
  6865  1BB4  0008               	return
  6866  1BB5                     __end_of___lmul:	
  6867                           
  6868                           	psect	text18
  6869  1B2E                     __ptext18:	
  6870 ;; *************** function ___lltoft *****************
  6871 ;; Defined at:
  6872 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lltoft.c"
  6873 ;; Parameters:    Size  Location     Type
  6874 ;;  c               4   16[BANK0 ] unsigned long 
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;  exp             1   21[BANK0 ] unsigned char 
  6877 ;; Return value:  Size  Location     Type
  6878 ;;                  3   16[BANK0 ] float 
  6879 ;; Registers used:
  6880 ;;		wreg, status,2, status,0, pclath, cstack
  6881 ;; Tracked objects:
  6882 ;;		On entry : 0/0
  6883 ;;		On exit  : 0/0
  6884 ;;		Unchanged: 0/0
  6885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6886 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6887 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6888 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6889 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6890 ;;Total ram usage:        6 bytes
  6891 ;; Hardware stack levels used:    1
  6892 ;; Hardware stack levels required when called:    5
  6893 ;; This function calls:
  6894 ;;		___ftpack
  6895 ;; This function is called by:
  6896 ;;		_UpdateClock
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           
  6901                           ;psect for function ___lltoft
  6902  1B2E                     ___lltoft:	
  6903                           
  6904                           ;incstack = 0
  6905                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  6906  1B2E  308E               	movlw	142
  6907  1B2F  0020               	movlb	0	; select bank0
  6908  1B30  00E4               	movwf	??___lltoft
  6909  1B31  0864               	movf	??___lltoft,w
  6910  1B32  00E5               	movwf	___lltoft@exp
  6911  1B33                     l6311:	
  6912  1B33  30FF               	movlw	255
  6913  1B34  0563               	andwf	___lltoft@c+3,w
  6914  1B35  1903               	btfsc	3,2
  6915  1B36  2B43               	goto	l6313
  6916  1B37  3001               	movlw	1
  6917  1B38                     u6755:	
  6918  1B38  36E3               	lsrf	___lltoft@c+3,f
  6919  1B39  0CE2               	rrf	___lltoft@c+2,f
  6920  1B3A  0CE1               	rrf	___lltoft@c+1,f
  6921  1B3B  0CE0               	rrf	___lltoft@c,f
  6922  1B3C  0B89               	decfsz	9,f
  6923  1B3D  2B38               	goto	u6755
  6924  1B3E  3001               	movlw	1
  6925  1B3F  00E4               	movwf	??___lltoft
  6926  1B40  0864               	movf	??___lltoft,w
  6927  1B41  07E5               	addwf	___lltoft@exp,f
  6928  1B42  2B33               	goto	l6311
  6929  1B43                     l6313:	
  6930  1B43  0860               	movf	___lltoft@c,w
  6931  1B44  00D8               	movwf	?___ftpack
  6932  1B45  0861               	movf	___lltoft@c+1,w
  6933  1B46  00D9               	movwf	?___ftpack+1
  6934  1B47  0862               	movf	___lltoft@c+2,w
  6935  1B48  00DA               	movwf	?___ftpack+2
  6936  1B49  0865               	movf	___lltoft@exp,w
  6937  1B4A  00E4               	movwf	??___lltoft
  6938  1B4B  0864               	movf	??___lltoft,w
  6939  1B4C  00DB               	movwf	?___ftpack+3
  6940  1B4D  01DC               	clrf	?___ftpack+4
  6941  1B4E  319F  279F         	fcall	___ftpack
  6942  1B50  0020               	movlb	0	; select bank0
  6943  1B51  0858               	movf	?___ftpack,w
  6944  1B52  00E0               	movwf	?___lltoft
  6945  1B53  0859               	movf	?___ftpack+1,w
  6946  1B54  00E1               	movwf	?___lltoft+1
  6947  1B55  085A               	movf	?___ftpack+2,w
  6948  1B56  00E2               	movwf	?___lltoft+2
  6949  1B57  0008               	return
  6950  1B58                     __end_of___lltoft:	
  6951                           
  6952                           	psect	text19
  6953  1E32                     __ptext19:	
  6954 ;; *************** function ___lldiv *****************
  6955 ;; Defined at:
  6956 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\lldiv.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;  divisor         4    0[BANK1 ] unsigned long 
  6959 ;;  dividend        4    4[BANK1 ] unsigned long 
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;  quotient        4    8[BANK1 ] unsigned long 
  6962 ;;  counter         1   12[BANK1 ] unsigned char 
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  4    0[BANK1 ] unsigned long 
  6965 ;; Registers used:
  6966 ;;		wreg, status,2, status,0
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6972 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6973 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6974 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6975 ;;      Totals:         0       1      13       0       0       0       0       0       0       0       0       0       
      +0       0
  6976 ;;Total ram usage:       14 bytes
  6977 ;; Hardware stack levels used:    1
  6978 ;; Hardware stack levels required when called:    4
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		_UpdateClock
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           
  6987                           ;psect for function ___lldiv
  6988  1E32                     ___lldiv:	
  6989                           
  6990                           ;incstack = 0
  6991                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6992  1E32  3000               	movlw	0
  6993  1E33  0021               	movlb	1	; select bank1
  6994  1E34  00AB               	movwf	(___lldiv@quotient+3)^(0+128)
  6995  1E35  3000               	movlw	0
  6996  1E36  00AA               	movwf	(___lldiv@quotient+2)^(0+128)
  6997  1E37  3000               	movlw	0
  6998  1E38  00A9               	movwf	(___lldiv@quotient+1)^(0+128)
  6999  1E39  3000               	movlw	0
  7000  1E3A  00A8               	movwf	___lldiv@quotient^(0+128)
  7001  1E3B  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  7002  1E3C  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  7003  1E3D  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  7004  1E3E  0420               	iorwf	___lldiv@divisor^(0+128),w
  7005  1E3F  1903               	skipnz
  7006  1E40  2E7E               	goto	l6303
  7007  1E41  01AC               	clrf	___lldiv@counter^(0+128)
  7008  1E42  0AAC               	incf	___lldiv@counter^(0+128),f
  7009  1E43                     l6289:	
  7010  1E43  1BA3               	btfsc	(___lldiv@divisor+3)^(0+128),7
  7011  1E44  2E53               	goto	l6291
  7012  1E45  3001               	movlw	1
  7013  1E46                     u6695:	
  7014  1E46  35A0               	lslf	___lldiv@divisor^(0+128),f
  7015  1E47  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  7016  1E48  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  7017  1E49  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  7018  1E4A  0B89               	decfsz	9,f
  7019  1E4B  2E46               	goto	u6695
  7020  1E4C  3001               	movlw	1
  7021  1E4D  0020               	movlb	0	; select bank0
  7022  1E4E  00E4               	movwf	??___lldiv
  7023  1E4F  0864               	movf	??___lldiv,w
  7024  1E50  0021               	movlb	1	; select bank1
  7025  1E51  07AC               	addwf	___lldiv@counter^(0+128),f
  7026  1E52  2E43               	goto	l6289
  7027  1E53                     l6291:	
  7028  1E53  3001               	movlw	1
  7029  1E54                     u6715:	
  7030  1E54  35A8               	lslf	___lldiv@quotient^(0+128),f
  7031  1E55  0DA9               	rlf	(___lldiv@quotient+1)^(0+128),f
  7032  1E56  0DAA               	rlf	(___lldiv@quotient+2)^(0+128),f
  7033  1E57  0DAB               	rlf	(___lldiv@quotient+3)^(0+128),f
  7034  1E58  0B89               	decfsz	9,f
  7035  1E59  2E54               	goto	u6715
  7036  1E5A  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  7037  1E5B  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  7038  1E5C  1D03               	skipz
  7039  1E5D  2E68               	goto	u6725
  7040  1E5E  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  7041  1E5F  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  7042  1E60  1D03               	skipz
  7043  1E61  2E68               	goto	u6725
  7044  1E62  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  7045  1E63  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  7046  1E64  1D03               	skipz
  7047  1E65  2E68               	goto	u6725
  7048  1E66  0820               	movf	___lldiv@divisor^(0+128),w
  7049  1E67  0224               	subwf	___lldiv@dividend^(0+128),w
  7050  1E68                     u6725:	
  7051  1E68  1C03               	skipc
  7052  1E69  2E73               	goto	l6299
  7053  1E6A  0820               	movf	___lldiv@divisor^(0+128),w
  7054  1E6B  02A4               	subwf	___lldiv@dividend^(0+128),f
  7055  1E6C  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  7056  1E6D  3BA5               	subwfb	(___lldiv@dividend+1)^(0+128),f
  7057  1E6E  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  7058  1E6F  3BA6               	subwfb	(___lldiv@dividend+2)^(0+128),f
  7059  1E70  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  7060  1E71  3BA7               	subwfb	(___lldiv@dividend+3)^(0+128),f
  7061  1E72  1428               	bsf	___lldiv@quotient^(0+128),0
  7062  1E73                     l6299:	
  7063  1E73  3001               	movlw	1
  7064  1E74                     u6735:	
  7065  1E74  36A3               	lsrf	(___lldiv@divisor+3)^(0+128),f
  7066  1E75  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  7067  1E76  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  7068  1E77  0CA0               	rrf	___lldiv@divisor^(0+128),f
  7069  1E78  0B89               	decfsz	9,f
  7070  1E79  2E74               	goto	u6735
  7071  1E7A  3001               	movlw	1
  7072  1E7B  02AC               	subwf	___lldiv@counter^(0+128),f
  7073  1E7C  1D03               	btfss	3,2
  7074  1E7D  2E53               	goto	l6291
  7075  1E7E                     l6303:	
  7076  1E7E  082B               	movf	(___lldiv@quotient+3)^(0+128),w
  7077  1E7F  00A3               	movwf	(?___lldiv+3)^(0+128)
  7078  1E80  082A               	movf	(___lldiv@quotient+2)^(0+128),w
  7079  1E81  00A2               	movwf	(?___lldiv+2)^(0+128)
  7080  1E82  0829               	movf	(___lldiv@quotient+1)^(0+128),w
  7081  1E83  00A1               	movwf	(?___lldiv+1)^(0+128)
  7082  1E84  0828               	movf	___lldiv@quotient^(0+128),w
  7083  1E85  00A0               	movwf	?___lldiv^(0+128)
  7084  1E86  0008               	return
  7085  1E87                     __end_of___lldiv:	
  7086                           
  7087                           	psect	text20
  7088  0A60                     __ptext20:	
  7089 ;; *************** function ___ftdiv *****************
  7090 ;; Defined at:
  7091 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\ftdiv.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  f2              3   32[BANK1 ] float 
  7094 ;;  f1              3   35[BANK1 ] float 
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;  f3              3   43[BANK1 ] float 
  7097 ;;  sign            1   47[BANK1 ] unsigned char 
  7098 ;;  exp             1   46[BANK1 ] unsigned char 
  7099 ;;  cntr            1   42[BANK1 ] unsigned char 
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  3   32[BANK1 ] float 
  7102 ;; Registers used:
  7103 ;;		wreg, status,2, status,0, pclath, cstack
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7109 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7110 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7112 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  7113 ;;Total ram usage:       16 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:    5
  7116 ;; This function calls:
  7117 ;;		___ftpack
  7118 ;; This function is called by:
  7119 ;;		_UpdateClock
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           
  7124                           ;psect for function ___ftdiv
  7125  0A60                     ___ftdiv:	
  7126                           
  7127                           ;incstack = 0
  7128                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7129  0A60  0021               	movlb	1	; select bank1
  7130  0A61  0843               	movf	___ftdiv@f1^(0+128),w
  7131  0A62  00C6               	movwf	??___ftdiv^(0+128)
  7132  0A63  0844               	movf	(___ftdiv@f1+1)^(0+128),w
  7133  0A64  00C7               	movwf	(??___ftdiv^(0+128)+1)
  7134  0A65  0845               	movf	(___ftdiv@f1+2)^(0+128),w
  7135  0A66  00C8               	movwf	(??___ftdiv^(0+128)+2)
  7136  0A67  1003               	clrc
  7137  0A68  0D47               	rlf	(??___ftdiv^(0+128)+1),w
  7138  0A69  0D48               	rlf	(??___ftdiv^(0+128)+2),w
  7139  0A6A  00C9               	movwf	(??___ftdiv+3)^(0+128)
  7140  0A6B  0849               	movf	(??___ftdiv+3)^(0+128),w
  7141  0A6C  00CE               	movwf	___ftdiv@exp^(0+128)
  7142  0A6D  08CE               	movf	___ftdiv@exp^(0+128),f
  7143  0A6E  1D03               	skipz
  7144  0A6F  2A77               	goto	l6145
  7145  0A70  3000               	movlw	0
  7146  0A71  00C0               	movwf	?___ftdiv^(0+128)
  7147  0A72  3000               	movlw	0
  7148  0A73  00C1               	movwf	(?___ftdiv+1)^(0+128)
  7149  0A74  3000               	movlw	0
  7150  0A75  00C2               	movwf	(?___ftdiv+2)^(0+128)
  7151  0A76  0008               	return
  7152  0A77                     l6145:	
  7153  0A77  0840               	movf	___ftdiv@f2^(0+128),w
  7154  0A78  00C6               	movwf	??___ftdiv^(0+128)
  7155  0A79  0841               	movf	(___ftdiv@f2+1)^(0+128),w
  7156  0A7A  00C7               	movwf	(??___ftdiv^(0+128)+1)
  7157  0A7B  0842               	movf	(___ftdiv@f2+2)^(0+128),w
  7158  0A7C  00C8               	movwf	(??___ftdiv^(0+128)+2)
  7159  0A7D  1003               	clrc
  7160  0A7E  0D47               	rlf	(??___ftdiv^(0+128)+1),w
  7161  0A7F  0D48               	rlf	(??___ftdiv^(0+128)+2),w
  7162  0A80  00C9               	movwf	(??___ftdiv+3)^(0+128)
  7163  0A81  0849               	movf	(??___ftdiv+3)^(0+128),w
  7164  0A82  00CF               	movwf	___ftdiv@sign^(0+128)
  7165  0A83  08CF               	movf	___ftdiv@sign^(0+128),f
  7166  0A84  1D03               	skipz
  7167  0A85  2A8D               	goto	l6151
  7168  0A86  3000               	movlw	0
  7169  0A87  00C0               	movwf	?___ftdiv^(0+128)
  7170  0A88  3000               	movlw	0
  7171  0A89  00C1               	movwf	(?___ftdiv+1)^(0+128)
  7172  0A8A  3000               	movlw	0
  7173  0A8B  00C2               	movwf	(?___ftdiv+2)^(0+128)
  7174  0A8C  0008               	return
  7175  0A8D                     l6151:	
  7176  0A8D  3000               	movlw	0
  7177  0A8E  00CB               	movwf	___ftdiv@f3^(0+128)
  7178  0A8F  3000               	movlw	0
  7179  0A90  00CC               	movwf	(___ftdiv@f3+1)^(0+128)
  7180  0A91  3000               	movlw	0
  7181  0A92  00CD               	movwf	(___ftdiv@f3+2)^(0+128)
  7182  0A93  3089               	movlw	137
  7183  0A94  074F               	addwf	___ftdiv@sign^(0+128),w
  7184  0A95  00C6               	movwf	??___ftdiv^(0+128)
  7185  0A96  0846               	movf	??___ftdiv^(0+128),w
  7186  0A97  02CE               	subwf	___ftdiv@exp^(0+128),f
  7187  0A98  0843               	movf	___ftdiv@f1^(0+128),w
  7188  0A99  00C6               	movwf	??___ftdiv^(0+128)
  7189  0A9A  0844               	movf	(___ftdiv@f1+1)^(0+128),w
  7190  0A9B  00C7               	movwf	(??___ftdiv^(0+128)+1)
  7191  0A9C  0845               	movf	(___ftdiv@f1+2)^(0+128),w
  7192  0A9D  00C8               	movwf	(??___ftdiv^(0+128)+2)
  7193  0A9E  3010               	movlw	16
  7194  0A9F                     u6395:	
  7195  0A9F  36C8               	lsrf	(??___ftdiv^(0+128)+2),f
  7196  0AA0  0CC7               	rrf	(??___ftdiv^(0+128)+1),f
  7197  0AA1  0CC6               	rrf	??___ftdiv^(0+128),f
  7198  0AA2  0B89               	decfsz	9,f
  7199  0AA3  2A9F               	goto	u6395
  7200  0AA4  0846               	movf	??___ftdiv^(0+128),w
  7201  0AA5  00C9               	movwf	(??___ftdiv+3)^(0+128)
  7202  0AA6  0849               	movf	(??___ftdiv+3)^(0+128),w
  7203  0AA7  00CF               	movwf	___ftdiv@sign^(0+128)
  7204  0AA8  0840               	movf	___ftdiv@f2^(0+128),w
  7205  0AA9  00C6               	movwf	??___ftdiv^(0+128)
  7206  0AAA  0841               	movf	(___ftdiv@f2+1)^(0+128),w
  7207  0AAB  00C7               	movwf	(??___ftdiv^(0+128)+1)
  7208  0AAC  0842               	movf	(___ftdiv@f2+2)^(0+128),w
  7209  0AAD  00C8               	movwf	(??___ftdiv^(0+128)+2)
  7210  0AAE  3010               	movlw	16
  7211  0AAF                     u6405:	
  7212  0AAF  36C8               	lsrf	(??___ftdiv^(0+128)+2),f
  7213  0AB0  0CC7               	rrf	(??___ftdiv^(0+128)+1),f
  7214  0AB1  0CC6               	rrf	??___ftdiv^(0+128),f
  7215  0AB2  0B89               	decfsz	9,f
  7216  0AB3  2AAF               	goto	u6405
  7217  0AB4  0846               	movf	??___ftdiv^(0+128),w
  7218  0AB5  00C9               	movwf	(??___ftdiv+3)^(0+128)
  7219  0AB6  0849               	movf	(??___ftdiv+3)^(0+128),w
  7220  0AB7  06CF               	xorwf	___ftdiv@sign^(0+128),f
  7221  0AB8  3080               	movlw	128
  7222  0AB9  00C6               	movwf	??___ftdiv^(0+128)
  7223  0ABA  0846               	movf	??___ftdiv^(0+128),w
  7224  0ABB  05CF               	andwf	___ftdiv@sign^(0+128),f
  7225  0ABC  17C4               	bsf	(___ftdiv@f1^(0+128)+1),7
  7226  0ABD  30FF               	movlw	255
  7227  0ABE  05C3               	andwf	___ftdiv@f1^(0+128),f
  7228  0ABF  30FF               	movlw	255
  7229  0AC0  05C4               	andwf	(___ftdiv@f1+1)^(0+128),f
  7230  0AC1  3000               	movlw	0
  7231  0AC2  05C5               	andwf	(___ftdiv@f1+2)^(0+128),f
  7232  0AC3  17C1               	bsf	(___ftdiv@f2^(0+128)+1),7
  7233  0AC4  30FF               	movlw	255
  7234  0AC5  05C0               	andwf	___ftdiv@f2^(0+128),f
  7235  0AC6  30FF               	movlw	255
  7236  0AC7  05C1               	andwf	(___ftdiv@f2+1)^(0+128),f
  7237  0AC8  3000               	movlw	0
  7238  0AC9  05C2               	andwf	(___ftdiv@f2+2)^(0+128),f
  7239  0ACA  3018               	movlw	24
  7240  0ACB  00C6               	movwf	??___ftdiv^(0+128)
  7241  0ACC  0846               	movf	??___ftdiv^(0+128),w
  7242  0ACD  00CA               	movwf	___ftdiv@cntr^(0+128)
  7243  0ACE                     l6165:	
  7244  0ACE  3001               	movlw	1
  7245  0ACF                     u6415:	
  7246  0ACF  35CB               	lslf	___ftdiv@f3^(0+128),f
  7247  0AD0  0DCC               	rlf	(___ftdiv@f3+1)^(0+128),f
  7248  0AD1  0DCD               	rlf	(___ftdiv@f3+2)^(0+128),f
  7249  0AD2  0B89               	decfsz	9,f
  7250  0AD3  2ACF               	goto	u6415
  7251  0AD4  0842               	movf	(___ftdiv@f2+2)^(0+128),w
  7252  0AD5  0245               	subwf	(___ftdiv@f1+2)^(0+128),w
  7253  0AD6  1D03               	skipz
  7254  0AD7  2ADE               	goto	u6425
  7255  0AD8  0841               	movf	(___ftdiv@f2+1)^(0+128),w
  7256  0AD9  0244               	subwf	(___ftdiv@f1+1)^(0+128),w
  7257  0ADA  1D03               	skipz
  7258  0ADB  2ADE               	goto	u6425
  7259  0ADC  0840               	movf	___ftdiv@f2^(0+128),w
  7260  0ADD  0243               	subwf	___ftdiv@f1^(0+128),w
  7261  0ADE                     u6425:	
  7262  0ADE  1C03               	skipc
  7263  0ADF  2AE7               	goto	l6173
  7264  0AE0  0840               	movf	___ftdiv@f2^(0+128),w
  7265  0AE1  02C3               	subwf	___ftdiv@f1^(0+128),f
  7266  0AE2  0841               	movf	(___ftdiv@f2+1)^(0+128),w
  7267  0AE3  3BC4               	subwfb	(___ftdiv@f1+1)^(0+128),f
  7268  0AE4  0842               	movf	(___ftdiv@f2+2)^(0+128),w
  7269  0AE5  3BC5               	subwfb	(___ftdiv@f1+2)^(0+128),f
  7270  0AE6  144B               	bsf	___ftdiv@f3^(0+128),0
  7271  0AE7                     l6173:	
  7272  0AE7  3001               	movlw	1
  7273  0AE8                     u6435:	
  7274  0AE8  35C3               	lslf	___ftdiv@f1^(0+128),f
  7275  0AE9  0DC4               	rlf	(___ftdiv@f1+1)^(0+128),f
  7276  0AEA  0DC5               	rlf	(___ftdiv@f1+2)^(0+128),f
  7277  0AEB  0B89               	decfsz	9,f
  7278  0AEC  2AE8               	goto	u6435
  7279  0AED  3001               	movlw	1
  7280  0AEE  02CA               	subwf	___ftdiv@cntr^(0+128),f
  7281  0AEF  1D03               	btfss	3,2
  7282  0AF0  2ACE               	goto	l6165
  7283  0AF1  084B               	movf	___ftdiv@f3^(0+128),w
  7284  0AF2  0020               	movlb	0	; select bank0
  7285  0AF3  00D8               	movwf	?___ftpack
  7286  0AF4  0021               	movlb	1	; select bank1
  7287  0AF5  084C               	movf	(___ftdiv@f3+1)^(0+128),w
  7288  0AF6  0020               	movlb	0	; select bank0
  7289  0AF7  00D9               	movwf	?___ftpack+1
  7290  0AF8  0021               	movlb	1	; select bank1
  7291  0AF9  084D               	movf	(___ftdiv@f3+2)^(0+128),w
  7292  0AFA  0020               	movlb	0	; select bank0
  7293  0AFB  00DA               	movwf	?___ftpack+2
  7294  0AFC  0021               	movlb	1	; select bank1
  7295  0AFD  084E               	movf	___ftdiv@exp^(0+128),w
  7296  0AFE  00C6               	movwf	??___ftdiv^(0+128)
  7297  0AFF  0846               	movf	??___ftdiv^(0+128),w
  7298  0B00  0020               	movlb	0	; select bank0
  7299  0B01  00DB               	movwf	?___ftpack+3
  7300  0B02  0021               	movlb	1	; select bank1
  7301  0B03  084F               	movf	___ftdiv@sign^(0+128),w
  7302  0B04  00C7               	movwf	(??___ftdiv+1)^(0+128)
  7303  0B05  0847               	movf	(??___ftdiv+1)^(0+128),w
  7304  0B06  0020               	movlb	0	; select bank0
  7305  0B07  00DC               	movwf	?___ftpack+4
  7306  0B08  319F  279F         	fcall	___ftpack
  7307  0B0A  0020               	movlb	0	; select bank0
  7308  0B0B  0858               	movf	?___ftpack,w
  7309  0B0C  0021               	movlb	1	; select bank1
  7310  0B0D  00C0               	movwf	?___ftdiv^(0+128)
  7311  0B0E  0020               	movlb	0	; select bank0
  7312  0B0F  0859               	movf	?___ftpack+1,w
  7313  0B10  0021               	movlb	1	; select bank1
  7314  0B11  00C1               	movwf	(?___ftdiv+1)^(0+128)
  7315  0B12  0020               	movlb	0	; select bank0
  7316  0B13  085A               	movf	?___ftpack+2,w
  7317  0B14  0021               	movlb	1	; select bank1
  7318  0B15  00C2               	movwf	(?___ftdiv+2)^(0+128)
  7319  0B16  0008               	return
  7320  0B17                     __end_of___ftdiv:	
  7321                           
  7322                           	psect	text21
  7323  1972                     __ptext21:	
  7324 ;; *************** function _InitTempSensor *****************
  7325 ;; Defined at:
  7326 ;;		line 241 in file "klondike.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;		None
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;		None
  7331 ;; Return value:  Size  Location     Type
  7332 ;;		None               void
  7333 ;; Registers used:
  7334 ;;		wreg, status,2, status,0
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7342 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7343 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7344 ;;Total ram usage:        1 bytes
  7345 ;; Hardware stack levels used:    1
  7346 ;; Hardware stack levels required when called:    4
  7347 ;; This function calls:
  7348 ;;		Nothing
  7349 ;; This function is called by:
  7350 ;;		_UserInit
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354                           
  7355                           ;psect for function _InitTempSensor
  7356  1972                     _InitTempSensor:	
  7357                           
  7358                           ;klondike.c: 242: TRISCbits.TRISC2=1;
  7359                           
  7360                           ;incstack = 0
  7361                           ; Regs used in _InitTempSensor: [wreg+status,2+status,0]
  7362  1972  0021               	movlb	1	; select bank1
  7363  1973  150E               	bsf	14,2	;volatile
  7364                           
  7365                           ;klondike.c: 245: ADCON0bits.CHS = 6;
  7366  1974  081D               	movf	29,w	;volatile
  7367  1975  3983               	andlw	-125
  7368  1976  3818               	iorlw	24
  7369  1977  009D               	movwf	29	;volatile
  7370                           
  7371                           ;klondike.c: 246: ADCON0bits.ADON = 1;
  7372  1978  141D               	bsf	29,0	;volatile
  7373                           
  7374                           ;klondike.c: 247: ADCON1bits.ADFM = 0;
  7375  1979  139E               	bcf	30,7	;volatile
  7376                           
  7377                           ;klondike.c: 248: ADCON1bits.ADCS = 6;
  7378  197A  081E               	movf	30,w	;volatile
  7379  197B  398F               	andlw	-113
  7380  197C  3860               	iorlw	96
  7381  197D  009E               	movwf	30	;volatile
  7382                           
  7383                           ;klondike.c: 249: ADCON1bits.ADPREF = 0;
  7384  197E  30FC               	movlw	-4
  7385  197F  059E               	andwf	30,f	;volatile
  7386                           
  7387                           ;klondike.c: 250: ADCON2bits.TRIGSEL = 0;
  7388  1980  308F               	movlw	-113
  7389  1981  059F               	andwf	31,f	;volatile
  7390                           
  7391                           ;klondike.c: 251: TempTarget = 143;
  7392  1982  308F               	movlw	143
  7393  1983  0020               	movlb	0	; select bank0
  7394  1984  00D8               	movwf	??_InitTempSensor
  7395  1985  0858               	movf	??_InitTempSensor,w
  7396  1986  0023               	movlb	3	; select bank3
  7397  1987  00E9               	movwf	_TempTarget^(0+384)
  7398  1988  0008               	return
  7399  1989                     __end_of_InitTempSensor:	
  7400                           
  7401                           	psect	text22
  7402  1A0A                     __ptext22:	
  7403 ;; *************** function _InitFAN *****************
  7404 ;; Defined at:
  7405 ;;		line 221 in file "klondike.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;		None
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;		None
  7410 ;; Return value:  Size  Location     Type
  7411 ;;		None               void
  7412 ;; Registers used:
  7413 ;;		wreg, status,2, status,0
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7423 ;;Total ram usage:        0 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:    4
  7426 ;; This function calls:
  7427 ;;		Nothing
  7428 ;; This function is called by:
  7429 ;;		_UserInit
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           
  7434                           ;psect for function _InitFAN
  7435  1A0A                     _InitFAN:	
  7436                           
  7437                           ;klondike.c: 222: TRISCbits.TRISC5 = 1;
  7438                           
  7439                           ;incstack = 0
  7440                           ; Regs used in _InitFAN: [wreg+status,2+status,0]
  7441  1A0A  0021               	movlb	1	; select bank1
  7442  1A0B  168E               	bsf	14,5	;volatile
  7443                           
  7444                           ;klondike.c: 223: PWM1CON = 0;
  7445  1A0C  002C               	movlb	12	; select bank12
  7446  1A0D  0193               	clrf	19	;volatile
  7447                           
  7448                           ;klondike.c: 224: PR2 = 0xFF;
  7449  1A0E  30FF               	movlw	255
  7450  1A0F  0020               	movlb	0	; select bank0
  7451  1A10  009B               	movwf	27	;volatile
  7452                           
  7453                           ;klondike.c: 225: PWM1CON = 0xC0;
  7454  1A11  30C0               	movlw	192
  7455  1A12  002C               	movlb	12	; select bank12
  7456  1A13  0093               	movwf	19	;volatile
  7457                           
  7458                           ;klondike.c: 226: PWM1DCH = FanLevel = 230;
  7459  1A14  30E6               	movlw	230
  7460  1A15  0023               	movlb	3	; select bank3
  7461  1A16  00E8               	movwf	_FanLevel^(0+384)
  7462  1A17  002C               	movlb	12	; select bank12
  7463  1A18  0092               	movwf	18	;volatile
  7464                           
  7465                           ;klondike.c: 227: PWM1DCL = 0;
  7466  1A19  0191               	clrf	17	;volatile
  7467                           
  7468                           ;klondike.c: 228: TMR2IF = 0;
  7469  1A1A  0020               	movlb	0	; select bank0
  7470  1A1B  1091               	bcf	17,1	;volatile
  7471                           
  7472                           ;klondike.c: 229: T2CONbits.T2CKPS = 1;
  7473  1A1C  081C               	movf	28,w	;volatile
  7474  1A1D  39FC               	andlw	-4
  7475  1A1E  3801               	iorlw	1
  7476  1A1F  009C               	movwf	28	;volatile
  7477                           
  7478                           ;klondike.c: 230: TMR2ON = 1;
  7479  1A20  151C               	bsf	28,2	;volatile
  7480                           
  7481                           ;klondike.c: 231: TRISCbits.TRISC5 = 0;
  7482  1A21  0021               	movlb	1	; select bank1
  7483  1A22  128E               	bcf	14,5	;volatile
  7484                           
  7485                           ;klondike.c: 232: PWM1OE=1;
  7486  1A23  002C               	movlb	12	; select bank12
  7487  1A24  1713               	bsf	19,6	;volatile
  7488  1A25  0008               	return
  7489  1A26                     __end_of_InitFAN:	
  7490                           
  7491                           	psect	text23
  7492  09A9                     __ptext23:	
  7493 ;; *************** function _DetectAsics *****************
  7494 ;; Defined at:
  7495 ;;		line 120 in file "klondike.c"
  7496 ;; Parameters:    Size  Location     Type
  7497 ;;		None
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;  x               1    2[BANK1 ] unsigned char 
  7500 ;; Return value:  Size  Location     Type
  7501 ;;		None               void
  7502 ;; Registers used:
  7503 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7510 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7511 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7512 ;;      Totals:         0       7       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7513 ;;Total ram usage:       10 bytes
  7514 ;; Hardware stack levels used:    1
  7515 ;; Hardware stack levels required when called:    5
  7516 ;; This function calls:
  7517 ;;		___awdiv
  7518 ;; This function is called by:
  7519 ;;		_UserInit
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           
  7524                           ;psect for function _DetectAsics
  7525  09A9                     _DetectAsics:	
  7526                           
  7527                           ;klondike.c: 121: Status.ChipCount = 16;
  7528                           
  7529                           ;incstack = 0
  7530                           ; Regs used in _DetectAsics: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7531  09A9  3010               	movlw	16
  7532  09AA  0020               	movlb	0	; select bank0
  7533  09AB  00E1               	movwf	??_DetectAsics
  7534  09AC  0861               	movf	??_DetectAsics,w
  7535  09AD  0022               	movlb	2	; select bank2
  7536  09AE  00E4               	movwf	(_Status^(0+256)+1)	;volatile
  7537                           
  7538                           ;klondike.c: 124: BankSize = (Status.ChipCount)/2;
  7539  09AF  3002               	movlw	2
  7540  09B0  0020               	movlb	0	; select bank0
  7541  09B1  00D8               	movwf	?___awdiv
  7542  09B2  3000               	movlw	0
  7543  09B3  00D9               	movwf	?___awdiv+1
  7544  09B4  0022               	movlb	2	; select bank2
  7545  09B5  0864               	movf	(_Status^(0+256)+1),w	;volatile
  7546  09B6  0020               	movlb	0	; select bank0
  7547  09B7  00E1               	movwf	??_DetectAsics
  7548  09B8  01E2               	clrf	??_DetectAsics+1
  7549  09B9  0861               	movf	??_DetectAsics,w
  7550  09BA  00DA               	movwf	?___awdiv+2
  7551  09BB  0862               	movf	??_DetectAsics+1,w
  7552  09BC  00DB               	movwf	?___awdiv+3
  7553  09BD  319D  25DE  3189   	fcall	___awdiv
  7554  09C0  0020               	movlb	0	; select bank0
  7555  09C1  0858               	movf	?___awdiv,w
  7556  09C2  00E3               	movwf	??_DetectAsics+2
  7557  09C3  0863               	movf	??_DetectAsics+2,w
  7558  09C4  0022               	movlb	2	; select bank2
  7559  09C5  00BF               	movwf	_BankSize^(0+256)
  7560                           
  7561                           ;klondike.c: 125: Status.MaxCount = 16384 / BankSize / 2;
  7562  09C6  083F               	movf	_BankSize^(0+256),w
  7563  09C7  0020               	movlb	0	; select bank0
  7564  09C8  00E1               	movwf	??_DetectAsics
  7565  09C9  01E2               	clrf	??_DetectAsics+1
  7566  09CA  0861               	movf	??_DetectAsics,w
  7567  09CB  00D8               	movwf	?___awdiv
  7568  09CC  0862               	movf	??_DetectAsics+1,w
  7569  09CD  00D9               	movwf	?___awdiv+1
  7570  09CE  3000               	movlw	0
  7571  09CF  00DA               	movwf	?___awdiv+2
  7572  09D0  3040               	movlw	64
  7573  09D1  00DB               	movwf	?___awdiv+3
  7574  09D2  319D  25DE  3189   	fcall	___awdiv
  7575  09D5  0020               	movlb	0	; select bank0
  7576  09D6  0859               	movf	?___awdiv+1,w
  7577  09D7  0021               	movlb	1	; select bank1
  7578  09D8  01A1               	clrf	(_DetectAsics$2774+1)^(0+128)
  7579  09D9  07A1               	addwf	(_DetectAsics$2774+1)^(0+128),f
  7580  09DA  0020               	movlb	0	; select bank0
  7581  09DB  0858               	movf	?___awdiv,w
  7582  09DC  0021               	movlb	1	; select bank1
  7583  09DD  01A0               	clrf	_DetectAsics$2774^(0+128)
  7584  09DE  07A0               	addwf	_DetectAsics$2774^(0+128),f
  7585                           
  7586                           ;klondike.c: 125: Status.MaxCount = 16384 / BankSize / 2;
  7587  09DF  3002               	movlw	2
  7588  09E0  0020               	movlb	0	; select bank0
  7589  09E1  00D8               	movwf	?___awdiv
  7590  09E2  3000               	movlw	0
  7591  09E3  00D9               	movwf	?___awdiv+1
  7592  09E4  0021               	movlb	1	; select bank1
  7593  09E5  0821               	movf	(_DetectAsics$2774+1)^(0+128),w
  7594  09E6  0020               	movlb	0	; select bank0
  7595  09E7  01DB               	clrf	?___awdiv+3
  7596  09E8  07DB               	addwf	?___awdiv+3,f
  7597  09E9  0021               	movlb	1	; select bank1
  7598  09EA  0820               	movf	_DetectAsics$2774^(0+128),w
  7599  09EB  0020               	movlb	0	; select bank0
  7600  09EC  01DA               	clrf	?___awdiv+2
  7601  09ED  07DA               	addwf	?___awdiv+2,f
  7602  09EE  319D  25DE  3189   	fcall	___awdiv
  7603  09F1  0020               	movlb	0	; select bank0
  7604  09F2  0859               	movf	?___awdiv+1,w
  7605  09F3  0022               	movlb	2	; select bank2
  7606  09F4  01EE               	clrf	((_Status+1)^(0+256)+10)	;volatile
  7607  09F5  07EE               	addwf	((_Status+1)^(0+256)+10),f	;volatile
  7608  09F6  0020               	movlb	0	; select bank0
  7609  09F7  0858               	movf	?___awdiv,w
  7610  09F8  0022               	movlb	2	; select bank2
  7611  09F9  01ED               	clrf	(_Status^(0+256)+10)	;volatile
  7612  09FA  07ED               	addwf	(_Status^(0+256)+10),f	;volatile
  7613                           
  7614                           ;klondike.c: 127: NonceRanges[0] = 0;
  7615  09FB  3000               	movlw	0
  7616  09FC  0026               	movlb	6	; select bank6
  7617  09FD  00A3               	movwf	(_NonceRanges+3)^(0+768)
  7618  09FE  3000               	movlw	0
  7619  09FF  00A2               	movwf	(_NonceRanges+2)^(0+768)
  7620  0A00  3000               	movlw	0
  7621  0A01  00A1               	movwf	(_NonceRanges+1)^(0+768)
  7622  0A02  3000               	movlw	0
  7623  0A03  00A0               	movwf	_NonceRanges^(0+768)
  7624                           
  7625                           ;klondike.c: 128: for(BYTE x = 1; x < BankSize; x++)
  7626  0A04  0021               	movlb	1	; select bank1
  7627  0A05  01A2               	clrf	DetectAsics@x^(0+128)
  7628  0A06  0AA2               	incf	DetectAsics@x^(0+128),f
  7629  0A07                     l7743:	
  7630  0A07  0022               	movlb	2	; select bank2
  7631  0A08  083F               	movf	_BankSize^(0+256),w
  7632  0A09  0021               	movlb	1	; select bank1
  7633  0A0A  0222               	subwf	DetectAsics@x^(0+128),w
  7634  0A0B  1803               	btfsc	3,0
  7635  0A0C  2A57               	goto	l7745
  7636                           
  7637                           ;klondike.c: 129: NonceRanges[x] = NonceRanges[x-1] + BankRanges[BankSize-1];
  7638  0A0D  0022               	movlb	2	; select bank2
  7639  0A0E  083F               	movf	_BankSize^(0+256),w
  7640  0A0F  0020               	movlb	0	; select bank0
  7641  0A10  00E1               	movwf	??_DetectAsics
  7642  0A11  3001               	movlw	1
  7643  0A12                     u8525:	
  7644  0A12  35E1               	lslf	??_DetectAsics,f
  7645  0A13  3EFF               	addlw	-1
  7646  0A14  1D03               	skipz
  7647  0A15  2A12               	goto	u8525
  7648  0A16  3561               	lslf	??_DetectAsics,w
  7649  0A17  3EFC               	addlw	252
  7650  0A18  3E40               	addlw	_BankRanges& (0+255)
  7651  0A19  0086               	movwf	6
  7652  0A1A  3003               	movlw	3	; select bank6/7
  7653  0A1B  0087               	movwf	7
  7654  0A1C  3F40               	moviw [0]fsr1
  7655  0A1D  00E2               	movwf	??_DetectAsics+1
  7656  0A1E  3F41               	moviw [1]fsr1
  7657  0A1F  00E3               	movwf	??_DetectAsics+2
  7658  0A20  3F42               	moviw [2]fsr1
  7659  0A21  00E4               	movwf	??_DetectAsics+3
  7660  0A22  3F43               	moviw [3]fsr1
  7661  0A23  00E5               	movwf	??_DetectAsics+4
  7662  0A24  0021               	movlb	1	; select bank1
  7663  0A25  0822               	movf	DetectAsics@x^(0+128),w
  7664  0A26  0020               	movlb	0	; select bank0
  7665  0A27  00E6               	movwf	??_DetectAsics+5
  7666  0A28  3001               	movlw	1
  7667  0A29                     u8535:	
  7668  0A29  35E6               	lslf	??_DetectAsics+5,f
  7669  0A2A  3EFF               	addlw	-1
  7670  0A2B  1D03               	skipz
  7671  0A2C  2A29               	goto	u8535
  7672  0A2D  3566               	lslf	??_DetectAsics+5,w
  7673  0A2E  3EFC               	addlw	252
  7674  0A2F  3E20               	addlw	_NonceRanges& (0+255)
  7675  0A30  0086               	movwf	6
  7676  0A31  3003               	movlw	3	; select bank6/7
  7677  0A32  0087               	movwf	7
  7678  0A33  3F40               	moviw [0]fsr1
  7679  0A34  07E2               	addwf	??_DetectAsics+1,f
  7680  0A35  3F41               	moviw [1]fsr1
  7681  0A36  3DE3               	addwfc	??_DetectAsics+2,f
  7682  0A37  3F42               	moviw [2]fsr1
  7683  0A38  3DE4               	addwfc	??_DetectAsics+3,f
  7684  0A39  3F43               	moviw [3]fsr1
  7685  0A3A  3DE5               	addwfc	??_DetectAsics+4,f
  7686  0A3B  0021               	movlb	1	; select bank1
  7687  0A3C  0822               	movf	DetectAsics@x^(0+128),w
  7688  0A3D  0020               	movlb	0	; select bank0
  7689  0A3E  00E7               	movwf	??_DetectAsics+6
  7690  0A3F  3001               	movlw	1
  7691  0A40                     u8545:	
  7692  0A40  35E7               	lslf	??_DetectAsics+6,f
  7693  0A41  3EFF               	addlw	-1
  7694  0A42  1D03               	skipz
  7695  0A43  2A40               	goto	u8545
  7696  0A44  3567               	lslf	??_DetectAsics+6,w
  7697  0A45  3E20               	addlw	_NonceRanges& (0+255)
  7698  0A46  0086               	movwf	6
  7699  0A47  3003               	movlw	3	; select bank6/7
  7700  0A48  0087               	movwf	7
  7701  0A49  0862               	movf	??_DetectAsics+1,w
  7702  0A4A  3FC0               	movwi [0]fsr1
  7703  0A4B  0863               	movf	??_DetectAsics+2,w
  7704  0A4C  3FC1               	movwi [1]fsr1
  7705  0A4D  0864               	movf	??_DetectAsics+3,w
  7706  0A4E  3FC2               	movwi [2]fsr1
  7707  0A4F  0865               	movf	??_DetectAsics+4,w
  7708  0A50  3FC3               	movwi [3]fsr1
  7709  0A51  3001               	movlw	1
  7710  0A52  00E1               	movwf	??_DetectAsics
  7711  0A53  0861               	movf	??_DetectAsics,w
  7712  0A54  0021               	movlb	1	; select bank1
  7713  0A55  07A2               	addwf	DetectAsics@x^(0+128),f
  7714  0A56  2A07               	goto	l7743
  7715  0A57                     l7745:	
  7716                           
  7717                           ;klondike.c: 131: Status.State = 'R';
  7718  0A57  3052               	movlw	82
  7719  0A58  0020               	movlb	0	; select bank0
  7720  0A59  00E1               	movwf	??_DetectAsics
  7721  0A5A  0861               	movf	??_DetectAsics,w
  7722  0A5B  0022               	movlb	2	; select bank2
  7723  0A5C  00E3               	movwf	_Status^(0+256)	;volatile
  7724                           
  7725                           ;klondike.c: 132: Status.HashCount = 0;
  7726  0A5D  01EB               	clrf	(_Status^(0+256)+8)	;volatile
  7727  0A5E  01EC               	clrf	((_Status+1)^(0+256)+8)	;volatile
  7728  0A5F  0008               	return
  7729  0A60                     __end_of_DetectAsics:	
  7730                           
  7731                           	psect	text24
  7732  1DDE                     __ptext24:	
  7733 ;; *************** function ___awdiv *****************
  7734 ;; Defined at:
  7735 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\awdiv.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  divisor         2    8[BANK0 ] int 
  7738 ;;  dividend        2   10[BANK0 ] int 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  quotient        2   15[BANK0 ] int 
  7741 ;;  sign            1   14[BANK0 ] unsigned char 
  7742 ;;  counter         1   13[BANK0 ] unsigned char 
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  2    8[BANK0 ] int 
  7745 ;; Registers used:
  7746 ;;		wreg, status,2, status,0
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7752 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7753 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7754 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7755 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7756 ;;Total ram usage:        9 bytes
  7757 ;; Hardware stack levels used:    1
  7758 ;; Hardware stack levels required when called:    4
  7759 ;; This function calls:
  7760 ;;		Nothing
  7761 ;; This function is called by:
  7762 ;;		_DetectAsics
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           
  7767                           ;psect for function ___awdiv
  7768  1DDE                     ___awdiv:	
  7769                           
  7770                           ;incstack = 0
  7771                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7772  1DDE  0020               	movlb	0	; select bank0
  7773  1DDF  01DE               	clrf	___awdiv@sign
  7774  1DE0  1FD9               	btfss	___awdiv@divisor+1,7
  7775  1DE1  2DE9               	goto	l7845
  7776  1DE2  09D8               	comf	___awdiv@divisor,f
  7777  1DE3  09D9               	comf	___awdiv@divisor+1,f
  7778  1DE4  0AD8               	incf	___awdiv@divisor,f
  7779  1DE5  1903               	skipnz
  7780  1DE6  0AD9               	incf	___awdiv@divisor+1,f
  7781  1DE7  01DE               	clrf	___awdiv@sign
  7782  1DE8  0ADE               	incf	___awdiv@sign,f
  7783  1DE9                     l7845:	
  7784  1DE9  1FDB               	btfss	___awdiv@dividend+1,7
  7785  1DEA  2DF4               	goto	l7851
  7786  1DEB  09DA               	comf	___awdiv@dividend,f
  7787  1DEC  09DB               	comf	___awdiv@dividend+1,f
  7788  1DED  0ADA               	incf	___awdiv@dividend,f
  7789  1DEE  1903               	skipnz
  7790  1DEF  0ADB               	incf	___awdiv@dividend+1,f
  7791  1DF0  3001               	movlw	1
  7792  1DF1  00DC               	movwf	??___awdiv
  7793  1DF2  085C               	movf	??___awdiv,w
  7794  1DF3  06DE               	xorwf	___awdiv@sign,f
  7795  1DF4                     l7851:	
  7796  1DF4  01DF               	clrf	___awdiv@quotient
  7797  1DF5  01E0               	clrf	___awdiv@quotient+1
  7798  1DF6  0859               	movf	___awdiv@divisor+1,w
  7799  1DF7  0458               	iorwf	___awdiv@divisor,w
  7800  1DF8  1903               	skipnz
  7801  1DF9  2E23               	goto	l7873
  7802  1DFA  01DD               	clrf	___awdiv@counter
  7803  1DFB  0ADD               	incf	___awdiv@counter,f
  7804  1DFC                     l7861:	
  7805  1DFC  1BD9               	btfsc	___awdiv@divisor+1,7
  7806  1DFD  2E08               	goto	l7863
  7807  1DFE  3001               	movlw	1
  7808  1DFF                     u8725:	
  7809  1DFF  35D8               	lslf	___awdiv@divisor,f
  7810  1E00  0DD9               	rlf	___awdiv@divisor+1,f
  7811  1E01  0B89               	decfsz	9,f
  7812  1E02  2DFF               	goto	u8725
  7813  1E03  3001               	movlw	1
  7814  1E04  00DC               	movwf	??___awdiv
  7815  1E05  085C               	movf	??___awdiv,w
  7816  1E06  07DD               	addwf	___awdiv@counter,f
  7817  1E07  2DFC               	goto	l7861
  7818  1E08                     l7863:	
  7819  1E08  3001               	movlw	1
  7820  1E09                     u8745:	
  7821  1E09  35DF               	lslf	___awdiv@quotient,f
  7822  1E0A  0DE0               	rlf	___awdiv@quotient+1,f
  7823  1E0B  0B89               	decfsz	9,f
  7824  1E0C  2E09               	goto	u8745
  7825  1E0D  0859               	movf	___awdiv@divisor+1,w
  7826  1E0E  025B               	subwf	___awdiv@dividend+1,w
  7827  1E0F  1D03               	skipz
  7828  1E10  2E13               	goto	u8755
  7829  1E11  0858               	movf	___awdiv@divisor,w
  7830  1E12  025A               	subwf	___awdiv@dividend,w
  7831  1E13                     u8755:	
  7832  1E13  1C03               	skipc
  7833  1E14  2E1A               	goto	l7869
  7834  1E15  0858               	movf	___awdiv@divisor,w
  7835  1E16  02DA               	subwf	___awdiv@dividend,f
  7836  1E17  0859               	movf	___awdiv@divisor+1,w
  7837  1E18  3BDB               	subwfb	___awdiv@dividend+1,f
  7838  1E19  145F               	bsf	___awdiv@quotient,0
  7839  1E1A                     l7869:	
  7840  1E1A  3001               	movlw	1
  7841  1E1B                     u8765:	
  7842  1E1B  36D9               	lsrf	___awdiv@divisor+1,f
  7843  1E1C  0CD8               	rrf	___awdiv@divisor,f
  7844  1E1D  0B89               	decfsz	9,f
  7845  1E1E  2E1B               	goto	u8765
  7846  1E1F  3001               	movlw	1
  7847  1E20  02DD               	subwf	___awdiv@counter,f
  7848  1E21  1D03               	btfss	3,2
  7849  1E22  2E08               	goto	l7863
  7850  1E23                     l7873:	
  7851  1E23  085E               	movf	___awdiv@sign,w
  7852  1E24  1903               	btfsc	3,2
  7853  1E25  2E2B               	goto	l7877
  7854  1E26  09DF               	comf	___awdiv@quotient,f
  7855  1E27  09E0               	comf	___awdiv@quotient+1,f
  7856  1E28  0ADF               	incf	___awdiv@quotient,f
  7857  1E29  1903               	skipnz
  7858  1E2A  0AE0               	incf	___awdiv@quotient+1,f
  7859  1E2B                     l7877:	
  7860  1E2B  0860               	movf	___awdiv@quotient+1,w
  7861  1E2C  01D9               	clrf	?___awdiv+1
  7862  1E2D  07D9               	addwf	?___awdiv+1,f
  7863  1E2E  085F               	movf	___awdiv@quotient,w
  7864  1E2F  01D8               	clrf	?___awdiv
  7865  1E30  07D8               	addwf	?___awdiv,f
  7866  1E31  0008               	return
  7867  1E32                     __end_of___awdiv:	
  7868                           
  7869                           	psect	text25
  7870  1F41                     __ptext25:	
  7871 ;; *************** function _WorkTick *****************
  7872 ;; Defined at:
  7873 ;;		line 137 in file "klondike.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;		None
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;		None
  7878 ;; Return value:  Size  Location     Type
  7879 ;;		None               void
  7880 ;; Registers used:
  7881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7889 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7890 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7891 ;;Total ram usage:        3 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; Hardware stack levels required when called:    7
  7894 ;; This function calls:
  7895 ;;		_UpdateFanLevel
  7896 ;;		___awmod
  7897 ;; This function is called by:
  7898 ;;		_main
  7899 ;; This function uses a non-reentrant model
  7900 ;;
  7901                           
  7902                           
  7903                           ;psect for function _WorkTick
  7904  1F41                     _WorkTick:	
  7905                           
  7906                           ;klondike.c: 138: TMR0 += HashTime;
  7907                           
  7908                           ;incstack = 0
  7909                           ; Regs used in _WorkTick: [allreg]
  7910  1F41  0022               	movlb	2	; select bank2
  7911  1F42  0826               	movf	_HashTime^(0+256),w
  7912  1F43  0021               	movlb	1	; select bank1
  7913  1F44  00E5               	movwf	??_WorkTick^(0+128)
  7914  1F45  0865               	movf	??_WorkTick^(0+128),w
  7915  1F46  0020               	movlb	0	; select bank0
  7916  1F47  0795               	addwf	21,f	;volatile
  7917                           
  7918                           ;klondike.c: 139: TMR0IF = 0;
  7919  1F48  110B               	bcf	11,2	;volatile
  7920                           
  7921                           ;klondike.c: 141: if((Status.State == 'W') && (++Status.HashCount == Status.MaxCount)) {
  7922  1F49  0022               	movlb	2	; select bank2
  7923  1F4A  0863               	movf	_Status^(0+256),w	;volatile
  7924  1F4B  3A57               	xorlw	87
  7925  1F4C  1D03               	skipz
  7926  1F4D  2F6C               	goto	l5723
  7927  1F4E  3008               	movlw	8
  7928  1F4F  3E63               	addlw	_Status& (0+255)
  7929  1F50  0086               	movwf	6
  7930  1F51  3001               	movlw	1	; select bank2/3
  7931  1F52  0087               	movwf	7
  7932  1F53  3001               	movlw	1
  7933  1F54  0781               	addwf	1,f
  7934  1F55  3141               	addfsr 1,1
  7935  1F56  1803               	skipnc
  7936  1F57  0A81               	incf	1,f
  7937  1F58  317F               	addfsr 1,-1
  7938  1F59  3F40               	moviw [0]fsr1
  7939  1F5A  066D               	xorwf	(_Status^(0+256)+10),w	;volatile
  7940  1F5B  1D03               	skipz
  7941  1F5C  2F5F               	goto	u5605
  7942  1F5D  3F41               	moviw [1]fsr1
  7943  1F5E  066E               	xorwf	((_Status+1)^(0+256)+10),w	;volatile
  7944  1F5F                     u5605:	
  7945  1F5F  1D03               	skipz
  7946  1F60  2F6C               	goto	l5723
  7947                           
  7948                           ;klondike.c: 142: if(Status.WorkQC > 0) {
  7949  1F61  0866               	movf	(_Status^(0+256)+3),w	;volatile
  7950  1F62  1903               	btfsc	3,2
  7951  1F63  2F66               	goto	l5721
  7952                           
  7953                           ;klondike.c: 143: Status.State = 'P';
  7954  1F64  3050               	movlw	80
  7955  1F65  2F67               	goto	L6
  7956  1F66                     l5721:	
  7957                           ;klondike.c: 144: }
  7958                           
  7959                           
  7960                           ;klondike.c: 145: else {
  7961                           ;klondike.c: 146: Status.State = 'R';
  7962  1F66  3052               	movlw	82
  7963  1F67                     L6:	
  7964  1F67  0021               	movlb	1	; select bank1
  7965  1F68  00E5               	movwf	??_WorkTick^(0+128)
  7966  1F69  0865               	movf	??_WorkTick^(0+128),w
  7967  1F6A  0022               	movlb	2	; select bank2
  7968  1F6B  00E3               	movwf	_Status^(0+256)	;volatile
  7969  1F6C                     l5723:	
  7970                           
  7971                           ;klondike.c: 147: }
  7972                           ;klondike.c: 148: }
  7973                           ;klondike.c: 150: if(++SlowTick == 0) {
  7974  1F6C  3001               	movlw	1
  7975  1F6D  0021               	movlb	1	; select bank1
  7976  1F6E  00E5               	movwf	??_WorkTick^(0+128)
  7977  1F6F  0865               	movf	??_WorkTick^(0+128),w
  7978  1F70  0023               	movlb	3	; select bank3
  7979  1F71  07B6               	addwf	_SlowTick^(0+384),f
  7980  1F72  1D03               	btfss	3,2
  7981  1F73  0008               	return
  7982                           
  7983                           ;klondike.c: 151: LATAbits.LATA5 = 0;;
  7984  1F74  0022               	movlb	2	; select bank2
  7985  1F75  128C               	bcf	12,5	;volatile
  7986                           
  7987                           ;klondike.c: 152: Status.Temp = ADRESH;
  7988  1F76  0021               	movlb	1	; select bank1
  7989  1F77  081C               	movf	28,w	;volatile
  7990  1F78  00E5               	movwf	??_WorkTick^(0+128)
  7991  1F79  0865               	movf	??_WorkTick^(0+128),w
  7992  1F7A  0022               	movlb	2	; select bank2
  7993  1F7B  00E8               	movwf	(_Status^(0+256)+5)	;volatile
  7994                           
  7995                           ;klondike.c: 153: ADCON0bits.GO_nDONE = 1;
  7996  1F7C  0021               	movlb	1	; select bank1
  7997  1F7D  149D               	bsf	29,1	;volatile
  7998                           
  7999                           ;klondike.c: 154: if((++VerySlowTick % 15) == 0) {
  8000  1F7E  300F               	movlw	15
  8001  1F7F  0020               	movlb	0	; select bank0
  8002  1F80  00D8               	movwf	?___awmod
  8003  1F81  3000               	movlw	0
  8004  1F82  00D9               	movwf	?___awmod+1
  8005  1F83  3001               	movlw	1
  8006  1F84  0021               	movlb	1	; select bank1
  8007  1F85  00E5               	movwf	??_WorkTick^(0+128)
  8008  1F86  0865               	movf	??_WorkTick^(0+128),w
  8009  1F87  0023               	movlb	3	; select bank3
  8010  1F88  07B9               	addwf	_VerySlowTick^(0+384),f
  8011  1F89  0839               	movf	_VerySlowTick^(0+384),w
  8012  1F8A  0021               	movlb	1	; select bank1
  8013  1F8B  00E6               	movwf	(??_WorkTick+1)^(0+128)
  8014  1F8C  01E7               	clrf	((??_WorkTick+1)^(0+128)+1)
  8015  1F8D  0866               	movf	(??_WorkTick+1)^(0+128),w
  8016  1F8E  0020               	movlb	0	; select bank0
  8017  1F8F  00DA               	movwf	?___awmod+2
  8018  1F90  0021               	movlb	1	; select bank1
  8019  1F91  0867               	movf	(??_WorkTick+2)^(0+128),w
  8020  1F92  0020               	movlb	0	; select bank0
  8021  1F93  00DB               	movwf	?___awmod+3
  8022  1F94  319C  24A2  319F   	fcall	___awmod
  8023  1F97  0020               	movlb	0	; select bank0
  8024  1F98  0859               	movf	?___awmod+1,w
  8025  1F99  0458               	iorwf	?___awmod,w
  8026  1F9A  1D03               	skipz
  8027  1F9B  0008               	return
  8028                           
  8029                           ;klondike.c: 155: UpdateFanLevel();
  8030  1F9C  3186  26A7         	fcall	_UpdateFanLevel
  8031  1F9E  0008               	return
  8032  1F9F                     __end_of_WorkTick:	
  8033                           
  8034                           	psect	text26
  8035  1CA2                     __ptext26:	
  8036 ;; *************** function ___awmod *****************
  8037 ;; Defined at:
  8038 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\awmod.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  divisor         2    8[BANK0 ] int 
  8041 ;;  dividend        2   10[BANK0 ] int 
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  sign            1   14[BANK0 ] unsigned char 
  8044 ;;  counter         1   13[BANK0 ] unsigned char 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  2    8[BANK0 ] int 
  8047 ;; Registers used:
  8048 ;;		wreg, status,2, status,0
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8054 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8055 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8057 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8058 ;;Total ram usage:        7 bytes
  8059 ;; Hardware stack levels used:    1
  8060 ;; Hardware stack levels required when called:    4
  8061 ;; This function calls:
  8062 ;;		Nothing
  8063 ;; This function is called by:
  8064 ;;		_WorkTick
  8065 ;; This function uses a non-reentrant model
  8066 ;;
  8067                           
  8068                           
  8069                           ;psect for function ___awmod
  8070  1CA2                     ___awmod:	
  8071                           
  8072                           ;incstack = 0
  8073                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8074  1CA2  0020               	movlb	0	; select bank0
  8075  1CA3  01DE               	clrf	___awmod@sign
  8076  1CA4  1FDB               	btfss	___awmod@dividend+1,7
  8077  1CA5  2CAD               	goto	l6009
  8078  1CA6  09DA               	comf	___awmod@dividend,f
  8079  1CA7  09DB               	comf	___awmod@dividend+1,f
  8080  1CA8  0ADA               	incf	___awmod@dividend,f
  8081  1CA9  1903               	skipnz
  8082  1CAA  0ADB               	incf	___awmod@dividend+1,f
  8083  1CAB  01DE               	clrf	___awmod@sign
  8084  1CAC  0ADE               	incf	___awmod@sign,f
  8085  1CAD                     l6009:	
  8086  1CAD  1FD9               	btfss	___awmod@divisor+1,7
  8087  1CAE  2CB4               	goto	l6013
  8088  1CAF  09D8               	comf	___awmod@divisor,f
  8089  1CB0  09D9               	comf	___awmod@divisor+1,f
  8090  1CB1  0AD8               	incf	___awmod@divisor,f
  8091  1CB2  1903               	skipnz
  8092  1CB3  0AD9               	incf	___awmod@divisor+1,f
  8093  1CB4                     l6013:	
  8094  1CB4  0859               	movf	___awmod@divisor+1,w
  8095  1CB5  0458               	iorwf	___awmod@divisor,w
  8096  1CB6  1903               	skipnz
  8097  1CB7  2CDB               	goto	l6031
  8098  1CB8  01DD               	clrf	___awmod@counter
  8099  1CB9  0ADD               	incf	___awmod@counter,f
  8100  1CBA                     l6021:	
  8101  1CBA  1BD9               	btfsc	___awmod@divisor+1,7
  8102  1CBB  2CC6               	goto	l6023
  8103  1CBC  3001               	movlw	1
  8104  1CBD                     u6055:	
  8105  1CBD  35D8               	lslf	___awmod@divisor,f
  8106  1CBE  0DD9               	rlf	___awmod@divisor+1,f
  8107  1CBF  0B89               	decfsz	9,f
  8108  1CC0  2CBD               	goto	u6055
  8109  1CC1  3001               	movlw	1
  8110  1CC2  00DC               	movwf	??___awmod
  8111  1CC3  085C               	movf	??___awmod,w
  8112  1CC4  07DD               	addwf	___awmod@counter,f
  8113  1CC5  2CBA               	goto	l6021
  8114  1CC6                     l6023:	
  8115  1CC6  0859               	movf	___awmod@divisor+1,w
  8116  1CC7  025B               	subwf	___awmod@dividend+1,w
  8117  1CC8  1D03               	skipz
  8118  1CC9  2CCC               	goto	u6075
  8119  1CCA  0858               	movf	___awmod@divisor,w
  8120  1CCB  025A               	subwf	___awmod@dividend,w
  8121  1CCC                     u6075:	
  8122  1CCC  1C03               	skipc
  8123  1CCD  2CD2               	goto	l6027
  8124  1CCE  0858               	movf	___awmod@divisor,w
  8125  1CCF  02DA               	subwf	___awmod@dividend,f
  8126  1CD0  0859               	movf	___awmod@divisor+1,w
  8127  1CD1  3BDB               	subwfb	___awmod@dividend+1,f
  8128  1CD2                     l6027:	
  8129  1CD2  3001               	movlw	1
  8130  1CD3                     u6085:	
  8131  1CD3  36D9               	lsrf	___awmod@divisor+1,f
  8132  1CD4  0CD8               	rrf	___awmod@divisor,f
  8133  1CD5  0B89               	decfsz	9,f
  8134  1CD6  2CD3               	goto	u6085
  8135  1CD7  3001               	movlw	1
  8136  1CD8  02DD               	subwf	___awmod@counter,f
  8137  1CD9  1D03               	btfss	3,2
  8138  1CDA  2CC6               	goto	l6023
  8139  1CDB                     l6031:	
  8140  1CDB  085E               	movf	___awmod@sign,w
  8141  1CDC  1903               	btfsc	3,2
  8142  1CDD  2CE3               	goto	l6035
  8143  1CDE  09DA               	comf	___awmod@dividend,f
  8144  1CDF  09DB               	comf	___awmod@dividend+1,f
  8145  1CE0  0ADA               	incf	___awmod@dividend,f
  8146  1CE1  1903               	skipnz
  8147  1CE2  0ADB               	incf	___awmod@dividend+1,f
  8148  1CE3                     l6035:	
  8149  1CE3  085B               	movf	___awmod@dividend+1,w
  8150  1CE4  01D9               	clrf	?___awmod+1
  8151  1CE5  07D9               	addwf	?___awmod+1,f
  8152  1CE6  085A               	movf	___awmod@dividend,w
  8153  1CE7  01D8               	clrf	?___awmod
  8154  1CE8  07D8               	addwf	?___awmod,f
  8155  1CE9  0008               	return
  8156  1CEA                     __end_of___awmod:	
  8157                           
  8158                           	psect	text27
  8159  06A7                     __ptext27:	
  8160 ;; *************** function _UpdateFanLevel *****************
  8161 ;; Defined at:
  8162 ;;		line 199 in file "klondike.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;		None
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;		None
  8167 ;; Return value:  Size  Location     Type
  8168 ;;		None               void
  8169 ;; Registers used:
  8170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  8171 ;; Tracked objects:
  8172 ;;		On entry : 0/0
  8173 ;;		On exit  : 0/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8178 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  8180 ;;Total ram usage:        7 bytes
  8181 ;; Hardware stack levels used:    1
  8182 ;; Hardware stack levels required when called:    6
  8183 ;; This function calls:
  8184 ;;		___awtoft
  8185 ;;		___ftadd
  8186 ;;		___ftmul
  8187 ;;		___ftneg
  8188 ;;		___fttol
  8189 ;; This function is called by:
  8190 ;;		_WorkTick
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194                           
  8195                           ;psect for function _UpdateFanLevel
  8196  06A7                     _UpdateFanLevel:	
  8197                           
  8198                           ;klondike.c: 200: Error = Status.Temp - TempTarget;
  8199                           
  8200                           ;incstack = 0
  8201                           ; Regs used in _UpdateFanLevel: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  8202  06A7  0023               	movlb	3	; select bank3
  8203  06A8  0869               	movf	_TempTarget^(0+384),w
  8204  06A9  0021               	movlb	1	; select bank1
  8205  06AA  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8206  06AB  01DF               	clrf	(??_UpdateFanLevel^(0+128)+1)
  8207  06AC  09DE               	comf	??_UpdateFanLevel^(0+128),f
  8208  06AD  09DF               	comf	(??_UpdateFanLevel^(0+128)+1),f
  8209  06AE  0ADE               	incf	??_UpdateFanLevel^(0+128),f
  8210  06AF  1903               	skipnz
  8211  06B0  0ADF               	incf	(??_UpdateFanLevel^(0+128)+1),f
  8212  06B1  0022               	movlb	2	; select bank2
  8213  06B2  0868               	movf	(_Status^(0+256)+5),w	;volatile
  8214  06B3  0021               	movlb	1	; select bank1
  8215  06B4  075E               	addwf	??_UpdateFanLevel^(0+128),w
  8216  06B5  00E0               	movwf	(??_UpdateFanLevel+2)^(0+128)
  8217  06B6  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  8218  06B7  1803               	skipnc
  8219  06B8  0A5F               	incf	(??_UpdateFanLevel+1)^(0+128),w
  8220  06B9  00E1               	movwf	((??_UpdateFanLevel+2)^(0+128)+1)
  8221  06BA  0860               	movf	(??_UpdateFanLevel+2)^(0+128),w
  8222  06BB  0023               	movlb	3	; select bank3
  8223  06BC  00E0               	movwf	_Error^(0+384)
  8224  06BD  0021               	movlb	1	; select bank1
  8225  06BE  0861               	movf	(??_UpdateFanLevel+3)^(0+128),w
  8226  06BF  0023               	movlb	3	; select bank3
  8227  06C0  00E1               	movwf	(_Error+1)^(0+384)
  8228                           
  8229                           ;klondike.c: 201: Step = 1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp);
  8230  06C1  0861               	movf	(_Error+1)^(0+384),w
  8231  06C2  0020               	movlb	0	; select bank0
  8232  06C3  01E1               	clrf	?___awtoft+1
  8233  06C4  07E1               	addwf	?___awtoft+1,f
  8234  06C5  0023               	movlb	3	; select bank3
  8235  06C6  0860               	movf	_Error^(0+384),w
  8236  06C7  0020               	movlb	0	; select bank0
  8237  06C8  01E0               	clrf	?___awtoft
  8238  06C9  07E0               	addwf	?___awtoft,f
  8239  06CA  319A  22E7  3186   	fcall	___awtoft
  8240  06CD  0020               	movlb	0	; select bank0
  8241  06CE  0860               	movf	?___awtoft,w
  8242  06CF  0021               	movlb	1	; select bank1
  8243  06D0  00B6               	movwf	(?___ftadd^(0+128)+3)
  8244  06D1  0020               	movlb	0	; select bank0
  8245  06D2  0861               	movf	?___awtoft+1,w
  8246  06D3  0021               	movlb	1	; select bank1
  8247  06D4  00B7               	movwf	((?___ftadd+1)^(0+128)+3)
  8248  06D5  0020               	movlb	0	; select bank0
  8249  06D6  0862               	movf	?___awtoft+2,w
  8250  06D7  0021               	movlb	1	; select bank1
  8251  06D8  00B8               	movwf	((?___ftadd+2)^(0+128)+3)
  8252  06D9  0022               	movlb	2	; select bank2
  8253  06DA  0868               	movf	(_Status^(0+256)+5),w	;volatile
  8254  06DB  0021               	movlb	1	; select bank1
  8255  06DC  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8256  06DD  01DF               	clrf	(??_UpdateFanLevel^(0+128)+1)
  8257  06DE  09DE               	comf	??_UpdateFanLevel^(0+128),f
  8258  06DF  09DF               	comf	(??_UpdateFanLevel^(0+128)+1),f
  8259  06E0  0ADE               	incf	??_UpdateFanLevel^(0+128),f
  8260  06E1  1903               	skipnz
  8261  06E2  0ADF               	incf	(??_UpdateFanLevel^(0+128)+1),f
  8262  06E3  0023               	movlb	3	; select bank3
  8263  06E4  0835               	movf	_LastTemp^(0+384),w
  8264  06E5  0021               	movlb	1	; select bank1
  8265  06E6  075E               	addwf	??_UpdateFanLevel^(0+128),w
  8266  06E7  00E0               	movwf	(??_UpdateFanLevel+2)^(0+128)
  8267  06E8  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  8268  06E9  1803               	skipnc
  8269  06EA  0A5F               	incf	(??_UpdateFanLevel+1)^(0+128),w
  8270  06EB  00E1               	movwf	((??_UpdateFanLevel+2)^(0+128)+1)
  8271  06EC  35E0               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  8272  06ED  0DE1               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  8273  06EE  35E0               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  8274  06EF  0DE1               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  8275  06F0  35E0               	lslf	(??_UpdateFanLevel+2)^(0+128),f
  8276  06F1  0DE1               	rlf	((??_UpdateFanLevel+2)^(0+128)+1),f
  8277  06F2  0860               	movf	(??_UpdateFanLevel+2)^(0+128),w
  8278  06F3  0020               	movlb	0	; select bank0
  8279  06F4  00E0               	movwf	?___awtoft
  8280  06F5  0021               	movlb	1	; select bank1
  8281  06F6  0861               	movf	(??_UpdateFanLevel+3)^(0+128),w
  8282  06F7  0020               	movlb	0	; select bank0
  8283  06F8  00E1               	movwf	?___awtoft+1
  8284  06F9  319A  22E7  3186   	fcall	___awtoft
  8285  06FC  0020               	movlb	0	; select bank0
  8286  06FD  0860               	movf	?___awtoft,w
  8287  06FE  0021               	movlb	1	; select bank1
  8288  06FF  00B0               	movwf	?___ftneg^(0+128)
  8289  0700  0020               	movlb	0	; select bank0
  8290  0701  0861               	movf	?___awtoft+1,w
  8291  0702  0021               	movlb	1	; select bank1
  8292  0703  00B1               	movwf	(?___ftneg+1)^(0+128)
  8293  0704  0020               	movlb	0	; select bank0
  8294  0705  0862               	movf	?___awtoft+2,w
  8295  0706  0021               	movlb	1	; select bank1
  8296  0707  00B2               	movwf	(?___ftneg+2)^(0+128)
  8297  0708  3198  20FB  3186   	fcall	___ftneg
  8298  070B  0021               	movlb	1	; select bank1
  8299  070C  0830               	movf	?___ftneg^(0+128),w
  8300  070D  00B3               	movwf	?___ftadd^(0+128)
  8301  070E  0831               	movf	(?___ftneg+1)^(0+128),w
  8302  070F  00B4               	movwf	(?___ftadd+1)^(0+128)
  8303  0710  0832               	movf	(?___ftneg+2)^(0+128),w
  8304  0711  00B5               	movwf	(?___ftadd+2)^(0+128)
  8305  0712  318C  24D0  3186   	fcall	___ftadd
  8306  0715  0021               	movlb	1	; select bank1
  8307  0716  0833               	movf	?___ftadd^(0+128),w
  8308  0717  00E2               	movwf	_UpdateFanLevel$2775^(0+128)
  8309  0718  0834               	movf	(?___ftadd+1)^(0+128),w
  8310  0719  00E3               	movwf	(_UpdateFanLevel$2775+1)^(0+128)
  8311  071A  0835               	movf	(?___ftadd+2)^(0+128),w
  8312  071B  00E4               	movwf	(_UpdateFanLevel$2775+2)^(0+128)
  8313                           
  8314                           ;klondike.c: 201: Step = 1*Error - 0.5*LastError - 8*(LastTemp - Status.Temp);
  8315  071C  0862               	movf	_UpdateFanLevel$2775^(0+128),w
  8316  071D  00B6               	movwf	(?___ftadd^(0+128)+3)
  8317  071E  0863               	movf	(_UpdateFanLevel$2775+1)^(0+128),w
  8318  071F  00B7               	movwf	((?___ftadd+1)^(0+128)+3)
  8319  0720  0864               	movf	(_UpdateFanLevel$2775+2)^(0+128),w
  8320  0721  00B8               	movwf	((?___ftadd+2)^(0+128)+3)
  8321  0722  0023               	movlb	3	; select bank3
  8322  0723  082D               	movf	(_LastError+1)^(0+384),w
  8323  0724  0020               	movlb	0	; select bank0
  8324  0725  01E1               	clrf	?___awtoft+1
  8325  0726  07E1               	addwf	?___awtoft+1,f
  8326  0727  0023               	movlb	3	; select bank3
  8327  0728  082C               	movf	_LastError^(0+384),w
  8328  0729  0020               	movlb	0	; select bank0
  8329  072A  01E0               	clrf	?___awtoft
  8330  072B  07E0               	addwf	?___awtoft,f
  8331  072C  319A  22E7  3186   	fcall	___awtoft
  8332  072F  0020               	movlb	0	; select bank0
  8333  0730  0860               	movf	?___awtoft,w
  8334  0731  0021               	movlb	1	; select bank1
  8335  0732  00A3               	movwf	(?___ftmul^(0+128)+3)
  8336  0733  0020               	movlb	0	; select bank0
  8337  0734  0861               	movf	?___awtoft+1,w
  8338  0735  0021               	movlb	1	; select bank1
  8339  0736  00A4               	movwf	((?___ftmul+1)^(0+128)+3)
  8340  0737  0020               	movlb	0	; select bank0
  8341  0738  0862               	movf	?___awtoft+2,w
  8342  0739  0021               	movlb	1	; select bank1
  8343  073A  00A5               	movwf	((?___ftmul+2)^(0+128)+3)
  8344  073B  3000               	movlw	0
  8345  073C  00A0               	movwf	?___ftmul^(0+128)
  8346  073D  3000               	movlw	0
  8347  073E  00A1               	movwf	(?___ftmul+1)^(0+128)
  8348  073F  303F               	movlw	63
  8349  0740  00A2               	movwf	(?___ftmul+2)^(0+128)
  8350  0741  318B  2317  3186   	fcall	___ftmul
  8351  0744  0021               	movlb	1	; select bank1
  8352  0745  0820               	movf	?___ftmul^(0+128),w
  8353  0746  00B0               	movwf	?___ftneg^(0+128)
  8354  0747  0821               	movf	(?___ftmul+1)^(0+128),w
  8355  0748  00B1               	movwf	(?___ftneg+1)^(0+128)
  8356  0749  0822               	movf	(?___ftmul+2)^(0+128),w
  8357  074A  00B2               	movwf	(?___ftneg+2)^(0+128)
  8358  074B  3198  20FB  3186   	fcall	___ftneg
  8359  074E  0021               	movlb	1	; select bank1
  8360  074F  0830               	movf	?___ftneg^(0+128),w
  8361  0750  00B3               	movwf	?___ftadd^(0+128)
  8362  0751  0831               	movf	(?___ftneg+1)^(0+128),w
  8363  0752  00B4               	movwf	(?___ftadd+1)^(0+128)
  8364  0753  0832               	movf	(?___ftneg+2)^(0+128),w
  8365  0754  00B5               	movwf	(?___ftadd+2)^(0+128)
  8366  0755  318C  24D0  3186   	fcall	___ftadd
  8367  0758  0021               	movlb	1	; select bank1
  8368  0759  0833               	movf	?___ftadd^(0+128),w
  8369  075A  00D0               	movwf	?___fttol^(0+128)
  8370  075B  0834               	movf	(?___ftadd+1)^(0+128),w
  8371  075C  00D1               	movwf	(?___fttol+1)^(0+128)
  8372  075D  0835               	movf	(?___ftadd+2)^(0+128),w
  8373  075E  00D2               	movwf	(?___fttol+2)^(0+128)
  8374  075F  3193  233C  3186   	fcall	___fttol
  8375  0762  0021               	movlb	1	; select bank1
  8376  0763  0851               	movf	(?___fttol^(0+128)+1),w
  8377  0764  0022               	movlb	2	; select bank2
  8378  0765  01A1               	clrf	(_Step+1)^(0+256)
  8379  0766  07A1               	addwf	(_Step+1)^(0+256),f
  8380  0767  0021               	movlb	1	; select bank1
  8381  0768  0850               	movf	?___fttol^(0+128),w
  8382  0769  0022               	movlb	2	; select bank2
  8383  076A  01A0               	clrf	_Step^(0+256)
  8384  076B  07A0               	addwf	_Step^(0+256),f
  8385                           
  8386                           ;klondike.c: 203: if(FanLevel + Step > 75 && FanLevel + Step <= 255) {
  8387  076C  0023               	movlb	3	; select bank3
  8388  076D  0868               	movf	_FanLevel^(0+384),w
  8389  076E  0022               	movlb	2	; select bank2
  8390  076F  0720               	addwf	_Step^(0+256),w
  8391  0770  0021               	movlb	1	; select bank1
  8392  0771  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8393  0772  0022               	movlb	2	; select bank2
  8394  0773  0821               	movf	(_Step+1)^(0+256),w
  8395  0774  1803               	skipnc
  8396  0775  0A21               	incf	(_Step+1)^(0+256),w
  8397  0776  0021               	movlb	1	; select bank1
  8398  0777  00DF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  8399  0778  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  8400  0779  3A80               	xorlw	128
  8401  077A  00FF               	movwf	127
  8402  077B  3080               	movlw	128
  8403  077C  027F               	subwf	127,w
  8404  077D  1D03               	skipz
  8405  077E  2F81               	goto	u5645
  8406  077F  304C               	movlw	76
  8407  0780  025E               	subwf	??_UpdateFanLevel^(0+128),w
  8408  0781                     u5645:	
  8409  0781  1C03               	skipc
  8410  0782  2FA2               	goto	l5747
  8411  0783  0023               	movlb	3	; select bank3
  8412  0784  0868               	movf	_FanLevel^(0+384),w
  8413  0785  0022               	movlb	2	; select bank2
  8414  0786  0720               	addwf	_Step^(0+256),w
  8415  0787  0021               	movlb	1	; select bank1
  8416  0788  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8417  0789  0022               	movlb	2	; select bank2
  8418  078A  0821               	movf	(_Step+1)^(0+256),w
  8419  078B  1803               	skipnc
  8420  078C  0A21               	incf	(_Step+1)^(0+256),w
  8421  078D  0021               	movlb	1	; select bank1
  8422  078E  00DF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  8423  078F  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  8424  0790  3A80               	xorlw	128
  8425  0791  00FF               	movwf	127
  8426  0792  3081               	movlw	129
  8427  0793  027F               	subwf	127,w
  8428  0794  1D03               	skipz
  8429  0795  2F98               	goto	u5655
  8430  0796  3000               	movlw	0
  8431  0797  025E               	subwf	??_UpdateFanLevel^(0+128),w
  8432  0798                     u5655:	
  8433  0798  1803               	skipnc
  8434  0799  2FA2               	goto	l5747
  8435                           
  8436                           ;klondike.c: 204: FanLevel += Step;
  8437  079A  0022               	movlb	2	; select bank2
  8438  079B  0820               	movf	_Step^(0+256),w
  8439  079C  0021               	movlb	1	; select bank1
  8440  079D  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8441  079E  085E               	movf	??_UpdateFanLevel^(0+128),w
  8442  079F  0023               	movlb	3	; select bank3
  8443  07A0  07E8               	addwf	_FanLevel^(0+384),f
  8444                           
  8445                           ;klondike.c: 205: }
  8446  07A1  2FD8               	goto	l722
  8447  07A2                     l5747:	
  8448                           
  8449                           ;klondike.c: 206: else if(FanLevel + Step > 255) {
  8450  07A2  0023               	movlb	3	; select bank3
  8451  07A3  0868               	movf	_FanLevel^(0+384),w
  8452  07A4  0022               	movlb	2	; select bank2
  8453  07A5  0720               	addwf	_Step^(0+256),w
  8454  07A6  0021               	movlb	1	; select bank1
  8455  07A7  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8456  07A8  0022               	movlb	2	; select bank2
  8457  07A9  0821               	movf	(_Step+1)^(0+256),w
  8458  07AA  1803               	skipnc
  8459  07AB  0A21               	incf	(_Step+1)^(0+256),w
  8460  07AC  0021               	movlb	1	; select bank1
  8461  07AD  00DF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  8462  07AE  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  8463  07AF  3A80               	xorlw	128
  8464  07B0  00FF               	movwf	127
  8465  07B1  3081               	movlw	129
  8466  07B2  027F               	subwf	127,w
  8467  07B3  1D03               	skipz
  8468  07B4  2FB7               	goto	u5665
  8469  07B5  3000               	movlw	0
  8470  07B6  025E               	subwf	??_UpdateFanLevel^(0+128),w
  8471  07B7                     u5665:	
  8472  07B7  1C03               	skipc
  8473  07B8  2FBB               	goto	l5751
  8474                           
  8475                           ;klondike.c: 207: FanLevel = 255;
  8476  07B9  30FF               	movlw	255
  8477  07BA  2FD3               	goto	L7
  8478  07BB                     l5751:	
  8479                           ;klondike.c: 208: }
  8480                           
  8481                           
  8482                           ;klondike.c: 209: else if(FanLevel + Step < 75) {
  8483  07BB  0023               	movlb	3	; select bank3
  8484  07BC  0868               	movf	_FanLevel^(0+384),w
  8485  07BD  0022               	movlb	2	; select bank2
  8486  07BE  0720               	addwf	_Step^(0+256),w
  8487  07BF  0021               	movlb	1	; select bank1
  8488  07C0  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8489  07C1  0022               	movlb	2	; select bank2
  8490  07C2  0821               	movf	(_Step+1)^(0+256),w
  8491  07C3  1803               	skipnc
  8492  07C4  0A21               	incf	(_Step+1)^(0+256),w
  8493  07C5  0021               	movlb	1	; select bank1
  8494  07C6  00DF               	movwf	(??_UpdateFanLevel^(0+128)+1)
  8495  07C7  085F               	movf	(??_UpdateFanLevel+1)^(0+128),w
  8496  07C8  3A80               	xorlw	128
  8497  07C9  00FF               	movwf	127
  8498  07CA  3080               	movlw	128
  8499  07CB  027F               	subwf	127,w
  8500  07CC  1D03               	skipz
  8501  07CD  2FD0               	goto	u5675
  8502  07CE  304B               	movlw	75
  8503  07CF  025E               	subwf	??_UpdateFanLevel^(0+128),w
  8504  07D0                     u5675:	
  8505  07D0  1803               	skipnc
  8506  07D1  2FD8               	goto	l722
  8507                           
  8508                           ;klondike.c: 210: FanLevel = 75;
  8509  07D2  304B               	movlw	75
  8510  07D3                     L7:	
  8511  07D3  0021               	movlb	1	; select bank1
  8512  07D4  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8513  07D5  085E               	movf	??_UpdateFanLevel^(0+128),w
  8514  07D6  0023               	movlb	3	; select bank3
  8515  07D7  00E8               	movwf	_FanLevel^(0+384)
  8516  07D8                     l722:	
  8517                           
  8518                           ;klondike.c: 211: }
  8519                           ;klondike.c: 213: LastTemp = Status.Temp;
  8520  07D8  0022               	movlb	2	; select bank2
  8521  07D9  0868               	movf	(_Status^(0+256)+5),w	;volatile
  8522  07DA  0021               	movlb	1	; select bank1
  8523  07DB  00DE               	movwf	??_UpdateFanLevel^(0+128)
  8524  07DC  085E               	movf	??_UpdateFanLevel^(0+128),w
  8525  07DD  0023               	movlb	3	; select bank3
  8526  07DE  00B5               	movwf	_LastTemp^(0+384)
  8527                           
  8528                           ;klondike.c: 214: LastError = Error;
  8529  07DF  0861               	movf	(_Error+1)^(0+384),w
  8530  07E0  01AD               	clrf	(_LastError+1)^(0+384)
  8531  07E1  07AD               	addwf	(_LastError+1)^(0+384),f
  8532  07E2  0860               	movf	_Error^(0+384),w
  8533  07E3  01AC               	clrf	_LastError^(0+384)
  8534  07E4  07AC               	addwf	_LastError^(0+384),f
  8535                           
  8536                           ;klondike.c: 216: PWM1DCH = Status.FanSpeed = FanLevel;
  8537  07E5  3006               	movlw	6
  8538  07E6  3E63               	addlw	_Status& (0+255)
  8539  07E7  0086               	movwf	6
  8540  07E8  3001               	movlw	1	; select bank2/3
  8541  07E9  0087               	movwf	7
  8542  07EA  0868               	movf	_FanLevel^(0+384),w
  8543  07EB  3FC0               	movwi [0]fsr1
  8544  07EC  002C               	movlb	12	; select bank12
  8545  07ED  0092               	movwf	18	;volatile
  8546  07EE  0008               	return
  8547  07EF                     __end_of_UpdateFanLevel:	
  8548                           
  8549                           	psect	text28
  8550  133C                     __ptext28:	
  8551 ;; *************** function ___fttol *****************
  8552 ;; Defined at:
  8553 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\fttol.c"
  8554 ;; Parameters:    Size  Location     Type
  8555 ;;  f1              3   48[BANK1 ] float 
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;  lval            4   57[BANK1 ] unsigned long 
  8558 ;;  exp1            1   61[BANK1 ] unsigned char 
  8559 ;;  sign1           1   56[BANK1 ] unsigned char 
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  4   48[BANK1 ] long 
  8562 ;; Registers used:
  8563 ;;		wreg, status,2, status,0
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8569 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8570 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8571 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8572 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8573 ;;Total ram usage:       14 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:    4
  8576 ;; This function calls:
  8577 ;;		Nothing
  8578 ;; This function is called by:
  8579 ;;		_UpdateFanLevel
  8580 ;;		_UpdateClock
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           
  8585                           ;psect for function ___fttol
  8586  133C                     ___fttol:	
  8587                           
  8588                           ;incstack = 0
  8589                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8590  133C  0021               	movlb	1	; select bank1
  8591  133D  0850               	movf	___fttol@f1^(0+128),w
  8592  133E  00D4               	movwf	??___fttol^(0+128)
  8593  133F  0851               	movf	(___fttol@f1+1)^(0+128),w
  8594  1340  00D5               	movwf	(??___fttol^(0+128)+1)
  8595  1341  0852               	movf	(___fttol@f1+2)^(0+128),w
  8596  1342  00D6               	movwf	(??___fttol^(0+128)+2)
  8597  1343  1003               	clrc
  8598  1344  0D55               	rlf	(??___fttol^(0+128)+1),w
  8599  1345  0D56               	rlf	(??___fttol^(0+128)+2),w
  8600  1346  00D7               	movwf	(??___fttol+3)^(0+128)
  8601  1347  0857               	movf	(??___fttol+3)^(0+128),w
  8602  1348  00DD               	movwf	___fttol@exp1^(0+128)
  8603  1349  08DD               	movf	___fttol@exp1^(0+128),f
  8604  134A  1D03               	skipz
  8605  134B  2B55               	goto	l6245
  8606  134C  3000               	movlw	0
  8607  134D  00D3               	movwf	(?___fttol+3)^(0+128)
  8608  134E  3000               	movlw	0
  8609  134F  00D2               	movwf	(?___fttol+2)^(0+128)
  8610  1350  3000               	movlw	0
  8611  1351  00D1               	movwf	(?___fttol+1)^(0+128)
  8612  1352  3000               	movlw	0
  8613  1353  00D0               	movwf	?___fttol^(0+128)
  8614  1354  0008               	return
  8615  1355                     l6245:	
  8616  1355  0850               	movf	___fttol@f1^(0+128),w
  8617  1356  00D4               	movwf	??___fttol^(0+128)
  8618  1357  0851               	movf	(___fttol@f1+1)^(0+128),w
  8619  1358  00D5               	movwf	(??___fttol^(0+128)+1)
  8620  1359  0852               	movf	(___fttol@f1+2)^(0+128),w
  8621  135A  00D6               	movwf	(??___fttol^(0+128)+2)
  8622  135B  3017               	movlw	23
  8623  135C                     u6595:	
  8624  135C  36D6               	lsrf	(??___fttol^(0+128)+2),f
  8625  135D  0CD5               	rrf	(??___fttol^(0+128)+1),f
  8626  135E  0CD4               	rrf	??___fttol^(0+128),f
  8627  135F  0B89               	decfsz	9,f
  8628  1360  2B5C               	goto	u6595
  8629  1361  0854               	movf	??___fttol^(0+128),w
  8630  1362  00D7               	movwf	(??___fttol+3)^(0+128)
  8631  1363  0857               	movf	(??___fttol+3)^(0+128),w
  8632  1364  00D8               	movwf	___fttol@sign1^(0+128)
  8633  1365  17D1               	bsf	(___fttol@f1^(0+128)+1),7
  8634  1366  30FF               	movlw	255
  8635  1367  05D0               	andwf	___fttol@f1^(0+128),f
  8636  1368  30FF               	movlw	255
  8637  1369  05D1               	andwf	(___fttol@f1+1)^(0+128),f
  8638  136A  3000               	movlw	0
  8639  136B  05D2               	andwf	(___fttol@f1+2)^(0+128),f
  8640  136C  0850               	movf	___fttol@f1^(0+128),w
  8641  136D  00D9               	movwf	___fttol@lval^(0+128)
  8642  136E  0851               	movf	(___fttol@f1+1)^(0+128),w
  8643  136F  00DA               	movwf	(___fttol@lval^(0+128)+1)
  8644  1370  0852               	movf	(___fttol@f1+2)^(0+128),w
  8645  1371  00DB               	movwf	(___fttol@lval^(0+128)+2)
  8646  1372  01DC               	clrf	(___fttol@lval^(0+128)+3)
  8647  1373  308E               	movlw	142
  8648  1374  02DD               	subwf	___fttol@exp1^(0+128),f
  8649  1375  1FDD               	btfss	___fttol@exp1^(0+128),7
  8650  1376  2B93               	goto	l6265
  8651  1377  085D               	movf	___fttol@exp1^(0+128),w
  8652  1378  3A80               	xorlw	128
  8653  1379  3E8F               	addlw	143
  8654  137A  1803               	skipnc
  8655  137B  2B85               	goto	l6263
  8656  137C  3000               	movlw	0
  8657  137D  00D3               	movwf	(?___fttol+3)^(0+128)
  8658  137E  3000               	movlw	0
  8659  137F  00D2               	movwf	(?___fttol+2)^(0+128)
  8660  1380  3000               	movlw	0
  8661  1381  00D1               	movwf	(?___fttol+1)^(0+128)
  8662  1382  3000               	movlw	0
  8663  1383  00D0               	movwf	?___fttol^(0+128)
  8664  1384  0008               	return
  8665  1385                     l6263:	
  8666  1385  3001               	movlw	1
  8667  1386                     u6625:	
  8668  1386  36DC               	lsrf	(___fttol@lval+3)^(0+128),f
  8669  1387  0CDB               	rrf	(___fttol@lval+2)^(0+128),f
  8670  1388  0CDA               	rrf	(___fttol@lval+1)^(0+128),f
  8671  1389  0CD9               	rrf	___fttol@lval^(0+128),f
  8672  138A  0B89               	decfsz	9,f
  8673  138B  2B86               	goto	u6625
  8674  138C  3001               	movlw	1
  8675  138D  00D4               	movwf	??___fttol^(0+128)
  8676  138E  0854               	movf	??___fttol^(0+128),w
  8677  138F  07DD               	addwf	___fttol@exp1^(0+128),f
  8678  1390  1903               	btfsc	3,2
  8679  1391  2BAC               	goto	l6275
  8680  1392  2B85               	goto	l6263
  8681  1393                     l6265:	
  8682  1393  3018               	movlw	24
  8683  1394  025D               	subwf	___fttol@exp1^(0+128),w
  8684  1395  1C03               	skipc
  8685  1396  2BA9               	goto	l6273
  8686  1397  3000               	movlw	0
  8687  1398  00D3               	movwf	(?___fttol+3)^(0+128)
  8688  1399  3000               	movlw	0
  8689  139A  00D2               	movwf	(?___fttol+2)^(0+128)
  8690  139B  3000               	movlw	0
  8691  139C  00D1               	movwf	(?___fttol+1)^(0+128)
  8692  139D  3000               	movlw	0
  8693  139E  00D0               	movwf	?___fttol^(0+128)
  8694  139F  0008               	return
  8695  13A0                     l6271:	
  8696  13A0  3001               	movlw	1
  8697  13A1                     u6655:	
  8698  13A1  35D9               	lslf	___fttol@lval^(0+128),f
  8699  13A2  0DDA               	rlf	(___fttol@lval+1)^(0+128),f
  8700  13A3  0DDB               	rlf	(___fttol@lval+2)^(0+128),f
  8701  13A4  0DDC               	rlf	(___fttol@lval+3)^(0+128),f
  8702  13A5  0B89               	decfsz	9,f
  8703  13A6  2BA1               	goto	u6655
  8704  13A7  3001               	movlw	1
  8705  13A8  02DD               	subwf	___fttol@exp1^(0+128),f
  8706  13A9                     l6273:	
  8707  13A9  08DD               	movf	___fttol@exp1^(0+128),f
  8708  13AA  1D03               	skipz
  8709  13AB  2BA0               	goto	l6271
  8710  13AC                     l6275:	
  8711  13AC  0858               	movf	___fttol@sign1^(0+128),w
  8712  13AD  1903               	btfsc	3,2
  8713  13AE  2BBA               	goto	l6279
  8714  13AF  09D9               	comf	___fttol@lval^(0+128),f
  8715  13B0  09DA               	comf	(___fttol@lval+1)^(0+128),f
  8716  13B1  09DB               	comf	(___fttol@lval+2)^(0+128),f
  8717  13B2  09DC               	comf	(___fttol@lval+3)^(0+128),f
  8718  13B3  0AD9               	incf	___fttol@lval^(0+128),f
  8719  13B4  1903               	skipnz
  8720  13B5  0ADA               	incf	(___fttol@lval+1)^(0+128),f
  8721  13B6  1903               	skipnz
  8722  13B7  0ADB               	incf	(___fttol@lval+2)^(0+128),f
  8723  13B8  1903               	skipnz
  8724  13B9  0ADC               	incf	(___fttol@lval+3)^(0+128),f
  8725  13BA                     l6279:	
  8726  13BA  085C               	movf	(___fttol@lval+3)^(0+128),w
  8727  13BB  00D3               	movwf	(?___fttol+3)^(0+128)
  8728  13BC  085B               	movf	(___fttol@lval+2)^(0+128),w
  8729  13BD  00D2               	movwf	(?___fttol+2)^(0+128)
  8730  13BE  085A               	movf	(___fttol@lval+1)^(0+128),w
  8731  13BF  00D1               	movwf	(?___fttol+1)^(0+128)
  8732  13C0  0859               	movf	___fttol@lval^(0+128),w
  8733  13C1  00D0               	movwf	?___fttol^(0+128)
  8734  13C2  0008               	return
  8735  13C3                     __end_of___fttol:	
  8736                           
  8737                           	psect	text29
  8738  18FB                     __ptext29:	
  8739 ;; *************** function ___ftneg *****************
  8740 ;; Defined at:
  8741 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\ftneg.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;  f1              3   16[BANK1 ] float 
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;		None
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  3   16[BANK1 ] float 
  8748 ;; Registers used:
  8749 ;;		wreg
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8755 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8758 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8759 ;;Total ram usage:        3 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; Hardware stack levels required when called:    4
  8762 ;; This function calls:
  8763 ;;		Nothing
  8764 ;; This function is called by:
  8765 ;;		_UpdateFanLevel
  8766 ;; This function uses a non-reentrant model
  8767 ;;
  8768                           
  8769                           
  8770                           ;psect for function ___ftneg
  8771  18FB                     ___ftneg:	
  8772                           
  8773                           ;incstack = 0
  8774                           ; Regs used in ___ftneg: [wreg]
  8775  18FB  0021               	movlb	1	; select bank1
  8776  18FC  0832               	movf	(___ftneg@f1+2)^(0+128),w
  8777  18FD  0431               	iorwf	(___ftneg@f1+1)^(0+128),w
  8778  18FE  0430               	iorwf	___ftneg@f1^(0+128),w
  8779  18FF  1903               	skipnz
  8780  1900  0008               	return
  8781  1901  3080               	movlw	128
  8782  1902  06B2               	xorwf	(___ftneg@f1+2)^(0+128),f
  8783  1903  0008               	return
  8784  1904                     __end_of___ftneg:	
  8785                           
  8786                           	psect	text30
  8787  0B17                     __ptext30:	
  8788 ;; *************** function ___ftmul *****************
  8789 ;; Defined at:
  8790 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\ftmul.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;  f1              3    0[BANK1 ] float 
  8793 ;;  f2              3    3[BANK1 ] float 
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;  f3_as_produc    3   11[BANK1 ] unsigned um
  8796 ;;  sign            1   15[BANK1 ] unsigned char 
  8797 ;;  cntr            1   14[BANK1 ] unsigned char 
  8798 ;;  exp             1   10[BANK1 ] unsigned char 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  3    0[BANK1 ] float 
  8801 ;; Registers used:
  8802 ;;		wreg, status,2, status,0, pclath, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8808 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8810 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8811 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;Total ram usage:       16 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:    5
  8815 ;; This function calls:
  8816 ;;		___ftpack
  8817 ;; This function is called by:
  8818 ;;		_UpdateFanLevel
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           
  8823                           ;psect for function ___ftmul
  8824  0B17                     ___ftmul:	
  8825                           
  8826                           ;incstack = 0
  8827                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8828  0B17  0021               	movlb	1	; select bank1
  8829  0B18  0820               	movf	___ftmul@f1^(0+128),w
  8830  0B19  00A6               	movwf	??___ftmul^(0+128)
  8831  0B1A  0821               	movf	(___ftmul@f1+1)^(0+128),w
  8832  0B1B  00A7               	movwf	(??___ftmul^(0+128)+1)
  8833  0B1C  0822               	movf	(___ftmul@f1+2)^(0+128),w
  8834  0B1D  00A8               	movwf	(??___ftmul^(0+128)+2)
  8835  0B1E  1003               	clrc
  8836  0B1F  0D27               	rlf	(??___ftmul^(0+128)+1),w
  8837  0B20  0D28               	rlf	(??___ftmul^(0+128)+2),w
  8838  0B21  00A9               	movwf	(??___ftmul+3)^(0+128)
  8839  0B22  0829               	movf	(??___ftmul+3)^(0+128),w
  8840  0B23  00AA               	movwf	___ftmul@exp^(0+128)
  8841  0B24  08AA               	movf	___ftmul@exp^(0+128),f
  8842  0B25  1D03               	skipz
  8843  0B26  2B2E               	goto	l6187
  8844  0B27  3000               	movlw	0
  8845  0B28  00A0               	movwf	?___ftmul^(0+128)
  8846  0B29  3000               	movlw	0
  8847  0B2A  00A1               	movwf	(?___ftmul+1)^(0+128)
  8848  0B2B  3000               	movlw	0
  8849  0B2C  00A2               	movwf	(?___ftmul+2)^(0+128)
  8850  0B2D  0008               	return
  8851  0B2E                     l6187:	
  8852  0B2E  0823               	movf	___ftmul@f2^(0+128),w
  8853  0B2F  00A6               	movwf	??___ftmul^(0+128)
  8854  0B30  0824               	movf	(___ftmul@f2+1)^(0+128),w
  8855  0B31  00A7               	movwf	(??___ftmul^(0+128)+1)
  8856  0B32  0825               	movf	(___ftmul@f2+2)^(0+128),w
  8857  0B33  00A8               	movwf	(??___ftmul^(0+128)+2)
  8858  0B34  1003               	clrc
  8859  0B35  0D27               	rlf	(??___ftmul^(0+128)+1),w
  8860  0B36  0D28               	rlf	(??___ftmul^(0+128)+2),w
  8861  0B37  00A9               	movwf	(??___ftmul+3)^(0+128)
  8862  0B38  0829               	movf	(??___ftmul+3)^(0+128),w
  8863  0B39  00AF               	movwf	___ftmul@sign^(0+128)
  8864  0B3A  08AF               	movf	___ftmul@sign^(0+128),f
  8865  0B3B  1D03               	skipz
  8866  0B3C  2B44               	goto	l6193
  8867  0B3D  3000               	movlw	0
  8868  0B3E  00A0               	movwf	?___ftmul^(0+128)
  8869  0B3F  3000               	movlw	0
  8870  0B40  00A1               	movwf	(?___ftmul+1)^(0+128)
  8871  0B41  3000               	movlw	0
  8872  0B42  00A2               	movwf	(?___ftmul+2)^(0+128)
  8873  0B43  0008               	return
  8874  0B44                     l6193:	
  8875  0B44  082F               	movf	___ftmul@sign^(0+128),w
  8876  0B45  3E7B               	addlw	123
  8877  0B46  00A6               	movwf	??___ftmul^(0+128)
  8878  0B47  0826               	movf	??___ftmul^(0+128),w
  8879  0B48  07AA               	addwf	___ftmul@exp^(0+128),f
  8880  0B49  0820               	movf	___ftmul@f1^(0+128),w
  8881  0B4A  00A6               	movwf	??___ftmul^(0+128)
  8882  0B4B  0821               	movf	(___ftmul@f1+1)^(0+128),w
  8883  0B4C  00A7               	movwf	(??___ftmul^(0+128)+1)
  8884  0B4D  0822               	movf	(___ftmul@f1+2)^(0+128),w
  8885  0B4E  00A8               	movwf	(??___ftmul^(0+128)+2)
  8886  0B4F  3010               	movlw	16
  8887  0B50                     u6475:	
  8888  0B50  36A8               	lsrf	(??___ftmul^(0+128)+2),f
  8889  0B51  0CA7               	rrf	(??___ftmul^(0+128)+1),f
  8890  0B52  0CA6               	rrf	??___ftmul^(0+128),f
  8891  0B53  0B89               	decfsz	9,f
  8892  0B54  2B50               	goto	u6475
  8893  0B55  0826               	movf	??___ftmul^(0+128),w
  8894  0B56  00A9               	movwf	(??___ftmul+3)^(0+128)
  8895  0B57  0829               	movf	(??___ftmul+3)^(0+128),w
  8896  0B58  00AF               	movwf	___ftmul@sign^(0+128)
  8897  0B59  0823               	movf	___ftmul@f2^(0+128),w
  8898  0B5A  00A6               	movwf	??___ftmul^(0+128)
  8899  0B5B  0824               	movf	(___ftmul@f2+1)^(0+128),w
  8900  0B5C  00A7               	movwf	(??___ftmul^(0+128)+1)
  8901  0B5D  0825               	movf	(___ftmul@f2+2)^(0+128),w
  8902  0B5E  00A8               	movwf	(??___ftmul^(0+128)+2)
  8903  0B5F  3010               	movlw	16
  8904  0B60                     u6485:	
  8905  0B60  36A8               	lsrf	(??___ftmul^(0+128)+2),f
  8906  0B61  0CA7               	rrf	(??___ftmul^(0+128)+1),f
  8907  0B62  0CA6               	rrf	??___ftmul^(0+128),f
  8908  0B63  0B89               	decfsz	9,f
  8909  0B64  2B60               	goto	u6485
  8910  0B65  0826               	movf	??___ftmul^(0+128),w
  8911  0B66  00A9               	movwf	(??___ftmul+3)^(0+128)
  8912  0B67  0829               	movf	(??___ftmul+3)^(0+128),w
  8913  0B68  06AF               	xorwf	___ftmul@sign^(0+128),f
  8914  0B69  3080               	movlw	128
  8915  0B6A  00A6               	movwf	??___ftmul^(0+128)
  8916  0B6B  0826               	movf	??___ftmul^(0+128),w
  8917  0B6C  05AF               	andwf	___ftmul@sign^(0+128),f
  8918  0B6D  17A1               	bsf	(___ftmul@f1^(0+128)+1),7
  8919  0B6E  17A4               	bsf	(___ftmul@f2^(0+128)+1),7
  8920  0B6F  30FF               	movlw	255
  8921  0B70  05A3               	andwf	___ftmul@f2^(0+128),f
  8922  0B71  30FF               	movlw	255
  8923  0B72  05A4               	andwf	(___ftmul@f2+1)^(0+128),f
  8924  0B73  3000               	movlw	0
  8925  0B74  05A5               	andwf	(___ftmul@f2+2)^(0+128),f
  8926  0B75  3000               	movlw	0
  8927  0B76  00AB               	movwf	___ftmul@f3_as_product^(0+128)
  8928  0B77  3000               	movlw	0
  8929  0B78  00AC               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  8930  0B79  3000               	movlw	0
  8931  0B7A  00AD               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  8932  0B7B  3007               	movlw	7
  8933  0B7C  00A6               	movwf	??___ftmul^(0+128)
  8934  0B7D  0826               	movf	??___ftmul^(0+128),w
  8935  0B7E  00AE               	movwf	___ftmul@cntr^(0+128)
  8936  0B7F                     l6205:	
  8937  0B7F  1C20               	btfss	___ftmul@f1^(0+128),0
  8938  0B80  2B87               	goto	l6209
  8939  0B81  0823               	movf	___ftmul@f2^(0+128),w
  8940  0B82  07AB               	addwf	___ftmul@f3_as_product^(0+128),f
  8941  0B83  0824               	movf	(___ftmul@f2+1)^(0+128),w
  8942  0B84  3DAC               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8943  0B85  0825               	movf	(___ftmul@f2+2)^(0+128),w
  8944  0B86  3DAD               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8945  0B87                     l6209:	
  8946  0B87  3001               	movlw	1
  8947  0B88                     u6505:	
  8948  0B88  36A2               	lsrf	(___ftmul@f1+2)^(0+128),f
  8949  0B89  0CA1               	rrf	(___ftmul@f1+1)^(0+128),f
  8950  0B8A  0CA0               	rrf	___ftmul@f1^(0+128),f
  8951  0B8B  0B89               	decfsz	9,f
  8952  0B8C  2B88               	goto	u6505
  8953  0B8D  3001               	movlw	1
  8954  0B8E                     u6515:	
  8955  0B8E  35A3               	lslf	___ftmul@f2^(0+128),f
  8956  0B8F  0DA4               	rlf	(___ftmul@f2+1)^(0+128),f
  8957  0B90  0DA5               	rlf	(___ftmul@f2+2)^(0+128),f
  8958  0B91  0B89               	decfsz	9,f
  8959  0B92  2B8E               	goto	u6515
  8960  0B93  3001               	movlw	1
  8961  0B94  02AE               	subwf	___ftmul@cntr^(0+128),f
  8962  0B95  1D03               	btfss	3,2
  8963  0B96  2B7F               	goto	l6205
  8964  0B97  3009               	movlw	9
  8965  0B98  00A6               	movwf	??___ftmul^(0+128)
  8966  0B99  0826               	movf	??___ftmul^(0+128),w
  8967  0B9A  00AE               	movwf	___ftmul@cntr^(0+128)
  8968  0B9B                     l6217:	
  8969  0B9B  1C20               	btfss	___ftmul@f1^(0+128),0
  8970  0B9C  2BA3               	goto	l6221
  8971  0B9D  0823               	movf	___ftmul@f2^(0+128),w
  8972  0B9E  07AB               	addwf	___ftmul@f3_as_product^(0+128),f
  8973  0B9F  0824               	movf	(___ftmul@f2+1)^(0+128),w
  8974  0BA0  3DAC               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  8975  0BA1  0825               	movf	(___ftmul@f2+2)^(0+128),w
  8976  0BA2  3DAD               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  8977  0BA3                     l6221:	
  8978  0BA3  3001               	movlw	1
  8979  0BA4                     u6545:	
  8980  0BA4  36A2               	lsrf	(___ftmul@f1+2)^(0+128),f
  8981  0BA5  0CA1               	rrf	(___ftmul@f1+1)^(0+128),f
  8982  0BA6  0CA0               	rrf	___ftmul@f1^(0+128),f
  8983  0BA7  0B89               	decfsz	9,f
  8984  0BA8  2BA4               	goto	u6545
  8985  0BA9  3001               	movlw	1
  8986  0BAA                     u6555:	
  8987  0BAA  36AD               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  8988  0BAB  0CAC               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  8989  0BAC  0CAB               	rrf	___ftmul@f3_as_product^(0+128),f
  8990  0BAD  0B89               	decfsz	9,f
  8991  0BAE  2BAA               	goto	u6555
  8992  0BAF  3001               	movlw	1
  8993  0BB0  02AE               	subwf	___ftmul@cntr^(0+128),f
  8994  0BB1  1D03               	btfss	3,2
  8995  0BB2  2B9B               	goto	l6217
  8996  0BB3  082B               	movf	___ftmul@f3_as_product^(0+128),w
  8997  0BB4  0020               	movlb	0	; select bank0
  8998  0BB5  00D8               	movwf	?___ftpack
  8999  0BB6  0021               	movlb	1	; select bank1
  9000  0BB7  082C               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  9001  0BB8  0020               	movlb	0	; select bank0
  9002  0BB9  00D9               	movwf	?___ftpack+1
  9003  0BBA  0021               	movlb	1	; select bank1
  9004  0BBB  082D               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  9005  0BBC  0020               	movlb	0	; select bank0
  9006  0BBD  00DA               	movwf	?___ftpack+2
  9007  0BBE  0021               	movlb	1	; select bank1
  9008  0BBF  082A               	movf	___ftmul@exp^(0+128),w
  9009  0BC0  00A6               	movwf	??___ftmul^(0+128)
  9010  0BC1  0826               	movf	??___ftmul^(0+128),w
  9011  0BC2  0020               	movlb	0	; select bank0
  9012  0BC3  00DB               	movwf	?___ftpack+3
  9013  0BC4  0021               	movlb	1	; select bank1
  9014  0BC5  082F               	movf	___ftmul@sign^(0+128),w
  9015  0BC6  00A7               	movwf	(??___ftmul+1)^(0+128)
  9016  0BC7  0827               	movf	(??___ftmul+1)^(0+128),w
  9017  0BC8  0020               	movlb	0	; select bank0
  9018  0BC9  00DC               	movwf	?___ftpack+4
  9019  0BCA  319F  279F         	fcall	___ftpack
  9020  0BCC  0020               	movlb	0	; select bank0
  9021  0BCD  0858               	movf	?___ftpack,w
  9022  0BCE  0021               	movlb	1	; select bank1
  9023  0BCF  00A0               	movwf	?___ftmul^(0+128)
  9024  0BD0  0020               	movlb	0	; select bank0
  9025  0BD1  0859               	movf	?___ftpack+1,w
  9026  0BD2  0021               	movlb	1	; select bank1
  9027  0BD3  00A1               	movwf	(?___ftmul+1)^(0+128)
  9028  0BD4  0020               	movlb	0	; select bank0
  9029  0BD5  085A               	movf	?___ftpack+2,w
  9030  0BD6  0021               	movlb	1	; select bank1
  9031  0BD7  00A2               	movwf	(?___ftmul+2)^(0+128)
  9032  0BD8  0008               	return
  9033  0BD9                     __end_of___ftmul:	
  9034                           
  9035                           	psect	text31
  9036  1AE7                     __ptext31:	
  9037 ;; *************** function ___awtoft *****************
  9038 ;; Defined at:
  9039 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\awtoft.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;  c               2   16[BANK0 ] int 
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;  sign            1   21[BANK0 ] unsigned char 
  9044 ;; Return value:  Size  Location     Type
  9045 ;;                  3   16[BANK0 ] float 
  9046 ;; Registers used:
  9047 ;;		wreg, status,2, status,0, pclath, cstack
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9053 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9054 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9055 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9056 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9057 ;;Total ram usage:        6 bytes
  9058 ;; Hardware stack levels used:    1
  9059 ;; Hardware stack levels required when called:    5
  9060 ;; This function calls:
  9061 ;;		___ftpack
  9062 ;; This function is called by:
  9063 ;;		_UpdateFanLevel
  9064 ;; This function uses a non-reentrant model
  9065 ;;
  9066                           
  9067                           
  9068                           ;psect for function ___awtoft
  9069  1AE7                     ___awtoft:	
  9070                           
  9071                           ;incstack = 0
  9072                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9073  1AE7  0020               	movlb	0	; select bank0
  9074  1AE8  01E5               	clrf	___awtoft@sign
  9075  1AE9  1FE1               	btfss	___awtoft@c+1,7
  9076  1AEA  2AF2               	goto	l6047
  9077  1AEB  09E0               	comf	___awtoft@c,f
  9078  1AEC  09E1               	comf	___awtoft@c+1,f
  9079  1AED  0AE0               	incf	___awtoft@c,f
  9080  1AEE  1903               	skipnz
  9081  1AEF  0AE1               	incf	___awtoft@c+1,f
  9082  1AF0  01E5               	clrf	___awtoft@sign
  9083  1AF1  0AE5               	incf	___awtoft@sign,f
  9084  1AF2                     l6047:	
  9085  1AF2  0860               	movf	___awtoft@c,w
  9086  1AF3  00D8               	movwf	?___ftpack
  9087  1AF4  0861               	movf	___awtoft@c+1,w
  9088  1AF5  00D9               	movwf	?___ftpack+1
  9089  1AF6  01DA               	clrf	?___ftpack+2
  9090  1AF7  308E               	movlw	142
  9091  1AF8  00E3               	movwf	??___awtoft
  9092  1AF9  0863               	movf	??___awtoft,w
  9093  1AFA  00DB               	movwf	?___ftpack+3
  9094  1AFB  0865               	movf	___awtoft@sign,w
  9095  1AFC  00E4               	movwf	??___awtoft+1
  9096  1AFD  0864               	movf	??___awtoft+1,w
  9097  1AFE  00DC               	movwf	?___ftpack+4
  9098  1AFF  319F  279F         	fcall	___ftpack
  9099  1B01  0020               	movlb	0	; select bank0
  9100  1B02  0858               	movf	?___ftpack,w
  9101  1B03  00E0               	movwf	?___awtoft
  9102  1B04  0859               	movf	?___ftpack+1,w
  9103  1B05  00E1               	movwf	?___awtoft+1
  9104  1B06  085A               	movf	?___ftpack+2,w
  9105  1B07  00E2               	movwf	?___awtoft+2
  9106  1B08  0008               	return
  9107  1B09                     __end_of___awtoft:	
  9108                           
  9109                           	psect	text32
  9110  0BD9                     __ptext32:	
  9111 ;; *************** function _USBDeviceTasks *****************
  9112 ;; Defined at:
  9113 ;;		line 669 in file "../USB/usb_device.c"
  9114 ;; Parameters:    Size  Location     Type
  9115 ;;		None
  9116 ;; Auto vars:     Size  Location     Type
  9117 ;;  i               1   20[BANK1 ] unsigned char 
  9118 ;; Return value:  Size  Location     Type
  9119 ;;		None               void
  9120 ;; Registers used:
  9121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9122 ;; Tracked objects:
  9123 ;;		On entry : 0/0
  9124 ;;		On exit  : 0/0
  9125 ;;		Unchanged: 0/0
  9126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9128 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9129 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9130 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9131 ;;Total ram usage:        3 bytes
  9132 ;; Hardware stack levels used:    1
  9133 ;; Hardware stack levels required when called:   12
  9134 ;; This function calls:
  9135 ;;		_USBDeviceInit
  9136 ;;		_USBWakeFromSuspend
  9137 ;;		_USBSuspend
  9138 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9139 ;;		_USBCtrlEPAllowStatusStage
  9140 ;;		_USBStallHandler
  9141 ;;		_USBCtrlEPService
  9142 ;; This function is called by:
  9143 ;;		_main
  9144 ;; This function uses a non-reentrant model
  9145 ;;
  9146                           
  9147                           
  9148                           ;psect for function _USBDeviceTasks
  9149  0BD9                     _USBDeviceTasks:	
  9150                           
  9151                           ;usb_device.c: 735: }
  9152                           ;usb_device.c: 757: if(USBDeviceState == DETACHED_STATE)
  9153                           
  9154                           ;usb_device.c: 734: return;
  9155                           
  9156                           ;usb_device.c: 733: PIR2bits.USBIF = 0;;
  9157                           
  9158                           ;usb_device.c: 705: USBDeviceState = DETACHED_STATE;
  9159                           
  9160                           ;usb_device.c: 702: UIE = 0;
  9161                           
  9162                           ;usb_device.c: 697: {
  9163                           ;usb_device.c: 699: UCON = 0;
  9164                           
  9165                           ;usb_device.c: 670: BYTE i;
  9166                           ;usb_device.c: 696: if (1 != 1)
  9167                           
  9168                           ;incstack = 0
  9169                           ; Regs used in _USBDeviceTasks: [allreg]
  9170  0BD9  0021               	movlb	1	; select bank1
  9171  0BDA  08EE               	movf	_USBDeviceState^(0+128),f
  9172  0BDB  1D03               	skipz
  9173  0BDC  2BED               	goto	l6631
  9174                           
  9175                           ;usb_device.c: 758: {
  9176                           ;usb_device.c: 760: UCON = 0;
  9177  0BDD  003D               	movlb	29	; select bank29
  9178  0BDE  018E               	clrf	14	;volatile
  9179                           
  9180                           ;usb_device.c: 763: UIE = 0;
  9181  0BDF  0192               	clrf	18	;volatile
  9182                           
  9183                           ;usb_device.c: 767: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  9184  0BE0  3016               	movlw	22
  9185  0BE1  0091               	movwf	17	;volatile
  9186  0BE2  309F               	movlw	159
  9187  0BE3  0097               	movwf	23	;volatile
  9188  0BE4  307B               	movlw	123
  9189  0BE5  0092               	movwf	18	;volatile
  9190  0BE6                     l140:	
  9191                           ;usb_device.c: 770: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  9192                           
  9193  0BE6  198E               	btfsc	14,3	;volatile
  9194  0BE7  2BEA               	goto	l142
  9195  0BE8  158E               	bsf	14,3	;volatile
  9196  0BE9  2BE6               	goto	l140
  9197  0BEA                     l142:	
  9198                           
  9199                           ;usb_device.c: 773: USBDeviceState = ATTACHED_STATE;
  9200  0BEA  0021               	movlb	1	; select bank1
  9201  0BEB  01EE               	clrf	_USBDeviceState^(0+128)
  9202  0BEC  0AEE               	incf	_USBDeviceState^(0+128),f
  9203  0BED                     l6631:	
  9204                           
  9205                           ;usb_device.c: 778: }
  9206                           ;usb_device.c: 781: if(USBDeviceState == ATTACHED_STATE)
  9207  0BED  086E               	movf	_USBDeviceState^(0+128),w
  9208  0BEE  3A01               	xorlw	1
  9209  0BEF  1D03               	skipz
  9210  0BF0  2BFD               	goto	l6643
  9211                           
  9212                           ;usb_device.c: 782: {
  9213                           ;usb_device.c: 792: if(!UCONbits.SE0)
  9214  0BF1  003D               	movlb	29	; select bank29
  9215  0BF2  1A8E               	btfsc	14,5	;volatile
  9216  0BF3  2BFD               	goto	l6643
  9217                           
  9218                           ;usb_device.c: 793: {
  9219                           ;usb_device.c: 794: UIR = 0;;
  9220  0BF4  0190               	clrf	16	;volatile
  9221                           
  9222                           ;usb_device.c: 796: UIE=0;
  9223  0BF5  0192               	clrf	18	;volatile
  9224                           
  9225                           ;usb_device.c: 798: UIEbits.URSTIE = 1;
  9226  0BF6  1412               	bsf	18,0	;volatile
  9227                           
  9228                           ;usb_device.c: 799: UIEbits.IDLEIE = 1;
  9229  0BF7  1612               	bsf	18,4	;volatile
  9230                           
  9231                           ;usb_device.c: 800: USBDeviceState = POWERED_STATE;
  9232  0BF8  3002               	movlw	2
  9233  0BF9  0021               	movlb	1	; select bank1
  9234  0BFA  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9235  0BFB  0832               	movf	??_USBDeviceTasks^(0+128),w
  9236  0BFC  00EE               	movwf	_USBDeviceState^(0+128)
  9237  0BFD                     l6643:	
  9238                           
  9239                           ;usb_device.c: 801: }
  9240                           ;usb_device.c: 802: }
  9241                           ;usb_device.c: 818: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  9242  0BFD  003D               	movlb	29	; select bank29
  9243  0BFE  1910               	btfsc	16,2	;volatile
  9244  0BFF  1D12               	btfss	18,2	;volatile
  9245  0C00  2C0A               	goto	l6651
  9246                           
  9247                           ;usb_device.c: 819: {
  9248                           ;usb_device.c: 820: (UIR &= 0xFB);
  9249  0C01  30FB               	movlw	251
  9250  0C02  0021               	movlb	1	; select bank1
  9251  0C03  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9252  0C04  0832               	movf	??_USBDeviceTasks^(0+128),w
  9253  0C05  003D               	movlb	29	; select bank29
  9254  0C06  0590               	andwf	16,f	;volatile
  9255                           
  9256                           ;usb_device.c: 824: USBWakeFromSuspend();
  9257  0C07  3199  21B7  318B   	fcall	_USBWakeFromSuspend
  9258  0C0A                     l6651:	
  9259                           
  9260                           ;usb_device.c: 826: }
  9261                           ;usb_device.c: 831: if(UCONbits.SUSPND==1)
  9262  0C0A  003D               	movlb	29	; select bank29
  9263  0C0B  1C8E               	btfss	14,1	;volatile
  9264  0C0C  2C10               	goto	l146
  9265                           
  9266                           ;usb_device.c: 832: {
  9267                           ;usb_device.c: 833: PIR2bits.USBIF = 0;;
  9268  0C0D  0020               	movlb	0	; select bank0
  9269  0C0E  1112               	bcf	18,2	;volatile
  9270                           
  9271                           ;usb_device.c: 834: return;
  9272  0C0F  0008               	return
  9273  0C10                     l146:	
  9274                           
  9275                           ;usb_device.c: 835: }
  9276                           ;usb_device.c: 847: if(UIRbits.URSTIF && UIEbits.URSTIE)
  9277  0C10  1810               	btfsc	16,0	;volatile
  9278  0C11  1C12               	btfss	18,0	;volatile
  9279  0C12  2C20               	goto	l6663
  9280                           
  9281                           ;usb_device.c: 848: {
  9282                           ;usb_device.c: 849: USBDeviceInit();
  9283  0C13  3197  2756  318B   	fcall	_USBDeviceInit
  9284                           
  9285                           ;usb_device.c: 853: ;
  9286                           ;usb_device.c: 855: USBDeviceState = DEFAULT_STATE;
  9287  0C16  3004               	movlw	4
  9288  0C17  0021               	movlb	1	; select bank1
  9289  0C18  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9290  0C19  0832               	movf	??_USBDeviceTasks^(0+128),w
  9291  0C1A  00EE               	movwf	_USBDeviceState^(0+128)
  9292                           
  9293                           ;usb_device.c: 865: (UIR &= 0xFE);
  9294  0C1B  30FE               	movlw	254
  9295  0C1C  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9296  0C1D  0832               	movf	??_USBDeviceTasks^(0+128),w
  9297  0C1E  003D               	movlb	29	; select bank29
  9298  0C1F  0590               	andwf	16,f	;volatile
  9299  0C20                     l6663:	
  9300                           
  9301                           ;usb_device.c: 866: }
  9302                           ;usb_device.c: 871: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  9303  0C20  1A10               	btfsc	16,4	;volatile
  9304  0C21  1E12               	btfss	18,4	;volatile
  9305  0C22  2C2C               	goto	l6671
  9306                           
  9307                           ;usb_device.c: 872: {
  9308                           ;usb_device.c: 877: USBSuspend();
  9309  0C23  3199  21EE  318B   	fcall	_USBSuspend
  9310                           
  9311                           ;usb_device.c: 880: (UIR &= 0xEF);
  9312  0C26  30EF               	movlw	239
  9313  0C27  0021               	movlb	1	; select bank1
  9314  0C28  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9315  0C29  0832               	movf	??_USBDeviceTasks^(0+128),w
  9316  0C2A  003D               	movlb	29	; select bank29
  9317  0C2B  0590               	andwf	16,f	;volatile
  9318  0C2C                     l6671:	
  9319                           
  9320                           ;usb_device.c: 881: }
  9321                           ;usb_device.c: 883: if(UIRbits.SOFIF)
  9322  0C2C  1F10               	btfss	16,6	;volatile
  9323  0C2D  2C52               	goto	l6687
  9324                           
  9325                           ;usb_device.c: 884: {
  9326                           ;usb_device.c: 885: if(UIEbits.SOFIE)
  9327  0C2E  1F12               	btfss	18,6	;volatile
  9328  0C2F  2C40               	goto	l6677
  9329                           
  9330                           ;usb_device.c: 886: {
  9331                           ;usb_device.c: 887: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  9332  0C30  3073               	movlw	115
  9333  0C31  0021               	movlb	1	; select bank1
  9334  0C32  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  9335  0C33  3000               	movlw	0
  9336  0C34  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  9337  0C35  3000               	movlw	0
  9338  0C36  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  9339  0C37  3000               	movlw	0
  9340  0C38  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
  9341  0C39  3001               	movlw	1
  9342  0C3A  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  9343  0C3B  3000               	movlw	0
  9344  0C3C  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
  9345  0C3D  319C  2423  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  9346  0C40                     l6677:	
  9347                           
  9348                           ;usb_device.c: 888: }
  9349                           ;usb_device.c: 889: (UIR &= 0xBF);
  9350  0C40  30BF               	movlw	191
  9351  0C41  0021               	movlb	1	; select bank1
  9352  0C42  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9353  0C43  0832               	movf	??_USBDeviceTasks^(0+128),w
  9354  0C44  003D               	movlb	29	; select bank29
  9355  0C45  0590               	andwf	16,f	;volatile
  9356                           
  9357                           ;usb_device.c: 914: if(USBStatusStageTimeoutCounter != 0u)
  9358  0C46  0022               	movlb	2	; select bank2
  9359  0C47  0832               	movf	_USBStatusStageTimeoutCounter^(0+256),w
  9360  0C48  1903               	btfsc	3,2
  9361  0C49  2C4C               	goto	l6683
  9362                           
  9363                           ;usb_device.c: 915: {
  9364                           ;usb_device.c: 916: USBStatusStageTimeoutCounter--;
  9365  0C4A  3001               	movlw	1
  9366  0C4B  02B2               	subwf	_USBStatusStageTimeoutCounter^(0+256),f
  9367  0C4C                     l6683:	
  9368                           
  9369                           ;usb_device.c: 917: }
  9370                           ;usb_device.c: 923: if(USBStatusStageTimeoutCounter == 0)
  9371  0C4C  08B2               	movf	_USBStatusStageTimeoutCounter^(0+256),f
  9372  0C4D  1D03               	skipz
  9373  0C4E  2C52               	goto	l6687
  9374                           
  9375                           ;usb_device.c: 924: {
  9376                           ;usb_device.c: 925: USBCtrlEPAllowStatusStage();
  9377  0C4F  3190  2064  318B   	fcall	_USBCtrlEPAllowStatusStage
  9378  0C52                     l6687:	
  9379                           
  9380                           ;usb_device.c: 926: }
  9381                           ;usb_device.c: 928: }
  9382                           ;usb_device.c: 930: if(UIRbits.STALLIF && UIEbits.STALLIE)
  9383  0C52  003D               	movlb	29	; select bank29
  9384  0C53  1A90               	btfsc	16,5	;volatile
  9385  0C54  1E92               	btfss	18,5	;volatile
  9386  0C55  2C59               	goto	l6693
  9387                           
  9388                           ;usb_device.c: 931: {
  9389                           ;usb_device.c: 932: USBStallHandler();
  9390  0C56  319A  22C5  318B   	fcall	_USBStallHandler
  9391  0C59                     l6693:	
  9392                           
  9393                           ;usb_device.c: 933: }
  9394                           ;usb_device.c: 935: if(UIRbits.UERRIF && UIEbits.UERRIE)
  9395  0C59  003D               	movlb	29	; select bank29
  9396  0C5A  1890               	btfsc	16,1	;volatile
  9397  0C5B  1C92               	btfss	18,1	;volatile
  9398  0C5C  2C6F               	goto	l6701
  9399                           
  9400                           ;usb_device.c: 936: {
  9401                           ;usb_device.c: 937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  9402  0C5D  30FF               	movlw	255
  9403  0C5E  0021               	movlb	1	; select bank1
  9404  0C5F  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  9405  0C60  307F               	movlw	127
  9406  0C61  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  9407  0C62  3000               	movlw	0
  9408  0C63  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  9409  0C64  3000               	movlw	0
  9410  0C65  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
  9411  0C66  3001               	movlw	1
  9412  0C67  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  9413  0C68  3000               	movlw	0
  9414  0C69  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
  9415  0C6A  319C  2423  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  9416                           
  9417                           ;usb_device.c: 938: UEIR = 0;;
  9418  0C6D  003D               	movlb	29	; select bank29
  9419  0C6E  0193               	clrf	19	;volatile
  9420  0C6F                     l6701:	
  9421                           
  9422                           ;usb_device.c: 946: }
  9423                           ;usb_device.c: 953: if(USBDeviceState < DEFAULT_STATE)
  9424  0C6F  3004               	movlw	4
  9425  0C70  0021               	movlb	1	; select bank1
  9426  0C71  026E               	subwf	_USBDeviceState^(0+128),w
  9427  0C72  1803               	skipnc
  9428  0C73  2C77               	goto	l155
  9429                           
  9430                           ;usb_device.c: 954: {
  9431                           ;usb_device.c: 955: PIR2bits.USBIF = 0;;
  9432  0C74  0020               	movlb	0	; select bank0
  9433  0C75  1112               	bcf	18,2	;volatile
  9434                           
  9435                           ;usb_device.c: 956: return;
  9436  0C76  0008               	return
  9437  0C77                     l155:	
  9438                           
  9439                           ;usb_device.c: 957: }
  9440                           ;usb_device.c: 962: if(UIEbits.TRNIE)
  9441  0C77  003D               	movlb	29	; select bank29
  9442  0C78  1D92               	btfss	18,3	;volatile
  9443  0C79  2CCD               	goto	l156
  9444                           
  9445                           ;usb_device.c: 963: {
  9446                           ;usb_device.c: 964: for(i = 0; i < 4u; i++)
  9447  0C7A  0021               	movlb	1	; select bank1
  9448  0C7B  01B4               	clrf	USBDeviceTasks@i^(0+128)
  9449  0C7C  2CC6               	goto	L9
  9450  0C7D                     l6711:	
  9451                           
  9452                           ;usb_device.c: 967: {
  9453                           ;usb_device.c: 969: USTATcopy.Val = USTAT;
  9454  0C7D  080F               	movf	15,w	;volatile
  9455  0C7E  0021               	movlb	1	; select bank1
  9456  0C7F  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9457  0C80  0832               	movf	??_USBDeviceTasks^(0+128),w
  9458  0C81  00EF               	movwf	_USTATcopy^(0+128)
  9459                           
  9460                           ;usb_device.c: 970: endpoint_number = USTATcopy.endpoint_number;
  9461  0C82  0C6F               	rrf	_USTATcopy^(0+128),w
  9462  0C83  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9463  0C84  0CB2               	rrf	??_USBDeviceTasks^(0+128),f
  9464  0C85  0C32               	rrf	??_USBDeviceTasks^(0+128),w
  9465  0C86  390F               	andlw	15
  9466  0C87  00B3               	movwf	(??_USBDeviceTasks+1)^(0+128)
  9467  0C88  0833               	movf	(??_USBDeviceTasks+1)^(0+128),w
  9468  0C89  0022               	movlb	2	; select bank2
  9469  0C8A  00B4               	movwf	_endpoint_number^(0+256)
  9470                           
  9471                           ;usb_device.c: 972: (UIR &= 0xF7);
  9472  0C8B  30F7               	movlw	247
  9473  0C8C  0021               	movlb	1	; select bank1
  9474  0C8D  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9475  0C8E  0832               	movf	??_USBDeviceTasks^(0+128),w
  9476  0C8F  003D               	movlb	29	; select bank29
  9477  0C90  0590               	andwf	16,f	;volatile
  9478                           
  9479                           ;usb_device.c: 977: if(USTATcopy.direction == 0)
  9480  0C91  0021               	movlb	1	; select bank1
  9481  0C92  196F               	btfsc	_USTATcopy^(0+128),2
  9482  0C93  2C98               	goto	l6721
  9483                           
  9484                           ;usb_device.c: 978: {
  9485                           ;usb_device.c: 979: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  9486  0C94  0022               	movlb	2	; select bank2
  9487  0C95  0834               	movf	_endpoint_number^(0+256),w
  9488  0C96  3EB0               	addlw	_ep_data_out& (0+255)
  9489  0C97  2C9B               	goto	L8
  9490  0C98                     l6721:	
  9491                           ;usb_device.c: 980: }
  9492                           
  9493                           
  9494                           ;usb_device.c: 981: else
  9495                           ;usb_device.c: 982: {
  9496                           ;usb_device.c: 983: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  9497  0C98  0022               	movlb	2	; select bank2
  9498  0C99  0834               	movf	_endpoint_number^(0+256),w
  9499  0C9A  3EAE               	addlw	_ep_data_in& (0+255)
  9500  0C9B                     L8:	
  9501  0C9B  0086               	movwf	6
  9502  0C9C  3001               	movlw	1	; select bank3/4
  9503  0C9D  0087               	movwf	7
  9504  0C9E  0801               	movf	1,w
  9505  0C9F  3901               	andlw	1
  9506  0CA0  0021               	movlb	1	; select bank1
  9507  0CA1  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9508  0CA2  3001               	movlw	1
  9509  0CA3  06B2               	xorwf	??_USBDeviceTasks^(0+128),f
  9510  0CA4  0801               	movf	1,w
  9511  0CA5  0632               	xorwf	??_USBDeviceTasks^(0+128),w
  9512  0CA6  39FE               	andlw	-2
  9513  0CA7  0632               	xorwf	??_USBDeviceTasks^(0+128),w
  9514  0CA8  0081               	movwf	1
  9515                           
  9516                           ;usb_device.c: 984: }
  9517                           ;usb_device.c: 989: if(endpoint_number == 0)
  9518  0CA9  0022               	movlb	2	; select bank2
  9519  0CAA  08B4               	movf	_endpoint_number^(0+256),f
  9520  0CAB  1D03               	skipz
  9521  0CAC  2CB1               	goto	l6727
  9522                           
  9523                           ;usb_device.c: 990: {
  9524                           ;usb_device.c: 991: USBCtrlEPService();
  9525  0CAD  3191  21BB  318B   	fcall	_USBCtrlEPService
  9526                           
  9527                           ;usb_device.c: 992: }
  9528  0CB0  2CC1               	goto	l6729
  9529  0CB1                     l6727:	
  9530                           
  9531                           ;usb_device.c: 993: else
  9532                           ;usb_device.c: 994: {
  9533                           ;usb_device.c: 995: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(BYTE*)&USTATcopy.Val
      +                          ,0);
  9534  0CB1  3072               	movlw	114
  9535  0CB2  0021               	movlb	1	; select bank1
  9536  0CB3  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
  9537  0CB4  3000               	movlw	0
  9538  0CB5  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
  9539  0CB6  30EF               	movlw	low _USTATcopy
  9540  0CB7  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
  9541  0CB8  3000               	movlw	high _USTATcopy
  9542  0CB9  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
  9543  0CBA  3000               	movlw	0
  9544  0CBB  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
  9545  0CBC  3000               	movlw	0
  9546  0CBD  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
  9547  0CBE  319C  2423  318B   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  9548  0CC1                     l6729:	
  9549                           ;usb_device.c: 998: else
  9550                           ;usb_device.c: 999: break;
  9551                           
  9552                           ;usb_device.c: 996: }
  9553                           ;usb_device.c: 997: }
  9554                           
  9555  0CC1  3001               	movlw	1
  9556  0CC2  0021               	movlb	1	; select bank1
  9557  0CC3  00B2               	movwf	??_USBDeviceTasks^(0+128)
  9558  0CC4  0832               	movf	??_USBDeviceTasks^(0+128),w
  9559  0CC5  07B4               	addwf	USBDeviceTasks@i^(0+128),f
  9560  0CC6                     L9:	
  9561  0CC6  3004               	movlw	4
  9562  0CC7  0234               	subwf	USBDeviceTasks@i^(0+128),w
  9563  0CC8  1803               	btfsc	3,0
  9564  0CC9  2CCD               	goto	l156
  9565                           
  9566                           ;usb_device.c: 965: {
  9567                           ;usb_device.c: 966: if(UIRbits.TRNIF)
  9568  0CCA  003D               	movlb	29	; select bank29
  9569  0CCB  1990               	btfsc	16,3	;volatile
  9570  0CCC  2C7D               	goto	l6711
  9571  0CCD                     l156:	
  9572                           
  9573                           ;usb_device.c: 1000: }
  9574                           ;usb_device.c: 1001: }
  9575                           ;usb_device.c: 1003: PIR2bits.USBIF = 0;;
  9576  0CCD  0020               	movlb	0	; select bank0
  9577  0CCE  1112               	bcf	18,2	;volatile
  9578  0CCF  0008               	return
  9579  0CD0                     __end_of_USBDeviceTasks:	
  9580                           
  9581                           	psect	text33
  9582  11BB                     __ptext33:	
  9583 ;; *************** function _USBCtrlEPService *****************
  9584 ;; Defined at:
  9585 ;;		line 2523 in file "../USB/usb_device.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;		None
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;  setup_cnt       1   17[BANK1 ] unsigned char 
  9590 ;; Return value:  Size  Location     Type
  9591 ;;		None               void
  9592 ;; Registers used:
  9593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9602 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9603 ;;Total ram usage:        4 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:   11
  9606 ;; This function calls:
  9607 ;;		_USBCtrlTrfSetupHandler
  9608 ;;		_USBCtrlTrfOutHandler
  9609 ;;		_USBCtrlTrfInHandler
  9610 ;; This function is called by:
  9611 ;;		_USBDeviceTasks
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           
  9615                           
  9616                           ;psect for function _USBCtrlEPService
  9617  11BB                     _USBCtrlEPService:	
  9618                           
  9619                           ;usb_device.c: 2528: USBStatusStageTimeoutCounter = (BYTE)40;
  9620                           
  9621                           ;incstack = 0
  9622                           ; Regs used in _USBCtrlEPService: [allreg]
  9623  11BB  3028               	movlw	40
  9624  11BC  0021               	movlb	1	; select bank1
  9625  11BD  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9626  11BE  082E               	movf	??_USBCtrlEPService^(0+128),w
  9627  11BF  0022               	movlb	2	; select bank2
  9628  11C0  00B2               	movwf	_USBStatusStageTimeoutCounter^(0+256)
  9629                           
  9630                           ;usb_device.c: 2532: if((USTATcopy.Val & ~0x02) == 0x00)
  9631  11C1  0021               	movlb	1	; select bank1
  9632  11C2  086F               	movf	_USTATcopy^(0+128),w
  9633  11C3  39FD               	andlw	253
  9634  11C4  1D03               	btfss	3,2
  9635  11C5  2A2C               	goto	l6841
  9636                           
  9637                           ;usb_device.c: 2533: {
  9638                           ;usb_device.c: 2536: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  9639  11C6  366F               	lsrf	_USTATcopy^(0+128),w
  9640  11C7  393F               	andlw	63
  9641  11C8  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9642  11C9  3001               	movlw	1
  9643  11CA                     u7465:	
  9644  11CA  35AE               	lslf	??_USBCtrlEPService^(0+128),f
  9645  11CB  3EFF               	addlw	-1
  9646  11CC  1D03               	skipz
  9647  11CD  29CA               	goto	u7465
  9648  11CE  352E               	lslf	??_USBCtrlEPService^(0+128),w
  9649  11CF  3E20               	addlw	32
  9650  11D0  00AF               	movwf	(??_USBCtrlEPService+1)^(0+128)
  9651  11D1  082F               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9652  11D2  0020               	movlb	0	; select bank0
  9653  11D3  00ED               	movwf	_pBDTEntryEP0OutCurrent
  9654                           
  9655                           ;usb_device.c: 2544: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9656  11D4  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9657  11D5  0021               	movlb	1	; select bank1
  9658  11D6  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9659  11D7  082E               	movf	??_USBCtrlEPService^(0+128),w
  9660  11D8  0020               	movlb	0	; select bank0
  9661  11D9  00EE               	movwf	_pBDTEntryEP0OutNext
  9662                           
  9663                           ;usb_device.c: 2546: ((BYTE_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  9664  11DA  3004               	movlw	4
  9665  11DB  0021               	movlb	1	; select bank1
  9666  11DC  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9667  11DD  082E               	movf	??_USBCtrlEPService^(0+128),w
  9668  11DE  0020               	movlb	0	; select bank0
  9669  11DF  06EE               	xorwf	_pBDTEntryEP0OutNext,f
  9670                           
  9671                           ;usb_device.c: 2549: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  9672  11E0  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9673  11E1  0086               	movwf	6
  9674  11E2  0187               	clrf	7
  9675  11E3  0C01               	rrf	1,w
  9676  11E4  0C89               	rrf	9,f
  9677  11E5  390F               	andlw	15
  9678  11E6  3A0D               	xorlw	13
  9679  11E7  1D03               	skipz
  9680  11E8  2A29               	goto	l6839
  9681                           
  9682                           ;usb_device.c: 2550: {
  9683                           ;usb_device.c: 2551: unsigned char setup_cnt;
  9684                           ;usb_device.c: 2557: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
  9685  11E9  0021               	movlb	1	; select bank1
  9686  11EA  01B1               	clrf	USBCtrlEPService@setup_cnt^(0+128)
  9687  11EB  3008               	movlw	8
  9688  11EC  0231               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  9689  11ED  1803               	btfsc	3,0
  9690  11EE  2A18               	goto	l6835
  9691  11EF                     l6829:	
  9692                           
  9693                           ;usb_device.c: 2558: {
  9694                           ;usb_device.c: 2559: *(BYTE*)((BYTE*)&SetupPkt + setup_cnt) = *(BYTE*)((void *)(pBDTEntr
      +                          yEP0OutCurrent->ADR));
  9695  11EF  0020               	movlb	0	; select bank0
  9696  11F0  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9697  11F1  3E02               	addlw	2
  9698  11F2  0086               	movwf	6
  9699  11F3  0187               	clrf	7
  9700  11F4  3F40               	moviw [0]fsr1
  9701  11F5  0021               	movlb	1	; select bank1
  9702  11F6  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9703  11F7  3F41               	moviw [1]fsr1
  9704  11F8  00AF               	movwf	(??_USBCtrlEPService^(0+128)+1)
  9705  11F9  082E               	movf	??_USBCtrlEPService^(0+128),w
  9706  11FA  0086               	movwf	6
  9707  11FB  082F               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9708  11FC  0087               	movwf	7
  9709  11FD  0801               	movf	1,w
  9710  11FE  00B0               	movwf	(??_USBCtrlEPService+2)^(0+128)
  9711  11FF  0831               	movf	USBCtrlEPService@setup_cnt^(0+128),w
  9712  1200  3E40               	addlw	64
  9713  1201  0086               	movwf	6
  9714  1202  0187               	clrf	7
  9715  1203  0830               	movf	(??_USBCtrlEPService+2)^(0+128),w
  9716  1204  0081               	movwf	1
  9717                           
  9718                           ;usb_device.c: 2560: pBDTEntryEP0OutCurrent->ADR++;
  9719  1205  0020               	movlb	0	; select bank0
  9720  1206  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9721  1207  3E02               	addlw	2
  9722  1208  0086               	movwf	6
  9723  1209  0187               	clrf	7
  9724  120A  3001               	movlw	1
  9725  120B  0781               	addwf	1,f
  9726  120C  3141               	addfsr 1,1
  9727  120D  1803               	skipnc
  9728  120E  0A81               	incf	1,f
  9729  120F  3001               	movlw	1
  9730  1210  0021               	movlb	1	; select bank1
  9731  1211  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9732  1212  082E               	movf	??_USBCtrlEPService^(0+128),w
  9733  1213  07B1               	addwf	USBCtrlEPService@setup_cnt^(0+128),f
  9734  1214  3008               	movlw	8
  9735  1215  0231               	subwf	USBCtrlEPService@setup_cnt^(0+128),w
  9736  1216  1C03               	skipc
  9737  1217  29EF               	goto	l6829
  9738  1218                     l6835:	
  9739                           
  9740                           ;usb_device.c: 2561: }
  9741                           ;usb_device.c: 2562: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
  9742  1218  3040               	movlw	64
  9743  1219  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9744  121A  3000               	movlw	0
  9745  121B  00AF               	movwf	(??_USBCtrlEPService^(0+128)+1)
  9746  121C  0020               	movlb	0	; select bank0
  9747  121D  086D               	movf	_pBDTEntryEP0OutCurrent,w
  9748  121E  3E02               	addlw	2
  9749  121F  0086               	movwf	6
  9750  1220  0187               	clrf	7
  9751  1221  0021               	movlb	1	; select bank1
  9752  1222  082E               	movf	??_USBCtrlEPService^(0+128),w
  9753  1223  3FC0               	movwi [0]fsr1
  9754  1224  082F               	movf	(??_USBCtrlEPService+1)^(0+128),w
  9755  1225  3FC1               	movwi [1]fsr1
  9756                           
  9757                           ;usb_device.c: 2565: USBCtrlTrfSetupHandler();
  9758  1226  319D  253A         	fcall	_USBCtrlTrfSetupHandler
  9759                           
  9760                           ;usb_device.c: 2566: }
  9761  1228  0008               	return
  9762  1229                     l6839:	
  9763                           
  9764                           ;usb_device.c: 2567: else
  9765                           ;usb_device.c: 2568: {
  9766                           ;usb_device.c: 2570: USBCtrlTrfOutHandler();
  9767  1229  319B  2358         	fcall	_USBCtrlTrfOutHandler
  9768                           
  9769                           ;usb_device.c: 2571: }
  9770                           ;usb_device.c: 2572: }
  9771  122B  0008               	return
  9772  122C                     l6841:	
  9773                           
  9774                           ;usb_device.c: 2573: else if((USTATcopy.Val & ~0x02) == 0x04)
  9775  122C  30FD               	movlw	253
  9776  122D  0021               	movlb	1	; select bank1
  9777  122E  056F               	andwf	_USTATcopy^(0+128),w
  9778  122F  00AE               	movwf	??_USBCtrlEPService^(0+128)
  9779  1230  082E               	movf	??_USBCtrlEPService^(0+128),w
  9780  1231  3A04               	xorlw	4
  9781  1232  1D03               	skipz
  9782  1233  0008               	return
  9783                           
  9784                           ;usb_device.c: 2574: {
  9785                           ;usb_device.c: 2577: USBCtrlTrfInHandler();
  9786  1234  3190  2001         	fcall	_USBCtrlTrfInHandler
  9787  1236  0008               	return
  9788  1237                     __end_of_USBCtrlEPService:	
  9789                           
  9790                           	psect	text34
  9791  1001                     __ptext34:	
  9792 ;; *************** function _USBCtrlTrfInHandler *****************
  9793 ;; Defined at:
  9794 ;;		line 2748 in file "../USB/usb_device.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;		None
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;  lastDTS         1   13[BANK0 ] unsigned char 
  9799 ;; Return value:  Size  Location     Type
  9800 ;;		None               void
  9801 ;; Registers used:
  9802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9803 ;; Tracked objects:
  9804 ;;		On entry : 0/0
  9805 ;;		On exit  : 0/0
  9806 ;;		Unchanged: 0/0
  9807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9809 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9811 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9812 ;;Total ram usage:        3 bytes
  9813 ;; Hardware stack levels used:    1
  9814 ;; Hardware stack levels required when called:    5
  9815 ;; This function calls:
  9816 ;;		_USBCtrlTrfTxService
  9817 ;; This function is called by:
  9818 ;;		_USBCtrlEPService
  9819 ;; This function uses a non-reentrant model
  9820 ;;
  9821                           
  9822                           
  9823                           ;psect for function _USBCtrlTrfInHandler
  9824  1001                     _USBCtrlTrfInHandler:	
  9825                           
  9826                           ;usb_device.c: 2749: BYTE lastDTS;
  9827                           ;usb_device.c: 2751: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9828                           
  9829                           ;incstack = 0
  9830                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9831  1001  0020               	movlb	0	; select bank0
  9832  1002  0868               	movf	_pBDTEntryIn,w
  9833  1003  0086               	movwf	6
  9834  1004  0187               	clrf	7
  9835  1005  3000               	movlw	0
  9836  1006  1B01               	btfsc	1,6
  9837  1007  3001               	movlw	1
  9838  1008  00DD               	movwf	USBCtrlTrfInHandler@lastDTS
  9839                           
  9840                           ;usb_device.c: 2754: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  9841  1009  3004               	movlw	4
  9842  100A  00DB               	movwf	??_USBCtrlTrfInHandler
  9843  100B  085B               	movf	??_USBCtrlTrfInHandler,w
  9844  100C  06E8               	xorwf	_pBDTEntryIn,f
  9845                           
  9846                           ;usb_device.c: 2759: if(USBDeviceState == ADR_PENDING_STATE)
  9847  100D  0021               	movlb	1	; select bank1
  9848  100E  086E               	movf	_USBDeviceState^(0+128),w
  9849  100F  3A08               	xorlw	8
  9850  1010  1D03               	skipz
  9851  1011  2821               	goto	l315
  9852                           
  9853                           ;usb_device.c: 2760: {
  9854                           ;usb_device.c: 2761: UADDR = SetupPkt.bDevADR.Val;
  9855  1012  0020               	movlb	0	; select bank0
  9856  1013  0842               	movf	66,w	;volatile
  9857  1014  003D               	movlb	29	; select bank29
  9858  1015  0096               	movwf	22	;volatile
  9859                           
  9860                           ;usb_device.c: 2762: if(UADDR != 0u)
  9861  1016  0816               	movf	22,w	;volatile
  9862  1017  1903               	btfsc	3,2
  9863  1018  281B               	goto	l7205
  9864                           
  9865                           ;usb_device.c: 2763: {
  9866                           ;usb_device.c: 2764: USBDeviceState=ADDRESS_STATE;
  9867  1019  3010               	movlw	16
  9868  101A  281C               	goto	L10
  9869  101B                     l7205:	
  9870                           ;usb_device.c: 2765: }
  9871                           
  9872                           
  9873                           ;usb_device.c: 2766: else
  9874                           ;usb_device.c: 2767: {
  9875                           ;usb_device.c: 2768: USBDeviceState=DEFAULT_STATE;
  9876  101B  3004               	movlw	4
  9877  101C                     L10:	
  9878  101C  0020               	movlb	0	; select bank0
  9879  101D  00DB               	movwf	??_USBCtrlTrfInHandler
  9880  101E  085B               	movf	??_USBCtrlTrfInHandler,w
  9881  101F  0021               	movlb	1	; select bank1
  9882  1020  00EE               	movwf	_USBDeviceState^(0+128)
  9883  1021                     l315:	
  9884                           
  9885                           ;usb_device.c: 2769: }
  9886                           ;usb_device.c: 2770: }
  9887                           ;usb_device.c: 2773: if(controlTransferState == 1)
  9888  1021  0020               	movlb	0	; select bank0
  9889  1022  086C               	movf	_controlTransferState,w
  9890  1023  3A01               	xorlw	1
  9891  1024  1D03               	skipz
  9892  1025  2857               	goto	l318
  9893                           
  9894                           ;usb_device.c: 2774: {
  9895                           ;usb_device.c: 2775: pBDTEntryIn[0]->ADR = (((WORD)(CtrlTrfData))& 0x7FFF);
  9896  1026  3048               	movlw	72
  9897  1027  00DB               	movwf	??_USBCtrlTrfInHandler
  9898  1028  3000               	movlw	0
  9899  1029  00DC               	movwf	??_USBCtrlTrfInHandler+1
  9900  102A  0868               	movf	_pBDTEntryIn,w
  9901  102B  3E02               	addlw	2
  9902  102C  0086               	movwf	6
  9903  102D  0187               	clrf	7
  9904  102E  085B               	movf	??_USBCtrlTrfInHandler,w
  9905  102F  3FC0               	movwi [0]fsr1
  9906  1030  085C               	movf	??_USBCtrlTrfInHandler+1,w
  9907  1031  3FC1               	movwi [1]fsr1
  9908                           
  9909                           ;usb_device.c: 2776: USBCtrlTrfTxService();
  9910  1032  3193  23C3  3190   	fcall	_USBCtrlTrfTxService
  9911                           
  9912                           ;usb_device.c: 2782: if(shortPacketStatus == 2)
  9913  1035  0022               	movlb	2	; select bank2
  9914  1036  0839               	movf	_shortPacketStatus^(0+256),w
  9915  1037  3A02               	xorlw	2
  9916  1038  1D03               	skipz
  9917  1039  2843               	goto	l7215
  9918                           
  9919                           ;usb_device.c: 2783: {
  9920                           ;usb_device.c: 2786: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
  9921  103A  3084               	movlw	132
  9922  103B  0020               	movlb	0	; select bank0
  9923  103C  00DB               	movwf	??_USBCtrlTrfInHandler
  9924  103D  0868               	movf	_pBDTEntryIn,w
  9925  103E  0086               	movwf	6
  9926  103F  0187               	clrf	7
  9927  1040  085B               	movf	??_USBCtrlTrfInHandler,w
  9928  1041  0081               	movwf	1
  9929                           
  9930                           ;usb_device.c: 2787: }
  9931  1042  0008               	return
  9932  1043                     l7215:	
  9933                           
  9934                           ;usb_device.c: 2788: else
  9935                           ;usb_device.c: 2789: {
  9936                           ;usb_device.c: 2790: if(lastDTS == 0)
  9937  1043  0020               	movlb	0	; select bank0
  9938  1044  08DD               	movf	USBCtrlTrfInHandler@lastDTS,f
  9939  1045  1D03               	skipz
  9940  1046  284F               	goto	l7219
  9941                           
  9942                           ;usb_device.c: 2791: {
  9943                           ;usb_device.c: 2792: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
  9944  1047  30C8               	movlw	200
  9945  1048  00DB               	movwf	??_USBCtrlTrfInHandler
  9946  1049  0868               	movf	_pBDTEntryIn,w
  9947  104A  0086               	movwf	6
  9948  104B  0187               	clrf	7
  9949  104C  085B               	movf	??_USBCtrlTrfInHandler,w
  9950  104D  0081               	movwf	1
  9951                           
  9952                           ;usb_device.c: 2793: }
  9953  104E  0008               	return
  9954  104F                     l7219:	
  9955                           
  9956                           ;usb_device.c: 2794: else
  9957                           ;usb_device.c: 2795: {
  9958                           ;usb_device.c: 2796: pBDTEntryIn[0]->STAT.Val = 0x80|0x00|(0x08 & 0x08);
  9959  104F  3088               	movlw	136
  9960  1050  00DB               	movwf	??_USBCtrlTrfInHandler
  9961  1051  0868               	movf	_pBDTEntryIn,w
  9962  1052  0086               	movwf	6
  9963  1053  0187               	clrf	7
  9964  1054  085B               	movf	??_USBCtrlTrfInHandler,w
  9965  1055  0081               	movwf	1
  9966                           
  9967                           ;usb_device.c: 2797: }
  9968                           ;usb_device.c: 2798: }
  9969                           ;usb_device.c: 2799: }
  9970  1056  0008               	return
  9971  1057                     l318:	
  9972                           
  9973                           ;usb_device.c: 2800: else
  9974                           ;usb_device.c: 2801: {
  9975                           ;usb_device.c: 2805: if(outPipes[0].info.bits.busy == 1)
  9976  1057  0023               	movlb	3	; select bank3
  9977  1058  1FA2               	btfss	(_outPipes^(0+384)+2),7
  9978  1059  2861               	goto	l7227
  9979                           
  9980                           ;usb_device.c: 2806: {
  9981                           ;usb_device.c: 2807: if(outPipes[0].pFunc != (0))
  9982  105A  0825               	movf	(_outPipes+5)^(0+384),w
  9983  105B  1903               	btfsc	3,2
  9984  105C  2860               	goto	l7225
  9985                           
  9986                           ;usb_device.c: 2808: {
  9987                           ;usb_device.c: 2809: outPipes[0].pFunc();
  9988  105D  0825               	movf	(_outPipes+5)^(0+384),w
  9989  105E  3190  2801         	ljmp	$	;if you get stuck here, you called an invalid pointer
  9990  1060                     l7225:	
  9991                           
  9992                           ;usb_device.c: 2810: }
  9993                           ;usb_device.c: 2811: outPipes[0].info.bits.busy = 0;
  9994  1060  13A2               	bcf	(_outPipes^(0+384)+2),7
  9995  1061                     l7227:	
  9996                           
  9997                           ;usb_device.c: 2812: }
  9998                           ;usb_device.c: 2814: controlTransferState = 0;
  9999  1061  0020               	movlb	0	; select bank0
 10000  1062  01EC               	clrf	_controlTransferState
 10001  1063  0008               	return
 10002  1064                     __end_of_USBCtrlTrfInHandler:	
 10003                           
 10004                           	psect	text35
 10005  1B58                     __ptext35:	
 10006 ;; *************** function _USBCtrlTrfOutHandler *****************
 10007 ;; Defined at:
 10008 ;;		line 2695 in file "../USB/usb_device.c"
 10009 ;; Parameters:    Size  Location     Type
 10010 ;;		None
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;		None
 10013 ;; Return value:  Size  Location     Type
 10014 ;;		None               void
 10015 ;; Registers used:
 10016 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10017 ;; Tracked objects:
 10018 ;;		On entry : 0/0
 10019 ;;		On exit  : 0/0
 10020 ;;		Unchanged: 0/0
 10021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10024 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10025 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10026 ;;Total ram usage:        2 bytes
 10027 ;; Hardware stack levels used:    1
 10028 ;; Hardware stack levels required when called:    6
 10029 ;; This function calls:
 10030 ;;		_USBCtrlTrfRxService
 10031 ;; This function is called by:
 10032 ;;		_USBCtrlEPService
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           
 10037                           ;psect for function _USBCtrlTrfOutHandler
 10038  1B58                     _USBCtrlTrfOutHandler:	
 10039                           
 10040                           ;usb_device.c: 2696: if(controlTransferState == 2)
 10041                           
 10042                           ;incstack = 0
 10043                           ; Regs used in _USBCtrlTrfOutHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10044  1B58  0020               	movlb	0	; select bank0
 10045  1B59  086C               	movf	_controlTransferState,w
 10046  1B5A  3A02               	xorlw	2
 10047  1B5B  1D03               	skipz
 10048  1B5C  2B60               	goto	l7187
 10049                           
 10050                           ;usb_device.c: 2697: {
 10051                           ;usb_device.c: 2698: USBCtrlTrfRxService();
 10052  1B5D  3196  2606         	fcall	_USBCtrlTrfRxService
 10053                           
 10054                           ;usb_device.c: 2699: }
 10055  1B5F  0008               	return
 10056  1B60                     l7187:	
 10057                           
 10058                           ;usb_device.c: 2700: else
 10059                           ;usb_device.c: 2701: {
 10060                           ;usb_device.c: 2704: controlTransferState = 0;
 10061  1B60  0020               	movlb	0	; select bank0
 10062  1B61  01EC               	clrf	_controlTransferState
 10063                           
 10064                           ;usb_device.c: 2711: if(BothEP0OutUOWNsSet == FALSE)
 10065  1B62  0023               	movlb	3	; select bank3
 10066  1B63  08B2               	movf	_BothEP0OutUOWNsSet^(0+384),f
 10067  1B64  1D03               	skipz
 10068  1B65  2B82               	goto	l7193
 10069                           
 10070                           ;usb_device.c: 2712: {
 10071                           ;usb_device.c: 2713: pBDTEntryEP0OutNext->CNT = 8;
 10072  1B66  3008               	movlw	8
 10073  1B67  0020               	movlb	0	; select bank0
 10074  1B68  00DE               	movwf	??_USBCtrlTrfOutHandler
 10075  1B69  0A6E               	incf	_pBDTEntryEP0OutNext,w
 10076  1B6A  0086               	movwf	6
 10077  1B6B  0187               	clrf	7
 10078  1B6C  085E               	movf	??_USBCtrlTrfOutHandler,w
 10079  1B6D  0081               	movwf	1
 10080                           
 10081                           ;usb_device.c: 2714: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 10082  1B6E  3040               	movlw	64
 10083  1B6F  00DE               	movwf	??_USBCtrlTrfOutHandler
 10084  1B70  3000               	movlw	0
 10085  1B71  00DF               	movwf	??_USBCtrlTrfOutHandler+1
 10086  1B72  086E               	movf	_pBDTEntryEP0OutNext,w
 10087  1B73  3E02               	addlw	2
 10088  1B74  0086               	movwf	6
 10089  1B75  0187               	clrf	7
 10090  1B76  085E               	movf	??_USBCtrlTrfOutHandler,w
 10091  1B77  3FC0               	movwi [0]fsr1
 10092  1B78  085F               	movf	??_USBCtrlTrfOutHandler+1,w
 10093  1B79  3FC1               	movwi [1]fsr1
 10094                           
 10095                           ;usb_device.c: 2715: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
 10096  1B7A  308C               	movlw	140
 10097  1B7B  00DE               	movwf	??_USBCtrlTrfOutHandler
 10098  1B7C  086E               	movf	_pBDTEntryEP0OutNext,w
 10099  1B7D  0086               	movwf	6
 10100  1B7E  0187               	clrf	7
 10101  1B7F  085E               	movf	??_USBCtrlTrfOutHandler,w
 10102  1B80  0081               	movwf	1
 10103                           
 10104                           ;usb_device.c: 2716: }
 10105  1B81  0008               	return
 10106  1B82                     l7193:	
 10107                           
 10108                           ;usb_device.c: 2717: else
 10109                           ;usb_device.c: 2718: {
 10110                           ;usb_device.c: 2719: BothEP0OutUOWNsSet = FALSE;
 10111  1B82  0023               	movlb	3	; select bank3
 10112  1B83  01B2               	clrf	_BothEP0OutUOWNsSet^(0+384)
 10113  1B84  0008               	return
 10114  1B85                     __end_of_USBCtrlTrfOutHandler:	
 10115                           
 10116                           	psect	text36
 10117  1606                     __ptext36:	
 10118 ;; *************** function _USBCtrlTrfRxService *****************
 10119 ;; Defined at:
 10120 ;;		line 2019 in file "../USB/usb_device.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;		None
 10123 ;; Auto vars:     Size  Location     Type
 10124 ;;  byteToRead      1   13[BANK0 ] unsigned char 
 10125 ;;  i               1   12[BANK0 ] unsigned char 
 10126 ;; Return value:  Size  Location     Type
 10127 ;;		None               void
 10128 ;; Registers used:
 10129 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10130 ;; Tracked objects:
 10131 ;;		On entry : 0/0
 10132 ;;		On exit  : 0/0
 10133 ;;		Unchanged: 0/0
 10134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10136 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10137 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10138 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10139 ;;Total ram usage:        4 bytes
 10140 ;; Hardware stack levels used:    1
 10141 ;; Hardware stack levels required when called:    5
 10142 ;; This function calls:
 10143 ;;		_USBCtrlEPAllowStatusStage
 10144 ;; This function is called by:
 10145 ;;		_USBCtrlTrfOutHandler
 10146 ;; This function uses a non-reentrant model
 10147 ;;
 10148                           
 10149                           
 10150                           ;psect for function _USBCtrlTrfRxService
 10151  1606                     _USBCtrlTrfRxService:	
 10152                           
 10153                           ;usb_device.c: 2020: BYTE byteToRead;
 10154                           ;usb_device.c: 2021: BYTE i;
 10155                           ;usb_device.c: 2025: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 10156                           
 10157                           ;incstack = 0
 10158                           ; Regs used in _USBCtrlTrfRxService: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10159  1606  0020               	movlb	0	; select bank0
 10160  1607  086D               	movf	_pBDTEntryEP0OutCurrent,w
 10161  1608  0086               	movwf	6
 10162  1609  0187               	clrf	7
 10163  160A  3F41               	moviw [1]fsr1
 10164  160B  00DD               	movwf	USBCtrlTrfRxService@byteToRead
 10165                           
 10166                           ;usb_device.c: 2031: if(byteToRead > outPipes[0].wCount.Val)
 10167  160C  085D               	movf	USBCtrlTrfRxService@byteToRead,w
 10168  160D  00DA               	movwf	??_USBCtrlTrfRxService
 10169  160E  01DB               	clrf	??_USBCtrlTrfRxService+1
 10170  160F  085B               	movf	??_USBCtrlTrfRxService+1,w
 10171  1610  0023               	movlb	3	; select bank3
 10172  1611  0224               	subwf	((_outPipes+1)^(0+384)+3),w
 10173  1612  1D03               	skipz
 10174  1613  2E18               	goto	u7755
 10175  1614  0020               	movlb	0	; select bank0
 10176  1615  085A               	movf	??_USBCtrlTrfRxService,w
 10177  1616  0023               	movlb	3	; select bank3
 10178  1617  0223               	subwf	(_outPipes^(0+384)+3),w
 10179  1618                     u7755:	
 10180  1618  1803               	skipnc
 10181  1619  2E1F               	goto	l7011
 10182                           
 10183                           ;usb_device.c: 2032: {
 10184                           ;usb_device.c: 2033: byteToRead = outPipes[0].wCount.Val;
 10185  161A  0823               	movf	(_outPipes^(0+384)+3),w
 10186  161B  0020               	movlb	0	; select bank0
 10187  161C  00DA               	movwf	??_USBCtrlTrfRxService
 10188  161D  085A               	movf	??_USBCtrlTrfRxService,w
 10189  161E  00DD               	movwf	USBCtrlTrfRxService@byteToRead
 10190  161F                     l7011:	
 10191                           
 10192                           ;usb_device.c: 2034: }
 10193                           ;usb_device.c: 2036: outPipes[0].wCount.Val = outPipes[0].wCount.Val - byteToRead;
 10194  161F  3003               	movlw	3
 10195  1620  3EA0               	addlw	_outPipes& (0+255)
 10196  1621  0086               	movwf	6
 10197  1622  3001               	movlw	1	; select bank3/4
 10198  1623  0087               	movwf	7
 10199  1624  0020               	movlb	0	; select bank0
 10200  1625  085D               	movf	USBCtrlTrfRxService@byteToRead,w
 10201  1626  00DA               	movwf	??_USBCtrlTrfRxService
 10202  1627  01DB               	clrf	??_USBCtrlTrfRxService+1
 10203  1628  09DA               	comf	??_USBCtrlTrfRxService,f
 10204  1629  09DB               	comf	??_USBCtrlTrfRxService+1,f
 10205  162A  0ADA               	incf	??_USBCtrlTrfRxService,f
 10206  162B  1903               	skipnz
 10207  162C  0ADB               	incf	??_USBCtrlTrfRxService+1,f
 10208  162D  3F40               	moviw [0]fsr1
 10209  162E  075A               	addwf	??_USBCtrlTrfRxService,w
 10210  162F  0023               	movlb	3	; select bank3
 10211  1630  00A3               	movwf	(_outPipes^(0+384)+3)
 10212  1631  3F41               	moviw [1]fsr1
 10213  1632  0020               	movlb	0	; select bank0
 10214  1633  3D5B               	addwfc	??_USBCtrlTrfRxService+1,w
 10215  1634  0023               	movlb	3	; select bank3
 10216  1635  00A4               	movwf	(_outPipes^(0+384)+4)
 10217                           
 10218                           ;usb_device.c: 2040: for(i=0;i<byteToRead;i++)
 10219  1636  0020               	movlb	0	; select bank0
 10220  1637  01DC               	clrf	USBCtrlTrfRxService@i
 10221  1638                     l7021:	
 10222  1638  085D               	movf	USBCtrlTrfRxService@byteToRead,w
 10223  1639  025C               	subwf	USBCtrlTrfRxService@i,w
 10224  163A  1803               	btfsc	3,0
 10225  163B  2E54               	goto	l7023
 10226                           
 10227                           ;usb_device.c: 2041: {
 10228                           ;usb_device.c: 2042: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 10229  163C  085C               	movf	USBCtrlTrfRxService@i,w
 10230  163D  3E48               	addlw	72
 10231  163E  0086               	movwf	6
 10232  163F  0187               	clrf	7
 10233  1640  0801               	movf	1,w
 10234  1641  00DA               	movwf	??_USBCtrlTrfRxService
 10235  1642  0023               	movlb	3	; select bank3
 10236  1643  0820               	movf	_outPipes^(0+384),w
 10237  1644  0086               	movwf	6
 10238  1645  0187               	clrf	7
 10239  1646  0020               	movlb	0	; select bank0
 10240  1647  085A               	movf	??_USBCtrlTrfRxService,w
 10241  1648  0081               	movwf	1
 10242  1649  3001               	movlw	1
 10243  164A  00DA               	movwf	??_USBCtrlTrfRxService
 10244  164B  085A               	movf	??_USBCtrlTrfRxService,w
 10245  164C  0023               	movlb	3	; select bank3
 10246  164D  07A0               	addwf	_outPipes^(0+384),f
 10247  164E  3001               	movlw	1
 10248  164F  0020               	movlb	0	; select bank0
 10249  1650  00DA               	movwf	??_USBCtrlTrfRxService
 10250  1651  085A               	movf	??_USBCtrlTrfRxService,w
 10251  1652  07DC               	addwf	USBCtrlTrfRxService@i,f
 10252  1653  2E38               	goto	l7021
 10253  1654                     l7023:	
 10254                           
 10255                           ;usb_device.c: 2043: }
 10256                           ;usb_device.c: 2047: if(outPipes[0].wCount.Val > 0)
 10257  1654  3003               	movlw	3
 10258  1655  3EA0               	addlw	_outPipes& (0+255)
 10259  1656  0086               	movwf	6
 10260  1657  3001               	movlw	1	; select bank3/4
 10261  1658  0087               	movwf	7
 10262  1659  0016               	moviw fsr1++
 10263  165A  0401               	iorwf	1,w
 10264  165B  1903               	skipnz
 10265  165C  2E85               	goto	l7031
 10266                           
 10267                           ;usb_device.c: 2048: {
 10268                           ;usb_device.c: 2049: pBDTEntryEP0OutNext->CNT = 8;
 10269  165D  3008               	movlw	8
 10270  165E  00DA               	movwf	??_USBCtrlTrfRxService
 10271  165F  0A6E               	incf	_pBDTEntryEP0OutNext,w
 10272  1660  0086               	movwf	6
 10273  1661  0187               	clrf	7
 10274  1662  085A               	movf	??_USBCtrlTrfRxService,w
 10275  1663  0081               	movwf	1
 10276                           
 10277                           ;usb_device.c: 2050: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
 10278  1664  3048               	movlw	72
 10279  1665  00DA               	movwf	??_USBCtrlTrfRxService
 10280  1666  3000               	movlw	0
 10281  1667  00DB               	movwf	??_USBCtrlTrfRxService+1
 10282  1668  086E               	movf	_pBDTEntryEP0OutNext,w
 10283  1669  3E02               	addlw	2
 10284  166A  0086               	movwf	6
 10285  166B  0187               	clrf	7
 10286  166C  085A               	movf	??_USBCtrlTrfRxService,w
 10287  166D  3FC0               	movwi [0]fsr1
 10288  166E  085B               	movf	??_USBCtrlTrfRxService+1,w
 10289  166F  3FC1               	movwi [1]fsr1
 10290                           
 10291                           ;usb_device.c: 2051: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 10292  1670  086D               	movf	_pBDTEntryEP0OutCurrent,w
 10293  1671  0086               	movwf	6
 10294  1672  0187               	clrf	7
 10295  1673  1B01               	btfsc	1,6
 10296  1674  2E7D               	goto	l7029
 10297                           
 10298                           ;usb_device.c: 2052: {
 10299                           ;usb_device.c: 2053: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 10300  1675  30C8               	movlw	200
 10301  1676  00DA               	movwf	??_USBCtrlTrfRxService
 10302  1677  086E               	movf	_pBDTEntryEP0OutNext,w
 10303  1678  0086               	movwf	6
 10304  1679  0187               	clrf	7
 10305  167A  085A               	movf	??_USBCtrlTrfRxService,w
 10306  167B  0081               	movwf	1
 10307                           
 10308                           ;usb_device.c: 2054: }
 10309  167C  0008               	return
 10310  167D                     l7029:	
 10311                           
 10312                           ;usb_device.c: 2055: else
 10313                           ;usb_device.c: 2056: {
 10314                           ;usb_device.c: 2057: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08);
 10315  167D  3088               	movlw	136
 10316  167E  00DA               	movwf	??_USBCtrlTrfRxService
 10317  167F  086E               	movf	_pBDTEntryEP0OutNext,w
 10318  1680  0086               	movwf	6
 10319  1681  0187               	clrf	7
 10320  1682  085A               	movf	??_USBCtrlTrfRxService,w
 10321  1683  0081               	movwf	1
 10322                           
 10323                           ;usb_device.c: 2058: }
 10324                           ;usb_device.c: 2059: }
 10325  1684  0008               	return
 10326  1685                     l7031:	
 10327                           
 10328                           ;usb_device.c: 2060: else
 10329                           ;usb_device.c: 2061: {
 10330                           ;usb_device.c: 2065: pBDTEntryEP0OutNext->CNT = 8;
 10331  1685  3008               	movlw	8
 10332  1686  00DA               	movwf	??_USBCtrlTrfRxService
 10333  1687  0A6E               	incf	_pBDTEntryEP0OutNext,w
 10334  1688  0086               	movwf	6
 10335  1689  0187               	clrf	7
 10336  168A  085A               	movf	??_USBCtrlTrfRxService,w
 10337  168B  0081               	movwf	1
 10338                           
 10339                           ;usb_device.c: 2066: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 10340  168C  3040               	movlw	64
 10341  168D  00DA               	movwf	??_USBCtrlTrfRxService
 10342  168E  3000               	movlw	0
 10343  168F  00DB               	movwf	??_USBCtrlTrfRxService+1
 10344  1690  086E               	movf	_pBDTEntryEP0OutNext,w
 10345  1691  3E02               	addlw	2
 10346  1692  0086               	movwf	6
 10347  1693  0187               	clrf	7
 10348  1694  085A               	movf	??_USBCtrlTrfRxService,w
 10349  1695  3FC0               	movwi [0]fsr1
 10350  1696  085B               	movf	??_USBCtrlTrfRxService+1,w
 10351  1697  3FC1               	movwi [1]fsr1
 10352                           
 10353                           ;usb_device.c: 2070: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
 10354  1698  3084               	movlw	132
 10355  1699  00DA               	movwf	??_USBCtrlTrfRxService
 10356  169A  086E               	movf	_pBDTEntryEP0OutNext,w
 10357  169B  0086               	movwf	6
 10358  169C  0187               	clrf	7
 10359  169D  085A               	movf	??_USBCtrlTrfRxService,w
 10360  169E  0081               	movwf	1
 10361                           
 10362                           ;usb_device.c: 2077: if(outPipes[0].pFunc != (0))
 10363  169F  0023               	movlb	3	; select bank3
 10364  16A0  0825               	movf	(_outPipes+5)^(0+384),w
 10365  16A1  1903               	btfsc	3,2
 10366  16A2  2EA6               	goto	l7037
 10367                           
 10368                           ;usb_device.c: 2078: {
 10369                           ;usb_device.c: 2084: outPipes[0].pFunc();
 10370  16A3  0825               	movf	(_outPipes+5)^(0+384),w
 10371  16A4  3196  2E06         	ljmp	$	;if you get stuck here, you called an invalid pointer
 10372  16A6                     l7037:	
 10373                           
 10374                           ;usb_device.c: 2089: }
 10375                           ;usb_device.c: 2090: outPipes[0].info.bits.busy = 0;
 10376  16A6  13A2               	bcf	(_outPipes^(0+384)+2),7
 10377                           
 10378                           ;usb_device.c: 2104: if(USBDeferStatusStagePacket == FALSE)
 10379  16A7  0020               	movlb	0	; select bank0
 10380  16A8  08EB               	movf	_USBDeferStatusStagePacket,f	;volatile
 10381  16A9  1D03               	skipz
 10382  16AA  0008               	return
 10383                           
 10384                           ;usb_device.c: 2105: {
 10385                           ;usb_device.c: 2106: USBCtrlEPAllowStatusStage();
 10386  16AB  3190  2064         	fcall	_USBCtrlEPAllowStatusStage
 10387  16AD  0008               	return
 10388  16AE                     __end_of_USBCtrlTrfRxService:	
 10389                           
 10390                           	psect	text37
 10391  1D3A                     __ptext37:	
 10392 ;; *************** function _USBCtrlTrfSetupHandler *****************
 10393 ;; Defined at:
 10394 ;;		line 2623 in file "../USB/usb_device.c"
 10395 ;; Parameters:    Size  Location     Type
 10396 ;;		None
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;		None
 10399 ;; Return value:  Size  Location     Type
 10400 ;;		None               void
 10401 ;; Registers used:
 10402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10403 ;; Tracked objects:
 10404 ;;		On entry : 0/0
 10405 ;;		On exit  : 0/0
 10406 ;;		Unchanged: 0/0
 10407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10410 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10411 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10412 ;;Total ram usage:        1 bytes
 10413 ;; Hardware stack levels used:    1
 10414 ;; Hardware stack levels required when called:   10
 10415 ;; This function calls:
 10416 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10417 ;;		_USBCtrlEPServiceComplete
 10418 ;;		_USBCheckStdRequest
 10419 ;; This function is called by:
 10420 ;;		_USBCtrlEPService
 10421 ;; This function uses a non-reentrant model
 10422 ;;
 10423                           
 10424                           
 10425                           ;psect for function _USBCtrlTrfSetupHandler
 10426  1D3A                     _USBCtrlTrfSetupHandler:	
 10427                           
 10428                           ;usb_device.c: 2627: shortPacketStatus = 0;
 10429                           
 10430                           ;incstack = 0
 10431                           ; Regs used in _USBCtrlTrfSetupHandler: [allreg]
 10432  1D3A  0022               	movlb	2	; select bank2
 10433  1D3B  01B9               	clrf	_shortPacketStatus^(0+256)
 10434                           
 10435                           ;usb_device.c: 2628: USBDeferStatusStagePacket = FALSE;
 10436  1D3C  0020               	movlb	0	; select bank0
 10437  1D3D  01EB               	clrf	_USBDeferStatusStagePacket	;volatile
 10438                           
 10439                           ;usb_device.c: 2629: USBDeferINDataStagePackets = FALSE;
 10440  1D3E  0022               	movlb	2	; select bank2
 10441  1D3F  01AC               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 10442                           
 10443                           ;usb_device.c: 2630: USBDeferOUTDataStagePackets = FALSE;
 10444  1D40  01AD               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 10445                           
 10446                           ;usb_device.c: 2631: BothEP0OutUOWNsSet = FALSE;
 10447  1D41  0023               	movlb	3	; select bank3
 10448  1D42  01B2               	clrf	_BothEP0OutUOWNsSet^(0+384)
 10449                           
 10450                           ;usb_device.c: 2632: controlTransferState = 0;
 10451  1D43  0020               	movlb	0	; select bank0
 10452  1D44  01EC               	clrf	_controlTransferState
 10453                           
 10454                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10455  1D45  307F               	movlw	127
 10456  1D46  0021               	movlb	1	; select bank1
 10457  1D47  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10458  1D48  0020               	movlb	0	; select bank0
 10459  1D49  0868               	movf	_pBDTEntryIn,w
 10460  1D4A  0086               	movwf	6
 10461  1D4B  0187               	clrf	7
 10462  1D4C  0021               	movlb	1	; select bank1
 10463  1D4D  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10464  1D4E  0581               	andwf	1,f
 10465                           
 10466                           ;usb_device.c: 2642: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 10467  1D4F  3004               	movlw	4
 10468  1D50  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10469  1D51  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10470  1D52  0020               	movlb	0	; select bank0
 10471  1D53  06E8               	xorwf	_pBDTEntryIn,f
 10472                           
 10473                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 10474  1D54  307F               	movlw	127
 10475  1D55  0021               	movlb	1	; select bank1
 10476  1D56  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10477  1D57  0020               	movlb	0	; select bank0
 10478  1D58  0868               	movf	_pBDTEntryIn,w
 10479  1D59  0086               	movwf	6
 10480  1D5A  0187               	clrf	7
 10481  1D5B  0021               	movlb	1	; select bank1
 10482  1D5C  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10483  1D5D  0581               	andwf	1,f
 10484                           
 10485                           ;usb_device.c: 2644: ((BYTE_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 10486  1D5E  3004               	movlw	4
 10487  1D5F  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10488  1D60  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10489  1D61  0020               	movlb	0	; select bank0
 10490  1D62  06E8               	xorwf	_pBDTEntryIn,f
 10491                           
 10492                           ;usb_device.c: 2645: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 10493  1D63  307F               	movlw	127
 10494  1D64  0021               	movlb	1	; select bank1
 10495  1D65  00AD               	movwf	??_USBCtrlTrfSetupHandler^(0+128)
 10496  1D66  0020               	movlb	0	; select bank0
 10497  1D67  086E               	movf	_pBDTEntryEP0OutNext,w
 10498  1D68  0086               	movwf	6
 10499  1D69  0187               	clrf	7
 10500  1D6A  0021               	movlb	1	; select bank1
 10501  1D6B  082D               	movf	??_USBCtrlTrfSetupHandler^(0+128),w
 10502  1D6C  0581               	andwf	1,f
 10503                           
 10504                           ;usb_device.c: 2647: inPipes[0].info.Val = 0;
 10505  1D6D  0022               	movlb	2	; select bank2
 10506  1D6E  01BC               	clrf	(_inPipes^(0+256)+2)
 10507                           
 10508                           ;usb_device.c: 2648: inPipes[0].wCount.Val = 0;
 10509  1D6F  01BD               	clrf	(_inPipes^(0+256)+3)
 10510  1D70  01BE               	clrf	((_inPipes+1)^(0+256)+3)
 10511                           
 10512                           ;usb_device.c: 2649: outPipes[0].info.Val = 0;
 10513  1D71  0023               	movlb	3	; select bank3
 10514  1D72  01A2               	clrf	(_outPipes^(0+384)+2)
 10515                           
 10516                           ;usb_device.c: 2650: outPipes[0].wCount.Val = 0;
 10517  1D73  01A3               	clrf	(_outPipes^(0+384)+3)
 10518  1D74  01A4               	clrf	((_outPipes+1)^(0+384)+3)
 10519                           
 10520                           ;usb_device.c: 2656: USBCheckStdRequest();
 10521  1D75  319E  26E3  319D   	fcall	_USBCheckStdRequest
 10522                           
 10523                           ;usb_device.c: 2657: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 10524  1D78  3003               	movlw	3
 10525  1D79  0021               	movlb	1	; select bank1
 10526  1D7A  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10527  1D7B  3000               	movlw	0
 10528  1D7C  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10529  1D7D  3000               	movlw	0
 10530  1D7E  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10531  1D7F  3000               	movlw	0
 10532  1D80  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 10533  1D81  3000               	movlw	0
 10534  1D82  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10535  1D83  3000               	movlw	0
 10536  1D84  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 10537  1D85  319C  2423  319D   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10538                           
 10539                           ;usb_device.c: 2670: USBCtrlEPServiceComplete();
 10540  1D88  3190  20C8         	fcall	_USBCtrlEPServiceComplete
 10541  1D8A  0008               	return
 10542  1D8B                     __end_of_USBCtrlTrfSetupHandler:	
 10543                           
 10544                           	psect	text38
 10545  1EE3                     __ptext38:	
 10546 ;; *************** function _USBCheckStdRequest *****************
 10547 ;; Defined at:
 10548 ;;		line 2839 in file "../USB/usb_device.c"
 10549 ;; Parameters:    Size  Location     Type
 10550 ;;		None
 10551 ;; Auto vars:     Size  Location     Type
 10552 ;;		None
 10553 ;; Return value:  Size  Location     Type
 10554 ;;		None               void
 10555 ;; Registers used:
 10556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 10557 ;; Tracked objects:
 10558 ;;		On entry : 0/0
 10559 ;;		On exit  : 0/0
 10560 ;;		Unchanged: 0/0
 10561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10564 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10565 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10566 ;;Total ram usage:        1 bytes
 10567 ;; Hardware stack levels used:    1
 10568 ;; Hardware stack levels required when called:    9
 10569 ;; This function calls:
 10570 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10571 ;;		_USBStdSetCfgHandler
 10572 ;;		_USBStdGetDscHandler
 10573 ;;		_USBStdGetStatusHandler
 10574 ;;		_USBStdFeatureReqHandler
 10575 ;; This function is called by:
 10576 ;;		_USBCtrlTrfSetupHandler
 10577 ;; This function uses a non-reentrant model
 10578 ;;
 10579                           
 10580                           
 10581                           ;psect for function _USBCheckStdRequest
 10582  1EE3                     _USBCheckStdRequest:	
 10583                           
 10584                           ;usb_device.c: 2840: if(SetupPkt.RequestType != (0x00>>5)) return;
 10585                           
 10586                           ;incstack = 0
 10587                           ; Regs used in _USBCheckStdRequest: [allreg]
 10588  1EE3  0020               	movlb	0	; select bank0
 10589  1EE4  0E40               	swapf	64,w	;volatile
 10590  1EE5  0C89               	rrf	9,f
 10591  1EE6  3903               	andlw	3
 10592  1EE7  3A00               	xorlw	0
 10593  1EE8  1D03               	btfss	3,2
 10594  1EE9  0008               	return
 10595  1EEA  2F35               	goto	l7265
 10596  1EEB                     l332:	
 10597                           ;usb_device.c: 2843: {
 10598                           ;usb_device.c: 2844: case 5:
 10599                           
 10600                           ;usb_device.c: 2842: switch(SetupPkt.bRequest)
 10601                           
 10602                           
 10603                           ;usb_device.c: 2845: inPipes[0].info.bits.busy = 1;
 10604  1EEB  0022               	movlb	2	; select bank2
 10605  1EEC  17BC               	bsf	(_inPipes^(0+256)+2),7
 10606                           
 10607                           ;usb_device.c: 2846: USBDeviceState = ADR_PENDING_STATE;
 10608  1EED  3008               	movlw	8
 10609  1EEE  0021               	movlb	1	; select bank1
 10610  1EEF  00AC               	movwf	??_USBCheckStdRequest^(0+128)
 10611  1EF0  082C               	movf	??_USBCheckStdRequest^(0+128),w
 10612  1EF1  00EE               	movwf	_USBDeviceState^(0+128)
 10613                           
 10614                           ;usb_device.c: 2848: break;
 10615  1EF2  0008               	return
 10616  1EF3                     l7235:	
 10617                           ;usb_device.c: 2849: case 6:
 10618                           
 10619                           
 10620                           ;usb_device.c: 2850: USBStdGetDscHandler();
 10621  1EF3  3192  2237         	fcall	_USBStdGetDscHandler
 10622                           
 10623                           ;usb_device.c: 2851: break;
 10624  1EF5  0008               	return
 10625  1EF6                     l7237:	
 10626                           ;usb_device.c: 2852: case 9:
 10627                           
 10628                           
 10629                           ;usb_device.c: 2853: USBStdSetCfgHandler();
 10630  1EF6  3194  2451         	fcall	_USBStdSetCfgHandler
 10631                           
 10632                           ;usb_device.c: 2854: break;
 10633  1EF8  0008               	return
 10634  1EF9                     l7239:	
 10635                           ;usb_device.c: 2855: case 8:
 10636                           
 10637                           
 10638                           ;usb_device.c: 2856: inPipes[0].pSrc.bRam = (BYTE*)&USBActiveConfiguration;
 10639  1EF9  3040               	movlw	low _USBActiveConfiguration
 10640  1EFA  0022               	movlb	2	; select bank2
 10641  1EFB  00BA               	movwf	_inPipes^(0+256)
 10642  1EFC  3001               	movlw	high _USBActiveConfiguration
 10643  1EFD  00BB               	movwf	(_inPipes+1)^(0+256)
 10644                           
 10645                           ;usb_device.c: 2857: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10646  1EFE  143C               	bsf	(_inPipes^(0+256)+2),0
 10647                           
 10648                           ;usb_device.c: 2858: inPipes[0].wCount.v[0] = 1;
 10649  1EFF  01BD               	clrf	(_inPipes^(0+256)+3)
 10650  1F00  0ABD               	incf	(_inPipes^(0+256)+3),f
 10651                           
 10652                           ;usb_device.c: 2859: inPipes[0].info.bits.busy = 1;
 10653  1F01  17BC               	bsf	(_inPipes^(0+256)+2),7
 10654                           
 10655                           ;usb_device.c: 2860: break;
 10656  1F02  0008               	return
 10657  1F03                     l7247:	
 10658                           ;usb_device.c: 2861: case 0:
 10659                           
 10660                           
 10661                           ;usb_device.c: 2862: USBStdGetStatusHandler();
 10662  1F03  319D  258B         	fcall	_USBStdGetStatusHandler
 10663                           
 10664                           ;usb_device.c: 2863: break;
 10665  1F05  0008               	return
 10666  1F06                     l7249:	
 10667                           ;usb_device.c: 2864: case 1:
 10668                           
 10669                           
 10670                           ;usb_device.c: 2865: case 3:
 10671                           ;usb_device.c: 2866: USBStdFeatureReqHandler();
 10672  1F06  318E  26E5         	fcall	_USBStdFeatureReqHandler
 10673                           
 10674                           ;usb_device.c: 2867: break;
 10675  1F08  0008               	return
 10676  1F09                     l7251:	
 10677                           ;usb_device.c: 2868: case 10:
 10678                           
 10679                           
 10680                           ;usb_device.c: 2869: inPipes[0].pSrc.bRam = (BYTE*)&USBAlternateInterface[SetupPkt.bIntf
      +                          ID];
 10681  1F09  0020               	movlb	0	; select bank0
 10682  1F0A  0844               	movf	68,w	;volatile
 10683  1F0B  3E41               	addlw	_USBAlternateInterface& (0+255)
 10684  1F0C  0022               	movlb	2	; select bank2
 10685  1F0D  00BA               	movwf	_inPipes^(0+256)
 10686  1F0E  3001               	movlw	1
 10687  1F0F  00BB               	movwf	(_inPipes+1)^(0+256)
 10688                           
 10689                           ;usb_device.c: 2870: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10690  1F10  143C               	bsf	(_inPipes^(0+256)+2),0
 10691                           
 10692                           ;usb_device.c: 2871: inPipes[0].wCount.v[0] = 1;
 10693  1F11  01BD               	clrf	(_inPipes^(0+256)+3)
 10694  1F12  0ABD               	incf	(_inPipes^(0+256)+3),f
 10695                           
 10696                           ;usb_device.c: 2872: inPipes[0].info.bits.busy = 1;
 10697  1F13  17BC               	bsf	(_inPipes^(0+256)+2),7
 10698                           
 10699                           ;usb_device.c: 2873: break;
 10700  1F14  0008               	return
 10701  1F15                     l341:	
 10702                           ;usb_device.c: 2874: case 11:
 10703                           
 10704                           
 10705                           ;usb_device.c: 2875: inPipes[0].info.bits.busy = 1;
 10706  1F15  0022               	movlb	2	; select bank2
 10707  1F16  17BC               	bsf	(_inPipes^(0+256)+2),7
 10708                           
 10709                           ;usb_device.c: 2876: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 10710  1F17  0020               	movlb	0	; select bank0
 10711  1F18  0842               	movf	66,w	;volatile
 10712  1F19  0021               	movlb	1	; select bank1
 10713  1F1A  00AC               	movwf	??_USBCheckStdRequest^(0+128)
 10714  1F1B  0020               	movlb	0	; select bank0
 10715  1F1C  0844               	movf	68,w	;volatile
 10716  1F1D  3E41               	addlw	_USBAlternateInterface& (0+255)
 10717  1F1E  0086               	movwf	6
 10718  1F1F  3001               	movlw	1	; select bank2/3
 10719  1F20  0087               	movwf	7
 10720  1F21  0021               	movlb	1	; select bank1
 10721  1F22  082C               	movf	??_USBCheckStdRequest^(0+128),w
 10722  1F23  0081               	movwf	1
 10723                           
 10724                           ;usb_device.c: 2877: break;
 10725  1F24  0008               	return
 10726  1F25                     l7261:	
 10727                           ;usb_device.c: 2878: case 7:
 10728                           
 10729                           
 10730                           ;usb_device.c: 2879: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 10731  1F25  3002               	movlw	2
 10732  1F26  0021               	movlb	1	; select bank1
 10733  1F27  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 10734  1F28  3000               	movlw	0
 10735  1F29  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 10736  1F2A  3000               	movlw	0
 10737  1F2B  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 10738  1F2C  3000               	movlw	0
 10739  1F2D  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 10740  1F2E  3000               	movlw	0
 10741  1F2F  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 10742  1F30  3000               	movlw	0
 10743  1F31  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 10744  1F32  319C  2423         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10745                           
 10746                           ;usb_device.c: 2884: }
 10747                           
 10748                           ;usb_device.c: 2883: break;
 10749                           
 10750                           ;usb_device.c: 2882: default:
 10751                           
 10752                           ;usb_device.c: 2881: case 12:
 10753                           
 10754                           ;usb_device.c: 2880: break;
 10755  1F34  0008               	return
 10756  1F35                     l7265:	
 10757  1F35  0020               	movlb	0	; select bank0
 10758  1F36  0841               	movf	65,w	;volatile
 10759                           
 10760                           ; Switch size 1, requested type "space"
 10761                           ; Number of cases is 11, Range of values is 0 to 12
 10762                           ; switch strategies available:
 10763                           ; Name         Instructions Cycles
 10764                           ; direct_byte           32     6 (fixed)
 10765                           ; simple_byte           34    18 (average)
 10766                           ; jumptable            260     6 (fixed)
 10767                           ;	Chosen strategy is direct_byte
 10768  1F37  0084               	movwf	4
 10769  1F38  300D               	movlw	13
 10770  1F39  0204               	subwf	4,w
 10771  1F3A  1803               	skipnc
 10772  1F3B  0008               	return
 10773  1F3C  3198               	movlp	high S8031
 10774  1F3D  3504               	lslf	4,w
 10775  1F3E  3E00               	addlw	low S8031
 10776  1F3F  0082               	movwf	2
 10777  1F40                     l330:	
 10778  1F40  0008               	return
 10779  1F41                     __end_of_USBCheckStdRequest:	
 10780                           
 10781                           	psect	swtext1
 10782  1800                     __pswtext1:	
 10783  1800                     S8031:	
 10784  1800  319F  2F03         	ljmp	l7247
 10785  1802  319F  2F06         	ljmp	l7249
 10786  1804  319F  2F40         	ljmp	l330
 10787  1806  319F  2F06         	ljmp	l7249
 10788  1808  319F  2F40         	ljmp	l330
 10789  180A  319E  2EEB         	ljmp	l332
 10790  180C  319E  2EF3         	ljmp	l7235
 10791  180E  319F  2F25         	ljmp	l7261
 10792  1810  319E  2EF9         	ljmp	l7239
 10793  1812  319E  2EF6         	ljmp	l7237
 10794  1814  319F  2F09         	ljmp	l7251
 10795  1816  319F  2F15         	ljmp	l341
 10796  1818  319F  2F40         	ljmp	l330
 10797                           
 10798                           	psect	text39
 10799  0EE5                     __ptext39:	
 10800 ;; *************** function _USBStdFeatureReqHandler *****************
 10801 ;; Defined at:
 10802 ;;		line 2907 in file "../USB/usb_device.c"
 10803 ;; Parameters:    Size  Location     Type
 10804 ;;		None
 10805 ;; Auto vars:     Size  Location     Type
 10806 ;;  pUEP            2    8[BANK1 ] PTR unsigned char 
 10807 ;;		 -> UEP0(1), 
 10808 ;;  p               1   11[BANK1 ] PTR struct __BDT
 10809 ;;		 -> NULL(0), BDT(32), 
 10810 ;;  current_ep_d    1   10[BANK1 ] struct .
 10811 ;; Return value:  Size  Location     Type
 10812 ;;		None               void
 10813 ;; Registers used:
 10814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10821 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10822 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10823 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10824 ;;Total ram usage:        6 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:    8
 10827 ;; This function calls:
 10828 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10829 ;; This function is called by:
 10830 ;;		_USBCheckStdRequest
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           
 10835                           ;psect for function _USBStdFeatureReqHandler
 10836  0EE5                     _USBStdFeatureReqHandler:	
 10837                           
 10838                           ;usb_device.c: 2908: BDT_ENTRY *p;
 10839                           ;usb_device.c: 2909: EP_STATUS current_ep_data;
 10840                           ;usb_device.c: 2913: unsigned char* pUEP;
 10841                           ;usb_device.c: 2951: if((SetupPkt.bFeature == 1)&&
 10842                           ;usb_device.c: 2952: (SetupPkt.Recipient == (0x00)))
 10843                           
 10844                           ;incstack = 0
 10845                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10846  0EE5  0020               	movlb	0	; select bank0
 10847  0EE6  0842               	movf	66,w	;volatile
 10848  0EE7  3A01               	xorlw	1
 10849  0EE8  1D03               	skipz
 10850  0EE9  2EFC               	goto	l7283
 10851  0EEA  0840               	movf	64,w	;volatile
 10852  0EEB  391F               	andlw	31
 10853  0EEC  3800               	iorlw	0
 10854  0EED  1D03               	skipz
 10855  0EEE  2EFC               	goto	l7283
 10856                           
 10857                           ;usb_device.c: 2953: {
 10858                           ;usb_device.c: 2954: inPipes[0].info.bits.busy = 1;
 10859  0EEF  0022               	movlb	2	; select bank2
 10860  0EF0  17BC               	bsf	(_inPipes^(0+256)+2),7
 10861                           
 10862                           ;usb_device.c: 2955: if(SetupPkt.bRequest == 3)
 10863  0EF1  0020               	movlb	0	; select bank0
 10864  0EF2  0841               	movf	65,w	;volatile
 10865  0EF3  3A03               	xorlw	3
 10866  0EF4  1D03               	skipz
 10867  0EF5  2EFA               	goto	l7281
 10868                           
 10869                           ;usb_device.c: 2956: RemoteWakeup = TRUE;
 10870  0EF6  0022               	movlb	2	; select bank2
 10871  0EF7  01A9               	clrf	_RemoteWakeup^(0+256)
 10872  0EF8  0AA9               	incf	_RemoteWakeup^(0+256),f
 10873  0EF9  2EFC               	goto	l7283
 10874  0EFA                     l7281:	
 10875                           
 10876                           ;usb_device.c: 2957: else
 10877                           ;usb_device.c: 2958: RemoteWakeup = FALSE;
 10878  0EFA  0022               	movlb	2	; select bank2
 10879  0EFB  01A9               	clrf	_RemoteWakeup^(0+256)
 10880  0EFC                     l7283:	
 10881                           
 10882                           ;usb_device.c: 2959: }
 10883                           ;usb_device.c: 2962: if((SetupPkt.bFeature == 0)&&
 10884                           ;usb_device.c: 2963: (SetupPkt.Recipient == (0x02))&&
 10885                           ;usb_device.c: 2964: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
 10886                           ;usb_device.c: 2965: (USBDeviceState == CONFIGURED_STATE))
 10887  0EFC  0020               	movlb	0	; select bank0
 10888  0EFD  0842               	movf	66,w	;volatile
 10889  0EFE  1D03               	skipz
 10890  0EFF  0008               	return
 10891  0F00  0840               	movf	64,w	;volatile
 10892  0F01  391F               	andlw	31
 10893  0F02  3A02               	xorlw	2
 10894  0F03  1D03               	skipz
 10895  0F04  0008               	return
 10896  0F05  0844               	movf	68,w	;volatile
 10897  0F06  390F               	andlw	15
 10898  0F07  3A00               	xorlw	0
 10899  0F08  1903               	skipnz
 10900  0F09  0008               	return
 10901  0F0A  0844               	movf	68,w	;volatile
 10902  0F0B  390F               	andlw	15
 10903  0F0C  0021               	movlb	1	; select bank1
 10904  0F0D  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10905  0F0E  3002               	movlw	2
 10906  0F0F  0226               	subwf	??_USBStdFeatureReqHandler^(0+128),w
 10907  0F10  1803               	skipnc
 10908  0F11  0008               	return
 10909  0F12  086E               	movf	_USBDeviceState^(0+128),w
 10910  0F13  3A20               	xorlw	32
 10911  0F14  1D03               	skipz
 10912  0F15  0008               	return
 10913                           
 10914                           ;usb_device.c: 2966: {
 10915                           ;usb_device.c: 2969: inPipes[0].info.bits.busy = 1;
 10916  0F16  0022               	movlb	2	; select bank2
 10917  0F17  17BC               	bsf	(_inPipes^(0+256)+2),7
 10918                           
 10919                           ;usb_device.c: 2972: if(SetupPkt.EPDir == 0)
 10920  0F18  0020               	movlb	0	; select bank0
 10921  0F19  1BC4               	btfsc	68,7	;volatile
 10922  0F1A  2F2B               	goto	l7297
 10923                           
 10924                           ;usb_device.c: 2973: {
 10925                           ;usb_device.c: 2974: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 10926  0F1B  0844               	movf	68,w	;volatile
 10927  0F1C  390F               	andlw	15
 10928  0F1D  3E22               	addlw	_pBDTEntryOut& (0+255)
 10929  0F1E  0086               	movwf	6
 10930  0F1F  3001               	movlw	1	; select bank2/3
 10931  0F20  0087               	movwf	7
 10932  0F21  0801               	movf	1,w
 10933  0F22  0021               	movlb	1	; select bank1
 10934  0F23  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10935  0F24  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10936  0F25  00AB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 10937                           
 10938                           ;usb_device.c: 2975: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 10939  0F26  0020               	movlb	0	; select bank0
 10940  0F27  0844               	movf	68,w	;volatile
 10941  0F28  390F               	andlw	15
 10942  0F29  3EB0               	addlw	_ep_data_out& (0+255)
 10943  0F2A  2F3A               	goto	L11
 10944  0F2B                     l7297:	
 10945                           ;usb_device.c: 2976: }
 10946                           
 10947                           
 10948                           ;usb_device.c: 2977: else
 10949                           ;usb_device.c: 2978: {
 10950                           ;usb_device.c: 2979: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 10951  0F2B  0020               	movlb	0	; select bank0
 10952  0F2C  0844               	movf	68,w	;volatile
 10953  0F2D  390F               	andlw	15
 10954  0F2E  3E68               	addlw	_pBDTEntryIn& (0+255)
 10955  0F2F  0086               	movwf	6
 10956  0F30  0187               	clrf	7
 10957  0F31  0801               	movf	1,w
 10958  0F32  0021               	movlb	1	; select bank1
 10959  0F33  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10960  0F34  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10961  0F35  00AB               	movwf	USBStdFeatureReqHandler@p^(0+128)
 10962                           
 10963                           ;usb_device.c: 2980: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 10964  0F36  0020               	movlb	0	; select bank0
 10965  0F37  0844               	movf	68,w	;volatile
 10966  0F38  390F               	andlw	15
 10967  0F39  3EAE               	addlw	_ep_data_in& (0+255)
 10968  0F3A                     L11:	
 10969  0F3A  0086               	movwf	6
 10970  0F3B  3001               	movlw	1	; select bank3/4
 10971  0F3C  0087               	movwf	7
 10972  0F3D  0801               	movf	1,w
 10973  0F3E  0021               	movlb	1	; select bank1
 10974  0F3F  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10975  0F40  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10976  0F41  00AA               	movwf	USBStdFeatureReqHandler@current_ep_data^(0+128)
 10977                           
 10978                           ;usb_device.c: 2981: }
 10979                           ;usb_device.c: 2987: if(current_ep_data.bits.ping_pong_state == 0)
 10980  0F42  182A               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),0
 10981  0F43  2F49               	goto	l353
 10982                           
 10983                           ;usb_device.c: 2988: {
 10984                           ;usb_device.c: 2989: {((BYTE_VAL*)&p)->Val &= ~0x0004;};
 10985  0F44  30FB               	movlw	251
 10986  0F45  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 10987  0F46  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 10988  0F47  05AB               	andwf	USBStdFeatureReqHandler@p^(0+128),f
 10989                           
 10990                           ;usb_device.c: 2990: }
 10991  0F48  2F4A               	goto	l354
 10992  0F49                     l353:	
 10993                           
 10994                           ;usb_device.c: 2991: else
 10995                           ;usb_device.c: 2992: {
 10996                           ;usb_device.c: 2993: {((BYTE_VAL*)&p)->Val |= 0x0004;};
 10997  0F49  152B               	bsf	USBStdFeatureReqHandler@p^(0+128),2
 10998  0F4A                     l354:	
 10999                           
 11000                           ;usb_device.c: 2994: }
 11001                           ;usb_device.c: 2999: if(SetupPkt.EPDir == 0)
 11002  0F4A  0020               	movlb	0	; select bank0
 11003  0F4B  1BC4               	btfsc	68,7	;volatile
 11004  0F4C  2F58               	goto	l7305
 11005                           
 11006                           ;usb_device.c: 3000: {
 11007                           ;usb_device.c: 3001: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11008  0F4D  0021               	movlb	1	; select bank1
 11009  0F4E  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11010  0F4F  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11011  0F50  0020               	movlb	0	; select bank0
 11012  0F51  0844               	movf	68,w	;volatile
 11013  0F52  390F               	andlw	15
 11014  0F53  3E22               	addlw	_pBDTEntryOut& (0+255)
 11015  0F54  0086               	movwf	6
 11016  0F55  3001               	movlw	1	; select bank2/3
 11017  0F56  0087               	movwf	7
 11018  0F57  2F61               	goto	L12
 11019  0F58                     l7305:	
 11020                           ;usb_device.c: 3002: }
 11021                           
 11022                           
 11023                           ;usb_device.c: 3003: else
 11024                           ;usb_device.c: 3004: {
 11025                           ;usb_device.c: 3005: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 11026  0F58  0021               	movlb	1	; select bank1
 11027  0F59  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11028  0F5A  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11029  0F5B  0020               	movlb	0	; select bank0
 11030  0F5C  0844               	movf	68,w	;volatile
 11031  0F5D  390F               	andlw	15
 11032  0F5E  3E68               	addlw	_pBDTEntryIn& (0+255)
 11033  0F5F  0086               	movwf	6
 11034  0F60  0187               	clrf	7
 11035  0F61                     L12:	
 11036  0F61  0021               	movlb	1	; select bank1
 11037  0F62  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11038  0F63  0081               	movwf	1
 11039                           
 11040                           ;usb_device.c: 3006: }
 11041                           ;usb_device.c: 3009: if(SetupPkt.bRequest == 3)
 11042  0F64  0020               	movlb	0	; select bank0
 11043  0F65  0841               	movf	65,w	;volatile
 11044  0F66  3A03               	xorlw	3
 11045  0F67  1D03               	skipz
 11046  0F68  2F86               	goto	l7317
 11047                           
 11048                           ;usb_device.c: 3010: {
 11049                           ;usb_device.c: 3011: if(p->STAT.UOWN == 1)
 11050  0F69  0021               	movlb	1	; select bank1
 11051  0F6A  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11052  0F6B  0086               	movwf	6
 11053  0F6C  0187               	clrf	7
 11054  0F6D  1F81               	btfss	1,7
 11055  0F6E  2F7D               	goto	l358
 11056                           
 11057                           ;usb_device.c: 3012: {
 11058                           ;usb_device.c: 3015: if(SetupPkt.EPDir == 0)
 11059  0F6F  0020               	movlb	0	; select bank0
 11060  0F70  1BC4               	btfsc	68,7	;volatile
 11061  0F71  2F76               	goto	l7315
 11062                           
 11063                           ;usb_device.c: 3016: {
 11064                           ;usb_device.c: 3017: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11065  0F72  0844               	movf	68,w	;volatile
 11066  0F73  390F               	andlw	15
 11067  0F74  3EB0               	addlw	_ep_data_out& (0+255)
 11068  0F75  2F79               	goto	L13
 11069  0F76                     l7315:	
 11070                           ;usb_device.c: 3018: }
 11071                           
 11072                           
 11073                           ;usb_device.c: 3019: else
 11074                           ;usb_device.c: 3020: {
 11075                           ;usb_device.c: 3021: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 11076  0F76  0844               	movf	68,w	;volatile
 11077  0F77  390F               	andlw	15
 11078  0F78  3EAE               	addlw	_ep_data_in& (0+255)
 11079  0F79                     L13:	
 11080  0F79  0086               	movwf	6
 11081  0F7A  3001               	movlw	1	; select bank3/4
 11082  0F7B  0087               	movwf	7
 11083  0F7C  1481               	bsf	1,1
 11084  0F7D                     l358:	
 11085                           
 11086                           ;usb_device.c: 3022: }
 11087                           ;usb_device.c: 3023: }
 11088                           ;usb_device.c: 3026: p->STAT.Val |= 0x80|0x04;
 11089  0F7D  3084               	movlw	132
 11090  0F7E  0021               	movlb	1	; select bank1
 11091  0F7F  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11092  0F80  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11093  0F81  0086               	movwf	6
 11094  0F82  0187               	clrf	7
 11095  0F83  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11096  0F84  0481               	iorwf	1,f
 11097                           
 11098                           ;usb_device.c: 3027: }
 11099  0F85  0008               	return
 11100  0F86                     l7317:	
 11101                           
 11102                           ;usb_device.c: 3028: else
 11103                           ;usb_device.c: 3029: {
 11104                           ;usb_device.c: 3033: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
 11105  0F86  3004               	movlw	4
 11106  0F87  0021               	movlb	1	; select bank1
 11107  0F88  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11108  0F89  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11109  0F8A  06AB               	xorwf	USBStdFeatureReqHandler@p^(0+128),f
 11110                           
 11111                           ;usb_device.c: 3035: if(p->STAT.UOWN == 1)
 11112  0F8B  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11113  0F8C  0086               	movwf	6
 11114  0F8D  0187               	clrf	7
 11115  0F8E  1F81               	btfss	1,7
 11116  0F8F  2FAB               	goto	l7327
 11117                           
 11118                           ;usb_device.c: 3036: {
 11119                           ;usb_device.c: 3039: p->STAT.Val &= (~0x80);
 11120  0F90  307F               	movlw	127
 11121  0F91  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11122  0F92  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11123  0F93  0086               	movwf	6
 11124  0F94  0187               	clrf	7
 11125  0F95  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11126  0F96  0581               	andwf	1,f
 11127                           
 11128                           ;usb_device.c: 3040: p->STAT.Val |= 0x40;
 11129  0F97  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11130  0F98  0086               	movwf	6
 11131  0F99  0187               	clrf	7
 11132  0F9A  1701               	bsf	1,6
 11133                           
 11134                           ;usb_device.c: 3041: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11135  0F9B  3005               	movlw	5
 11136  0F9C  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 11137  0F9D  3000               	movlw	0
 11138  0F9E  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 11139  0F9F  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11140  0FA0  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 11141  0FA1  3000               	movlw	0
 11142  0FA2  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 11143  0FA3  3001               	movlw	1
 11144  0FA4  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 11145  0FA5  3000               	movlw	0
 11146  0FA6  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 11147  0FA7  319C  2423  318E   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 11148                           
 11149                           ;usb_device.c: 3042: }
 11150  0FAA  2FB0               	goto	l7329
 11151  0FAB                     l7327:	
 11152                           
 11153                           ;usb_device.c: 3043: else
 11154                           ;usb_device.c: 3044: {
 11155                           ;usb_device.c: 3046: p->STAT.Val |= 0x40;
 11156  0FAB  0021               	movlb	1	; select bank1
 11157  0FAC  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11158  0FAD  0086               	movwf	6
 11159  0FAE  0187               	clrf	7
 11160  0FAF  1701               	bsf	1,6
 11161  0FB0                     l7329:	
 11162                           
 11163                           ;usb_device.c: 3047: }
 11164                           ;usb_device.c: 3051: ((BYTE_VAL*)&p)->Val ^= 0x0004;;
 11165  0FB0  3004               	movlw	4
 11166  0FB1  0021               	movlb	1	; select bank1
 11167  0FB2  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11168  0FB3  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11169  0FB4  06AB               	xorwf	USBStdFeatureReqHandler@p^(0+128),f
 11170                           
 11171                           ;usb_device.c: 3057: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 11172  0FB5  18AA               	btfsc	USBStdFeatureReqHandler@current_ep_data^(0+128),1
 11173  0FB6  2FBC               	goto	l366
 11174  0FB7  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11175  0FB8  0086               	movwf	6
 11176  0FB9  0187               	clrf	7
 11177  0FBA  1F81               	btfss	1,7
 11178  0FBB  2FE2               	goto	l7341
 11179  0FBC                     l366:	
 11180                           
 11181                           ;usb_device.c: 3058: {
 11182                           ;usb_device.c: 3059: if(SetupPkt.EPDir == 0)
 11183  0FBC  0020               	movlb	0	; select bank0
 11184  0FBD  1BC4               	btfsc	68,7	;volatile
 11185  0FBE  2FC3               	goto	l7337
 11186                           
 11187                           ;usb_device.c: 3060: {
 11188                           ;usb_device.c: 3061: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11189  0FBF  0844               	movf	68,w	;volatile
 11190  0FC0  390F               	andlw	15
 11191  0FC1  3EB0               	addlw	_ep_data_out& (0+255)
 11192  0FC2  2FC6               	goto	L14
 11193  0FC3                     l7337:	
 11194                           ;usb_device.c: 3062: }
 11195                           
 11196                           
 11197                           ;usb_device.c: 3063: else
 11198                           ;usb_device.c: 3064: {
 11199                           ;usb_device.c: 3065: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 11200  0FC3  0844               	movf	68,w	;volatile
 11201  0FC4  390F               	andlw	15
 11202  0FC5  3EAE               	addlw	_ep_data_in& (0+255)
 11203  0FC6                     L14:	
 11204  0FC6  0086               	movwf	6
 11205  0FC7  3001               	movlw	1	; select bank3/4
 11206  0FC8  0087               	movwf	7
 11207  0FC9  1081               	bcf	1,1
 11208                           
 11209                           ;usb_device.c: 3066: }
 11210                           ;usb_device.c: 3068: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11211  0FCA  303B               	movlw	59
 11212  0FCB  0021               	movlb	1	; select bank1
 11213  0FCC  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11214  0FCD  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11215  0FCE  0086               	movwf	6
 11216  0FCF  0187               	clrf	7
 11217  0FD0  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11218  0FD1  0581               	andwf	1,f
 11219                           
 11220                           ;usb_device.c: 3071: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 11221  0FD2  3005               	movlw	5
 11222  0FD3  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 11223  0FD4  3000               	movlw	0
 11224  0FD5  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 11225  0FD6  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11226  0FD7  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 11227  0FD8  3000               	movlw	0
 11228  0FD9  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 11229  0FDA  3001               	movlw	1
 11230  0FDB  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 11231  0FDC  3000               	movlw	0
 11232  0FDD  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 11233  0FDE  319C  2423  318E   	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 11234                           
 11235                           ;usb_device.c: 3072: }
 11236  0FE1  2FEA               	goto	l7343
 11237  0FE2                     l7341:	
 11238                           
 11239                           ;usb_device.c: 3073: else
 11240                           ;usb_device.c: 3074: {
 11241                           ;usb_device.c: 3076: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 11242  0FE2  303B               	movlw	59
 11243  0FE3  0021               	movlb	1	; select bank1
 11244  0FE4  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11245  0FE5  082B               	movf	USBStdFeatureReqHandler@p^(0+128),w
 11246  0FE6  0086               	movwf	6
 11247  0FE7  0187               	clrf	7
 11248  0FE8  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11249  0FE9  0581               	andwf	1,f
 11250  0FEA                     l7343:	
 11251                           
 11252                           ;usb_device.c: 3077: }
 11253                           ;usb_device.c: 3124: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 11254  0FEA  0020               	movlb	0	; select bank0
 11255  0FEB  0844               	movf	68,w	;volatile
 11256  0FEC  390F               	andlw	15
 11257  0FED  3E98               	addlw	152
 11258  0FEE  0021               	movlb	1	; select bank1
 11259  0FEF  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11260  0FF0  01A7               	clrf	(??_USBStdFeatureReqHandler^(0+128)+1)
 11261  0FF1  300E               	movlw	14
 11262  0FF2  3DA7               	addwfc	(??_USBStdFeatureReqHandler^(0+128)+1),f
 11263  0FF3  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11264  0FF4  00A8               	movwf	USBStdFeatureReqHandler@pUEP^(0+128)
 11265  0FF5  0827               	movf	(??_USBStdFeatureReqHandler+1)^(0+128),w
 11266  0FF6  00A9               	movwf	(USBStdFeatureReqHandler@pUEP+1)^(0+128)
 11267                           
 11268                           ;usb_device.c: 3128: *pUEP &= ~0x0001;
 11269  0FF7  30FE               	movlw	254
 11270  0FF8  00A6               	movwf	??_USBStdFeatureReqHandler^(0+128)
 11271  0FF9  0828               	movf	USBStdFeatureReqHandler@pUEP^(0+128),w
 11272  0FFA  0086               	movwf	6
 11273  0FFB  0829               	movf	(USBStdFeatureReqHandler@pUEP+1)^(0+128),w
 11274  0FFC  0087               	movwf	7
 11275  0FFD  0826               	movf	??_USBStdFeatureReqHandler^(0+128),w
 11276  0FFE  0581               	andwf	1,f
 11277  0FFF  0008               	return
 11278  1000                     __end_of_USBStdFeatureReqHandler:	
 11279                           
 11280                           	psect	text40
 11281  1D8B                     __ptext40:	
 11282 ;; *************** function _USBStdGetStatusHandler *****************
 11283 ;; Defined at:
 11284 ;;		line 2283 in file "../USB/usb_device.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;		None
 11287 ;; Auto vars:     Size  Location     Type
 11288 ;;  p               1    9[BANK0 ] PTR struct __BDT
 11289 ;;		 -> NULL(0), BDT(32), 
 11290 ;; Return value:  Size  Location     Type
 11291 ;;		None               void
 11292 ;; Registers used:
 11293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 11294 ;; Tracked objects:
 11295 ;;		On entry : 0/0
 11296 ;;		On exit  : 0/0
 11297 ;;		Unchanged: 0/0
 11298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11300 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11301 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11302 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11303 ;;Total ram usage:        2 bytes
 11304 ;; Hardware stack levels used:    1
 11305 ;; Hardware stack levels required when called:    4
 11306 ;; This function calls:
 11307 ;;		Nothing
 11308 ;; This function is called by:
 11309 ;;		_USBCheckStdRequest
 11310 ;; This function uses a non-reentrant model
 11311 ;;
 11312                           
 11313                           
 11314                           ;psect for function _USBStdGetStatusHandler
 11315  1D8B                     _USBStdGetStatusHandler:	
 11316                           
 11317                           ;usb_device.c: 2284: CtrlTrfData[0] = 0;
 11318                           
 11319                           ;incstack = 0
 11320                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
 11321  1D8B  0020               	movlb	0	; select bank0
 11322  1D8C  01C8               	clrf	72	;volatile
 11323                           
 11324                           ;usb_device.c: 2285: CtrlTrfData[1] = 0;
 11325  1D8D  3000               	movlw	0
 11326  1D8E  00C9               	movwf	73	;volatile
 11327                           
 11328                           ;usb_device.c: 2287: switch(SetupPkt.Recipient)
 11329  1D8F  2DC3               	goto	l7149
 11330  1D90                     l271:	
 11331                           ;usb_device.c: 2288: {
 11332                           ;usb_device.c: 2289: case (0x00):
 11333                           
 11334                           
 11335                           ;usb_device.c: 2295: if(1 == 1)
 11336  1D90  0022               	movlb	2	; select bank2
 11337  1D91  17BC               	bsf	(_inPipes^(0+256)+2),7
 11338                           
 11339                           ;usb_device.c: 2296: {
 11340                           ;usb_device.c: 2297: CtrlTrfData[0]|=0x01;
 11341  1D92  0020               	movlb	0	; select bank0
 11342  1D93  1448               	bsf	72,0	;volatile
 11343                           
 11344                           ;usb_device.c: 2298: }
 11345                           ;usb_device.c: 2300: if(RemoteWakeup == TRUE)
 11346  1D94  0022               	movlb	2	; select bank2
 11347  1D95  0829               	movf	_RemoteWakeup^(0+256),w
 11348  1D96  3A01               	xorlw	1
 11349  1D97  1D03               	skipz
 11350  1D98  2DCF               	goto	l274
 11351                           
 11352                           ;usb_device.c: 2301: {
 11353                           ;usb_device.c: 2302: CtrlTrfData[0]|=0x02;
 11354  1D99  0020               	movlb	0	; select bank0
 11355  1D9A  14C8               	bsf	72,1	;volatile
 11356                           
 11357                           ;usb_device.c: 2303: }
 11358                           ;usb_device.c: 2304: break;
 11359  1D9B  2DCF               	goto	l274
 11360  1D9C                     l275:	
 11361                           ;usb_device.c: 2305: case (0x01):
 11362                           
 11363                           
 11364                           ;usb_device.c: 2306: inPipes[0].info.bits.busy = 1;
 11365  1D9C  0022               	movlb	2	; select bank2
 11366  1D9D  17BC               	bsf	(_inPipes^(0+256)+2),7
 11367                           
 11368                           ;usb_device.c: 2307: break;
 11369  1D9E  2DCF               	goto	l274
 11370  1D9F                     l276:	
 11371                           ;usb_device.c: 2308: case (0x02):
 11372                           
 11373                           
 11374                           ;usb_device.c: 2309: inPipes[0].info.bits.busy = 1;
 11375  1D9F  0022               	movlb	2	; select bank2
 11376  1DA0  17BC               	bsf	(_inPipes^(0+256)+2),7
 11377                           
 11378                           ;usb_device.c: 2313: {
 11379                           ;usb_device.c: 2314: BDT_ENTRY *p;
 11380                           ;usb_device.c: 2316: if(SetupPkt.EPDir == 0)
 11381  1DA1  0020               	movlb	0	; select bank0
 11382  1DA2  1BC4               	btfsc	68,7	;volatile
 11383  1DA3  2DAB               	goto	l7139
 11384                           
 11385                           ;usb_device.c: 2317: {
 11386                           ;usb_device.c: 2318: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 11387  1DA4  0844               	movf	68,w	;volatile
 11388  1DA5  390F               	andlw	15
 11389  1DA6  3E22               	addlw	_pBDTEntryOut& (0+255)
 11390  1DA7  0086               	movwf	6
 11391  1DA8  3001               	movlw	1	; select bank2/3
 11392  1DA9  0087               	movwf	7
 11393  1DAA  2DB0               	goto	L15
 11394  1DAB                     l7139:	
 11395                           ;usb_device.c: 2319: }
 11396                           
 11397                           
 11398                           ;usb_device.c: 2320: else
 11399                           ;usb_device.c: 2321: {
 11400                           ;usb_device.c: 2322: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 11401  1DAB  0844               	movf	68,w	;volatile
 11402  1DAC  390F               	andlw	15
 11403  1DAD  3E68               	addlw	_pBDTEntryIn& (0+255)
 11404  1DAE  0086               	movwf	6
 11405  1DAF  0187               	clrf	7
 11406  1DB0                     L15:	
 11407  1DB0  0801               	movf	1,w
 11408  1DB1  00D8               	movwf	??_USBStdGetStatusHandler
 11409  1DB2  0858               	movf	??_USBStdGetStatusHandler,w
 11410  1DB3  00D9               	movwf	USBStdGetStatusHandler@p
 11411                           
 11412                           ;usb_device.c: 2323: }
 11413                           ;usb_device.c: 2325: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 11414  1DB4  0859               	movf	USBStdGetStatusHandler@p,w
 11415  1DB5  0086               	movwf	6
 11416  1DB6  0187               	clrf	7
 11417  1DB7  1F81               	btfss	1,7
 11418  1DB8  2DCF               	goto	l274
 11419  1DB9  0859               	movf	USBStdGetStatusHandler@p,w
 11420  1DBA  0086               	movwf	6
 11421  1DBB  0187               	clrf	7
 11422  1DBC  1D01               	btfss	1,2
 11423  1DBD  2DCF               	goto	l274
 11424                           
 11425                           ;usb_device.c: 2326: CtrlTrfData[0]=0x01;
 11426  1DBE  3001               	movlw	1
 11427  1DBF  00D8               	movwf	??_USBStdGetStatusHandler
 11428  1DC0  0858               	movf	??_USBStdGetStatusHandler,w
 11429  1DC1  00C8               	movwf	72	;volatile
 11430                           
 11431                           ;usb_device.c: 2328: }
 11432                           ;usb_device.c: 2329: }
 11433                           
 11434                           ;usb_device.c: 2327: break;
 11435  1DC2  2DCF               	goto	l274
 11436  1DC3                     l7149:	
 11437  1DC3  0840               	movf	64,w	;volatile
 11438  1DC4  391F               	andlw	31
 11439                           
 11440                           ; Switch size 1, requested type "space"
 11441                           ; Number of cases is 3, Range of values is 0 to 2
 11442                           ; switch strategies available:
 11443                           ; Name         Instructions Cycles
 11444                           ; simple_byte           10     6 (average)
 11445                           ; direct_byte           12     6 (fixed)
 11446                           ; jumptable            260     6 (fixed)
 11447                           ;	Chosen strategy is simple_byte
 11448  1DC5  3A00               	xorlw	0	; case 0
 11449  1DC6  1903               	skipnz
 11450  1DC7  2D90               	goto	l271
 11451  1DC8  3A01               	xorlw	1	; case 1
 11452  1DC9  1903               	skipnz
 11453  1DCA  2D9C               	goto	l275
 11454  1DCB  3A03               	xorlw	3	; case 2
 11455  1DCC  1903               	skipnz
 11456  1DCD  2D9F               	goto	l276
 11457  1DCE  2DCF               	goto	l274
 11458  1DCF                     l274:	
 11459                           
 11460                           ;usb_device.c: 2331: if(inPipes[0].info.bits.busy == 1)
 11461  1DCF  0022               	movlb	2	; select bank2
 11462  1DD0  1FBC               	btfss	(_inPipes^(0+256)+2),7
 11463  1DD1  0008               	return
 11464                           
 11465                           ;usb_device.c: 2332: {
 11466                           ;usb_device.c: 2333: inPipes[0].pSrc.bRam = (BYTE*)&CtrlTrfData;
 11467  1DD2  3048               	movlw	72
 11468  1DD3  00BA               	movwf	_inPipes^(0+256)
 11469  1DD4  3000               	movlw	0
 11470  1DD5  00BB               	movwf	(_inPipes+1)^(0+256)
 11471                           
 11472                           ;usb_device.c: 2334: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11473  1DD6  143C               	bsf	(_inPipes^(0+256)+2),0
 11474                           
 11475                           ;usb_device.c: 2335: inPipes[0].wCount.v[0] = 2;
 11476  1DD7  3002               	movlw	2
 11477  1DD8  0020               	movlb	0	; select bank0
 11478  1DD9  00D8               	movwf	??_USBStdGetStatusHandler
 11479  1DDA  0858               	movf	??_USBStdGetStatusHandler,w
 11480  1DDB  0022               	movlb	2	; select bank2
 11481  1DDC  00BD               	movwf	(_inPipes^(0+256)+3)
 11482  1DDD  0008               	return
 11483  1DDE                     __end_of_USBStdGetStatusHandler:	
 11484                           
 11485                           	psect	text41
 11486  1237                     __ptext41:	
 11487 ;; *************** function _USBStdGetDscHandler *****************
 11488 ;; Defined at:
 11489 ;;		line 2207 in file "../USB/usb_device.c"
 11490 ;; Parameters:    Size  Location     Type
 11491 ;;		None
 11492 ;; Auto vars:     Size  Location     Type
 11493 ;;		None
 11494 ;; Return value:  Size  Location     Type
 11495 ;;		None               void
 11496 ;; Registers used:
 11497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 11498 ;; Tracked objects:
 11499 ;;		On entry : 0/0
 11500 ;;		On exit  : 0/0
 11501 ;;		Unchanged: 0/0
 11502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11505 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11506 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11507 ;;Total ram usage:        3 bytes
 11508 ;; Hardware stack levels used:    1
 11509 ;; Hardware stack levels required when called:    4
 11510 ;; This function calls:
 11511 ;;		Nothing
 11512 ;; This function is called by:
 11513 ;;		_USBCheckStdRequest
 11514 ;; This function uses a non-reentrant model
 11515 ;;
 11516                           
 11517                           
 11518                           ;psect for function _USBStdGetDscHandler
 11519  1237                     _USBStdGetDscHandler:	
 11520                           
 11521                           ;usb_device.c: 2208: if(SetupPkt.bmRequestType == 0x80)
 11522                           
 11523                           ;incstack = 0
 11524                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
 11525  1237  0020               	movlb	0	; select bank0
 11526  1238  0840               	movf	64,w	;volatile
 11527  1239  3A80               	xorlw	128
 11528  123A  1D03               	skipz
 11529  123B  0008               	return
 11530                           
 11531                           ;usb_device.c: 2209: {
 11532                           ;usb_device.c: 2210: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 11533  123C  30C0               	movlw	192
 11534  123D  00D8               	movwf	??_USBStdGetDscHandler
 11535  123E  0858               	movf	??_USBStdGetDscHandler,w
 11536  123F  0022               	movlb	2	; select bank2
 11537  1240  00BC               	movwf	(_inPipes^(0+256)+2)
 11538                           
 11539                           ;usb_device.c: 2212: switch(SetupPkt.bDescriptorType)
 11540  1241  2AA9               	goto	l7127
 11541  1242                     l7107:	
 11542                           ;usb_device.c: 2213: {
 11543                           ;usb_device.c: 2214: case 0x01:
 11544                           
 11545                           
 11546                           ;usb_device.c: 2218: inPipes[0].pSrc.bRom = (const BYTE*)&device_dsc;
 11547  1242  308D               	movlw	low (_device_dsc| (0+32768))
 11548  1243  0022               	movlb	2	; select bank2
 11549  1244  00BA               	movwf	_inPipes^(0+256)
 11550  1245  3088               	movlw	high (_device_dsc| (0+32768))
 11551  1246  00BB               	movwf	(_inPipes+1)^(0+256)
 11552                           
 11553                           ;usb_device.c: 2220: inPipes[0].wCount.Val = sizeof(device_dsc);
 11554  1247  3012               	movlw	18
 11555  1248  00BD               	movwf	(_inPipes^(0+256)+3)
 11556  1249  3000               	movlw	0
 11557  124A  00BE               	movwf	(_inPipes^(0+256)+4)
 11558                           
 11559                           ;usb_device.c: 2221: break;
 11560  124B  0008               	return
 11561  124C                     l7109:	
 11562                           ;usb_device.c: 2222: case 0x02:
 11563                           
 11564                           
 11565                           ;usb_device.c: 2226: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 11566  124C  3004               	movlw	low (_USB_CD_Ptr| (0+32768))
 11567  124D  0084               	movwf	4
 11568  124E  3088               	movlw	high (_USB_CD_Ptr| (0+32768))
 11569  124F  0085               	movwf	5
 11570  1250  0020               	movlb	0	; select bank0
 11571  1251  0842               	movf	66,w	;volatile
 11572  1252  0784               	addwf	4,f
 11573  1253  1803               	skipnc
 11574  1254  0A85               	incf	5,f
 11575  1255  3F00               	moviw [0]fsr0
 11576  1256  0022               	movlb	2	; select bank2
 11577  1257  00BA               	movwf	_inPipes^(0+256)
 11578  1258  3088               	movlw	(high __stringtab)| (0+128)
 11579  1259  00BB               	movwf	(_inPipes+1)^(0+256)
 11580                           
 11581                           ;usb_device.c: 2232: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 11582  125A  083B               	movf	(_inPipes+1)^(0+256),w
 11583  125B  0020               	movlb	0	; select bank0
 11584  125C  00D9               	movwf	??_USBStdGetDscHandler+1
 11585  125D  0022               	movlb	2	; select bank2
 11586  125E  083A               	movf	_inPipes^(0+256),w
 11587  125F  0020               	movlb	0	; select bank0
 11588  1260  00D8               	movwf	??_USBStdGetDscHandler
 11589  1261  3002               	movlw	2
 11590  1262  0758               	addwf	??_USBStdGetDscHandler,w
 11591  1263  0084               	movwf	4
 11592  1264  0859               	movf	??_USBStdGetDscHandler+1,w
 11593  1265  1803               	skipnc
 11594  1266  0A59               	incf	??_USBStdGetDscHandler+1,w
 11595  1267  0085               	movwf	5
 11596  1268  0800               	movf	0,w	;code access
 11597  1269  00DA               	movwf	??_USBStdGetDscHandler+2
 11598  126A  085A               	movf	??_USBStdGetDscHandler+2,w
 11599  126B  0022               	movlb	2	; select bank2
 11600  126C  00BD               	movwf	(_inPipes^(0+256)+3)
 11601                           
 11602                           ;usb_device.c: 2233: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 11603  126D  083B               	movf	(_inPipes+1)^(0+256),w
 11604  126E  0020               	movlb	0	; select bank0
 11605  126F  00D9               	movwf	??_USBStdGetDscHandler+1
 11606  1270  0022               	movlb	2	; select bank2
 11607  1271  083A               	movf	_inPipes^(0+256),w
 11608  1272  0020               	movlb	0	; select bank0
 11609  1273  00D8               	movwf	??_USBStdGetDscHandler
 11610  1274  3003               	movlw	3
 11611  1275  0758               	addwf	??_USBStdGetDscHandler,w
 11612  1276  0084               	movwf	4
 11613  1277  0859               	movf	??_USBStdGetDscHandler+1,w
 11614  1278  1803               	skipnc
 11615  1279  0A59               	incf	??_USBStdGetDscHandler+1,w
 11616  127A  0085               	movwf	5
 11617  127B  0800               	movf	0,w	;code access
 11618  127C  00DA               	movwf	??_USBStdGetDscHandler+2
 11619  127D  085A               	movf	??_USBStdGetDscHandler+2,w
 11620  127E  0022               	movlb	2	; select bank2
 11621  127F  00BE               	movwf	(_inPipes^(0+256)+4)
 11622                           
 11623                           ;usb_device.c: 2234: break;
 11624  1280  0008               	return
 11625  1281                     l7115:	
 11626                           ;usb_device.c: 2235: case 0x03:
 11627                           
 11628                           
 11629                           ;usb_device.c: 2239: if(SetupPkt.bDscIndex<3)
 11630  1281  3003               	movlw	3
 11631  1282  0020               	movlb	0	; select bank0
 11632  1283  0242               	subwf	66,w	;volatile
 11633  1284  1803               	skipnc
 11634  1285  2AA3               	goto	l7121
 11635                           
 11636                           ;usb_device.c: 2240: {
 11637                           ;usb_device.c: 2242: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 11638  1286  3001               	movlw	low (_USB_SD_Ptr| (0+32768))
 11639  1287  0084               	movwf	4
 11640  1288  3088               	movlw	high (_USB_SD_Ptr| (0+32768))
 11641  1289  0085               	movwf	5
 11642  128A  0842               	movf	66,w	;volatile
 11643  128B  0784               	addwf	4,f
 11644  128C  1803               	skipnc
 11645  128D  0A85               	incf	5,f
 11646  128E  3F00               	moviw [0]fsr0
 11647  128F  0022               	movlb	2	; select bank2
 11648  1290  00BA               	movwf	_inPipes^(0+256)
 11649  1291  3088               	movlw	(high __stringtab)| (0+128)
 11650  1292  00BB               	movwf	(_inPipes+1)^(0+256)
 11651                           
 11652                           ;usb_device.c: 2244: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 11653  1293  083A               	movf	_inPipes^(0+256),w
 11654  1294  0084               	movwf	4
 11655  1295  083B               	movf	(_inPipes+1)^(0+256),w
 11656  1296  0085               	movwf	5
 11657  1297  0800               	movf	0,w	;code access
 11658  1298  0020               	movlb	0	; select bank0
 11659  1299  00D8               	movwf	??_USBStdGetDscHandler
 11660  129A  01D9               	clrf	??_USBStdGetDscHandler+1
 11661  129B  0858               	movf	??_USBStdGetDscHandler,w
 11662  129C  0022               	movlb	2	; select bank2
 11663  129D  00BD               	movwf	(_inPipes^(0+256)+3)
 11664  129E  0020               	movlb	0	; select bank0
 11665  129F  0859               	movf	??_USBStdGetDscHandler+1,w
 11666  12A0  0022               	movlb	2	; select bank2
 11667  12A1  00BE               	movwf	((_inPipes+1)^(0+256)+3)
 11668                           
 11669                           ;usb_device.c: 2245: }
 11670  12A2  0008               	return
 11671  12A3                     l7121:	
 11672                           
 11673                           ;usb_device.c: 2255: else
 11674                           ;usb_device.c: 2256: {
 11675                           ;usb_device.c: 2257: inPipes[0].info.Val = 0;
 11676  12A3  0022               	movlb	2	; select bank2
 11677  12A4  01BC               	clrf	(_inPipes^(0+256)+2)
 11678                           
 11679                           ;usb_device.c: 2258: }
 11680                           ;usb_device.c: 2259: break;
 11681  12A5  0008               	return
 11682  12A6                     l7123:	
 11683                           ;usb_device.c: 2260: default:
 11684                           
 11685                           
 11686                           ;usb_device.c: 2261: inPipes[0].info.Val = 0;
 11687  12A6  0022               	movlb	2	; select bank2
 11688  12A7  01BC               	clrf	(_inPipes^(0+256)+2)
 11689                           
 11690                           ;usb_device.c: 2263: }
 11691                           
 11692                           ;usb_device.c: 2262: break;
 11693  12A8  0008               	return
 11694  12A9                     l7127:	
 11695  12A9  0020               	movlb	0	; select bank0
 11696  12AA  0843               	movf	67,w	;volatile
 11697                           
 11698                           ; Switch size 1, requested type "space"
 11699                           ; Number of cases is 3, Range of values is 1 to 3
 11700                           ; switch strategies available:
 11701                           ; Name         Instructions Cycles
 11702                           ; simple_byte           10     6 (average)
 11703                           ; direct_byte           15     9 (fixed)
 11704                           ; jumptable            263     9 (fixed)
 11705                           ;	Chosen strategy is simple_byte
 11706  12AB  3A01               	xorlw	1	; case 1
 11707  12AC  1903               	skipnz
 11708  12AD  2A42               	goto	l7107
 11709  12AE  3A03               	xorlw	3	; case 2
 11710  12AF  1903               	skipnz
 11711  12B0  2A4C               	goto	l7109
 11712  12B1  3A01               	xorlw	1	; case 3
 11713  12B2  1903               	skipnz
 11714  12B3  2A81               	goto	l7115
 11715  12B4  2AA6               	goto	l7123
 11716  12B5  0008               	return
 11717  12B6                     __end_of_USBStdGetDscHandler:	
 11718                           
 11719                           	psect	text42
 11720  1451                     __ptext42:	
 11721 ;; *************** function _USBStdSetCfgHandler *****************
 11722 ;; Defined at:
 11723 ;;		line 2132 in file "../USB/usb_device.c"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;		None
 11726 ;; Auto vars:     Size  Location     Type
 11727 ;;  p               2    7[BANK1 ] PTR unsigned char 
 11728 ;;		 -> UEP1(1), 
 11729 ;;  i               1    9[BANK1 ] unsigned char 
 11730 ;;  i               1   10[BANK1 ] unsigned char 
 11731 ;; Return value:  Size  Location     Type
 11732 ;;		None               void
 11733 ;; Registers used:
 11734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11735 ;; Tracked objects:
 11736 ;;		On entry : 0/0
 11737 ;;		On exit  : 0/0
 11738 ;;		Unchanged: 0/0
 11739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11741 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11742 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11743 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 11744 ;;Total ram usage:        5 bytes
 11745 ;; Hardware stack levels used:    1
 11746 ;; Hardware stack levels required when called:    8
 11747 ;; This function calls:
 11748 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11749 ;;		_memset
 11750 ;; This function is called by:
 11751 ;;		_USBCheckStdRequest
 11752 ;; This function uses a non-reentrant model
 11753 ;;
 11754                           
 11755                           
 11756                           ;psect for function _USBStdSetCfgHandler
 11757  1451                     _USBStdSetCfgHandler:	
 11758                           
 11759                           ;usb_device.c: 2133: BYTE i;
 11760                           ;usb_device.c: 2136: inPipes[0].info.bits.busy = 1;
 11761                           
 11762                           ;incstack = 0
 11763                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11764  1451  0022               	movlb	2	; select bank2
 11765  1452  17BC               	bsf	(_inPipes^(0+256)+2),7
 11766                           
 11767                           ;usb_device.c: 2139: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<1;i++) *p++ = 0; };
 11768  1453  300E               	movlw	14
 11769  1454  0021               	movlb	1	; select bank1
 11770  1455  00A8               	movwf	(USBStdSetCfgHandler@p+1)^(0+128)
 11771  1456  3099               	movlw	153
 11772  1457  00A7               	movwf	USBStdSetCfgHandler@p^(0+128)
 11773  1458  01A9               	clrf	USBStdSetCfgHandler@i_1089^(0+128)
 11774  1459  0829               	movf	USBStdSetCfgHandler@i_1089^(0+128),w
 11775  145A  1D03               	skipz
 11776  145B  2C6C               	goto	l7059
 11777  145C                     l7051:	
 11778  145C  0827               	movf	USBStdSetCfgHandler@p^(0+128),w
 11779  145D  0086               	movwf	6
 11780  145E  0828               	movf	(USBStdSetCfgHandler@p+1)^(0+128),w
 11781  145F  0087               	movwf	7
 11782  1460  0181               	clrf	1
 11783  1461  3001               	movlw	1
 11784  1462  07A7               	addwf	USBStdSetCfgHandler@p^(0+128),f
 11785  1463  3000               	movlw	0
 11786  1464  3DA8               	addwfc	(USBStdSetCfgHandler@p+1)^(0+128),f
 11787  1465  3001               	movlw	1
 11788  1466  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11789  1467  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11790  1468  07A9               	addwf	USBStdSetCfgHandler@i_1089^(0+128),f
 11791  1469  0829               	movf	USBStdSetCfgHandler@i_1089^(0+128),w
 11792  146A  1903               	btfsc	3,2
 11793  146B  2C5C               	goto	l7051
 11794  146C                     l7059:	
 11795                           
 11796                           ;usb_device.c: 2142: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 11797  146C  3020               	movlw	32
 11798  146D  0020               	movlb	0	; select bank0
 11799  146E  00D8               	movwf	?_memset
 11800  146F  3000               	movlw	0
 11801  1470  00D9               	movwf	?_memset+1
 11802  1471  3000               	movlw	0
 11803  1472  00DA               	movwf	?_memset+2
 11804  1473  3000               	movlw	0
 11805  1474  00DB               	movwf	?_memset+3
 11806  1475  3020               	movlw	32
 11807  1476  00DC               	movwf	?_memset+4
 11808  1477  3000               	movlw	0
 11809  1478  00DD               	movwf	?_memset+5
 11810  1479  319A  2264  3194   	fcall	_memset
 11811                           
 11812                           ;usb_device.c: 2145: UCONbits.PPBRST = 1;
 11813  147C  003D               	movlb	29	; select bank29
 11814  147D  170E               	bsf	14,6	;volatile
 11815                           
 11816                           ;usb_device.c: 2150: for(i = 0; i < (BYTE)(1+1u); i++)
 11817  147E  0021               	movlb	1	; select bank1
 11818  147F  01AA               	clrf	USBStdSetCfgHandler@i^(0+128)
 11819  1480  3002               	movlw	2
 11820  1481  022A               	subwf	USBStdSetCfgHandler@i^(0+128),w
 11821  1482  1803               	btfsc	3,0
 11822  1483  2C98               	goto	l7075
 11823  1484                     l7069:	
 11824                           
 11825                           ;usb_device.c: 2151: {
 11826                           ;usb_device.c: 2152: ep_data_in[i].Val = 0u;
 11827  1484  082A               	movf	USBStdSetCfgHandler@i^(0+128),w
 11828  1485  3EAE               	addlw	_ep_data_in& (0+255)
 11829  1486  0086               	movwf	6
 11830  1487  3001               	movlw	1	; select bank3/4
 11831  1488  0087               	movwf	7
 11832  1489  0181               	clrf	1
 11833                           
 11834                           ;usb_device.c: 2153: ep_data_out[i].Val = 0u;
 11835  148A  082A               	movf	USBStdSetCfgHandler@i^(0+128),w
 11836  148B  3EB0               	addlw	_ep_data_out& (0+255)
 11837  148C  0086               	movwf	6
 11838  148D  3001               	movlw	1	; select bank3/4
 11839  148E  0087               	movwf	7
 11840  148F  0181               	clrf	1
 11841  1490  3001               	movlw	1
 11842  1491  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11843  1492  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11844  1493  07AA               	addwf	USBStdSetCfgHandler@i^(0+128),f
 11845  1494  3002               	movlw	2
 11846  1495  022A               	subwf	USBStdSetCfgHandler@i^(0+128),w
 11847  1496  1C03               	skipc
 11848  1497  2C84               	goto	l7069
 11849  1498                     l7075:	
 11850                           
 11851                           ;usb_device.c: 2154: }
 11852                           ;usb_device.c: 2157: memset((void*)&USBAlternateInterface,0x00,1);
 11853  1498  3041               	movlw	low _USBAlternateInterface
 11854  1499  0020               	movlb	0	; select bank0
 11855  149A  00D8               	movwf	?_memset
 11856  149B  3001               	movlw	high _USBAlternateInterface
 11857  149C  00D9               	movwf	?_memset+1
 11858  149D  3000               	movlw	0
 11859  149E  00DA               	movwf	?_memset+2
 11860  149F  3000               	movlw	0
 11861  14A0  00DB               	movwf	?_memset+3
 11862  14A1  3001               	movlw	1
 11863  14A2  00DC               	movwf	?_memset+4
 11864  14A3  3000               	movlw	0
 11865  14A4  00DD               	movwf	?_memset+5
 11866  14A5  319A  2264  3194   	fcall	_memset
 11867                           
 11868                           ;usb_device.c: 2160: UCONbits.PPBRST = 0;
 11869  14A8  003D               	movlb	29	; select bank29
 11870  14A9  130E               	bcf	14,6	;volatile
 11871                           
 11872                           ;usb_device.c: 2162: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11873  14AA  3028               	movlw	40
 11874  14AB  0021               	movlb	1	; select bank1
 11875  14AC  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11876  14AD  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11877  14AE  0020               	movlb	0	; select bank0
 11878  14AF  00E8               	movwf	_pBDTEntryIn
 11879                           
 11880                           ;usb_device.c: 2165: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 11881  14B0  3020               	movlw	32
 11882  14B1  0021               	movlb	1	; select bank1
 11883  14B2  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11884  14B3  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11885  14B4  0020               	movlb	0	; select bank0
 11886  14B5  00ED               	movwf	_pBDTEntryEP0OutCurrent
 11887                           
 11888                           ;usb_device.c: 2166: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11889  14B6  086D               	movf	_pBDTEntryEP0OutCurrent,w
 11890  14B7  0021               	movlb	1	; select bank1
 11891  14B8  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11892  14B9  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11893  14BA  0020               	movlb	0	; select bank0
 11894  14BB  00EE               	movwf	_pBDTEntryEP0OutNext
 11895                           
 11896                           ;usb_device.c: 2169: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 11897  14BC  0842               	movf	66,w	;volatile
 11898  14BD  0021               	movlb	1	; select bank1
 11899  14BE  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11900  14BF  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11901  14C0  0022               	movlb	2	; select bank2
 11902  14C1  00C0               	movwf	_USBActiveConfiguration^(0+256)
 11903                           
 11904                           ;usb_device.c: 2172: if(USBActiveConfiguration == 0)
 11905  14C2  08C0               	movf	_USBActiveConfiguration^(0+256),f
 11906  14C3  1D03               	skipz
 11907  14C4  2CCB               	goto	l7091
 11908                           
 11909                           ;usb_device.c: 2173: {
 11910                           ;usb_device.c: 2175: USBDeviceState = ADDRESS_STATE;
 11911  14C5  3010               	movlw	16
 11912  14C6  0021               	movlb	1	; select bank1
 11913  14C7  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11914  14C8  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11915  14C9  00EE               	movwf	_USBDeviceState^(0+128)
 11916                           
 11917                           ;usb_device.c: 2176: }
 11918  14CA  0008               	return
 11919  14CB                     l7091:	
 11920                           
 11921                           ;usb_device.c: 2177: else
 11922                           ;usb_device.c: 2178: {
 11923                           ;usb_device.c: 2180: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 11924  14CB  3001               	movlw	1
 11925  14CC  0021               	movlb	1	; select bank1
 11926  14CD  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 11927  14CE  3000               	movlw	0
 11928  14CF  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 11929  14D0  3040               	movlw	low _USBActiveConfiguration
 11930  14D1  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 11931  14D2  3001               	movlw	high _USBActiveConfiguration
 11932  14D3  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 11933  14D4  3001               	movlw	1
 11934  14D5  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 11935  14D6  3000               	movlw	0
 11936  14D7  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 11937  14D8  319C  2423         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 11938                           
 11939                           ;usb_device.c: 2185: USBDeviceState = CONFIGURED_STATE;
 11940  14DA  3020               	movlw	32
 11941  14DB  0021               	movlb	1	; select bank1
 11942  14DC  00A6               	movwf	??_USBStdSetCfgHandler^(0+128)
 11943  14DD  0826               	movf	??_USBStdSetCfgHandler^(0+128),w
 11944  14DE  00EE               	movwf	_USBDeviceState^(0+128)
 11945  14DF  0008               	return
 11946  14E0                     __end_of_USBStdSetCfgHandler:	
 11947                           
 11948                           	psect	text43
 11949  1A64                     __ptext43:	
 11950 ;; *************** function _memset *****************
 11951 ;; Defined at:
 11952 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\memset.c"
 11953 ;; Parameters:    Size  Location     Type
 11954 ;;  p1              2    8[BANK0 ] PTR void 
 11955 ;;		 -> USBAlternateInterface(1), BDT(32), 
 11956 ;;  c               2   10[BANK0 ] int 
 11957 ;;  n               2   12[BANK0 ] unsigned int 
 11958 ;; Auto vars:     Size  Location     Type
 11959 ;;  p               2   15[BANK0 ] PTR unsigned char 
 11960 ;;		 -> USBAlternateInterface(1), BDT(32), 
 11961 ;; Return value:  Size  Location     Type
 11962 ;;                  2    8[BANK0 ] PTR void 
 11963 ;; Registers used:
 11964 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11965 ;; Tracked objects:
 11966 ;;		On entry : 0/0
 11967 ;;		On exit  : 0/0
 11968 ;;		Unchanged: 0/0
 11969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11970 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11971 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11972 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11973 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11974 ;;Total ram usage:        9 bytes
 11975 ;; Hardware stack levels used:    1
 11976 ;; Hardware stack levels required when called:    4
 11977 ;; This function calls:
 11978 ;;		Nothing
 11979 ;; This function is called by:
 11980 ;;		_USBStdSetCfgHandler
 11981 ;; This function uses a non-reentrant model
 11982 ;;
 11983                           
 11984                           
 11985                           ;psect for function _memset
 11986  1A64                     _memset:	
 11987                           
 11988                           ;incstack = 0
 11989                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 11990  1A64  0020               	movlb	0	; select bank0
 11991  1A65  0859               	movf	memset@p1+1,w
 11992  1A66  01E0               	clrf	memset@p+1
 11993  1A67  07E0               	addwf	memset@p+1,f
 11994  1A68  0858               	movf	memset@p1,w
 11995  1A69  01DF               	clrf	memset@p
 11996  1A6A  07DF               	addwf	memset@p,f
 11997  1A6B                     l7101:	
 11998  1A6B  3001               	movlw	1
 11999  1A6C  02DC               	subwf	memset@n,f
 12000  1A6D  3000               	movlw	0
 12001  1A6E  3BDD               	subwfb	memset@n+1,f
 12002  1A6F  30FF               	movlw	255
 12003  1A70  065D               	xorwf	memset@n+1,w
 12004  1A71  1D03               	skipz
 12005  1A72  2A75               	goto	u7865
 12006  1A73  30FF               	movlw	255
 12007  1A74  065C               	xorwf	memset@n,w
 12008  1A75                     u7865:	
 12009  1A75  1903               	btfsc	3,2
 12010  1A76  0008               	return
 12011  1A77  085A               	movf	memset@c,w
 12012  1A78  00DE               	movwf	??_memset
 12013  1A79  085F               	movf	memset@p,w
 12014  1A7A  0086               	movwf	6
 12015  1A7B  0860               	movf	memset@p+1,w
 12016  1A7C  0087               	movwf	7
 12017  1A7D  085E               	movf	??_memset,w
 12018  1A7E  0081               	movwf	1
 12019  1A7F  3001               	movlw	1
 12020  1A80  07DF               	addwf	memset@p,f
 12021  1A81  3000               	movlw	0
 12022  1A82  3DE0               	addwfc	memset@p+1,f
 12023  1A83  2A6B               	goto	l7101
 12024  1A84                     __end_of_memset:	
 12025                           ;	Return value of _memset is never used
 12026                           
 12027                           
 12028                           	psect	text44
 12029  10C8                     __ptext44:	
 12030 ;; *************** function _USBCtrlEPServiceComplete *****************
 12031 ;; Defined at:
 12032 ;;		line 1786 in file "../USB/usb_device.c"
 12033 ;; Parameters:    Size  Location     Type
 12034 ;;		None
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;		None
 12037 ;; Return value:  Size  Location     Type
 12038 ;;		None               void
 12039 ;; Registers used:
 12040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12041 ;; Tracked objects:
 12042 ;;		On entry : 0/0
 12043 ;;		On exit  : 0/0
 12044 ;;		Unchanged: 0/0
 12045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12050 ;;Total ram usage:        2 bytes
 12051 ;; Hardware stack levels used:    1
 12052 ;; Hardware stack levels required when called:    6
 12053 ;; This function calls:
 12054 ;;		_USBCtrlEPAllowStatusStage
 12055 ;;		_USBCtrlEPAllowDataStage
 12056 ;; This function is called by:
 12057 ;;		_USBCtrlTrfSetupHandler
 12058 ;; This function uses a non-reentrant model
 12059 ;;
 12060                           
 12061                           
 12062                           ;psect for function _USBCtrlEPServiceComplete
 12063  10C8                     _USBCtrlEPServiceComplete:	
 12064                           
 12065                           ;usb_device.c: 1791: UCONbits.PKTDIS = 0;
 12066                           
 12067                           ;incstack = 0
 12068                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12069  10C8  003D               	movlb	29	; select bank29
 12070  10C9  120E               	bcf	14,4	;volatile
 12071                           
 12072                           ;usb_device.c: 1797: if(inPipes[0].info.bits.busy == 0)
 12073  10CA  0022               	movlb	2	; select bank2
 12074  10CB  1BBC               	btfsc	(_inPipes^(0+256)+2),7
 12075  10CC  2902               	goto	l208
 12076                           
 12077                           ;usb_device.c: 1798: {
 12078                           ;usb_device.c: 1799: if(outPipes[0].info.bits.busy == 1)
 12079  10CD  0023               	movlb	3	; select bank3
 12080  10CE  1FA2               	btfss	(_outPipes^(0+384)+2),7
 12081  10CF  28DF               	goto	l6973
 12082                           
 12083                           ;usb_device.c: 1800: {
 12084                           ;usb_device.c: 1801: controlTransferState = 2;
 12085  10D0  3002               	movlw	2
 12086  10D1  0020               	movlb	0	; select bank0
 12087  10D2  00DD               	movwf	??_USBCtrlEPServiceComplete
 12088  10D3  085D               	movf	??_USBCtrlEPServiceComplete,w
 12089  10D4  00EC               	movwf	_controlTransferState
 12090                           
 12091                           ;usb_device.c: 1812: if(USBDeferOUTDataStagePackets == FALSE)
 12092  10D5  0022               	movlb	2	; select bank2
 12093  10D6  08AD               	movf	_USBDeferOUTDataStagePackets^(0+256),f	;volatile
 12094  10D7  1D03               	skipz
 12095  10D8  28DB               	goto	l6969
 12096                           
 12097                           ;usb_device.c: 1813: {
 12098                           ;usb_device.c: 1814: USBCtrlEPAllowDataStage();
 12099  10D9  319C  24EA         	fcall	_USBCtrlEPAllowDataStage
 12100  10DB                     l6969:	
 12101                           
 12102                           ;usb_device.c: 1815: }
 12103                           ;usb_device.c: 1819: USBStatusStageEnabledFlag2 = FALSE;
 12104  10DB  0022               	movlb	2	; select bank2
 12105  10DC  01B1               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 12106                           
 12107                           ;usb_device.c: 1820: USBStatusStageEnabledFlag1 = FALSE;
 12108  10DD  01B0               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12109                           
 12110                           ;usb_device.c: 1821: }
 12111  10DE  0008               	return
 12112  10DF                     l6973:	
 12113                           
 12114                           ;usb_device.c: 1822: else
 12115                           ;usb_device.c: 1823: {
 12116                           ;usb_device.c: 1828: pBDTEntryEP0OutNext->CNT = 8;
 12117  10DF  3008               	movlw	8
 12118  10E0  0020               	movlb	0	; select bank0
 12119  10E1  00DD               	movwf	??_USBCtrlEPServiceComplete
 12120  10E2  0A6E               	incf	_pBDTEntryEP0OutNext,w
 12121  10E3  0086               	movwf	6
 12122  10E4  0187               	clrf	7
 12123  10E5  085D               	movf	??_USBCtrlEPServiceComplete,w
 12124  10E6  0081               	movwf	1
 12125                           
 12126                           ;usb_device.c: 1829: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12127  10E7  3040               	movlw	64
 12128  10E8  00DD               	movwf	??_USBCtrlEPServiceComplete
 12129  10E9  3000               	movlw	0
 12130  10EA  00DE               	movwf	??_USBCtrlEPServiceComplete+1
 12131  10EB  086E               	movf	_pBDTEntryEP0OutNext,w
 12132  10EC  3E02               	addlw	2
 12133  10ED  0086               	movwf	6
 12134  10EE  0187               	clrf	7
 12135  10EF  085D               	movf	??_USBCtrlEPServiceComplete,w
 12136  10F0  3FC0               	movwi [0]fsr1
 12137  10F1  085E               	movf	??_USBCtrlEPServiceComplete+1,w
 12138  10F2  3FC1               	movwi [1]fsr1
 12139                           
 12140                           ;usb_device.c: 1830: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
 12141  10F3  308C               	movlw	140
 12142  10F4  00DD               	movwf	??_USBCtrlEPServiceComplete
 12143  10F5  086E               	movf	_pBDTEntryEP0OutNext,w
 12144  10F6  0086               	movwf	6
 12145  10F7  0187               	clrf	7
 12146  10F8  085D               	movf	??_USBCtrlEPServiceComplete,w
 12147  10F9  0081               	movwf	1
 12148                           
 12149                           ;usb_device.c: 1831: pBDTEntryIn[0]->STAT.Val = 0x80|0x04;
 12150  10FA  3084               	movlw	132
 12151  10FB  00DD               	movwf	??_USBCtrlEPServiceComplete
 12152  10FC  0868               	movf	_pBDTEntryIn,w
 12153  10FD  0086               	movwf	6
 12154  10FE  0187               	clrf	7
 12155  10FF  085D               	movf	??_USBCtrlEPServiceComplete,w
 12156  1100  0081               	movwf	1
 12157                           
 12158                           ;usb_device.c: 1832: }
 12159                           ;usb_device.c: 1833: }
 12160  1101  0008               	return
 12161  1102                     l208:	
 12162                           
 12163                           ;usb_device.c: 1834: else
 12164                           ;usb_device.c: 1835: {
 12165                           ;usb_device.c: 1836: if(SetupPkt.DataDir == (0x80>>7))
 12166  1102  0020               	movlb	0	; select bank0
 12167  1103  1FC0               	btfss	64,7	;volatile
 12168  1104  2918               	goto	l6989
 12169                           
 12170                           ;usb_device.c: 1837: {
 12171                           ;usb_device.c: 1838: controlTransferState = 1;
 12172  1105  01EC               	clrf	_controlTransferState
 12173  1106  0AEC               	incf	_controlTransferState,f
 12174                           
 12175                           ;usb_device.c: 1852: if(USBDeferINDataStagePackets == FALSE)
 12176  1107  0022               	movlb	2	; select bank2
 12177  1108  08AC               	movf	_USBDeferINDataStagePackets^(0+256),f	;volatile
 12178  1109  1D03               	skipz
 12179  110A  290E               	goto	l6981
 12180                           
 12181                           ;usb_device.c: 1853: {
 12182                           ;usb_device.c: 1854: USBCtrlEPAllowDataStage();
 12183  110B  319C  24EA  3190   	fcall	_USBCtrlEPAllowDataStage
 12184  110E                     l6981:	
 12185                           
 12186                           ;usb_device.c: 1855: }
 12187                           ;usb_device.c: 1877: USBStatusStageEnabledFlag2 = FALSE;
 12188  110E  0022               	movlb	2	; select bank2
 12189  110F  01B1               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 12190                           
 12191                           ;usb_device.c: 1878: USBStatusStageEnabledFlag1 = FALSE;
 12192  1110  01B0               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12193                           
 12194                           ;usb_device.c: 1879: if(USBDeferStatusStagePacket == FALSE)
 12195  1111  0020               	movlb	0	; select bank0
 12196  1112  08EB               	movf	_USBDeferStatusStagePacket,f	;volatile
 12197  1113  1D03               	skipz
 12198  1114  0008               	return
 12199                           
 12200                           ;usb_device.c: 1880: {
 12201                           ;usb_device.c: 1881: USBCtrlEPAllowStatusStage();
 12202  1115  3190  2064         	fcall	_USBCtrlEPAllowStatusStage
 12203                           
 12204                           ;usb_device.c: 1882: }
 12205                           ;usb_device.c: 1883: }
 12206  1117  0008               	return
 12207  1118                     l6989:	
 12208                           
 12209                           ;usb_device.c: 1884: else
 12210                           ;usb_device.c: 1885: {
 12211                           ;usb_device.c: 1896: controlTransferState = 2;
 12212  1118  3002               	movlw	2
 12213  1119  0020               	movlb	0	; select bank0
 12214  111A  00DD               	movwf	??_USBCtrlEPServiceComplete
 12215  111B  085D               	movf	??_USBCtrlEPServiceComplete,w
 12216  111C  00EC               	movwf	_controlTransferState
 12217                           
 12218                           ;usb_device.c: 1899: pBDTEntryEP0OutNext->CNT = 8;
 12219  111D  3008               	movlw	8
 12220  111E  00DD               	movwf	??_USBCtrlEPServiceComplete
 12221  111F  0A6E               	incf	_pBDTEntryEP0OutNext,w
 12222  1120  0086               	movwf	6
 12223  1121  0187               	clrf	7
 12224  1122  085D               	movf	??_USBCtrlEPServiceComplete,w
 12225  1123  0081               	movwf	1
 12226                           
 12227                           ;usb_device.c: 1900: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12228  1124  3040               	movlw	64
 12229  1125  00DD               	movwf	??_USBCtrlEPServiceComplete
 12230  1126  3000               	movlw	0
 12231  1127  00DE               	movwf	??_USBCtrlEPServiceComplete+1
 12232  1128  086E               	movf	_pBDTEntryEP0OutNext,w
 12233  1129  3E02               	addlw	2
 12234  112A  0086               	movwf	6
 12235  112B  0187               	clrf	7
 12236  112C  085D               	movf	??_USBCtrlEPServiceComplete,w
 12237  112D  3FC0               	movwi [0]fsr1
 12238  112E  085E               	movf	??_USBCtrlEPServiceComplete+1,w
 12239  112F  3FC1               	movwi [1]fsr1
 12240                           
 12241                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x04;
 12242  1130  3084               	movlw	132
 12243  1131  00DD               	movwf	??_USBCtrlEPServiceComplete
 12244  1132  086E               	movf	_pBDTEntryEP0OutNext,w
 12245  1133  0086               	movwf	6
 12246  1134  0187               	clrf	7
 12247  1135  085D               	movf	??_USBCtrlEPServiceComplete,w
 12248  1136  0081               	movwf	1
 12249                           
 12250                           ;usb_device.c: 1904: USBStatusStageEnabledFlag2 = FALSE;
 12251  1137  0022               	movlb	2	; select bank2
 12252  1138  01B1               	clrf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 12253                           
 12254                           ;usb_device.c: 1905: USBStatusStageEnabledFlag1 = FALSE;
 12255  1139  01B0               	clrf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12256                           
 12257                           ;usb_device.c: 1906: if(USBDeferStatusStagePacket == FALSE)
 12258  113A  0020               	movlb	0	; select bank0
 12259  113B  08EB               	movf	_USBDeferStatusStagePacket,f	;volatile
 12260  113C  1D03               	skipz
 12261  113D  0008               	return
 12262                           
 12263                           ;usb_device.c: 1907: {
 12264                           ;usb_device.c: 1908: USBCtrlEPAllowStatusStage();
 12265  113E  3190  2064         	fcall	_USBCtrlEPAllowStatusStage
 12266  1140  0008               	return
 12267  1141                     __end_of_USBCtrlEPServiceComplete:	
 12268                           
 12269                           	psect	text45
 12270  1CEA                     __ptext45:	
 12271 ;; *************** function _USBCtrlEPAllowDataStage *****************
 12272 ;; Defined at:
 12273 ;;		line 1660 in file "../USB/usb_device.c"
 12274 ;; Parameters:    Size  Location     Type
 12275 ;;		None
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;		None
 12278 ;; Return value:  Size  Location     Type
 12279 ;;		None               void
 12280 ;; Registers used:
 12281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12282 ;; Tracked objects:
 12283 ;;		On entry : 0/0
 12284 ;;		On exit  : 0/0
 12285 ;;		Unchanged: 0/0
 12286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12289 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12290 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12291 ;;Total ram usage:        2 bytes
 12292 ;; Hardware stack levels used:    1
 12293 ;; Hardware stack levels required when called:    5
 12294 ;; This function calls:
 12295 ;;		_USBCtrlTrfTxService
 12296 ;; This function is called by:
 12297 ;;		_USBCtrlEPServiceComplete
 12298 ;; This function uses a non-reentrant model
 12299 ;;
 12300                           
 12301                           
 12302                           ;psect for function _USBCtrlEPAllowDataStage
 12303  1CEA                     _USBCtrlEPAllowDataStage:	
 12304                           
 12305                           ;usb_device.c: 1661: USBDeferINDataStagePackets = FALSE;
 12306                           
 12307                           ;incstack = 0
 12308                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12309  1CEA  0022               	movlb	2	; select bank2
 12310  1CEB  01AC               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 12311                           
 12312                           ;usb_device.c: 1662: USBDeferOUTDataStagePackets = FALSE;
 12313  1CEC  01AD               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 12314                           
 12315                           ;usb_device.c: 1664: if(controlTransferState == 2)
 12316  1CED  0020               	movlb	0	; select bank0
 12317  1CEE  086C               	movf	_controlTransferState,w
 12318  1CEF  3A02               	xorlw	2
 12319  1CF0  1D03               	skipz
 12320  1CF1  2D0D               	goto	l6907
 12321                           
 12322                           ;usb_device.c: 1665: {
 12323                           ;usb_device.c: 1667: pBDTEntryEP0OutNext->CNT = 8;
 12324  1CF2  3008               	movlw	8
 12325  1CF3  00DB               	movwf	??_USBCtrlEPAllowDataStage
 12326  1CF4  0A6E               	incf	_pBDTEntryEP0OutNext,w
 12327  1CF5  0086               	movwf	6
 12328  1CF6  0187               	clrf	7
 12329  1CF7  085B               	movf	??_USBCtrlEPAllowDataStage,w
 12330  1CF8  0081               	movwf	1
 12331                           
 12332                           ;usb_device.c: 1668: pBDTEntryEP0OutNext->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
 12333  1CF9  3048               	movlw	72
 12334  1CFA  00DB               	movwf	??_USBCtrlEPAllowDataStage
 12335  1CFB  3000               	movlw	0
 12336  1CFC  00DC               	movwf	??_USBCtrlEPAllowDataStage+1
 12337  1CFD  086E               	movf	_pBDTEntryEP0OutNext,w
 12338  1CFE  3E02               	addlw	2
 12339  1CFF  0086               	movwf	6
 12340  1D00  0187               	clrf	7
 12341  1D01  085B               	movf	??_USBCtrlEPAllowDataStage,w
 12342  1D02  3FC0               	movwi [0]fsr1
 12343  1D03  085C               	movf	??_USBCtrlEPAllowDataStage+1,w
 12344  1D04  3FC1               	movwi [1]fsr1
 12345                           
 12346                           ;usb_device.c: 1669: pBDTEntryEP0OutNext->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 12347  1D05  30C8               	movlw	200
 12348  1D06  00DB               	movwf	??_USBCtrlEPAllowDataStage
 12349  1D07  086E               	movf	_pBDTEntryEP0OutNext,w
 12350  1D08  0086               	movwf	6
 12351  1D09  0187               	clrf	7
 12352  1D0A  085B               	movf	??_USBCtrlEPAllowDataStage,w
 12353  1D0B  0081               	movwf	1
 12354                           
 12355                           ;usb_device.c: 1670: }
 12356  1D0C  0008               	return
 12357  1D0D                     l6907:	
 12358                           
 12359                           ;usb_device.c: 1671: else
 12360                           ;usb_device.c: 1672: {
 12361                           ;usb_device.c: 1675: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 12362  1D0D  0022               	movlb	2	; select bank2
 12363  1D0E  083E               	movf	((_inPipes+1)^(0+256)+3),w
 12364  1D0F  0020               	movlb	0	; select bank0
 12365  1D10  0247               	subwf	71,w	;volatile
 12366  1D11  1D03               	skipz
 12367  1D12  2D17               	goto	u7615
 12368  1D13  0022               	movlb	2	; select bank2
 12369  1D14  083D               	movf	(_inPipes^(0+256)+3),w
 12370  1D15  0020               	movlb	0	; select bank0
 12371  1D16  0246               	subwf	70,w	;volatile
 12372  1D17                     u7615:	
 12373  1D17  1803               	skipnc
 12374  1D18  2D22               	goto	l6911
 12375                           
 12376                           ;usb_device.c: 1676: {
 12377                           ;usb_device.c: 1677: inPipes[0].wCount.Val = SetupPkt.wLength;
 12378  1D19  0847               	movf	71,w	;volatile
 12379  1D1A  0022               	movlb	2	; select bank2
 12380  1D1B  01BE               	clrf	((_inPipes+1)^(0+256)+3)
 12381  1D1C  07BE               	addwf	((_inPipes+1)^(0+256)+3),f
 12382  1D1D  0020               	movlb	0	; select bank0
 12383  1D1E  0846               	movf	70,w	;volatile
 12384  1D1F  0022               	movlb	2	; select bank2
 12385  1D20  01BD               	clrf	(_inPipes^(0+256)+3)
 12386  1D21  07BD               	addwf	(_inPipes^(0+256)+3),f
 12387  1D22                     l6911:	
 12388                           
 12389                           ;usb_device.c: 1678: }
 12390                           ;usb_device.c: 1679: USBCtrlTrfTxService();
 12391  1D22  3193  23C3  319C   	fcall	_USBCtrlTrfTxService
 12392                           
 12393                           ;usb_device.c: 1684: pBDTEntryIn[0]->ADR = (((WORD)(&CtrlTrfData))& 0x7FFF);
 12394  1D25  3048               	movlw	72
 12395  1D26  0020               	movlb	0	; select bank0
 12396  1D27  00DB               	movwf	??_USBCtrlEPAllowDataStage
 12397  1D28  3000               	movlw	0
 12398  1D29  00DC               	movwf	??_USBCtrlEPAllowDataStage+1
 12399  1D2A  0868               	movf	_pBDTEntryIn,w
 12400  1D2B  3E02               	addlw	2
 12401  1D2C  0086               	movwf	6
 12402  1D2D  0187               	clrf	7
 12403  1D2E  085B               	movf	??_USBCtrlEPAllowDataStage,w
 12404  1D2F  3FC0               	movwi [0]fsr1
 12405  1D30  085C               	movf	??_USBCtrlEPAllowDataStage+1,w
 12406  1D31  3FC1               	movwi [1]fsr1
 12407                           
 12408                           ;usb_device.c: 1685: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 12409  1D32  30C8               	movlw	200
 12410  1D33  00DB               	movwf	??_USBCtrlEPAllowDataStage
 12411  1D34  0868               	movf	_pBDTEntryIn,w
 12412  1D35  0086               	movwf	6
 12413  1D36  0187               	clrf	7
 12414  1D37  085B               	movf	??_USBCtrlEPAllowDataStage,w
 12415  1D38  0081               	movwf	1
 12416  1D39  0008               	return
 12417  1D3A                     __end_of_USBCtrlEPAllowDataStage:	
 12418                           
 12419                           	psect	text46
 12420  13C3                     __ptext46:	
 12421 ;; *************** function _USBCtrlTrfTxService *****************
 12422 ;; Defined at:
 12423 ;;		line 1938 in file "../USB/usb_device.c"
 12424 ;; Parameters:    Size  Location     Type
 12425 ;;		None
 12426 ;; Auto vars:     Size  Location     Type
 12427 ;;  byteToSend      1   10[BANK0 ] unsigned char 
 12428 ;; Return value:  Size  Location     Type
 12429 ;;		None               void
 12430 ;; Registers used:
 12431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 12432 ;; Tracked objects:
 12433 ;;		On entry : 0/0
 12434 ;;		On exit  : 0/0
 12435 ;;		Unchanged: 0/0
 12436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12438 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12439 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12440 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12441 ;;Total ram usage:        3 bytes
 12442 ;; Hardware stack levels used:    1
 12443 ;; Hardware stack levels required when called:    4
 12444 ;; This function calls:
 12445 ;;		Nothing
 12446 ;; This function is called by:
 12447 ;;		_USBCtrlEPAllowDataStage
 12448 ;;		_USBCtrlTrfInHandler
 12449 ;; This function uses a non-reentrant model
 12450 ;;
 12451                           
 12452                           
 12453                           ;psect for function _USBCtrlTrfTxService
 12454  13C3                     _USBCtrlTrfTxService:	
 12455                           
 12456                           ;usb_device.c: 1939: BYTE byteToSend;
 12457                           ;usb_device.c: 1943: byteToSend = 8;
 12458                           
 12459                           ;incstack = 0
 12460                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 12461  13C3  3008               	movlw	8
 12462  13C4  0020               	movlb	0	; select bank0
 12463  13C5  00D8               	movwf	??_USBCtrlTrfTxService
 12464  13C6  0858               	movf	??_USBCtrlTrfTxService,w
 12465  13C7  00DA               	movwf	USBCtrlTrfTxService@byteToSend
 12466                           
 12467                           ;usb_device.c: 1944: if(inPipes[0].wCount.Val < (BYTE)8)
 12468  13C8  3000               	movlw	0
 12469  13C9  0022               	movlb	2	; select bank2
 12470  13CA  023E               	subwf	((_inPipes+1)^(0+256)+3),w
 12471  13CB  3008               	movlw	8
 12472  13CC  1903               	skipnz
 12473  13CD  023D               	subwf	(_inPipes^(0+256)+3),w
 12474  13CE  1803               	skipnc
 12475  13CF  2BE6               	goto	l6929
 12476                           
 12477                           ;usb_device.c: 1945: {
 12478                           ;usb_device.c: 1946: byteToSend = inPipes[0].wCount.Val;
 12479  13D0  083D               	movf	(_inPipes^(0+256)+3),w
 12480  13D1  0020               	movlb	0	; select bank0
 12481  13D2  00D8               	movwf	??_USBCtrlTrfTxService
 12482  13D3  0858               	movf	??_USBCtrlTrfTxService,w
 12483  13D4  00DA               	movwf	USBCtrlTrfTxService@byteToSend
 12484                           
 12485                           ;usb_device.c: 1953: if(shortPacketStatus == 0)
 12486  13D5  0022               	movlb	2	; select bank2
 12487  13D6  08B9               	movf	_shortPacketStatus^(0+256),f
 12488  13D7  1D03               	skipz
 12489  13D8  2BDC               	goto	l6925
 12490                           
 12491                           ;usb_device.c: 1954: {
 12492                           ;usb_device.c: 1955: shortPacketStatus = 1;
 12493  13D9  01B9               	clrf	_shortPacketStatus^(0+256)
 12494  13DA  0AB9               	incf	_shortPacketStatus^(0+256),f
 12495                           
 12496                           ;usb_device.c: 1956: }
 12497  13DB  2BE6               	goto	l6929
 12498  13DC                     l6925:	
 12499                           
 12500                           ;usb_device.c: 1957: else if(shortPacketStatus == 1)
 12501  13DC  0839               	movf	_shortPacketStatus^(0+256),w
 12502  13DD  3A01               	xorlw	1
 12503  13DE  1D03               	skipz
 12504  13DF  2BE6               	goto	l6929
 12505                           
 12506                           ;usb_device.c: 1958: {
 12507                           ;usb_device.c: 1959: shortPacketStatus = 2;
 12508  13E0  3002               	movlw	2
 12509  13E1  0020               	movlb	0	; select bank0
 12510  13E2  00D8               	movwf	??_USBCtrlTrfTxService
 12511  13E3  0858               	movf	??_USBCtrlTrfTxService,w
 12512  13E4  0022               	movlb	2	; select bank2
 12513  13E5  00B9               	movwf	_shortPacketStatus^(0+256)
 12514  13E6                     l6929:	
 12515                           
 12516                           ;usb_device.c: 1960: }
 12517                           ;usb_device.c: 1961: }
 12518                           ;usb_device.c: 1965: inPipes[0].wCount.Val = inPipes[0].wCount.Val - byteToSend;
 12519  13E6  3003               	movlw	3
 12520  13E7  3E3A               	addlw	_inPipes& (0+255)
 12521  13E8  0086               	movwf	6
 12522  13E9  3001               	movlw	1	; select bank2/3
 12523  13EA  0087               	movwf	7
 12524  13EB  0020               	movlb	0	; select bank0
 12525  13EC  085A               	movf	USBCtrlTrfTxService@byteToSend,w
 12526  13ED  00D8               	movwf	??_USBCtrlTrfTxService
 12527  13EE  01D9               	clrf	??_USBCtrlTrfTxService+1
 12528  13EF  09D8               	comf	??_USBCtrlTrfTxService,f
 12529  13F0  09D9               	comf	??_USBCtrlTrfTxService+1,f
 12530  13F1  0AD8               	incf	??_USBCtrlTrfTxService,f
 12531  13F2  1903               	skipnz
 12532  13F3  0AD9               	incf	??_USBCtrlTrfTxService+1,f
 12533  13F4  3F40               	moviw [0]fsr1
 12534  13F5  0758               	addwf	??_USBCtrlTrfTxService,w
 12535  13F6  0022               	movlb	2	; select bank2
 12536  13F7  00BD               	movwf	(_inPipes^(0+256)+3)
 12537  13F8  3F41               	moviw [1]fsr1
 12538  13F9  0020               	movlb	0	; select bank0
 12539  13FA  3D59               	addwfc	??_USBCtrlTrfTxService+1,w
 12540  13FB  0022               	movlb	2	; select bank2
 12541  13FC  00BE               	movwf	(_inPipes^(0+256)+4)
 12542                           
 12543                           ;usb_device.c: 1970: pBDTEntryIn[0]->CNT = byteToSend;
 12544  13FD  0020               	movlb	0	; select bank0
 12545  13FE  085A               	movf	USBCtrlTrfTxService@byteToSend,w
 12546  13FF  00D8               	movwf	??_USBCtrlTrfTxService
 12547  1400  0A68               	incf	_pBDTEntryIn,w
 12548  1401  0086               	movwf	6
 12549  1402  0187               	clrf	7
 12550  1403  0858               	movf	??_USBCtrlTrfTxService,w
 12551  1404  0081               	movwf	1
 12552                           
 12553                           ;usb_device.c: 1974: pDst = ( BYTE*)CtrlTrfData;
 12554  1405  3048               	movlw	72
 12555  1406  00D8               	movwf	??_USBCtrlTrfTxService
 12556  1407  0858               	movf	??_USBCtrlTrfTxService,w
 12557  1408  0022               	movlb	2	; select bank2
 12558  1409  00B7               	movwf	_pDst^(0+256)
 12559                           
 12560                           ;usb_device.c: 1975: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 12561  140A  1C3C               	btfss	(_inPipes^(0+256)+2),0
 12562  140B  2C2A               	goto	l6947
 12563  140C  2C4C               	goto	l6957
 12564  140D                     l6939:	
 12565                           ;usb_device.c: 1976: {
 12566                           ;usb_device.c: 1977: while(byteToSend)
 12567                           
 12568                           
 12569                           ;usb_device.c: 1978: {
 12570                           ;usb_device.c: 1979: *pDst++ = *inPipes[0].pSrc.bRom++;
 12571  140D  0022               	movlb	2	; select bank2
 12572  140E  083A               	movf	_inPipes^(0+256),w
 12573  140F  0084               	movwf	4
 12574  1410  083B               	movf	(_inPipes+1)^(0+256),w
 12575  1411  0085               	movwf	5
 12576  1412  0800               	movf	0,w	;code access
 12577  1413  0020               	movlb	0	; select bank0
 12578  1414  00D8               	movwf	??_USBCtrlTrfTxService
 12579  1415  0022               	movlb	2	; select bank2
 12580  1416  0837               	movf	_pDst^(0+256),w
 12581  1417  0086               	movwf	6
 12582  1418  0187               	clrf	7
 12583  1419  0020               	movlb	0	; select bank0
 12584  141A  0858               	movf	??_USBCtrlTrfTxService,w
 12585  141B  0081               	movwf	1
 12586  141C  3001               	movlw	1
 12587  141D  0022               	movlb	2	; select bank2
 12588  141E  07BA               	addwf	_inPipes^(0+256),f
 12589  141F  3000               	movlw	0
 12590  1420  3DBB               	addwfc	(_inPipes+1)^(0+256),f
 12591  1421  3001               	movlw	1
 12592  1422  0020               	movlb	0	; select bank0
 12593  1423  00D8               	movwf	??_USBCtrlTrfTxService
 12594  1424  0858               	movf	??_USBCtrlTrfTxService,w
 12595  1425  0022               	movlb	2	; select bank2
 12596  1426  07B7               	addwf	_pDst^(0+256),f
 12597                           
 12598                           ;usb_device.c: 1980: byteToSend--;
 12599  1427  3001               	movlw	1
 12600  1428  0020               	movlb	0	; select bank0
 12601  1429  02DA               	subwf	USBCtrlTrfTxService@byteToSend,f
 12602  142A                     l6947:	
 12603  142A  0020               	movlb	0	; select bank0
 12604  142B  08DA               	movf	USBCtrlTrfTxService@byteToSend,f
 12605  142C  1903               	btfsc	3,2
 12606  142D  0008               	return
 12607  142E  2C0D               	goto	l6939
 12608  142F                     l6949:	
 12609                           ;usb_device.c: 1983: else
 12610                           ;usb_device.c: 1984: {
 12611                           ;usb_device.c: 1985: while(byteToSend)
 12612                           
 12613                           ;usb_device.c: 1981: }
 12614                           ;usb_device.c: 1982: }
 12615                           
 12616                           
 12617                           ;usb_device.c: 1986: {
 12618                           ;usb_device.c: 1987: *pDst++ = *inPipes[0].pSrc.bRam++;
 12619  142F  0022               	movlb	2	; select bank2
 12620  1430  083A               	movf	_inPipes^(0+256),w
 12621  1431  0084               	movwf	4
 12622  1432  083B               	movf	(_inPipes+1)^(0+256),w
 12623  1433  0085               	movwf	5
 12624  1434  0800               	movf	0,w	;code access
 12625  1435  0020               	movlb	0	; select bank0
 12626  1436  00D8               	movwf	??_USBCtrlTrfTxService
 12627  1437  0022               	movlb	2	; select bank2
 12628  1438  0837               	movf	_pDst^(0+256),w
 12629  1439  0086               	movwf	6
 12630  143A  0187               	clrf	7
 12631  143B  0020               	movlb	0	; select bank0
 12632  143C  0858               	movf	??_USBCtrlTrfTxService,w
 12633  143D  0081               	movwf	1
 12634  143E  3001               	movlw	1
 12635  143F  0022               	movlb	2	; select bank2
 12636  1440  07BA               	addwf	_inPipes^(0+256),f
 12637  1441  3000               	movlw	0
 12638  1442  3DBB               	addwfc	(_inPipes+1)^(0+256),f
 12639  1443  3001               	movlw	1
 12640  1444  0020               	movlb	0	; select bank0
 12641  1445  00D8               	movwf	??_USBCtrlTrfTxService
 12642  1446  0858               	movf	??_USBCtrlTrfTxService,w
 12643  1447  0022               	movlb	2	; select bank2
 12644  1448  07B7               	addwf	_pDst^(0+256),f
 12645                           
 12646                           ;usb_device.c: 1988: byteToSend--;
 12647  1449  3001               	movlw	1
 12648  144A  0020               	movlb	0	; select bank0
 12649  144B  02DA               	subwf	USBCtrlTrfTxService@byteToSend,f
 12650  144C                     l6957:	
 12651  144C  0020               	movlb	0	; select bank0
 12652  144D  08DA               	movf	USBCtrlTrfTxService@byteToSend,f
 12653  144E  1903               	btfsc	3,2
 12654  144F  0008               	return
 12655  1450  2C2F               	goto	l6949
 12656  1451                     __end_of_USBCtrlTrfTxService:	
 12657                           
 12658                           	psect	text47
 12659  1064                     __ptext47:	
 12660 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 12661 ;; Defined at:
 12662 ;;		line 1590 in file "../USB/usb_device.c"
 12663 ;; Parameters:    Size  Location     Type
 12664 ;;		None
 12665 ;; Auto vars:     Size  Location     Type
 12666 ;;		None
 12667 ;; Return value:  Size  Location     Type
 12668 ;;		None               void
 12669 ;; Registers used:
 12670 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12671 ;; Tracked objects:
 12672 ;;		On entry : 0/0
 12673 ;;		On exit  : 0/0
 12674 ;;		Unchanged: 0/0
 12675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12678 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12679 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12680 ;;Total ram usage:        2 bytes
 12681 ;; Hardware stack levels used:    1
 12682 ;; Hardware stack levels required when called:    4
 12683 ;; This function calls:
 12684 ;;		Nothing
 12685 ;; This function is called by:
 12686 ;;		_USBDeviceTasks
 12687 ;;		_USBCtrlEPServiceComplete
 12688 ;;		_USBCtrlTrfRxService
 12689 ;; This function uses a non-reentrant model
 12690 ;;
 12691                           
 12692                           
 12693                           ;psect for function _USBCtrlEPAllowStatusStage
 12694  1064                     _USBCtrlEPAllowStatusStage:	
 12695                           
 12696                           ;usb_device.c: 1596: if(USBStatusStageEnabledFlag1 == FALSE)
 12697                           
 12698                           ;incstack = 0
 12699                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
 12700  1064  0022               	movlb	2	; select bank2
 12701  1065  08B0               	movf	_USBStatusStageEnabledFlag1^(0+256),f	;volatile
 12702  1066  1D03               	skipz
 12703  1067  0008               	return
 12704                           
 12705                           ;usb_device.c: 1597: {
 12706                           ;usb_device.c: 1598: USBStatusStageEnabledFlag1 = TRUE;
 12707  1068  3001               	movlw	1
 12708  1069  0020               	movlb	0	; select bank0
 12709  106A  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12710  106B  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12711  106C  0022               	movlb	2	; select bank2
 12712  106D  00B0               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 12713                           
 12714                           ;usb_device.c: 1599: if(USBStatusStageEnabledFlag2 == FALSE)
 12715  106E  08B1               	movf	_USBStatusStageEnabledFlag2^(0+256),f	;volatile
 12716  106F  1D03               	skipz
 12717  1070  0008               	return
 12718                           
 12719                           ;usb_device.c: 1600: {
 12720                           ;usb_device.c: 1601: USBStatusStageEnabledFlag2 = TRUE;
 12721  1071  3001               	movlw	1
 12722  1072  0020               	movlb	0	; select bank0
 12723  1073  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12724  1074  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12725  1075  0022               	movlb	2	; select bank2
 12726  1076  00B1               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 12727                           
 12728                           ;usb_device.c: 1605: if(controlTransferState == 2)
 12729  1077  0020               	movlb	0	; select bank0
 12730  1078  086C               	movf	_controlTransferState,w
 12731  1079  3A02               	xorlw	2
 12732  107A  1D03               	skipz
 12733  107B  2888               	goto	l6793
 12734                           
 12735                           ;usb_device.c: 1606: {
 12736                           ;usb_device.c: 1607: pBDTEntryIn[0]->CNT = 0;
 12737  107C  0A68               	incf	_pBDTEntryIn,w
 12738  107D  0086               	movwf	6
 12739  107E  0187               	clrf	7
 12740  107F  0181               	clrf	1
 12741                           
 12742                           ;usb_device.c: 1608: pBDTEntryIn[0]->STAT.Val = 0x80|0x40|(0x08 & 0x08);
 12743  1080  30C8               	movlw	200
 12744  1081  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12745  1082  0868               	movf	_pBDTEntryIn,w
 12746  1083  0086               	movwf	6
 12747  1084  0187               	clrf	7
 12748  1085  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12749  1086  0081               	movwf	1
 12750                           
 12751                           ;usb_device.c: 1609: }
 12752  1087  0008               	return
 12753  1088                     l6793:	
 12754                           
 12755                           ;usb_device.c: 1610: else if(controlTransferState == 1)
 12756  1088  086C               	movf	_controlTransferState,w
 12757  1089  3A01               	xorlw	1
 12758  108A  1D03               	skipz
 12759  108B  0008               	return
 12760                           
 12761                           ;usb_device.c: 1611: {
 12762                           ;usb_device.c: 1612: BothEP0OutUOWNsSet = FALSE;
 12763  108C  0023               	movlb	3	; select bank3
 12764  108D  01B2               	clrf	_BothEP0OutUOWNsSet^(0+384)
 12765                           
 12766                           ;usb_device.c: 1617: pBDTEntryEP0OutCurrent->CNT = 8;
 12767  108E  3008               	movlw	8
 12768  108F  0020               	movlb	0	; select bank0
 12769  1090  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12770  1091  0A6D               	incf	_pBDTEntryEP0OutCurrent,w
 12771  1092  0086               	movwf	6
 12772  1093  0187               	clrf	7
 12773  1094  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12774  1095  0081               	movwf	1
 12775                           
 12776                           ;usb_device.c: 1618: pBDTEntryEP0OutCurrent->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12777  1096  3040               	movlw	64
 12778  1097  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12779  1098  3000               	movlw	0
 12780  1099  00D9               	movwf	??_USBCtrlEPAllowStatusStage+1
 12781  109A  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12782  109B  3E02               	addlw	2
 12783  109C  0086               	movwf	6
 12784  109D  0187               	clrf	7
 12785  109E  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12786  109F  3FC0               	movwi [0]fsr1
 12787  10A0  0859               	movf	??_USBCtrlEPAllowStatusStage+1,w
 12788  10A1  3FC1               	movwi [1]fsr1
 12789                           
 12790                           ;usb_device.c: 1619: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x04;
 12791  10A2  3084               	movlw	132
 12792  10A3  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12793  10A4  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12794  10A5  0086               	movwf	6
 12795  10A6  0187               	clrf	7
 12796  10A7  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12797  10A8  0081               	movwf	1
 12798                           
 12799                           ;usb_device.c: 1620: BothEP0OutUOWNsSet = TRUE;
 12800  10A9  0023               	movlb	3	; select bank3
 12801  10AA  01B2               	clrf	_BothEP0OutUOWNsSet^(0+384)
 12802  10AB  0AB2               	incf	_BothEP0OutUOWNsSet^(0+384),f
 12803                           
 12804                           ;usb_device.c: 1624: pBDTEntryEP0OutNext->CNT = 8;
 12805  10AC  3008               	movlw	8
 12806  10AD  0020               	movlb	0	; select bank0
 12807  10AE  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12808  10AF  0A6E               	incf	_pBDTEntryEP0OutNext,w
 12809  10B0  0086               	movwf	6
 12810  10B1  0187               	clrf	7
 12811  10B2  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12812  10B3  0081               	movwf	1
 12813                           
 12814                           ;usb_device.c: 1625: pBDTEntryEP0OutNext->ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 12815  10B4  3040               	movlw	64
 12816  10B5  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12817  10B6  3000               	movlw	0
 12818  10B7  00D9               	movwf	??_USBCtrlEPAllowStatusStage+1
 12819  10B8  086E               	movf	_pBDTEntryEP0OutNext,w
 12820  10B9  3E02               	addlw	2
 12821  10BA  0086               	movwf	6
 12822  10BB  0187               	clrf	7
 12823  10BC  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12824  10BD  3FC0               	movwi [0]fsr1
 12825  10BE  0859               	movf	??_USBCtrlEPAllowStatusStage+1,w
 12826  10BF  3FC1               	movwi [1]fsr1
 12827                           
 12828                           ;usb_device.c: 1626: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 12829  10C0  3080               	movlw	128
 12830  10C1  00D8               	movwf	??_USBCtrlEPAllowStatusStage
 12831  10C2  086E               	movf	_pBDTEntryEP0OutNext,w
 12832  10C3  0086               	movwf	6
 12833  10C4  0187               	clrf	7
 12834  10C5  0858               	movf	??_USBCtrlEPAllowStatusStage,w
 12835  10C6  0081               	movwf	1
 12836  10C7  0008               	return
 12837  10C8                     __end_of_USBCtrlEPAllowStatusStage:	
 12838                           
 12839                           	psect	text48
 12840  1AC5                     __ptext48:	
 12841 ;; *************** function _USBStallHandler *****************
 12842 ;; Defined at:
 12843 ;;		line 2356 in file "../USB/usb_device.c"
 12844 ;; Parameters:    Size  Location     Type
 12845 ;;		None
 12846 ;; Auto vars:     Size  Location     Type
 12847 ;;		None
 12848 ;; Return value:  Size  Location     Type
 12849 ;;		None               void
 12850 ;; Registers used:
 12851 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12852 ;; Tracked objects:
 12853 ;;		On entry : 0/0
 12854 ;;		On exit  : 0/0
 12855 ;;		Unchanged: 0/0
 12856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12859 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12860 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12861 ;;Total ram usage:        1 bytes
 12862 ;; Hardware stack levels used:    1
 12863 ;; Hardware stack levels required when called:    4
 12864 ;; This function calls:
 12865 ;;		Nothing
 12866 ;; This function is called by:
 12867 ;;		_USBDeviceTasks
 12868 ;; This function uses a non-reentrant model
 12869 ;;
 12870                           
 12871                           
 12872                           ;psect for function _USBStallHandler
 12873  1AC5                     _USBStallHandler:	
 12874                           
 12875                           ;usb_device.c: 2368: if(UEP0bits.EPSTALL == 1)
 12876                           
 12877                           ;incstack = 0
 12878                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 12879  1AC5  003D               	movlb	29	; select bank29
 12880  1AC6  1C18               	btfss	24,0	;volatile
 12881  1AC7  2AE0               	goto	l4667
 12882                           
 12883                           ;usb_device.c: 2369: {
 12884                           ;usb_device.c: 2371: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 12885  1AC8  0020               	movlb	0	; select bank0
 12886  1AC9  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12887  1ACA  0086               	movwf	6
 12888  1ACB  0187               	clrf	7
 12889  1ACC  0801               	movf	1,w
 12890  1ACD  3A80               	xorlw	128
 12891  1ACE  1D03               	skipz
 12892  1ACF  2ADE               	goto	l4665
 12893  1AD0  0868               	movf	_pBDTEntryIn,w
 12894  1AD1  0086               	movwf	6
 12895  1AD2  0187               	clrf	7
 12896  1AD3  0801               	movf	1,w
 12897  1AD4  3A84               	xorlw	132
 12898  1AD5  1D03               	skipz
 12899  1AD6  2ADE               	goto	l4665
 12900                           
 12901                           ;usb_device.c: 2372: {
 12902                           ;usb_device.c: 2374: pBDTEntryEP0OutCurrent->STAT.Val = 0x80|0x00|(0x08 & 0x08)|0x04;
 12903  1AD7  308C               	movlw	140
 12904  1AD8  00D8               	movwf	??_USBStallHandler
 12905  1AD9  086D               	movf	_pBDTEntryEP0OutCurrent,w
 12906  1ADA  0086               	movwf	6
 12907  1ADB  0187               	clrf	7
 12908  1ADC  0858               	movf	??_USBStallHandler,w
 12909  1ADD  0081               	movwf	1
 12910  1ADE                     l4665:	
 12911                           
 12912                           ;usb_device.c: 2375: }
 12913                           ;usb_device.c: 2376: UEP0bits.EPSTALL = 0;
 12914  1ADE  003D               	movlb	29	; select bank29
 12915  1ADF  1018               	bcf	24,0	;volatile
 12916  1AE0                     l4667:	
 12917                           
 12918                           ;usb_device.c: 2377: }
 12919                           ;usb_device.c: 2379: (UIR &= 0xDF);
 12920  1AE0  30DF               	movlw	223
 12921  1AE1  0020               	movlb	0	; select bank0
 12922  1AE2  00D8               	movwf	??_USBStallHandler
 12923  1AE3  0858               	movf	??_USBStallHandler,w
 12924  1AE4  003D               	movlb	29	; select bank29
 12925  1AE5  0590               	andwf	16,f	;volatile
 12926  1AE6  0008               	return
 12927  1AE7                     __end_of_USBStallHandler:	
 12928                           
 12929                           	psect	text49
 12930  19EE                     __ptext49:	
 12931 ;; *************** function _USBSuspend *****************
 12932 ;; Defined at:
 12933 ;;		line 2399 in file "../USB/usb_device.c"
 12934 ;; Parameters:    Size  Location     Type
 12935 ;;		None
 12936 ;; Auto vars:     Size  Location     Type
 12937 ;;		None
 12938 ;; Return value:  Size  Location     Type
 12939 ;;		None               void
 12940 ;; Registers used:
 12941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 12942 ;; Tracked objects:
 12943 ;;		On entry : 0/0
 12944 ;;		On exit  : 0/0
 12945 ;;		Unchanged: 0/0
 12946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12949 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12950 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12951 ;;Total ram usage:        1 bytes
 12952 ;; Hardware stack levels used:    1
 12953 ;; Hardware stack levels required when called:    8
 12954 ;; This function calls:
 12955 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12956 ;; This function is called by:
 12957 ;;		_USBDeviceTasks
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           
 12962                           ;psect for function _USBSuspend
 12963  19EE                     _USBSuspend:	
 12964                           
 12965                           ;usb_device.c: 2423: UIEbits.ACTVIE = 1;
 12966                           
 12967                           ;incstack = 0
 12968                           ; Regs used in _USBSuspend: [allreg]
 12969  19EE  003D               	movlb	29	; select bank29
 12970  19EF  1512               	bsf	18,2	;volatile
 12971                           
 12972                           ;usb_device.c: 2424: (UIR &= 0xEF);
 12973  19F0  30EF               	movlw	239
 12974  19F1  0021               	movlb	1	; select bank1
 12975  19F2  00A6               	movwf	??_USBSuspend^(0+128)
 12976  19F3  0826               	movf	??_USBSuspend^(0+128),w
 12977  19F4  003D               	movlb	29	; select bank29
 12978  19F5  0590               	andwf	16,f	;volatile
 12979                           
 12980                           ;usb_device.c: 2427: UCONbits.SUSPND = 1;
 12981  19F6  148E               	bsf	14,1	;volatile
 12982                           
 12983                           ;usb_device.c: 2430: USBBusIsSuspended = TRUE;
 12984  19F7  0023               	movlb	3	; select bank3
 12985  19F8  01B8               	clrf	_USBBusIsSuspended^(0+384)
 12986  19F9  0AB8               	incf	_USBBusIsSuspended^(0+384),f
 12987                           
 12988                           ;usb_device.c: 2437: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12989  19FA  3075               	movlw	117
 12990  19FB  0021               	movlb	1	; select bank1
 12991  19FC  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 12992  19FD  3000               	movlw	0
 12993  19FE  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 12994  19FF  3000               	movlw	0
 12995  1A00  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 12996  1A01  3000               	movlw	0
 12997  1A02  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 12998  1A03  3000               	movlw	0
 12999  1A04  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 13000  1A05  3000               	movlw	0
 13001  1A06  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 13002  1A07  319C  2423         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 13003  1A09  0008               	return
 13004  1A0A                     __end_of_USBSuspend:	
 13005                           
 13006                           	psect	text50
 13007  19B7                     __ptext50:	
 13008 ;; *************** function _USBWakeFromSuspend *****************
 13009 ;; Defined at:
 13010 ;;		line 2456 in file "../USB/usb_device.c"
 13011 ;; Parameters:    Size  Location     Type
 13012 ;;		None
 13013 ;; Auto vars:     Size  Location     Type
 13014 ;;		None
 13015 ;; Return value:  Size  Location     Type
 13016 ;;		None               void
 13017 ;; Registers used:
 13018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 13019 ;; Tracked objects:
 13020 ;;		On entry : 0/0
 13021 ;;		On exit  : 0/0
 13022 ;;		Unchanged: 0/0
 13023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13026 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13027 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13028 ;;Total ram usage:        1 bytes
 13029 ;; Hardware stack levels used:    1
 13030 ;; Hardware stack levels required when called:    8
 13031 ;; This function calls:
 13032 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13033 ;; This function is called by:
 13034 ;;		_USBDeviceTasks
 13035 ;; This function uses a non-reentrant model
 13036 ;;
 13037                           
 13038                           
 13039                           ;psect for function _USBWakeFromSuspend
 13040  19B7                     _USBWakeFromSuspend:	
 13041                           
 13042                           ;usb_device.c: 2457: USBBusIsSuspended = FALSE;
 13043                           
 13044                           ;incstack = 0
 13045                           ; Regs used in _USBWakeFromSuspend: [allreg]
 13046  19B7  0023               	movlb	3	; select bank3
 13047  19B8  01B8               	clrf	_USBBusIsSuspended^(0+384)
 13048                           
 13049                           ;usb_device.c: 2463: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 13050  19B9  3074               	movlw	116
 13051  19BA  0021               	movlb	1	; select bank1
 13052  19BB  00A0               	movwf	?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)
 13053  19BC  3000               	movlw	0
 13054  19BD  00A1               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+1)
 13055  19BE  3000               	movlw	0
 13056  19BF  00A2               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+2)^(0+128)
 13057  19C0  3000               	movlw	0
 13058  19C1  00A3               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER+3)^(0+128)
 13059  19C2  3000               	movlw	0
 13060  19C3  00A4               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+4)
 13061  19C4  3000               	movlw	0
 13062  19C5  00A5               	movwf	(?_USER_USB_CALLBACK_EVENT_HANDLER^(0+128)+5)
 13063  19C6  319C  2423         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 13064                           
 13065                           ;usb_device.c: 2470: UCONbits.SUSPND = 0;
 13066  19C8  003D               	movlb	29	; select bank29
 13067  19C9  108E               	bcf	14,1	;volatile
 13068                           
 13069                           ;usb_device.c: 2475: UIEbits.ACTVIE = 0;
 13070  19CA  1112               	bcf	18,2	;volatile
 13071                           
 13072                           ;usb_device.c: 2495: {
 13073                           ;usb_device.c: 2496: (UIR &= 0xFB);
 13074  19CB  30FB               	movlw	251
 13075  19CC  0021               	movlb	1	; select bank1
 13076  19CD  00A6               	movwf	??_USBWakeFromSuspend^(0+128)
 13077  19CE  0826               	movf	??_USBWakeFromSuspend^(0+128),w
 13078  19CF  003D               	movlb	29	; select bank29
 13079  19D0  0590               	andwf	16,f	;volatile
 13080  19D1  0008               	return
 13081  19D2                     __end_of_USBWakeFromSuspend:	
 13082                           
 13083                           	psect	text51
 13084  1C23                     __ptext51:	
 13085 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 13086 ;; Defined at:
 13087 ;;		line 630 in file "main.c"
 13088 ;; Parameters:    Size  Location     Type
 13089 ;;  event           2    0[BANK1 ] int 
 13090 ;;  pdata           2    2[BANK1 ] PTR void 
 13091 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(32), 
 13092 ;;  size            2    4[BANK1 ] unsigned short 
 13093 ;; Auto vars:     Size  Location     Type
 13094 ;;		None
 13095 ;; Return value:  Size  Location     Type
 13096 ;;                  1    wreg      enum E5
 13097 ;; Registers used:
 13098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13099 ;; Tracked objects:
 13100 ;;		On entry : 0/0
 13101 ;;		On exit  : 0/0
 13102 ;;		Unchanged: 0/0
 13103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13104 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13107 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13108 ;;Total ram usage:        6 bytes
 13109 ;; Hardware stack levels used:    1
 13110 ;; Hardware stack levels required when called:    7
 13111 ;; This function calls:
 13112 ;;		_USBCBSuspend
 13113 ;;		_USBCBWakeFromSuspend
 13114 ;;		_USBCB_SOF_Handler
 13115 ;;		_USBCBErrorHandler
 13116 ;;		_USBCBCheckOtherReq
 13117 ;;		_USBCBStdSetDscHandler
 13118 ;;		_USBCBInitEP
 13119 ;; This function is called by:
 13120 ;;		_USBDeviceTasks
 13121 ;;		_USBStdSetCfgHandler
 13122 ;;		_USBSuspend
 13123 ;;		_USBWakeFromSuspend
 13124 ;;		_USBCtrlTrfSetupHandler
 13125 ;;		_USBCheckStdRequest
 13126 ;;		_USBStdFeatureReqHandler
 13127 ;; This function uses a non-reentrant model
 13128 ;;
 13129                           
 13130                           
 13131                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
 13132  1C23                     _USER_USB_CALLBACK_EVENT_HANDLER:	
 13133                           
 13134                           ;main.c: 631: switch( event )
 13135                           
 13136                           ;incstack = 0
 13137                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 13138  1C23  2C39               	goto	l6771
 13139  1C24                     l6755:	
 13140                           ;main.c: 636: case EVENT_SOF:
 13141                           
 13142                           ;main.c: 635: break;
 13143                           
 13144                           ;main.c: 632: {
 13145                           ;main.c: 633: case EVENT_TRANSFER:
 13146                           
 13147                           
 13148                           ;main.c: 637: USBCB_SOF_Handler();
 13149  1C24  3190  2000         	fcall	_USBCB_SOF_Handler
 13150                           
 13151                           ;main.c: 638: break;
 13152  1C26  0008               	return
 13153  1C27                     l6757:	
 13154                           ;main.c: 639: case EVENT_SUSPEND:
 13155                           
 13156                           
 13157                           ;main.c: 640: USBCBSuspend();
 13158  1C27  3198  20F3         	fcall	_USBCBSuspend
 13159                           
 13160                           ;main.c: 641: break;
 13161  1C29  0008               	return
 13162  1C2A                     l6759:	
 13163                           ;main.c: 642: case EVENT_RESUME:
 13164                           
 13165                           
 13166                           ;main.c: 643: USBCBWakeFromSuspend();
 13167  1C2A  3198  20F4         	fcall	_USBCBWakeFromSuspend
 13168                           
 13169                           ;main.c: 644: break;
 13170  1C2C  0008               	return
 13171  1C2D                     l6761:	
 13172                           ;main.c: 645: case EVENT_CONFIGURED:
 13173                           
 13174                           
 13175                           ;main.c: 646: USBCBInitEP();
 13176  1C2D  3199  21D2         	fcall	_USBCBInitEP
 13177                           
 13178                           ;main.c: 647: break;
 13179  1C2F  0008               	return
 13180  1C30                     l6763:	
 13181                           ;main.c: 648: case EVENT_SET_DESCRIPTOR:
 13182                           
 13183                           
 13184                           ;main.c: 649: USBCBStdSetDscHandler();
 13185  1C30  3187  27FF         	fcall	_USBCBStdSetDscHandler
 13186                           
 13187                           ;main.c: 650: break;
 13188  1C32  0008               	return
 13189  1C33                     l6765:	
 13190                           ;main.c: 651: case EVENT_EP0_REQUEST:
 13191                           
 13192                           
 13193                           ;main.c: 652: USBCBCheckOtherReq();
 13194  1C33  3187  27FC         	fcall	_USBCBCheckOtherReq
 13195                           
 13196                           ;main.c: 653: break;
 13197  1C35  0008               	return
 13198  1C36                     l6767:	
 13199                           ;main.c: 654: case EVENT_BUS_ERROR:
 13200                           
 13201                           
 13202                           ;main.c: 655: USBCBErrorHandler();
 13203  1C36  3180  2002         	fcall	_USBCBErrorHandler
 13204                           
 13205                           ;main.c: 669: }
 13206                           
 13207                           ;main.c: 668: break;
 13208                           
 13209                           ;main.c: 667: default:
 13210                           
 13211                           ;main.c: 666: break;
 13212                           
 13213                           ;main.c: 657: case EVENT_TRANSFER_TERMINATED:
 13214                           
 13215                           ;main.c: 656: break;
 13216  1C38  0008               	return
 13217  1C39                     l6771:	
 13218                           
 13219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 13220                           ; Switch size 1, requested type "space"
 13221                           ; Number of cases is 2, Range of values is 0 to 127
 13222                           ; switch strategies available:
 13223                           ; Name         Instructions Cycles
 13224                           ; simple_byte            7     4 (average)
 13225                           ; direct_byte          262     6 (fixed)
 13226                           ; jumptable            260     6 (fixed)
 13227                           ;	Chosen strategy is simple_byte
 13228  1C39  0021               	movlb	1	; select bank1
 13229  1C3A  0821               	movf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^(0+128),w
 13230  1C3B  3A00               	xorlw	0	; case 0
 13231  1C3C  1903               	skipnz
 13232  1C3D  2C42               	goto	l8033
 13233  1C3E  3A7F               	xorlw	127	; case 127
 13234  1C3F  1903               	skipnz
 13235  1C40  2C5C               	goto	l8035
 13236  1C41  2C61               	goto	l910
 13237  1C42                     l8033:	
 13238                           
 13239                           ; Switch size 1, requested type "space"
 13240                           ; Number of cases is 8, Range of values is 1 to 117
 13241                           ; switch strategies available:
 13242                           ; Name         Instructions Cycles
 13243                           ; simple_byte           25    13 (average)
 13244                           ; direct_byte          243     9 (fixed)
 13245                           ; jumptable            263     9 (fixed)
 13246                           ;	Chosen strategy is simple_byte
 13247  1C42  0820               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 13248  1C43  3A01               	xorlw	1	; case 1
 13249  1C44  1903               	skipnz
 13250  1C45  2C2D               	goto	l6761
 13251  1C46  3A03               	xorlw	3	; case 2
 13252  1C47  1903               	skipnz
 13253  1C48  2C30               	goto	l6763
 13254  1C49  3A01               	xorlw	1	; case 3
 13255  1C4A  1903               	skipnz
 13256  1C4B  2C33               	goto	l6765
 13257  1C4C  3A06               	xorlw	6	; case 5
 13258  1C4D  1903               	skipnz
 13259  1C4E  2C61               	goto	l910
 13260  1C4F  3A77               	xorlw	119	; case 114
 13261  1C50  1903               	skipnz
 13262  1C51  2C61               	goto	l910
 13263  1C52  3A01               	xorlw	1	; case 115
 13264  1C53  1903               	skipnz
 13265  1C54  2C24               	goto	l6755
 13266  1C55  3A07               	xorlw	7	; case 116
 13267  1C56  1903               	skipnz
 13268  1C57  2C2A               	goto	l6759
 13269  1C58  3A01               	xorlw	1	; case 117
 13270  1C59  1903               	skipnz
 13271  1C5A  2C27               	goto	l6757
 13272  1C5B  2C61               	goto	l910
 13273  1C5C                     l8035:	
 13274                           
 13275                           ; Switch size 1, requested type "space"
 13276                           ; Number of cases is 1, Range of values is 255 to 255
 13277                           ; switch strategies available:
 13278                           ; Name         Instructions Cycles
 13279                           ; simple_byte            4     3 (average)
 13280                           ; direct_byte            7     5 (fixed)
 13281                           ; jumptable            263     9 (fixed)
 13282                           ;	Chosen strategy is simple_byte
 13283  1C5C  0820               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event^(0+128),w
 13284  1C5D  3AFF               	xorlw	255	; case 255
 13285  1C5E  1903               	skipnz
 13286  1C5F  2C36               	goto	l6767
 13287  1C60  2C61               	goto	l910
 13288  1C61                     l910:	
 13289                           ;main.c: 670: return TRUE;
 13290                           ;	Return value of _USER_USB_CALLBACK_EVENT_HANDLER is never used
 13291                           
 13292  1C61  0008               	return
 13293  1C62                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
 13294                           
 13295                           	psect	text52
 13296  19D2                     __ptext52:	
 13297 ;; *************** function _USBCBInitEP *****************
 13298 ;; Defined at:
 13299 ;;		line 460 in file "main.c"
 13300 ;; Parameters:    Size  Location     Type
 13301 ;;		None
 13302 ;; Auto vars:     Size  Location     Type
 13303 ;;		None
 13304 ;; Return value:  Size  Location     Type
 13305 ;;		None               void
 13306 ;; Registers used:
 13307 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13308 ;; Tracked objects:
 13309 ;;		On entry : 0/0
 13310 ;;		On exit  : 0/0
 13311 ;;		Unchanged: 0/0
 13312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13315 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13316 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13317 ;;Total ram usage:        3 bytes
 13318 ;; Hardware stack levels used:    1
 13319 ;; Hardware stack levels required when called:    6
 13320 ;; This function calls:
 13321 ;;		_USBEnableEndpoint
 13322 ;;		_USBTransferOnePacket
 13323 ;; This function is called by:
 13324 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13325 ;; This function uses a non-reentrant model
 13326 ;;
 13327                           
 13328                           
 13329                           ;psect for function _USBCBInitEP
 13330  19D2                     _USBCBInitEP:	
 13331                           
 13332                           ;main.c: 462: USBEnableEndpoint(1,0x04|0x02|0x10|0x08);
 13333                           
 13334                           ;incstack = 0
 13335                           ; Regs used in _USBCBInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13336  19D2  301E               	movlw	30
 13337  19D3  0020               	movlb	0	; select bank0
 13338  19D4  00E5               	movwf	??_USBCBInitEP
 13339  19D5  0865               	movf	??_USBCBInitEP,w
 13340  19D6  00DF               	movwf	?_USBEnableEndpoint
 13341  19D7  3001               	movlw	1
 13342  19D8  319B  2309  3199   	fcall	_USBEnableEndpoint
 13343                           
 13344                           ;main.c: 464: USBGenericOutHandle = USBTransferOnePacket(1,0,(BYTE*)&OUTPacket,64);
 13345  19DB  0020               	movlb	0	; select bank0
 13346  19DC  01DC               	clrf	?_USBTransferOnePacket
 13347  19DD  30A0               	movlw	160
 13348  19DE  00E5               	movwf	??_USBCBInitEP
 13349  19DF  0865               	movf	??_USBCBInitEP,w
 13350  19E0  00DD               	movwf	?_USBTransferOnePacket+1
 13351  19E1  3040               	movlw	64
 13352  19E2  00E6               	movwf	??_USBCBInitEP+1
 13353  19E3  0866               	movf	??_USBCBInitEP+1,w
 13354  19E4  00DE               	movwf	?_USBTransferOnePacket+2
 13355  19E5  3001               	movlw	1
 13356  19E6  3188  20AF         	fcall	_USBTransferOnePacket
 13357  19E8  0020               	movlb	0	; select bank0
 13358  19E9  00E7               	movwf	??_USBCBInitEP+2
 13359  19EA  0867               	movf	??_USBCBInitEP+2,w
 13360  19EB  0022               	movlb	2	; select bank2
 13361  19EC  00AF               	movwf	_USBGenericOutHandle^(0+256)
 13362  19ED  0008               	return
 13363  19EE                     __end_of_USBCBInitEP:	
 13364                           
 13365                           	psect	text53
 13366  08AF                     __ptext53:	
 13367 ;; *************** function _USBTransferOnePacket *****************
 13368 ;; Defined at:
 13369 ;;		line 1173 in file "../USB/usb_device.c"
 13370 ;; Parameters:    Size  Location     Type
 13371 ;;  ep              1    wreg     unsigned char 
 13372 ;;  dir             1   12[BANK0 ] unsigned char 
 13373 ;;  data            1   13[BANK0 ] PTR unsigned char 
 13374 ;;		 -> INPacket(64), OUTPacket(64), 
 13375 ;;  len             1   14[BANK0 ] unsigned char 
 13376 ;; Auto vars:     Size  Location     Type
 13377 ;;  ep              1   17[BANK0 ] unsigned char 
 13378 ;;  handle          1   18[BANK0 ] PTR volatile struct __BD
 13379 ;;		 -> NULL(0), BDT(32), 
 13380 ;; Return value:  Size  Location     Type
 13381 ;;                  1    wreg      PTR void 
 13382 ;; Registers used:
 13383 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13384 ;; Tracked objects:
 13385 ;;		On entry : 0/0
 13386 ;;		On exit  : 0/0
 13387 ;;		Unchanged: 0/0
 13388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13389 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13392 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13393 ;;Total ram usage:        7 bytes
 13394 ;; Hardware stack levels used:    1
 13395 ;; Hardware stack levels required when called:    4
 13396 ;; This function calls:
 13397 ;;		Nothing
 13398 ;; This function is called by:
 13399 ;;		_ProcessIO
 13400 ;;		_USBCBInitEP
 13401 ;; This function uses a non-reentrant model
 13402 ;;
 13403                           
 13404                           
 13405                           ;psect for function _USBTransferOnePacket
 13406  08AF                     _USBTransferOnePacket:	
 13407                           
 13408                           ;incstack = 0
 13409                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 13410                           ;USBTransferOnePacket@ep stored from wreg
 13411  08AF  0020               	movlb	0	; select bank0
 13412  08B0  00E1               	movwf	USBTransferOnePacket@ep
 13413                           
 13414                           ;usb_device.c: 1174: volatile BDT_ENTRY* handle;
 13415                           ;usb_device.c: 1177: if(dir != 0)
 13416  08B1  085C               	movf	USBTransferOnePacket@dir,w
 13417  08B2  1903               	btfsc	3,2
 13418  08B3  28B9               	goto	l6877
 13419                           
 13420                           ;usb_device.c: 1178: {
 13421                           ;usb_device.c: 1180: handle = pBDTEntryIn[ep];
 13422  08B4  0861               	movf	USBTransferOnePacket@ep,w
 13423  08B5  3E68               	addlw	_pBDTEntryIn& (0+255)
 13424  08B6  0086               	movwf	6
 13425  08B7  0187               	clrf	7
 13426  08B8  28BE               	goto	L16
 13427  08B9                     l6877:	
 13428                           ;usb_device.c: 1181: }
 13429                           
 13430                           
 13431                           ;usb_device.c: 1182: else
 13432                           ;usb_device.c: 1183: {
 13433                           ;usb_device.c: 1185: handle = pBDTEntryOut[ep];
 13434  08B9  0861               	movf	USBTransferOnePacket@ep,w
 13435  08BA  3E22               	addlw	_pBDTEntryOut& (0+255)
 13436  08BB  0086               	movwf	6
 13437  08BC  3001               	movlw	1	; select bank2/3
 13438  08BD  0087               	movwf	7
 13439  08BE                     L16:	
 13440  08BE  0801               	movf	1,w
 13441  08BF  00DF               	movwf	??_USBTransferOnePacket
 13442  08C0  085F               	movf	??_USBTransferOnePacket,w
 13443  08C1  00E2               	movwf	USBTransferOnePacket@handle
 13444                           
 13445                           ;usb_device.c: 1186: }
 13446                           ;usb_device.c: 1190: if(handle == 0)
 13447  08C2  08E2               	movf	USBTransferOnePacket@handle,f
 13448  08C3  1D03               	skipz
 13449  08C4  28C7               	goto	l6885
 13450                           
 13451                           ;usb_device.c: 1191: {
 13452                           ;usb_device.c: 1192: return 0;
 13453  08C5  3000               	movlw	0
 13454  08C6  0008               	return
 13455  08C7                     l6885:	
 13456                           
 13457                           ;usb_device.c: 1193: }
 13458                           ;usb_device.c: 1206: handle->ADR = (((WORD)(data))& 0x7FFF);
 13459  08C7  085D               	movf	USBTransferOnePacket@data,w
 13460  08C8  00DF               	movwf	??_USBTransferOnePacket
 13461  08C9  3002               	movlw	2
 13462  08CA  00E0               	movwf	??_USBTransferOnePacket+1
 13463  08CB  0862               	movf	USBTransferOnePacket@handle,w
 13464  08CC  3E02               	addlw	2
 13465  08CD  0086               	movwf	6
 13466  08CE  0187               	clrf	7
 13467  08CF  085F               	movf	??_USBTransferOnePacket,w
 13468  08D0  3FC0               	movwi [0]fsr1
 13469  08D1  0860               	movf	??_USBTransferOnePacket+1,w
 13470  08D2  3FC1               	movwi [1]fsr1
 13471                           
 13472                           ;usb_device.c: 1207: handle->CNT = len;
 13473  08D3  085E               	movf	USBTransferOnePacket@len,w
 13474  08D4  00DF               	movwf	??_USBTransferOnePacket
 13475  08D5  0A62               	incf	USBTransferOnePacket@handle,w
 13476  08D6  0086               	movwf	6
 13477  08D7  0187               	clrf	7
 13478  08D8  085F               	movf	??_USBTransferOnePacket,w
 13479  08D9  0081               	movwf	1
 13480                           
 13481                           ;usb_device.c: 1208: handle->STAT.Val &= 0x40;
 13482  08DA  3040               	movlw	64
 13483  08DB  00DF               	movwf	??_USBTransferOnePacket
 13484  08DC  0862               	movf	USBTransferOnePacket@handle,w
 13485  08DD  0086               	movwf	6
 13486  08DE  0187               	clrf	7
 13487  08DF  085F               	movf	??_USBTransferOnePacket,w
 13488  08E0  0581               	andwf	1,f
 13489                           
 13490                           ;usb_device.c: 1209: handle->STAT.Val |= 0x80 | (0x08 & 0x08);
 13491  08E1  3088               	movlw	136
 13492  08E2  00DF               	movwf	??_USBTransferOnePacket
 13493  08E3  0862               	movf	USBTransferOnePacket@handle,w
 13494  08E4  0086               	movwf	6
 13495  08E5  0187               	clrf	7
 13496  08E6  085F               	movf	??_USBTransferOnePacket,w
 13497  08E7  0481               	iorwf	1,f
 13498                           
 13499                           ;usb_device.c: 1212: if(dir != 0)
 13500  08E8  085C               	movf	USBTransferOnePacket@dir,w
 13501  08E9  1903               	btfsc	3,2
 13502  08EA  28F2               	goto	l6895
 13503                           
 13504                           ;usb_device.c: 1213: {
 13505                           ;usb_device.c: 1215: ((BYTE_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;;
 13506  08EB  3004               	movlw	4
 13507  08EC  00DF               	movwf	??_USBTransferOnePacket
 13508  08ED  0861               	movf	USBTransferOnePacket@ep,w
 13509  08EE  3E68               	addlw	_pBDTEntryIn& (0+255)
 13510  08EF  0086               	movwf	6
 13511  08F0  0187               	clrf	7
 13512  08F1  28F9               	goto	L17
 13513  08F2                     l6895:	
 13514                           ;usb_device.c: 1216: }
 13515                           
 13516                           
 13517                           ;usb_device.c: 1217: else
 13518                           ;usb_device.c: 1218: {
 13519                           ;usb_device.c: 1220: ((BYTE_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;;
 13520  08F2  3004               	movlw	4
 13521  08F3  00DF               	movwf	??_USBTransferOnePacket
 13522  08F4  0861               	movf	USBTransferOnePacket@ep,w
 13523  08F5  3E22               	addlw	_pBDTEntryOut& (0+255)
 13524  08F6  0086               	movwf	6
 13525  08F7  3001               	movlw	1	; select bank2/3
 13526  08F8  0087               	movwf	7
 13527  08F9                     L17:	
 13528  08F9  085F               	movf	??_USBTransferOnePacket,w
 13529  08FA  0681               	xorwf	1,f
 13530                           
 13531                           ;usb_device.c: 1221: }
 13532                           ;usb_device.c: 1222: return (void*)handle;
 13533  08FB  0862               	movf	USBTransferOnePacket@handle,w
 13534  08FC  0008               	return
 13535  08FD                     __end_of_USBTransferOnePacket:	
 13536                           
 13537                           	psect	text54
 13538  1B09                     __ptext54:	
 13539 ;; *************** function _USBEnableEndpoint *****************
 13540 ;; Defined at:
 13541 ;;		line 1056 in file "../USB/usb_device.c"
 13542 ;; Parameters:    Size  Location     Type
 13543 ;;  ep              1    wreg     unsigned char 
 13544 ;;  options         1   15[BANK0 ] unsigned char 
 13545 ;; Auto vars:     Size  Location     Type
 13546 ;;  ep              1   20[BANK0 ] unsigned char 
 13547 ;;  p               2   18[BANK0 ] PTR unsigned char 
 13548 ;;		 -> UEP0(1), 
 13549 ;; Return value:  Size  Location     Type
 13550 ;;		None               void
 13551 ;; Registers used:
 13552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13553 ;; Tracked objects:
 13554 ;;		On entry : 0/0
 13555 ;;		On exit  : 0/0
 13556 ;;		Unchanged: 0/0
 13557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13558 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13559 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13560 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13561 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13562 ;;Total ram usage:        6 bytes
 13563 ;; Hardware stack levels used:    1
 13564 ;; Hardware stack levels required when called:    5
 13565 ;; This function calls:
 13566 ;;		_USBConfigureEndpoint
 13567 ;; This function is called by:
 13568 ;;		_USBCBInitEP
 13569 ;; This function uses a non-reentrant model
 13570 ;;
 13571                           
 13572                           
 13573                           ;psect for function _USBEnableEndpoint
 13574  1B09                     _USBEnableEndpoint:	
 13575                           
 13576                           ;incstack = 0
 13577                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13578                           ;USBEnableEndpoint@ep stored from wreg
 13579  1B09  0020               	movlb	0	; select bank0
 13580  1B0A  00E4               	movwf	USBEnableEndpoint@ep
 13581                           
 13582                           ;usb_device.c: 1057: unsigned char* p;
 13583                           ;usb_device.c: 1061: if(options & 0x04)
 13584  1B0B  1D5F               	btfss	USBEnableEndpoint@options,2
 13585  1B0C  2B12               	goto	l6849
 13586                           
 13587                           ;usb_device.c: 1062: {
 13588                           ;usb_device.c: 1063: USBConfigureEndpoint(ep, 0);
 13589  1B0D  01D8               	clrf	?_USBConfigureEndpoint
 13590  1B0E  0864               	movf	USBEnableEndpoint@ep,w
 13591  1B0F  319C  2462  319B   	fcall	_USBConfigureEndpoint
 13592  1B12                     l6849:	
 13593                           
 13594                           ;usb_device.c: 1064: }
 13595                           ;usb_device.c: 1065: if(options & 0x02)
 13596  1B12  0020               	movlb	0	; select bank0
 13597  1B13  1CDF               	btfss	USBEnableEndpoint@options,1
 13598  1B14  2B1A               	goto	l6853
 13599                           
 13600                           ;usb_device.c: 1066: {
 13601                           ;usb_device.c: 1067: USBConfigureEndpoint(ep, 1);
 13602  1B15  01D8               	clrf	?_USBConfigureEndpoint
 13603  1B16  0AD8               	incf	?_USBConfigureEndpoint,f
 13604  1B17  0864               	movf	USBEnableEndpoint@ep,w
 13605  1B18  319C  2462         	fcall	_USBConfigureEndpoint
 13606  1B1A                     l6853:	
 13607                           
 13608                           ;usb_device.c: 1068: }
 13609                           ;usb_device.c: 1076: p = (unsigned char*)(&UEP0+ep);
 13610  1B1A  0020               	movlb	0	; select bank0
 13611  1B1B  0864               	movf	USBEnableEndpoint@ep,w
 13612  1B1C  3E98               	addlw	152
 13613  1B1D  00E0               	movwf	??_USBEnableEndpoint
 13614  1B1E  01E1               	clrf	??_USBEnableEndpoint+1
 13615  1B1F  300E               	movlw	14
 13616  1B20  3DE1               	addwfc	??_USBEnableEndpoint+1,f
 13617  1B21  0860               	movf	??_USBEnableEndpoint,w
 13618  1B22  00E2               	movwf	USBEnableEndpoint@p
 13619  1B23  0861               	movf	??_USBEnableEndpoint+1,w
 13620  1B24  00E3               	movwf	USBEnableEndpoint@p+1
 13621                           
 13622                           ;usb_device.c: 1078: *p = options;
 13623  1B25  085F               	movf	USBEnableEndpoint@options,w
 13624  1B26  00E0               	movwf	??_USBEnableEndpoint
 13625  1B27  0862               	movf	USBEnableEndpoint@p,w
 13626  1B28  0086               	movwf	6
 13627  1B29  0863               	movf	USBEnableEndpoint@p+1,w
 13628  1B2A  0087               	movwf	7
 13629  1B2B  0860               	movf	??_USBEnableEndpoint,w
 13630  1B2C  0081               	movwf	1
 13631  1B2D  0008               	return
 13632  1B2E                     __end_of_USBEnableEndpoint:	
 13633                           
 13634                           	psect	text55
 13635  1C62                     __ptext55:	
 13636 ;; *************** function _USBConfigureEndpoint *****************
 13637 ;; Defined at:
 13638 ;;		line 1713 in file "../USB/usb_device.c"
 13639 ;; Parameters:    Size  Location     Type
 13640 ;;  EPNum           1    wreg     unsigned char 
 13641 ;;  direction       1    8[BANK0 ] unsigned char 
 13642 ;; Auto vars:     Size  Location     Type
 13643 ;;  EPNum           1   13[BANK0 ] unsigned char 
 13644 ;;  handle          1   14[BANK0 ] PTR volatile struct __BD
 13645 ;;		 -> BDT(32), 
 13646 ;; Return value:  Size  Location     Type
 13647 ;;		None               void
 13648 ;; Registers used:
 13649 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13650 ;; Tracked objects:
 13651 ;;		On entry : 0/0
 13652 ;;		On exit  : 0/0
 13653 ;;		Unchanged: 0/0
 13654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13655 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13656 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13657 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13658 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13659 ;;Total ram usage:        7 bytes
 13660 ;; Hardware stack levels used:    1
 13661 ;; Hardware stack levels required when called:    4
 13662 ;; This function calls:
 13663 ;;		Nothing
 13664 ;; This function is called by:
 13665 ;;		_USBEnableEndpoint
 13666 ;; This function uses a non-reentrant model
 13667 ;;
 13668                           
 13669                           
 13670                           ;psect for function _USBConfigureEndpoint
 13671  1C62                     _USBConfigureEndpoint:	
 13672                           
 13673                           ;incstack = 0
 13674                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 13675                           ;USBConfigureEndpoint@EPNum stored from wreg
 13676  1C62  0020               	movlb	0	; select bank0
 13677  1C63  00DD               	movwf	USBConfigureEndpoint@EPNum
 13678                           
 13679                           ;usb_device.c: 1714: volatile BDT_ENTRY* handle;
 13680                           ;usb_device.c: 1718: handle = (volatile BDT_ENTRY*)&BDT[0];
 13681  1C64  3020               	movlw	32
 13682  1C65  00D9               	movwf	??_USBConfigureEndpoint
 13683  1C66  0859               	movf	??_USBConfigureEndpoint,w
 13684  1C67  00DE               	movwf	USBConfigureEndpoint@handle
 13685                           
 13686                           ;usb_device.c: 1719: handle += (4*EPNum+2*direction+0u);
 13687  1C68  0858               	movf	USBConfigureEndpoint@direction,w
 13688  1C69  00D9               	movwf	??_USBConfigureEndpoint
 13689  1C6A  3001               	movlw	1
 13690  1C6B                     u7535:	
 13691  1C6B  35D9               	lslf	??_USBConfigureEndpoint,f
 13692  1C6C  0B89               	decfsz	9,f
 13693  1C6D  2C6B               	goto	u7535
 13694  1C6E  085D               	movf	USBConfigureEndpoint@EPNum,w
 13695  1C6F  00DA               	movwf	??_USBConfigureEndpoint+1
 13696  1C70  3001               	movlw	1
 13697  1C71                     u7545:	
 13698  1C71  35DA               	lslf	??_USBConfigureEndpoint+1,f
 13699  1C72  3EFF               	addlw	-1
 13700  1C73  1D03               	skipz
 13701  1C74  2C71               	goto	u7545
 13702  1C75  355A               	lslf	??_USBConfigureEndpoint+1,w
 13703  1C76  0759               	addwf	??_USBConfigureEndpoint,w
 13704  1C77  00DB               	movwf	??_USBConfigureEndpoint+2
 13705  1C78  3001               	movlw	1
 13706  1C79                     u7555:	
 13707  1C79  35DB               	lslf	??_USBConfigureEndpoint+2,f
 13708  1C7A  3EFF               	addlw	-1
 13709  1C7B  1D03               	skipz
 13710  1C7C  2C79               	goto	u7555
 13711  1C7D  355B               	lslf	??_USBConfigureEndpoint+2,w
 13712  1C7E  00DC               	movwf	??_USBConfigureEndpoint+3
 13713  1C7F  085C               	movf	??_USBConfigureEndpoint+3,w
 13714  1C80  07DE               	addwf	USBConfigureEndpoint@handle,f
 13715                           
 13716                           ;usb_device.c: 1721: handle->STAT.UOWN = 0;
 13717  1C81  085E               	movf	USBConfigureEndpoint@handle,w
 13718  1C82  0086               	movwf	6
 13719  1C83  0187               	clrf	7
 13720  1C84  1381               	bcf	1,7
 13721                           
 13722                           ;usb_device.c: 1726: if(direction == 0)
 13723  1C85  08D8               	movf	USBConfigureEndpoint@direction,f
 13724  1C86  1D03               	skipz
 13725  1C87  2C90               	goto	l6867
 13726                           
 13727                           ;usb_device.c: 1727: {
 13728                           ;usb_device.c: 1728: pBDTEntryOut[EPNum] = handle;
 13729  1C88  085E               	movf	USBConfigureEndpoint@handle,w
 13730  1C89  00D9               	movwf	??_USBConfigureEndpoint
 13731  1C8A  085D               	movf	USBConfigureEndpoint@EPNum,w
 13732  1C8B  3E22               	addlw	_pBDTEntryOut& (0+255)
 13733  1C8C  0086               	movwf	6
 13734  1C8D  3001               	movlw	1	; select bank2/3
 13735  1C8E  0087               	movwf	7
 13736  1C8F  2C96               	goto	L18
 13737  1C90                     l6867:	
 13738                           ;usb_device.c: 1729: }
 13739                           
 13740                           
 13741                           ;usb_device.c: 1730: else
 13742                           ;usb_device.c: 1731: {
 13743                           ;usb_device.c: 1732: pBDTEntryIn[EPNum] = handle;
 13744  1C90  085E               	movf	USBConfigureEndpoint@handle,w
 13745  1C91  00D9               	movwf	??_USBConfigureEndpoint
 13746  1C92  085D               	movf	USBConfigureEndpoint@EPNum,w
 13747  1C93  3E68               	addlw	_pBDTEntryIn& (0+255)
 13748  1C94  0086               	movwf	6
 13749  1C95  0187               	clrf	7
 13750  1C96                     L18:	
 13751  1C96  0859               	movf	??_USBConfigureEndpoint,w
 13752  1C97  0081               	movwf	1
 13753                           
 13754                           ;usb_device.c: 1733: }
 13755                           ;usb_device.c: 1736: handle->STAT.DTS = 0;
 13756  1C98  085E               	movf	USBConfigureEndpoint@handle,w
 13757  1C99  0086               	movwf	6
 13758  1C9A  0187               	clrf	7
 13759  1C9B  1301               	bcf	1,6
 13760                           
 13761                           ;usb_device.c: 1737: (handle+1)->STAT.DTS = 1;
 13762  1C9C  085E               	movf	USBConfigureEndpoint@handle,w
 13763  1C9D  3E04               	addlw	4
 13764  1C9E  0086               	movwf	6
 13765  1C9F  0187               	clrf	7
 13766  1CA0  1701               	bsf	1,6
 13767  1CA1  0008               	return
 13768  1CA2                     __end_of_USBConfigureEndpoint:	
 13769                           
 13770                           	psect	text56
 13771  07FF                     __ptext56:	
 13772 ;; *************** function _USBCBStdSetDscHandler *****************
 13773 ;; Defined at:
 13774 ;;		line 434 in file "main.c"
 13775 ;; Parameters:    Size  Location     Type
 13776 ;;		None
 13777 ;; Auto vars:     Size  Location     Type
 13778 ;;		None
 13779 ;; Return value:  Size  Location     Type
 13780 ;;		None               void
 13781 ;; Registers used:
 13782 ;;		None
 13783 ;; Tracked objects:
 13784 ;;		On entry : 0/0
 13785 ;;		On exit  : 0/0
 13786 ;;		Unchanged: 0/0
 13787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13792 ;;Total ram usage:        0 bytes
 13793 ;; Hardware stack levels used:    1
 13794 ;; Hardware stack levels required when called:    4
 13795 ;; This function calls:
 13796 ;;		Nothing
 13797 ;; This function is called by:
 13798 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13799 ;; This function uses a non-reentrant model
 13800 ;;
 13801                           
 13802                           
 13803                           ;psect for function _USBCBStdSetDscHandler
 13804  07FF                     _USBCBStdSetDscHandler:	
 13805                           
 13806                           ;incstack = 0
 13807                           ; Regs used in _USBCBStdSetDscHandler: []
 13808  07FF  0008               	return
 13809  0800                     __end_of_USBCBStdSetDscHandler:	
 13810                           
 13811                           	psect	text57
 13812  07FC                     __ptext57:	
 13813 ;; *************** function _USBCBCheckOtherReq *****************
 13814 ;; Defined at:
 13815 ;;		line 409 in file "main.c"
 13816 ;; Parameters:    Size  Location     Type
 13817 ;;		None
 13818 ;; Auto vars:     Size  Location     Type
 13819 ;;		None
 13820 ;; Return value:  Size  Location     Type
 13821 ;;		None               void
 13822 ;; Registers used:
 13823 ;;		status,2, status,0, pclath, cstack
 13824 ;; Tracked objects:
 13825 ;;		On entry : 0/0
 13826 ;;		On exit  : 0/0
 13827 ;;		Unchanged: 0/0
 13828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13833 ;;Total ram usage:        0 bytes
 13834 ;; Hardware stack levels used:    1
 13835 ;; Hardware stack levels required when called:    5
 13836 ;; This function calls:
 13837 ;;		_USBCheckVendorRequest
 13838 ;; This function is called by:
 13839 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13840 ;; This function uses a non-reentrant model
 13841 ;;
 13842                           
 13843                           
 13844                           ;psect for function _USBCBCheckOtherReq
 13845  07FC                     _USBCBCheckOtherReq:	
 13846                           
 13847                           ;main.c: 410: USBCheckVendorRequest();
 13848                           
 13849                           ;incstack = 0
 13850                           ; Regs used in _USBCBCheckOtherReq: [status,2+status,0+pclath+cstack]
 13851  07FC  3180  2003         	fcall	_USBCheckVendorRequest
 13852  07FE  0008               	return
 13853  07FF                     __end_of_USBCBCheckOtherReq:	
 13854                           
 13855                           	psect	text58
 13856  0003                     __ptext58:	
 13857 ;; *************** function _USBCheckVendorRequest *****************
 13858 ;; Defined at:
 13859 ;;		line 248 in file "../USB/usb_function_generic.c"
 13860 ;; Parameters:    Size  Location     Type
 13861 ;;		None
 13862 ;; Auto vars:     Size  Location     Type
 13863 ;;		None
 13864 ;; Return value:  Size  Location     Type
 13865 ;;		None               void
 13866 ;; Registers used:
 13867 ;;		None
 13868 ;; Tracked objects:
 13869 ;;		On entry : 0/0
 13870 ;;		On exit  : 0/0
 13871 ;;		Unchanged: 0/0
 13872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13877 ;;Total ram usage:        0 bytes
 13878 ;; Hardware stack levels used:    1
 13879 ;; Hardware stack levels required when called:    4
 13880 ;; This function calls:
 13881 ;;		Nothing
 13882 ;; This function is called by:
 13883 ;;		_USBCBCheckOtherReq
 13884 ;; This function uses a non-reentrant model
 13885 ;;
 13886                           
 13887                           
 13888                           ;psect for function _USBCheckVendorRequest
 13889  0003                     _USBCheckVendorRequest:	
 13890                           
 13891                           ;incstack = 0
 13892                           ; Regs used in _USBCheckVendorRequest: []
 13893  0003  0008               	return
 13894  0004                     __end_of_USBCheckVendorRequest:	
 13895                           
 13896                           	psect	text59
 13897  0002                     __ptext59:	
 13898 ;; *************** function _USBCBErrorHandler *****************
 13899 ;; Defined at:
 13900 ;;		line 358 in file "main.c"
 13901 ;; Parameters:    Size  Location     Type
 13902 ;;		None
 13903 ;; Auto vars:     Size  Location     Type
 13904 ;;		None
 13905 ;; Return value:  Size  Location     Type
 13906 ;;		None               void
 13907 ;; Registers used:
 13908 ;;		None
 13909 ;; Tracked objects:
 13910 ;;		On entry : 0/0
 13911 ;;		On exit  : 0/0
 13912 ;;		Unchanged: 0/0
 13913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13918 ;;Total ram usage:        0 bytes
 13919 ;; Hardware stack levels used:    1
 13920 ;; Hardware stack levels required when called:    4
 13921 ;; This function calls:
 13922 ;;		Nothing
 13923 ;; This function is called by:
 13924 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13925 ;; This function uses a non-reentrant model
 13926 ;;
 13927                           
 13928                           
 13929                           ;psect for function _USBCBErrorHandler
 13930  0002                     _USBCBErrorHandler:	
 13931                           
 13932                           ;incstack = 0
 13933                           ; Regs used in _USBCBErrorHandler: []
 13934  0002  0008               	return
 13935  0003                     __end_of_USBCBErrorHandler:	
 13936                           
 13937                           	psect	text60
 13938  1000                     __ptext60:	
 13939 ;; *************** function _USBCB_SOF_Handler *****************
 13940 ;; Defined at:
 13941 ;;		line 335 in file "main.c"
 13942 ;; Parameters:    Size  Location     Type
 13943 ;;		None
 13944 ;; Auto vars:     Size  Location     Type
 13945 ;;		None
 13946 ;; Return value:  Size  Location     Type
 13947 ;;		None               void
 13948 ;; Registers used:
 13949 ;;		None
 13950 ;; Tracked objects:
 13951 ;;		On entry : 0/0
 13952 ;;		On exit  : 0/0
 13953 ;;		Unchanged: 0/0
 13954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13959 ;;Total ram usage:        0 bytes
 13960 ;; Hardware stack levels used:    1
 13961 ;; Hardware stack levels required when called:    4
 13962 ;; This function calls:
 13963 ;;		Nothing
 13964 ;; This function is called by:
 13965 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13966 ;; This function uses a non-reentrant model
 13967 ;;
 13968                           
 13969                           
 13970                           ;psect for function _USBCB_SOF_Handler
 13971  1000                     _USBCB_SOF_Handler:	
 13972                           
 13973                           ;incstack = 0
 13974                           ; Regs used in _USBCB_SOF_Handler: []
 13975  1000  0008               	return
 13976  1001                     __end_of_USBCB_SOF_Handler:	
 13977                           
 13978                           	psect	text61
 13979  18F4                     __ptext61:	
 13980 ;; *************** function _USBCBWakeFromSuspend *****************
 13981 ;; Defined at:
 13982 ;;		line 305 in file "main.c"
 13983 ;; Parameters:    Size  Location     Type
 13984 ;;		None
 13985 ;; Auto vars:     Size  Location     Type
 13986 ;;		None
 13987 ;; Return value:  Size  Location     Type
 13988 ;;		None               void
 13989 ;; Registers used:
 13990 ;;		None
 13991 ;; Tracked objects:
 13992 ;;		On entry : 0/0
 13993 ;;		On exit  : 0/0
 13994 ;;		Unchanged: 0/0
 13995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14000 ;;Total ram usage:        0 bytes
 14001 ;; Hardware stack levels used:    1
 14002 ;; Hardware stack levels required when called:    4
 14003 ;; This function calls:
 14004 ;;		Nothing
 14005 ;; This function is called by:
 14006 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14007 ;;		_USBCBSendResume
 14008 ;; This function uses a non-reentrant model
 14009 ;;
 14010                           
 14011                           
 14012                           ;psect for function _USBCBWakeFromSuspend
 14013  18F4                     _USBCBWakeFromSuspend:	
 14014                           
 14015                           ;incstack = 0
 14016                           ; Regs used in _USBCBWakeFromSuspend: []
 14017  18F4  0008               	return
 14018  18F5                     __end_of_USBCBWakeFromSuspend:	
 14019                           
 14020                           	psect	text62
 14021  18F3                     __ptext62:	
 14022 ;; *************** function _USBCBSuspend *****************
 14023 ;; Defined at:
 14024 ;;		line 264 in file "main.c"
 14025 ;; Parameters:    Size  Location     Type
 14026 ;;		None
 14027 ;; Auto vars:     Size  Location     Type
 14028 ;;		None
 14029 ;; Return value:  Size  Location     Type
 14030 ;;		None               void
 14031 ;; Registers used:
 14032 ;;		None
 14033 ;; Tracked objects:
 14034 ;;		On entry : 0/0
 14035 ;;		On exit  : 0/0
 14036 ;;		Unchanged: 0/0
 14037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14042 ;;Total ram usage:        0 bytes
 14043 ;; Hardware stack levels used:    1
 14044 ;; Hardware stack levels required when called:    4
 14045 ;; This function calls:
 14046 ;;		Nothing
 14047 ;; This function is called by:
 14048 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14049 ;; This function uses a non-reentrant model
 14050 ;;
 14051                           
 14052                           
 14053                           ;psect for function _USBCBSuspend
 14054  18F3                     _USBCBSuspend:	
 14055                           
 14056                           ;incstack = 0
 14057                           ; Regs used in _USBCBSuspend: []
 14058  18F3  0008               	return
 14059  18F4                     __end_of_USBCBSuspend:	
 14060                           
 14061                           	psect	text63
 14062  1756                     __ptext63:	
 14063 ;; *************** function _USBDeviceInit *****************
 14064 ;; Defined at:
 14065 ;;		line 467 in file "../USB/usb_device.c"
 14066 ;; Parameters:    Size  Location     Type
 14067 ;;		None
 14068 ;; Auto vars:     Size  Location     Type
 14069 ;;  p               2   10[BANK0 ] PTR unsigned char 
 14070 ;;		 -> UEP1(1), 
 14071 ;;  i               1   12[BANK0 ] unsigned char 
 14072 ;;  i               1   13[BANK0 ] unsigned char 
 14073 ;; Return value:  Size  Location     Type
 14074 ;;		None               void
 14075 ;; Registers used:
 14076 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14077 ;; Tracked objects:
 14078 ;;		On entry : 0/0
 14079 ;;		On exit  : 0/0
 14080 ;;		Unchanged: 0/0
 14081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14083 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14084 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14085 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14086 ;;Total ram usage:        6 bytes
 14087 ;; Hardware stack levels used:    1
 14088 ;; Hardware stack levels required when called:    4
 14089 ;; This function calls:
 14090 ;;		Nothing
 14091 ;; This function is called by:
 14092 ;;		_USBDeviceTasks
 14093 ;;		_InitializeSystem
 14094 ;; This function uses a non-reentrant model
 14095 ;;
 14096                           
 14097                           
 14098                           ;psect for function _USBDeviceInit
 14099  1756                     _USBDeviceInit:	
 14100                           
 14101                           ;usb_device.c: 468: BYTE i;
 14102                           ;usb_device.c: 470: {PIE2bits.USBIE = 0;};
 14103                           
 14104                           ;incstack = 0
 14105                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 14106  1756  0021               	movlb	1	; select bank1
 14107  1757  1112               	bcf	18,2	;volatile
 14108                           
 14109                           ;usb_device.c: 473: UEIR = 0;;
 14110  1758  003D               	movlb	29	; select bank29
 14111  1759  0193               	clrf	19	;volatile
 14112                           
 14113                           ;usb_device.c: 476: UIR = 0;;
 14114  175A  0190               	clrf	16	;volatile
 14115                           
 14116                           ;usb_device.c: 479: UEP0 = 0;
 14117  175B  0198               	clrf	24	;volatile
 14118                           
 14119                           ;usb_device.c: 481: { BYTE i; BYTE* p = (BYTE*)&UEP1; for(i=0;i<1;i++) *p++ = 0; };
 14120  175C  300E               	movlw	14
 14121  175D  0020               	movlb	0	; select bank0
 14122  175E  00DB               	movwf	USBDeviceInit@p+1
 14123  175F  3099               	movlw	153
 14124  1760  00DA               	movwf	USBDeviceInit@p
 14125  1761  01DC               	clrf	USBDeviceInit@i_718
 14126  1762  085C               	movf	USBDeviceInit@i_718,w
 14127  1763  1D03               	skipz
 14128  1764  2F75               	goto	l6557
 14129  1765                     l6549:	
 14130  1765  085A               	movf	USBDeviceInit@p,w
 14131  1766  0086               	movwf	6
 14132  1767  085B               	movf	USBDeviceInit@p+1,w
 14133  1768  0087               	movwf	7
 14134  1769  0181               	clrf	1
 14135  176A  3001               	movlw	1
 14136  176B  07DA               	addwf	USBDeviceInit@p,f
 14137  176C  3000               	movlw	0
 14138  176D  3DDB               	addwfc	USBDeviceInit@p+1,f
 14139  176E  3001               	movlw	1
 14140  176F  00D8               	movwf	??_USBDeviceInit
 14141  1770  0858               	movf	??_USBDeviceInit,w
 14142  1771  07DC               	addwf	USBDeviceInit@i_718,f
 14143  1772  085C               	movf	USBDeviceInit@i_718,w
 14144  1773  1903               	btfsc	3,2
 14145  1774  2F65               	goto	l6549
 14146  1775                     l6557:	
 14147                           
 14148                           ;usb_device.c: 483: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 14149  1775  3016               	movlw	22
 14150  1776  003D               	movlb	29	; select bank29
 14151  1777  0091               	movwf	17	;volatile
 14152  1778  309F               	movlw	159
 14153  1779  0097               	movwf	23	;volatile
 14154  177A  307B               	movlw	123
 14155  177B  0092               	movwf	18	;volatile
 14156                           
 14157                           ;usb_device.c: 486: ;
 14158                           ;usb_device.c: 489: ;
 14159                           ;usb_device.c: 492: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 14160  177C  0020               	movlb	0	; select bank0
 14161  177D  01DD               	clrf	USBDeviceInit@i
 14162  177E  3008               	movlw	8
 14163  177F  025D               	subwf	USBDeviceInit@i,w
 14164  1780  1803               	btfsc	3,0
 14165  1781  2F9B               	goto	l128
 14166  1782                     l6565:	
 14167                           
 14168                           ;usb_device.c: 493: {
 14169                           ;usb_device.c: 494: BDT[i].Val = 0x00;
 14170  1782  085D               	movf	USBDeviceInit@i,w
 14171  1783  00D8               	movwf	??_USBDeviceInit
 14172  1784  3001               	movlw	1
 14173  1785                     u7105:	
 14174  1785  35D8               	lslf	??_USBDeviceInit,f
 14175  1786  3EFF               	addlw	-1
 14176  1787  1D03               	skipz
 14177  1788  2F85               	goto	u7105
 14178  1789  3558               	lslf	??_USBDeviceInit,w
 14179  178A  3E20               	addlw	32
 14180  178B  0086               	movwf	6
 14181  178C  0187               	clrf	7
 14182  178D  3000               	movlw	0
 14183  178E  3FC0               	movwi [0]fsr1
 14184  178F  3000               	movlw	0
 14185  1790  3FC1               	movwi [1]fsr1
 14186  1791  3FC2               	movwi [2]fsr1
 14187  1792  3FC3               	movwi [3]fsr1
 14188  1793  3001               	movlw	1
 14189  1794  00D8               	movwf	??_USBDeviceInit
 14190  1795  0858               	movf	??_USBDeviceInit,w
 14191  1796  07DD               	addwf	USBDeviceInit@i,f
 14192  1797  3008               	movlw	8
 14193  1798  025D               	subwf	USBDeviceInit@i,w
 14194  1799  1C03               	skipc
 14195  179A  2F82               	goto	l6565
 14196  179B                     l128:	
 14197                           
 14198                           ;usb_device.c: 495: }
 14199                           ;usb_device.c: 498: UCONbits.PPBRST = 1;
 14200  179B  003D               	movlb	29	; select bank29
 14201  179C  170E               	bsf	14,6	;volatile
 14202                           
 14203                           ;usb_device.c: 501: UADDR = 0x00;
 14204  179D  0196               	clrf	22	;volatile
 14205                           
 14206                           ;usb_device.c: 504: UCONbits.PKTDIS = 0;
 14207  179E  120E               	bcf	14,4	;volatile
 14208                           
 14209                           ;usb_device.c: 507: UCONbits.PPBRST = 0;
 14210  179F  130E               	bcf	14,6	;volatile
 14211  17A0                     l6585:	
 14212                           ;usb_device.c: 510: while(UIRbits.TRNIF == 1)
 14213                           
 14214  17A0  003D               	movlb	29	; select bank29
 14215  17A1  1D90               	btfss	16,3	;volatile
 14216  17A2  2FB0               	goto	l6587
 14217                           
 14218                           ;usb_device.c: 511: {
 14219                           ;usb_device.c: 512: (UIR &= 0xF7);
 14220  17A3  30F7               	movlw	247
 14221  17A4  0020               	movlb	0	; select bank0
 14222  17A5  00D8               	movwf	??_USBDeviceInit
 14223  17A6  0858               	movf	??_USBDeviceInit,w
 14224  17A7  003D               	movlb	29	; select bank29
 14225  17A8  0590               	andwf	16,f	;volatile
 14226                           
 14227                           ;usb_device.c: 514: inPipes[0].info.Val = 0;
 14228  17A9  0022               	movlb	2	; select bank2
 14229  17AA  01BC               	clrf	(_inPipes^(0+256)+2)
 14230                           
 14231                           ;usb_device.c: 515: outPipes[0].info.Val = 0;
 14232  17AB  0023               	movlb	3	; select bank3
 14233  17AC  01A2               	clrf	(_outPipes^(0+384)+2)
 14234                           
 14235                           ;usb_device.c: 516: outPipes[0].wCount.Val = 0;
 14236  17AD  01A3               	clrf	(_outPipes^(0+384)+3)
 14237  17AE  01A4               	clrf	((_outPipes+1)^(0+384)+3)
 14238  17AF  2FA0               	goto	l6585
 14239  17B0                     l6587:	
 14240                           
 14241                           ;usb_device.c: 517: }
 14242                           ;usb_device.c: 521: USBStatusStageEnabledFlag1 = TRUE;
 14243  17B0  3001               	movlw	1
 14244  17B1  0020               	movlb	0	; select bank0
 14245  17B2  00D8               	movwf	??_USBDeviceInit
 14246  17B3  0858               	movf	??_USBDeviceInit,w
 14247  17B4  0022               	movlb	2	; select bank2
 14248  17B5  00B0               	movwf	_USBStatusStageEnabledFlag1^(0+256)	;volatile
 14249                           
 14250                           ;usb_device.c: 522: USBStatusStageEnabledFlag2 = TRUE;
 14251  17B6  3001               	movlw	1
 14252  17B7  0020               	movlb	0	; select bank0
 14253  17B8  00D8               	movwf	??_USBDeviceInit
 14254  17B9  0858               	movf	??_USBDeviceInit,w
 14255  17BA  0022               	movlb	2	; select bank2
 14256  17BB  00B1               	movwf	_USBStatusStageEnabledFlag2^(0+256)	;volatile
 14257                           
 14258                           ;usb_device.c: 524: USBDeferINDataStagePackets = FALSE;
 14259  17BC  01AC               	clrf	_USBDeferINDataStagePackets^(0+256)	;volatile
 14260                           
 14261                           ;usb_device.c: 525: USBDeferOUTDataStagePackets = FALSE;
 14262  17BD  01AD               	clrf	_USBDeferOUTDataStagePackets^(0+256)	;volatile
 14263                           
 14264                           ;usb_device.c: 526: USBBusIsSuspended = FALSE;
 14265  17BE  0023               	movlb	3	; select bank3
 14266  17BF  01B8               	clrf	_USBBusIsSuspended^(0+384)
 14267                           
 14268                           ;usb_device.c: 530: for(i = 0; i < (BYTE)(1+1u); i++)
 14269  17C0  0020               	movlb	0	; select bank0
 14270  17C1  01DD               	clrf	USBDeviceInit@i
 14271  17C2  3002               	movlw	2
 14272  17C3  025D               	subwf	USBDeviceInit@i,w
 14273  17C4  1803               	btfsc	3,0
 14274  17C5  2FE5               	goto	l6605
 14275  17C6                     l6599:	
 14276                           
 14277                           ;usb_device.c: 531: {
 14278                           ;usb_device.c: 532: pBDTEntryIn[i] = 0u;
 14279  17C6  085D               	movf	USBDeviceInit@i,w
 14280  17C7  3E68               	addlw	_pBDTEntryIn& (0+255)
 14281  17C8  0086               	movwf	6
 14282  17C9  0187               	clrf	7
 14283  17CA  0181               	clrf	1
 14284                           
 14285                           ;usb_device.c: 533: pBDTEntryOut[i] = 0u;
 14286  17CB  085D               	movf	USBDeviceInit@i,w
 14287  17CC  3E22               	addlw	_pBDTEntryOut& (0+255)
 14288  17CD  0086               	movwf	6
 14289  17CE  3001               	movlw	1	; select bank2/3
 14290  17CF  0087               	movwf	7
 14291  17D0  0181               	clrf	1
 14292                           
 14293                           ;usb_device.c: 534: ep_data_in[i].Val = 0u;
 14294  17D1  085D               	movf	USBDeviceInit@i,w
 14295  17D2  3EAE               	addlw	_ep_data_in& (0+255)
 14296  17D3  0086               	movwf	6
 14297  17D4  3001               	movlw	1	; select bank3/4
 14298  17D5  0087               	movwf	7
 14299  17D6  0181               	clrf	1
 14300                           
 14301                           ;usb_device.c: 535: ep_data_out[i].Val = 0u;
 14302  17D7  085D               	movf	USBDeviceInit@i,w
 14303  17D8  3EB0               	addlw	_ep_data_out& (0+255)
 14304  17D9  0086               	movwf	6
 14305  17DA  3001               	movlw	1	; select bank3/4
 14306  17DB  0087               	movwf	7
 14307  17DC  0181               	clrf	1
 14308  17DD  3001               	movlw	1
 14309  17DE  00D8               	movwf	??_USBDeviceInit
 14310  17DF  0858               	movf	??_USBDeviceInit,w
 14311  17E0  07DD               	addwf	USBDeviceInit@i,f
 14312  17E1  3002               	movlw	2
 14313  17E2  025D               	subwf	USBDeviceInit@i,w
 14314  17E3  1C03               	skipc
 14315  17E4  2FC6               	goto	l6599
 14316  17E5                     l6605:	
 14317                           
 14318                           ;usb_device.c: 536: }
 14319                           ;usb_device.c: 539: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14320  17E5  3028               	movlw	40
 14321  17E6  00D8               	movwf	??_USBDeviceInit
 14322  17E7  0858               	movf	??_USBDeviceInit,w
 14323  17E8  00E8               	movwf	_pBDTEntryIn
 14324                           
 14325                           ;usb_device.c: 541: UEP0 = 0x06|0x10;
 14326  17E9  3016               	movlw	22
 14327  17EA  003D               	movlb	29	; select bank29
 14328  17EB  0098               	movwf	24	;volatile
 14329                           
 14330                           ;usb_device.c: 543: BDT[0].ADR = (((WORD)(&SetupPkt))& 0x7FFF);
 14331  17EC  3040               	movlw	64
 14332  17ED  0020               	movlb	0	; select bank0
 14333  17EE  00D8               	movwf	??_USBDeviceInit
 14334  17EF  3000               	movlw	0
 14335  17F0  00D9               	movwf	??_USBDeviceInit+1
 14336  17F1  0858               	movf	??_USBDeviceInit,w
 14337  17F2  00A2               	movwf	34	;volatile
 14338  17F3  0859               	movf	??_USBDeviceInit+1,w
 14339  17F4  00A3               	movwf	35	;volatile
 14340                           
 14341                           ;usb_device.c: 544: BDT[0].CNT = 8;
 14342  17F5  3008               	movlw	8
 14343  17F6  00A1               	movwf	33	;volatile
 14344                           
 14345                           ;usb_device.c: 545: BDT[0].STAT.Val = 0x80|0x00|0x04;
 14346  17F7  3084               	movlw	132
 14347  17F8  00D8               	movwf	??_USBDeviceInit
 14348  17F9  0858               	movf	??_USBDeviceInit,w
 14349  17FA  00A0               	movwf	32	;volatile
 14350                           
 14351                           ;usb_device.c: 548: USBActiveConfiguration = 0;
 14352  17FB  0022               	movlb	2	; select bank2
 14353  17FC  01C0               	clrf	_USBActiveConfiguration^(0+256)
 14354                           
 14355                           ;usb_device.c: 551: USBDeviceState = DETACHED_STATE;
 14356  17FD  0021               	movlb	1	; select bank1
 14357  17FE  01EE               	clrf	_USBDeviceState^(0+128)
 14358  17FF  0008               	return
 14359  1800                     __end_of_USBDeviceInit:	
 14360                           
 14361                           	psect	text64
 14362  0CD0                     __ptext64:	
 14363 ;; *************** function ___ftadd *****************
 14364 ;; Defined at:
 14365 ;;		line 87 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\ftadd.c"
 14366 ;; Parameters:    Size  Location     Type
 14367 ;;  f1              3   19[BANK1 ] float 
 14368 ;;  f2              3   22[BANK1 ] float 
 14369 ;; Auto vars:     Size  Location     Type
 14370 ;;  exp1            1   31[BANK1 ] unsigned char 
 14371 ;;  exp2            1   30[BANK1 ] unsigned char 
 14372 ;;  sign            1   29[BANK1 ] unsigned char 
 14373 ;; Return value:  Size  Location     Type
 14374 ;;                  3   19[BANK1 ] float 
 14375 ;; Registers used:
 14376 ;;		wreg, status,2, status,0, pclath, cstack
 14377 ;; Tracked objects:
 14378 ;;		On entry : 0/0
 14379 ;;		On exit  : 0/0
 14380 ;;		Unchanged: 0/0
 14381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14382 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14383 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 14384 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14385 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 14386 ;;Total ram usage:       13 bytes
 14387 ;; Hardware stack levels used:    1
 14388 ;; Hardware stack levels required when called:    5
 14389 ;; This function calls:
 14390 ;;		___ftpack
 14391 ;; This function is called by:
 14392 ;;		_UpdateFanLevel
 14393 ;;		_UpdateClock
 14394 ;; This function uses a non-reentrant model
 14395 ;;
 14396                           
 14397                           
 14398                           ;psect for function ___ftadd
 14399  0CD0                     ___ftadd:	
 14400                           
 14401                           ;incstack = 0
 14402                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 14403  0CD0  0021               	movlb	1	; select bank1
 14404  0CD1  0833               	movf	___ftadd@f1^(0+128),w
 14405  0CD2  00B9               	movwf	??___ftadd^(0+128)
 14406  0CD3  0834               	movf	(___ftadd@f1+1)^(0+128),w
 14407  0CD4  00BA               	movwf	(??___ftadd^(0+128)+1)
 14408  0CD5  0835               	movf	(___ftadd@f1+2)^(0+128),w
 14409  0CD6  00BB               	movwf	(??___ftadd^(0+128)+2)
 14410  0CD7  1003               	clrc
 14411  0CD8  0D3A               	rlf	(??___ftadd^(0+128)+1),w
 14412  0CD9  0D3B               	rlf	(??___ftadd^(0+128)+2),w
 14413  0CDA  00BC               	movwf	(??___ftadd+3)^(0+128)
 14414  0CDB  083C               	movf	(??___ftadd+3)^(0+128),w
 14415  0CDC  00BF               	movwf	___ftadd@exp1^(0+128)
 14416  0CDD  0836               	movf	___ftadd@f2^(0+128),w
 14417  0CDE  00B9               	movwf	??___ftadd^(0+128)
 14418  0CDF  0837               	movf	(___ftadd@f2+1)^(0+128),w
 14419  0CE0  00BA               	movwf	(??___ftadd^(0+128)+1)
 14420  0CE1  0838               	movf	(___ftadd@f2+2)^(0+128),w
 14421  0CE2  00BB               	movwf	(??___ftadd^(0+128)+2)
 14422  0CE3  1003               	clrc
 14423  0CE4  0D3A               	rlf	(??___ftadd^(0+128)+1),w
 14424  0CE5  0D3B               	rlf	(??___ftadd^(0+128)+2),w
 14425  0CE6  00BC               	movwf	(??___ftadd+3)^(0+128)
 14426  0CE7  083C               	movf	(??___ftadd+3)^(0+128),w
 14427  0CE8  00BE               	movwf	___ftadd@exp2^(0+128)
 14428  0CE9  083F               	movf	___ftadd@exp1^(0+128),w
 14429  0CEA  1903               	btfsc	3,2
 14430  0CEB  2CF8               	goto	l6075
 14431  0CEC  083E               	movf	___ftadd@exp2^(0+128),w
 14432  0CED  023F               	subwf	___ftadd@exp1^(0+128),w
 14433  0CEE  1803               	skipnc
 14434  0CEF  2CFF               	goto	l6079
 14435  0CF0  033F               	decf	___ftadd@exp1^(0+128),w
 14436  0CF1  3AFF               	xorlw	255
 14437  0CF2  073E               	addwf	___ftadd@exp2^(0+128),w
 14438  0CF3  00B9               	movwf	??___ftadd^(0+128)
 14439  0CF4  3019               	movlw	25
 14440  0CF5  0239               	subwf	??___ftadd^(0+128),w
 14441  0CF6  1C03               	skipc
 14442  0CF7  2CFF               	goto	l6079
 14443  0CF8                     l6075:	
 14444  0CF8  0836               	movf	___ftadd@f2^(0+128),w
 14445  0CF9  00B3               	movwf	?___ftadd^(0+128)
 14446  0CFA  0837               	movf	(___ftadd@f2+1)^(0+128),w
 14447  0CFB  00B4               	movwf	(?___ftadd+1)^(0+128)
 14448  0CFC  0838               	movf	(___ftadd@f2+2)^(0+128),w
 14449  0CFD  00B5               	movwf	(?___ftadd+2)^(0+128)
 14450  0CFE  0008               	return
 14451  0CFF                     l6079:	
 14452  0CFF  083E               	movf	___ftadd@exp2^(0+128),w
 14453  0D00  1903               	btfsc	3,2
 14454  0D01  0008               	return
 14455  0D02  083F               	movf	___ftadd@exp1^(0+128),w
 14456  0D03  023E               	subwf	___ftadd@exp2^(0+128),w
 14457  0D04  1803               	skipnc
 14458  0D05  2D0E               	goto	l6085
 14459  0D06  033E               	decf	___ftadd@exp2^(0+128),w
 14460  0D07  3AFF               	xorlw	255
 14461  0D08  073F               	addwf	___ftadd@exp1^(0+128),w
 14462  0D09  00B9               	movwf	??___ftadd^(0+128)
 14463  0D0A  3019               	movlw	25
 14464  0D0B  0239               	subwf	??___ftadd^(0+128),w
 14465  0D0C  1803               	btfsc	3,0
 14466  0D0D  0008               	return
 14467  0D0E                     l6085:	
 14468  0D0E  3006               	movlw	6
 14469  0D0F  00B9               	movwf	??___ftadd^(0+128)
 14470  0D10  0839               	movf	??___ftadd^(0+128),w
 14471  0D11  00BD               	movwf	___ftadd@sign^(0+128)
 14472  0D12  1BB5               	btfsc	(___ftadd@f1+2)^(0+128),7
 14473  0D13  17BD               	bsf	___ftadd@sign^(0+128),7
 14474  0D14  1BB8               	btfsc	(___ftadd@f2+2)^(0+128),7
 14475  0D15  173D               	bsf	___ftadd@sign^(0+128),6
 14476  0D16  17B4               	bsf	(___ftadd@f1^(0+128)+1),7
 14477  0D17  30FF               	movlw	255
 14478  0D18  05B3               	andwf	___ftadd@f1^(0+128),f
 14479  0D19  30FF               	movlw	255
 14480  0D1A  05B4               	andwf	(___ftadd@f1+1)^(0+128),f
 14481  0D1B  3000               	movlw	0
 14482  0D1C  05B5               	andwf	(___ftadd@f1+2)^(0+128),f
 14483  0D1D  17B7               	bsf	(___ftadd@f2^(0+128)+1),7
 14484  0D1E  30FF               	movlw	255
 14485  0D1F  05B6               	andwf	___ftadd@f2^(0+128),f
 14486  0D20  30FF               	movlw	255
 14487  0D21  05B7               	andwf	(___ftadd@f2+1)^(0+128),f
 14488  0D22  3000               	movlw	0
 14489  0D23  05B8               	andwf	(___ftadd@f2+2)^(0+128),f
 14490  0D24  083E               	movf	___ftadd@exp2^(0+128),w
 14491  0D25  023F               	subwf	___ftadd@exp1^(0+128),w
 14492  0D26  1803               	skipnc
 14493  0D27  2D4A               	goto	l6107
 14494  0D28                     l6097:	
 14495  0D28  3001               	movlw	1
 14496  0D29                     u6235:	
 14497  0D29  35B6               	lslf	___ftadd@f2^(0+128),f
 14498  0D2A  0DB7               	rlf	(___ftadd@f2+1)^(0+128),f
 14499  0D2B  0DB8               	rlf	(___ftadd@f2+2)^(0+128),f
 14500  0D2C  0B89               	decfsz	9,f
 14501  0D2D  2D29               	goto	u6235
 14502  0D2E  3001               	movlw	1
 14503  0D2F  02BE               	subwf	___ftadd@exp2^(0+128),f
 14504  0D30  083E               	movf	___ftadd@exp2^(0+128),w
 14505  0D31  063F               	xorwf	___ftadd@exp1^(0+128),w
 14506  0D32  1903               	skipnz
 14507  0D33  2D45               	goto	l6105
 14508  0D34  3001               	movlw	1
 14509  0D35  02BD               	subwf	___ftadd@sign^(0+128),f
 14510  0D36  083D               	movf	___ftadd@sign^(0+128),w
 14511  0D37  3907               	andlw	7
 14512  0D38  1903               	btfsc	3,2
 14513  0D39  2D45               	goto	l6105
 14514  0D3A  2D28               	goto	l6097
 14515  0D3B                     l6103:	
 14516  0D3B  3001               	movlw	1
 14517  0D3C                     u6265:	
 14518  0D3C  36B5               	lsrf	(___ftadd@f1+2)^(0+128),f
 14519  0D3D  0CB4               	rrf	(___ftadd@f1+1)^(0+128),f
 14520  0D3E  0CB3               	rrf	___ftadd@f1^(0+128),f
 14521  0D3F  0B89               	decfsz	9,f
 14522  0D40  2D3C               	goto	u6265
 14523  0D41  3001               	movlw	1
 14524  0D42  00B9               	movwf	??___ftadd^(0+128)
 14525  0D43  0839               	movf	??___ftadd^(0+128),w
 14526  0D44  07BF               	addwf	___ftadd@exp1^(0+128),f
 14527  0D45                     l6105:	
 14528  0D45  083F               	movf	___ftadd@exp1^(0+128),w
 14529  0D46  063E               	xorwf	___ftadd@exp2^(0+128),w
 14530  0D47  1903               	btfsc	3,2
 14531  0D48  2D6F               	goto	l1086
 14532  0D49  2D3B               	goto	l6103
 14533  0D4A                     l6107:	
 14534  0D4A  083F               	movf	___ftadd@exp1^(0+128),w
 14535  0D4B  023E               	subwf	___ftadd@exp2^(0+128),w
 14536  0D4C  1803               	skipnc
 14537  0D4D  2D6F               	goto	l1086
 14538  0D4E                     l6109:	
 14539  0D4E  3001               	movlw	1
 14540  0D4F                     u6295:	
 14541  0D4F  35B3               	lslf	___ftadd@f1^(0+128),f
 14542  0D50  0DB4               	rlf	(___ftadd@f1+1)^(0+128),f
 14543  0D51  0DB5               	rlf	(___ftadd@f1+2)^(0+128),f
 14544  0D52  0B89               	decfsz	9,f
 14545  0D53  2D4F               	goto	u6295
 14546  0D54  3001               	movlw	1
 14547  0D55  02BF               	subwf	___ftadd@exp1^(0+128),f
 14548  0D56  083E               	movf	___ftadd@exp2^(0+128),w
 14549  0D57  063F               	xorwf	___ftadd@exp1^(0+128),w
 14550  0D58  1903               	skipnz
 14551  0D59  2D6B               	goto	l6117
 14552  0D5A  3001               	movlw	1
 14553  0D5B  02BD               	subwf	___ftadd@sign^(0+128),f
 14554  0D5C  083D               	movf	___ftadd@sign^(0+128),w
 14555  0D5D  3907               	andlw	7
 14556  0D5E  1903               	btfsc	3,2
 14557  0D5F  2D6B               	goto	l6117
 14558  0D60  2D4E               	goto	l6109
 14559  0D61                     l6115:	
 14560  0D61  3001               	movlw	1
 14561  0D62                     u6325:	
 14562  0D62  36B8               	lsrf	(___ftadd@f2+2)^(0+128),f
 14563  0D63  0CB7               	rrf	(___ftadd@f2+1)^(0+128),f
 14564  0D64  0CB6               	rrf	___ftadd@f2^(0+128),f
 14565  0D65  0B89               	decfsz	9,f
 14566  0D66  2D62               	goto	u6325
 14567  0D67  3001               	movlw	1
 14568  0D68  00B9               	movwf	??___ftadd^(0+128)
 14569  0D69  0839               	movf	??___ftadd^(0+128),w
 14570  0D6A  07BE               	addwf	___ftadd@exp2^(0+128),f
 14571  0D6B                     l6117:	
 14572  0D6B  083F               	movf	___ftadd@exp1^(0+128),w
 14573  0D6C  063E               	xorwf	___ftadd@exp2^(0+128),w
 14574  0D6D  1D03               	skipz
 14575  0D6E  2D61               	goto	l6115
 14576  0D6F                     l1086:	
 14577  0D6F  1FBD               	btfss	___ftadd@sign^(0+128),7
 14578  0D70  2D81               	goto	l6121
 14579  0D71  30FF               	movlw	255
 14580  0D72  06B3               	xorwf	___ftadd@f1^(0+128),f
 14581  0D73  30FF               	movlw	255
 14582  0D74  06B4               	xorwf	(___ftadd@f1+1)^(0+128),f
 14583  0D75  30FF               	movlw	255
 14584  0D76  06B5               	xorwf	(___ftadd@f1+2)^(0+128),f
 14585  0D77  3001               	movlw	1
 14586  0D78  07B3               	addwf	___ftadd@f1^(0+128),f
 14587  0D79  3000               	movlw	0
 14588  0D7A  1803               	skipnc
 14589  0D7B  3001               	movlw	1
 14590  0D7C  07B4               	addwf	(___ftadd@f1+1)^(0+128),f
 14591  0D7D  3000               	movlw	0
 14592  0D7E  1803               	skipnc
 14593  0D7F  3001               	movlw	1
 14594  0D80  07B5               	addwf	(___ftadd@f1+2)^(0+128),f
 14595  0D81                     l6121:	
 14596  0D81  1F3D               	btfss	___ftadd@sign^(0+128),6
 14597  0D82  2D93               	goto	l6125
 14598  0D83  30FF               	movlw	255
 14599  0D84  06B6               	xorwf	___ftadd@f2^(0+128),f
 14600  0D85  30FF               	movlw	255
 14601  0D86  06B7               	xorwf	(___ftadd@f2+1)^(0+128),f
 14602  0D87  30FF               	movlw	255
 14603  0D88  06B8               	xorwf	(___ftadd@f2+2)^(0+128),f
 14604  0D89  3001               	movlw	1
 14605  0D8A  07B6               	addwf	___ftadd@f2^(0+128),f
 14606  0D8B  3000               	movlw	0
 14607  0D8C  1803               	skipnc
 14608  0D8D  3001               	movlw	1
 14609  0D8E  07B7               	addwf	(___ftadd@f2+1)^(0+128),f
 14610  0D8F  3000               	movlw	0
 14611  0D90  1803               	skipnc
 14612  0D91  3001               	movlw	1
 14613  0D92  07B8               	addwf	(___ftadd@f2+2)^(0+128),f
 14614  0D93                     l6125:	
 14615  0D93  01BD               	clrf	___ftadd@sign^(0+128)
 14616  0D94  0833               	movf	___ftadd@f1^(0+128),w
 14617  0D95  07B6               	addwf	___ftadd@f2^(0+128),f
 14618  0D96  0834               	movf	(___ftadd@f1+1)^(0+128),w
 14619  0D97  3DB7               	addwfc	(___ftadd@f2+1)^(0+128),f
 14620  0D98  0835               	movf	(___ftadd@f1+2)^(0+128),w
 14621  0D99  3DB8               	addwfc	(___ftadd@f2+2)^(0+128),f
 14622  0D9A  1FB8               	btfss	(___ftadd@f2+2)^(0+128),7
 14623  0D9B  2DAE               	goto	l6135
 14624  0D9C  30FF               	movlw	255
 14625  0D9D  06B6               	xorwf	___ftadd@f2^(0+128),f
 14626  0D9E  30FF               	movlw	255
 14627  0D9F  06B7               	xorwf	(___ftadd@f2+1)^(0+128),f
 14628  0DA0  30FF               	movlw	255
 14629  0DA1  06B8               	xorwf	(___ftadd@f2+2)^(0+128),f
 14630  0DA2  3001               	movlw	1
 14631  0DA3  07B6               	addwf	___ftadd@f2^(0+128),f
 14632  0DA4  3000               	movlw	0
 14633  0DA5  1803               	skipnc
 14634  0DA6  3001               	movlw	1
 14635  0DA7  07B7               	addwf	(___ftadd@f2+1)^(0+128),f
 14636  0DA8  3000               	movlw	0
 14637  0DA9  1803               	skipnc
 14638  0DAA  3001               	movlw	1
 14639  0DAB  07B8               	addwf	(___ftadd@f2+2)^(0+128),f
 14640  0DAC  01BD               	clrf	___ftadd@sign^(0+128)
 14641  0DAD  0ABD               	incf	___ftadd@sign^(0+128),f
 14642  0DAE                     l6135:	
 14643  0DAE  0836               	movf	___ftadd@f2^(0+128),w
 14644  0DAF  0020               	movlb	0	; select bank0
 14645  0DB0  00D8               	movwf	?___ftpack
 14646  0DB1  0021               	movlb	1	; select bank1
 14647  0DB2  0837               	movf	(___ftadd@f2+1)^(0+128),w
 14648  0DB3  0020               	movlb	0	; select bank0
 14649  0DB4  00D9               	movwf	?___ftpack+1
 14650  0DB5  0021               	movlb	1	; select bank1
 14651  0DB6  0838               	movf	(___ftadd@f2+2)^(0+128),w
 14652  0DB7  0020               	movlb	0	; select bank0
 14653  0DB8  00DA               	movwf	?___ftpack+2
 14654  0DB9  0021               	movlb	1	; select bank1
 14655  0DBA  083F               	movf	___ftadd@exp1^(0+128),w
 14656  0DBB  00B9               	movwf	??___ftadd^(0+128)
 14657  0DBC  0839               	movf	??___ftadd^(0+128),w
 14658  0DBD  0020               	movlb	0	; select bank0
 14659  0DBE  00DB               	movwf	?___ftpack+3
 14660  0DBF  0021               	movlb	1	; select bank1
 14661  0DC0  083D               	movf	___ftadd@sign^(0+128),w
 14662  0DC1  00BA               	movwf	(??___ftadd+1)^(0+128)
 14663  0DC2  083A               	movf	(??___ftadd+1)^(0+128),w
 14664  0DC3  0020               	movlb	0	; select bank0
 14665  0DC4  00DC               	movwf	?___ftpack+4
 14666  0DC5  319F  279F         	fcall	___ftpack
 14667  0DC7  0020               	movlb	0	; select bank0
 14668  0DC8  0858               	movf	?___ftpack,w
 14669  0DC9  0021               	movlb	1	; select bank1
 14670  0DCA  00B3               	movwf	?___ftadd^(0+128)
 14671  0DCB  0020               	movlb	0	; select bank0
 14672  0DCC  0859               	movf	?___ftpack+1,w
 14673  0DCD  0021               	movlb	1	; select bank1
 14674  0DCE  00B4               	movwf	(?___ftadd+1)^(0+128)
 14675  0DCF  0020               	movlb	0	; select bank0
 14676  0DD0  085A               	movf	?___ftpack+2,w
 14677  0DD1  0021               	movlb	1	; select bank1
 14678  0DD2  00B5               	movwf	(?___ftadd+2)^(0+128)
 14679  0DD3  0008               	return
 14680  0DD4                     __end_of___ftadd:	
 14681                           
 14682                           	psect	text65
 14683  1F9F                     __ptext65:	
 14684 ;; *************** function ___ftpack *****************
 14685 ;; Defined at:
 14686 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\float.c"
 14687 ;; Parameters:    Size  Location     Type
 14688 ;;  arg             3    8[BANK0 ] unsigned um
 14689 ;;  exp             1   11[BANK0 ] unsigned char 
 14690 ;;  sign            1   12[BANK0 ] unsigned char 
 14691 ;; Auto vars:     Size  Location     Type
 14692 ;;		None
 14693 ;; Return value:  Size  Location     Type
 14694 ;;                  3    8[BANK0 ] float 
 14695 ;; Registers used:
 14696 ;;		wreg, status,2, status,0
 14697 ;; Tracked objects:
 14698 ;;		On entry : 0/0
 14699 ;;		On exit  : 0/0
 14700 ;;		Unchanged: 0/0
 14701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14702 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14704 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14705 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14706 ;;Total ram usage:        8 bytes
 14707 ;; Hardware stack levels used:    1
 14708 ;; Hardware stack levels required when called:    4
 14709 ;; This function calls:
 14710 ;;		Nothing
 14711 ;; This function is called by:
 14712 ;;		___awtoft
 14713 ;;		___ftadd
 14714 ;;		___ftdiv
 14715 ;;		___ftmul
 14716 ;;		___lltoft
 14717 ;; This function uses a non-reentrant model
 14718 ;;
 14719                           
 14720                           
 14721                           ;psect for function ___ftpack
 14722  1F9F                     ___ftpack:	
 14723                           
 14724                           ;incstack = 0
 14725                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 14726  1F9F  0020               	movlb	0	; select bank0
 14727  1FA0  085B               	movf	___ftpack@exp,w
 14728  1FA1  1903               	btfsc	3,2
 14729  1FA2  2FA8               	goto	l5931
 14730  1FA3  085A               	movf	___ftpack@arg+2,w
 14731  1FA4  0459               	iorwf	___ftpack@arg+1,w
 14732  1FA5  0458               	iorwf	___ftpack@arg,w
 14733  1FA6  1D03               	skipz
 14734  1FA7  2FB9               	goto	l5937
 14735  1FA8                     l5931:	
 14736  1FA8  3000               	movlw	0
 14737  1FA9  00D8               	movwf	?___ftpack
 14738  1FAA  3000               	movlw	0
 14739  1FAB  00D9               	movwf	?___ftpack+1
 14740  1FAC  3000               	movlw	0
 14741  1FAD  00DA               	movwf	?___ftpack+2
 14742  1FAE  0008               	return
 14743  1FAF                     l5935:	
 14744  1FAF  3001               	movlw	1
 14745  1FB0  00DD               	movwf	??___ftpack
 14746  1FB1  085D               	movf	??___ftpack,w
 14747  1FB2  07DB               	addwf	___ftpack@exp,f
 14748  1FB3  3001               	movlw	1
 14749  1FB4                     u5835:	
 14750  1FB4  36DA               	lsrf	___ftpack@arg+2,f
 14751  1FB5  0CD9               	rrf	___ftpack@arg+1,f
 14752  1FB6  0CD8               	rrf	___ftpack@arg,f
 14753  1FB7  0B89               	decfsz	9,f
 14754  1FB8  2FB4               	goto	u5835
 14755  1FB9                     l5937:	
 14756  1FB9  30FE               	movlw	254
 14757  1FBA  055A               	andwf	___ftpack@arg+2,w
 14758  1FBB  1903               	btfsc	3,2
 14759  1FBC  2FD2               	goto	l1057
 14760  1FBD  2FAF               	goto	l5935
 14761  1FBE                     l5939:	
 14762  1FBE  3001               	movlw	1
 14763  1FBF  00DD               	movwf	??___ftpack
 14764  1FC0  085D               	movf	??___ftpack,w
 14765  1FC1  07DB               	addwf	___ftpack@exp,f
 14766  1FC2  3001               	movlw	1
 14767  1FC3  07D8               	addwf	___ftpack@arg,f
 14768  1FC4  3000               	movlw	0
 14769  1FC5  1803               	skipnc
 14770  1FC6  3001               	movlw	1
 14771  1FC7  07D9               	addwf	___ftpack@arg+1,f
 14772  1FC8  3000               	movlw	0
 14773  1FC9  1803               	skipnc
 14774  1FCA  3001               	movlw	1
 14775  1FCB  07DA               	addwf	___ftpack@arg+2,f
 14776  1FCC  3001               	movlw	1
 14777  1FCD                     u5855:	
 14778  1FCD  36DA               	lsrf	___ftpack@arg+2,f
 14779  1FCE  0CD9               	rrf	___ftpack@arg+1,f
 14780  1FCF  0CD8               	rrf	___ftpack@arg,f
 14781  1FD0  0B89               	decfsz	9,f
 14782  1FD1  2FCD               	goto	u5855
 14783  1FD2                     l1057:	
 14784  1FD2  30FF               	movlw	255
 14785  1FD3  055A               	andwf	___ftpack@arg+2,w
 14786  1FD4  1903               	btfsc	3,2
 14787  1FD5  2FDF               	goto	l5947
 14788  1FD6  2FBE               	goto	l5939
 14789  1FD7                     l5945:	
 14790  1FD7  3001               	movlw	1
 14791  1FD8  02DB               	subwf	___ftpack@exp,f
 14792  1FD9  3001               	movlw	1
 14793  1FDA                     u5875:	
 14794  1FDA  35D8               	lslf	___ftpack@arg,f
 14795  1FDB  0DD9               	rlf	___ftpack@arg+1,f
 14796  1FDC  0DDA               	rlf	___ftpack@arg+2,f
 14797  1FDD  0B89               	decfsz	9,f
 14798  1FDE  2FDA               	goto	u5875
 14799  1FDF                     l5947:	
 14800  1FDF  1FD9               	btfss	___ftpack@arg+1,7
 14801  1FE0  2FD7               	goto	l5945
 14802  1FE1  185B               	btfsc	___ftpack@exp,0
 14803  1FE2  2FE9               	goto	l1063
 14804  1FE3  30FF               	movlw	255
 14805  1FE4  05D8               	andwf	___ftpack@arg,f
 14806  1FE5  307F               	movlw	127
 14807  1FE6  05D9               	andwf	___ftpack@arg+1,f
 14808  1FE7  30FF               	movlw	255
 14809  1FE8  05DA               	andwf	___ftpack@arg+2,f
 14810  1FE9                     l1063:	
 14811  1FE9  1003               	clrc
 14812  1FEA  0CDB               	rrf	___ftpack@exp,f
 14813  1FEB  085B               	movf	___ftpack@exp,w
 14814  1FEC  00DD               	movwf	??___ftpack
 14815  1FED  01DE               	clrf	??___ftpack+1
 14816  1FEE  01DF               	clrf	??___ftpack+2
 14817  1FEF  3010               	movlw	16
 14818  1FF0                     u5905:	
 14819  1FF0  35DD               	lslf	??___ftpack,f
 14820  1FF1  0DDE               	rlf	??___ftpack+1,f
 14821  1FF2  0DDF               	rlf	??___ftpack+2,f
 14822  1FF3  0B89               	decfsz	9,f
 14823  1FF4  2FF0               	goto	u5905
 14824  1FF5  085D               	movf	??___ftpack,w
 14825  1FF6  04D8               	iorwf	___ftpack@arg,f
 14826  1FF7  085E               	movf	??___ftpack+1,w
 14827  1FF8  04D9               	iorwf	___ftpack@arg+1,f
 14828  1FF9  085F               	movf	??___ftpack+2,w
 14829  1FFA  04DA               	iorwf	___ftpack@arg+2,f
 14830  1FFB  085C               	movf	___ftpack@sign,w
 14831  1FFC  1903               	btfsc	3,2
 14832  1FFD  0008               	return
 14833  1FFE  17DA               	bsf	___ftpack@arg+2,7
 14834  1FFF  0008               	return
 14835  2000                     __end_of___ftpack:	
 14836                           
 14837                           	psect	intentry
 14838  0004                     __pintentry:	
 14839 ;; *************** function _ISRCode *****************
 14840 ;; Defined at:
 14841 ;;		line 70 in file "main.c"
 14842 ;; Parameters:    Size  Location     Type
 14843 ;;		None
 14844 ;; Auto vars:     Size  Location     Type
 14845 ;;		None
 14846 ;; Return value:  Size  Location     Type
 14847 ;;		None               void
 14848 ;; Registers used:
 14849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 14850 ;; Tracked objects:
 14851 ;;		On entry : 0/0
 14852 ;;		On exit  : 0/0
 14853 ;;		Unchanged: 0/0
 14854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14858 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14859 ;;Total ram usage:        1 bytes
 14860 ;; Hardware stack levels used:    1
 14861 ;; Hardware stack levels required when called:    3
 14862 ;; This function calls:
 14863 ;;		_ResultRx
 14864 ;; This function is called by:
 14865 ;;		Interrupt level 1
 14866 ;; This function uses a non-reentrant model
 14867 ;;
 14868                           
 14869  0004                     _ISRCode:	
 14870                           
 14871                           ;incstack = 0
 14872                           ; Regs used in _ISRCode: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 14873  0004  3180               	pagesel	$
 14874  0005  0020               	movlb	0	; select bank0
 14875  0006  087F               	movf	127,w
 14876  0007  00FD               	movwf	??_ISRCode
 14877                           
 14878                           ;main.c: 72: if(IOCBF)
 14879  0008  0027               	movlb	7	; select bank7
 14880  0009  0816               	movf	22,w	;volatile
 14881  000A  1903               	btfsc	3,2
 14882  000B  280F               	goto	i1l826
 14883                           
 14884                           ;main.c: 73: ResultRx();
 14885  000C  319E  2687         	fcall	_ResultRx
 14886  000E  0027               	movlb	7	; select bank7
 14887  000F                     i1l826:	
 14888  000F  087D               	movf	??_ISRCode,w
 14889  0010  0020               	movlb	0	; select bank0
 14890  0011  00FF               	movwf	127
 14891  0012  0009               	retfie
 14892  0013                     __end_of_ISRCode:	
 14893                           
 14894                           	psect	text67
 14895  1E87                     __ptext67:	
 14896 ;; *************** function _ResultRx *****************
 14897 ;; Defined at:
 14898 ;;		line 164 in file "klondike.c"
 14899 ;; Parameters:    Size  Location     Type
 14900 ;;		None
 14901 ;; Auto vars:     Size  Location     Type
 14902 ;;		None
 14903 ;; Return value:  Size  Location     Type
 14904 ;;		None               void
 14905 ;; Registers used:
 14906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 14907 ;; Tracked objects:
 14908 ;;		On entry : 0/0
 14909 ;;		On exit  : 0/0
 14910 ;;		Unchanged: 0/0
 14911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14916 ;;Total ram usage:        1 bytes
 14917 ;; Hardware stack levels used:    1
 14918 ;; Hardware stack levels required when called:    2
 14919 ;; This function calls:
 14920 ;;		i1_SendCmdReply
 14921 ;; This function is called by:
 14922 ;;		_ISRCode
 14923 ;; This function uses a non-reentrant model
 14924 ;;
 14925                           
 14926                           
 14927                           ;psect for function _ResultRx
 14928  1E87                     _ResultRx:	
 14929                           
 14930                           ;klondike.c: 165: TimeOut = 0;
 14931                           
 14932                           ;incstack = 0
 14933                           ; Regs used in _ResultRx: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 14934  1E87  0023               	movlb	3	; select bank3
 14935  1E88  01B7               	clrf	_TimeOut^(0+384)
 14936  1E89                     i1l7951:	
 14937                           ;klondike.c: 167: while(ResultQC < 4) {
 14938                           
 14939  1E89  3004               	movlw	4
 14940  1E8A  0022               	movlb	2	; select bank2
 14941  1E8B  022A               	subwf	_ResultQC^(0+256),w
 14942  1E8C  1803               	btfsc	3,0
 14943  1E8D  2EBE               	goto	i1l7953
 14944                           
 14945                           ;klondike.c: 168: if(RCIF) {
 14946  1E8E  0020               	movlb	0	; select bank0
 14947  1E8F  1E91               	btfss	17,5	;volatile
 14948  1E90  2EA3               	goto	i1l7943
 14949                           
 14950                           ;klondike.c: 169: ResultQue[2+ResultQC++] = RCREG;
 14951  1E91  0023               	movlb	3	; select bank3
 14952  1E92  0819               	movf	25,w	;volatile
 14953  1E93  00FC               	movwf	??_ResultRx
 14954  1E94  0022               	movlb	2	; select bank2
 14955  1E95  082A               	movf	_ResultQC^(0+256),w
 14956  1E96  3E02               	addlw	2
 14957  1E97  3EDA               	addlw	_ResultQue& (0+255)
 14958  1E98  0086               	movwf	6
 14959  1E99  3001               	movlw	1	; select bank3/4
 14960  1E9A  0087               	movwf	7
 14961  1E9B  087C               	movf	??_ResultRx,w
 14962  1E9C  0081               	movwf	1
 14963  1E9D  3001               	movlw	1
 14964  1E9E  00FC               	movwf	??_ResultRx
 14965  1E9F  087C               	movf	??_ResultRx,w
 14966  1EA0  07AA               	addwf	_ResultQC^(0+256),f
 14967                           
 14968                           ;klondike.c: 170: TimeOut = 0;
 14969  1EA1  0023               	movlb	3	; select bank3
 14970  1EA2  01B7               	clrf	_TimeOut^(0+384)
 14971  1EA3                     i1l7943:	
 14972                           
 14973                           ;klondike.c: 171: }
 14974                           ;klondike.c: 172: if(TimeOut++ > 32) {
 14975  1EA3  3001               	movlw	1
 14976  1EA4  00FC               	movwf	??_ResultRx
 14977  1EA5  087C               	movf	??_ResultRx,w
 14978  1EA6  0023               	movlb	3	; select bank3
 14979  1EA7  07B7               	addwf	_TimeOut^(0+384),f
 14980  1EA8  3022               	movlw	34
 14981  1EA9  0237               	subwf	_TimeOut^(0+384),w
 14982  1EAA  1C03               	skipc
 14983  1EAB  2EB2               	goto	i1l712
 14984                           
 14985                           ;klondike.c: 173: Status.Noise++;
 14986  1EAC  3001               	movlw	1
 14987  1EAD  00FC               	movwf	??_ResultRx
 14988  1EAE  087C               	movf	??_ResultRx,w
 14989  1EAF  0022               	movlb	2	; select bank2
 14990  1EB0  07EF               	addwf	(_Status^(0+256)+12),f	;volatile
 14991                           
 14992                           ;klondike.c: 174: goto outrx;
 14993  1EB1  2EDB               	goto	i1l7959
 14994  1EB2                     i1l712:	
 14995                           
 14996                           ;klondike.c: 175: }
 14997                           ;klondike.c: 176: if(RCSTAbits.OERR) {
 14998  1EB2  1C9D               	btfss	29,1	;volatile
 14999  1EB3  2E89               	goto	i1l7951
 15000                           
 15001                           ;klondike.c: 177: if(Status.State == 'W') {
 15002  1EB4  0022               	movlb	2	; select bank2
 15003  1EB5  0863               	movf	_Status^(0+256),w	;volatile
 15004  1EB6  3A57               	xorlw	87
 15005  1EB7  1D03               	skipz
 15006  1EB8  2EDB               	goto	i1l7959
 15007                           
 15008                           ;klondike.c: 178: Status.ErrorCount++;
 15009  1EB9  3001               	movlw	1
 15010  1EBA  00FC               	movwf	??_ResultRx
 15011  1EBB  087C               	movf	??_ResultRx,w
 15012  1EBC  07EA               	addwf	(_Status^(0+256)+7),f	;volatile
 15013                           
 15014                           ;klondike.c: 179: }
 15015                           ;klondike.c: 180: goto outrx;
 15016  1EBD  2EDB               	goto	i1l7959
 15017  1EBE                     i1l7953:	
 15018                           
 15019                           ;klondike.c: 181: }
 15020                           ;klondike.c: 182: }
 15021                           ;klondike.c: 184: if(Status.State == 'W') {
 15022  1EBE  0863               	movf	_Status^(0+256),w	;volatile
 15023  1EBF  3A57               	xorlw	87
 15024  1EC0  1D03               	skipz
 15025  1EC1  2EDB               	goto	i1l7959
 15026                           
 15027                           ;klondike.c: 185: ResultQue[0] = '=';
 15028  1EC2  303D               	movlw	61
 15029  1EC3  00FC               	movwf	??_ResultRx
 15030  1EC4  087C               	movf	??_ResultRx,w
 15031  1EC5  0023               	movlb	3	; select bank3
 15032  1EC6  00DA               	movwf	_ResultQue^(0+384)	;volatile
 15033                           
 15034                           ;klondike.c: 186: ResultQue[1] = Status.WorkID;
 15035  1EC7  0022               	movlb	2	; select bank2
 15036  1EC8  0867               	movf	(_Status^(0+256)+4),w	;volatile
 15037  1EC9  00FC               	movwf	??_ResultRx
 15038  1ECA  087C               	movf	??_ResultRx,w
 15039  1ECB  0023               	movlb	3	; select bank3
 15040  1ECC  00DB               	movwf	(_ResultQue^(0+384)+1)	;volatile
 15041                           
 15042                           ;klondike.c: 187: SendCmdReply(&ResultQue, &ResultQue+1, sizeof(ResultQue)-1);
 15043  1ECD  30DA               	movlw	low _ResultQue
 15044  1ECE  00F6               	movwf	?i1_SendCmdReply
 15045  1ECF  3001               	movlw	high _ResultQue
 15046  1ED0  00F7               	movwf	?i1_SendCmdReply+1
 15047  1ED1  30DB               	movlw	low (_ResultQue+1)
 15048  1ED2  00F8               	movwf	?i1_SendCmdReply+2
 15049  1ED3  3001               	movlw	high (_ResultQue+1)
 15050  1ED4  00F9               	movwf	?i1_SendCmdReply+3
 15051  1ED5  3005               	movlw	5
 15052  1ED6  00FC               	movwf	??_ResultRx
 15053  1ED7  087C               	movf	??_ResultRx,w
 15054  1ED8  00FA               	movwf	?i1_SendCmdReply+4
 15055  1ED9  3194  24E0         	fcall	i1_SendCmdReply
 15056  1EDB                     i1l7959:	
 15057                           ;klondike.c: 188: }
 15058                           ;klondike.c: 190: outrx:
 15059                           
 15060                           
 15061                           ;klondike.c: 191: { RCSTAbits.SPEN = 0; RCSTAbits.SPEN = 1; };
 15062  1EDB  0023               	movlb	3	; select bank3
 15063  1EDC  139D               	bcf	29,7	;volatile
 15064  1EDD  179D               	bsf	29,7	;volatile
 15065                           
 15066                           ;klondike.c: 192: ResultQC = 0;
 15067  1EDE  0022               	movlb	2	; select bank2
 15068  1EDF  01AA               	clrf	_ResultQC^(0+256)
 15069                           
 15070                           ;klondike.c: 193: IOCBF = 0;
 15071  1EE0  0027               	movlb	7	; select bank7
 15072  1EE1  0196               	clrf	22	;volatile
 15073  1EE2  0008               	return
 15074  1EE3                     __end_of_ResultRx:	
 15075                           
 15076                           	psect	text68
 15077  14E0                     __ptext68:	
 15078 ;; *************** function i1_SendCmdReply *****************
 15079 ;; Defined at:
 15080 ;;		line 208 in file "main.c"
 15081 ;; Parameters:    Size  Location     Type
 15082 ;;  cmd             2    6[COMMON] PTR unsigned char 
 15083 ;;		 -> ResultQue(6), OUTPacket(64), 
 15084 ;;  data            2    8[COMMON] PTR unsigned char 
 15085 ;;		 -> ResultQue(6), Cfg(6), ID(12), Status(13), 
 15086 ;;  count           1   10[COMMON] unsigned char 
 15087 ;; Auto vars:     Size  Location     Type
 15088 ;;  SendCmdReply    1   11[COMMON] unsigned char 
 15089 ;; Return value:  Size  Location     Type
 15090 ;;		None               void
 15091 ;; Registers used:
 15092 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 15093 ;; Tracked objects:
 15094 ;;		On entry : 0/0
 15095 ;;		On exit  : 0/0
 15096 ;;		Unchanged: 0/0
 15097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15098 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15100 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15101 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15102 ;;Total ram usage:       14 bytes
 15103 ;; Hardware stack levels used:    1
 15104 ;; Hardware stack levels required when called:    1
 15105 ;; This function calls:
 15106 ;;		i1___wmul
 15107 ;;		i1___bmul
 15108 ;; This function is called by:
 15109 ;;		_ResultRx
 15110 ;; This function uses a non-reentrant model
 15111 ;;
 15112                           
 15113                           
 15114                           ;psect for function i1_SendCmdReply
 15115  14E0                     i1_SendCmdReply:	
 15116                           
 15117                           ;main.c: 209: if(WQI*15 + count + 2 < 64) {
 15118                           
 15119                           ;incstack = 0
 15120                           ; Regs used in i1_SendCmdReply: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
 15121  14E0  087A               	movf	i1SendCmdReply@count,w
 15122  14E1  0020               	movlb	0	; select bank0
 15123  14E2  00D0               	movwf	??i1_SendCmdReply
 15124  14E3  01D1               	clrf	??i1_SendCmdReply+1
 15125  14E4  0022               	movlb	2	; select bank2
 15126  14E5  0842               	movf	_WQI^(0+256),w
 15127  14E6  0020               	movlb	0	; select bank0
 15128  14E7  00D2               	movwf	??i1_SendCmdReply+2
 15129  14E8  01D3               	clrf	??i1_SendCmdReply+3
 15130  14E9  0852               	movf	??i1_SendCmdReply+2,w
 15131  14EA  00F0               	movwf	?i1___wmul
 15132  14EB  0853               	movf	??i1_SendCmdReply+3,w
 15133  14EC  00F1               	movwf	?i1___wmul+1
 15134  14ED  300F               	movlw	15
 15135  14EE  00F2               	movwf	?i1___wmul+2
 15136  14EF  3000               	movlw	0
 15137  14F0  00F3               	movwf	?i1___wmul+3
 15138  14F1  319A  2244  3194   	fcall	i1___wmul
 15139  14F4  0020               	movlb	0	; select bank0
 15140  14F5  0850               	movf	??i1_SendCmdReply,w
 15141  14F6  0770               	addwf	?i1___wmul,w
 15142  14F7  00D4               	movwf	??i1_SendCmdReply+4
 15143  14F8  0851               	movf	??i1_SendCmdReply+1,w
 15144  14F9  3D71               	addwfc	?i1___wmul+1,w
 15145  14FA  00D5               	movwf	??i1_SendCmdReply+5
 15146  14FB  0854               	movf	??i1_SendCmdReply+4,w
 15147  14FC  3E02               	addlw	2
 15148  14FD  00D6               	movwf	??i1_SendCmdReply+6
 15149  14FE  3000               	movlw	0
 15150  14FF  3D55               	addwfc	??i1_SendCmdReply+5,w
 15151  1500  00D7               	movwf	??i1_SendCmdReply+7
 15152  1501  0857               	movf	??i1_SendCmdReply+7,w
 15153  1502  3A80               	xorlw	128
 15154  1503  00FF               	movwf	127
 15155  1504  3080               	movlw	128
 15156  1505  027F               	subwf	127,w
 15157  1506  1D03               	skipz
 15158  1507  2D0A               	goto	u889_25
 15159  1508  3040               	movlw	64
 15160  1509  0256               	subwf	??i1_SendCmdReply+6,w
 15161  150A                     u889_25:	
 15162  150A  1803               	skipnc
 15163  150B  0008               	return
 15164                           
 15165                           ;main.c: 210: INPacket[WQI*15] = cmd[0];
 15166  150C  0876               	movf	i1SendCmdReply@cmd,w
 15167  150D  0086               	movwf	6
 15168  150E  0877               	movf	i1SendCmdReply@cmd+1,w
 15169  150F  0087               	movwf	7
 15170  1510  0801               	movf	1,w
 15171  1511  0020               	movlb	0	; select bank0
 15172  1512  00D0               	movwf	??i1_SendCmdReply
 15173  1513  300F               	movlw	15
 15174  1514  00D1               	movwf	??i1_SendCmdReply+1
 15175  1515  0851               	movf	??i1_SendCmdReply+1,w
 15176  1516  00F0               	movwf	?i1___bmul
 15177  1517  0022               	movlb	2	; select bank2
 15178  1518  0842               	movf	_WQI^(0+256),w
 15179  1519  3199  2128  3194   	fcall	i1___bmul
 15180  151C  3E20               	addlw	32
 15181  151D  0086               	movwf	6
 15182  151E  3002               	movlw	2	; select bank4/5
 15183  151F  0087               	movwf	7
 15184  1520  0020               	movlb	0	; select bank0
 15185  1521  0850               	movf	??i1_SendCmdReply,w
 15186  1522  0081               	movwf	1
 15187                           
 15188                           ;main.c: 211: INPacket[WQI*15 + 1] = SlaveAddress;
 15189  1523  0022               	movlb	2	; select bank2
 15190  1524  082B               	movf	_SlaveAddress^(0+256),w
 15191  1525  0020               	movlb	0	; select bank0
 15192  1526  00D0               	movwf	??i1_SendCmdReply
 15193  1527  300F               	movlw	15
 15194  1528  00D1               	movwf	??i1_SendCmdReply+1
 15195  1529  0851               	movf	??i1_SendCmdReply+1,w
 15196  152A  00F0               	movwf	?i1___bmul
 15197  152B  0022               	movlb	2	; select bank2
 15198  152C  0842               	movf	_WQI^(0+256),w
 15199  152D  3199  2128  3194   	fcall	i1___bmul
 15200  1530  3E01               	addlw	1
 15201  1531  3E20               	addlw	32
 15202  1532  0086               	movwf	6
 15203  1533  3002               	movlw	2	; select bank4/5
 15204  1534  0087               	movwf	7
 15205  1535  0020               	movlb	0	; select bank0
 15206  1536  0850               	movf	??i1_SendCmdReply,w
 15207  1537  0081               	movwf	1
 15208                           
 15209                           ;main.c: 212: for(BYTE n = 0; n < count; n++)
 15210  1538  01FB               	clrf	i1SendCmdReply@n
 15211  1539                     i1l7931:	
 15212  1539  087A               	movf	i1SendCmdReply@count,w
 15213  153A  027B               	subwf	i1SendCmdReply@n,w
 15214  153B  1803               	btfsc	3,0
 15215  153C  2D69               	goto	i1l7933
 15216                           
 15217                           ;main.c: 213: INPacket[WQI*15 + n + 2] = data[n];
 15218  153D  0879               	movf	i1SendCmdReply@data+1,w
 15219  153E  00D1               	movwf	??i1_SendCmdReply+1
 15220  153F  0878               	movf	i1SendCmdReply@data,w
 15221  1540  00D0               	movwf	??i1_SendCmdReply
 15222  1541  087B               	movf	i1SendCmdReply@n,w
 15223  1542  0750               	addwf	??i1_SendCmdReply,w
 15224  1543  0084               	movwf	4
 15225  1544  0851               	movf	??i1_SendCmdReply+1,w
 15226  1545  1803               	skipnc
 15227  1546  0A51               	incf	??i1_SendCmdReply+1,w
 15228  1547  0085               	movwf	5
 15229  1548  0800               	movf	0,w	;code access
 15230  1549  00D2               	movwf	??i1_SendCmdReply+2
 15231  154A  0022               	movlb	2	; select bank2
 15232  154B  0842               	movf	_WQI^(0+256),w
 15233  154C  0020               	movlb	0	; select bank0
 15234  154D  00D3               	movwf	??i1_SendCmdReply+3
 15235  154E  01D4               	clrf	??i1_SendCmdReply+4
 15236  154F  0853               	movf	??i1_SendCmdReply+3,w
 15237  1550  00F0               	movwf	?i1___wmul
 15238  1551  0854               	movf	??i1_SendCmdReply+4,w
 15239  1552  00F1               	movwf	?i1___wmul+1
 15240  1553  300F               	movlw	15
 15241  1554  00F2               	movwf	?i1___wmul+2
 15242  1555  3000               	movlw	0
 15243  1556  00F3               	movwf	?i1___wmul+3
 15244  1557  319A  2244  3194   	fcall	i1___wmul
 15245  155A  0870               	movf	?i1___wmul,w
 15246  155B  077B               	addwf	i1SendCmdReply@n,w
 15247  155C  3E02               	addlw	2
 15248  155D  3E20               	addlw	32
 15249  155E  0086               	movwf	6
 15250  155F  3002               	movlw	2	; select bank4/5
 15251  1560  0087               	movwf	7
 15252  1561  0020               	movlb	0	; select bank0
 15253  1562  0852               	movf	??i1_SendCmdReply+2,w
 15254  1563  0081               	movwf	1
 15255  1564  3001               	movlw	1
 15256  1565  00D0               	movwf	??i1_SendCmdReply
 15257  1566  0850               	movf	??i1_SendCmdReply,w
 15258  1567  07FB               	addwf	i1SendCmdReply@n,f
 15259  1568  2D39               	goto	i1l7931
 15260  1569                     i1l7933:	
 15261                           
 15262                           ;main.c: 214: WQI = (WQI+1) & 3;
 15263  1569  0022               	movlb	2	; select bank2
 15264  156A  0A42               	incf	_WQI^(0+256),w
 15265  156B  3903               	andlw	3
 15266  156C  0020               	movlb	0	; select bank0
 15267  156D  00D0               	movwf	??i1_SendCmdReply
 15268  156E  0850               	movf	??i1_SendCmdReply,w
 15269  156F  0022               	movlb	2	; select bank2
 15270  1570  00C2               	movwf	_WQI^(0+256)
 15271  1571  0008               	return
 15272  1572                     __end_ofi1_SendCmdReply:	
 15273                           
 15274                           	psect	text69
 15275  1928                     __ptext69:	
 15276 ;; *************** function i1___bmul *****************
 15277 ;; Defined at:
 15278 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\bmul.c"
 15279 ;; Parameters:    Size  Location     Type
 15280 ;;  multiplier      1    wreg     unsigned char 
 15281 ;;  multiplicand    1    0[COMMON] unsigned char 
 15282 ;; Auto vars:     Size  Location     Type
 15283 ;;  multiplier      1    2[COMMON] unsigned char 
 15284 ;;  __bmul          1    3[COMMON] unsigned char 
 15285 ;; Return value:  Size  Location     Type
 15286 ;;                  1    wreg      unsigned char 
 15287 ;; Registers used:
 15288 ;;		wreg, status,2, status,0
 15289 ;; Tracked objects:
 15290 ;;		On entry : 0/0
 15291 ;;		On exit  : 0/0
 15292 ;;		Unchanged: 0/0
 15293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15294 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15296 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15297 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15298 ;;Total ram usage:        4 bytes
 15299 ;; Hardware stack levels used:    1
 15300 ;; This function calls:
 15301 ;;		Nothing
 15302 ;; This function is called by:
 15303 ;;		i1_SendCmdReply
 15304 ;; This function uses a non-reentrant model
 15305 ;;
 15306                           
 15307                           
 15308                           ;psect for function i1___bmul
 15309  1928                     i1___bmul:	
 15310                           
 15311                           ;incstack = 0
 15312                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 15313                           ;i1___bmul@multiplier stored from wreg
 15314  1928  00F2               	movwf	i1___bmul@multiplier
 15315  1929  01F3               	clrf	i1___bmul@product
 15316  192A                     i1l6383:	
 15317  192A  1C72               	btfss	i1___bmul@multiplier,0
 15318  192B  2930               	goto	i1l6387
 15319  192C  0870               	movf	i1___bmul@multiplicand,w
 15320  192D  00F1               	movwf	??i1___bmul
 15321  192E  0871               	movf	??i1___bmul,w
 15322  192F  07F3               	addwf	i1___bmul@product,f
 15323  1930                     i1l6387:	
 15324  1930  1003               	clrc
 15325  1931  0DF0               	rlf	i1___bmul@multiplicand,f
 15326  1932  1003               	clrc
 15327  1933  0CF2               	rrf	i1___bmul@multiplier,f
 15328  1934  08F2               	movf	i1___bmul@multiplier,f
 15329  1935  1D03               	skipz
 15330  1936  292A               	goto	i1l6383
 15331  1937  0873               	movf	i1___bmul@product,w
 15332  1938  0020               	movlb	0	; select bank0
 15333  1939  0008               	return
 15334  193A                     __end_ofi1___bmul:	
 15335                           
 15336                           	psect	text70
 15337  1A44                     __ptext70:	
 15338 ;; *************** function i1___wmul *****************
 15339 ;; Defined at:
 15340 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic\wmul.c"
 15341 ;; Parameters:    Size  Location     Type
 15342 ;;  multiplier      2    0[COMMON] unsigned int 
 15343 ;;  multiplicand    2    2[COMMON] unsigned int 
 15344 ;; Auto vars:     Size  Location     Type
 15345 ;;  __wmul          2    4[COMMON] unsigned int 
 15346 ;; Return value:  Size  Location     Type
 15347 ;;                  2    0[COMMON] unsigned int 
 15348 ;; Registers used:
 15349 ;;		wreg, status,2, status,0
 15350 ;; Tracked objects:
 15351 ;;		On entry : 0/0
 15352 ;;		On exit  : 0/0
 15353 ;;		Unchanged: 0/0
 15354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15356 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15358 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15359 ;;Total ram usage:        6 bytes
 15360 ;; Hardware stack levels used:    1
 15361 ;; This function calls:
 15362 ;;		Nothing
 15363 ;; This function is called by:
 15364 ;;		i1_SendCmdReply
 15365 ;; This function uses a non-reentrant model
 15366 ;;
 15367                           
 15368                           
 15369                           ;psect for function i1___wmul
 15370  1A44                     i1___wmul:	
 15371                           
 15372                           ;incstack = 0
 15373                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 15374  1A44  01F4               	clrf	i1___wmul@product
 15375  1A45  01F5               	clrf	i1___wmul@product+1
 15376  1A46                     i1l7911:	
 15377  1A46  1870               	btfsc	i1___wmul@multiplier,0
 15378  1A47  2A4A               	goto	i1l7913
 15379  1A48  0020               	movlb	0	; select bank0
 15380  1A49  2A4E               	goto	i1l1269
 15381  1A4A                     i1l7913:	
 15382  1A4A  0872               	movf	i1___wmul@multiplicand,w
 15383  1A4B  07F4               	addwf	i1___wmul@product,f
 15384  1A4C  0873               	movf	i1___wmul@multiplicand+1,w
 15385  1A4D  3DF5               	addwfc	i1___wmul@product+1,f
 15386  1A4E                     i1l1269:	
 15387  1A4E  3001               	movlw	1
 15388  1A4F                     u886_25:	
 15389  1A4F  35F2               	lslf	i1___wmul@multiplicand,f
 15390  1A50  0DF3               	rlf	i1___wmul@multiplicand+1,f
 15391  1A51  0B89               	decfsz	9,f
 15392  1A52  2A4F               	goto	u886_25
 15393  1A53  3001               	movlw	1
 15394  1A54                     u887_25:	
 15395  1A54  36F1               	lsrf	i1___wmul@multiplier+1,f
 15396  1A55  0CF0               	rrf	i1___wmul@multiplier,f
 15397  1A56  0B89               	decfsz	9,f
 15398  1A57  2A54               	goto	u887_25
 15399  1A58  0871               	movf	i1___wmul@multiplier+1,w
 15400  1A59  0470               	iorwf	i1___wmul@multiplier,w
 15401  1A5A  1D03               	skipz
 15402  1A5B  2A46               	goto	i1l7911
 15403  1A5C  0875               	movf	i1___wmul@product+1,w
 15404  1A5D  01F1               	clrf	?i1___wmul+1
 15405  1A5E  07F1               	addwf	?i1___wmul+1,f
 15406  1A5F  0874               	movf	i1___wmul@product,w
 15407  1A60  01F0               	clrf	?i1___wmul
 15408  1A61  07F0               	addwf	?i1___wmul,f
 15409  1A62  0020               	movlb	0	; select bank0
 15410  1A63  0008               	return
 15411  1A64                     __end_ofi1___wmul:	
 15412  007E                     btemp	set	126	;btemp
 15413  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    174
    Data        63
    BSS         160
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            32     24      32
    BANK1            80     78      80
    BANK2            80     31      80
    BANK3            80      0      74
    BANK4            16      0      12
    BANK5            16      0      16
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8             8      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 4
		 -> UpdateClock@CLOCK_F_VALUE(BANK2[4]), 

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___lmul	unsigned long  size(1) Largest target is 0

    ?___lldiv	unsigned long  size(1) Largest target is 0

    ?___lltoft	float  size(1) Largest target is 0

    ?___ftdiv	float  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 0

    ?___ftadd	float  size(1) Largest target is 0

    ?___ftmul	float  size(1) Largest target is 0

    ?___ftneg	float  size(1) Largest target is 0

    ?___awtoft	float  size(1) Largest target is 0

    ?___awmod	int  size(1) Largest target is 0

    ?___awdiv	int  size(1) Largest target is 0

    ?___wmul	unsigned int  size(1) Largest target is 0

    ?_rotate	unsigned long  size(1) Largest target is 0

    ?_memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    ?_USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 32
		 -> USTATcopy(BANK1[1]), USBActiveConfiguration(BANK2[1]), NULL(NULL[0]), BDT(BANK0[32]), 

    memset@p1	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    SendCmdReply@data	PTR unsigned char  size(2) Largest target is 13
		 -> ResultQue(BANK3[6]), Cfg(BANK3[6]), ID(CODE[12]), Status(BANK2[13]), 

    SendCmdReply@cmd	PTR unsigned char  size(2) Largest target is 64
		 -> ResultQue(BANK3[6]), OUTPacket(BANK5[64]), 

    USBGenericInHandle	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBGenericOutHandle	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    ProcessCmd@cmd	PTR unsigned char  size(1) Largest target is 64
		 -> OUTPacket(BANK5[64]), 

    I2CInBuf	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    AsicPreCalc@work	PTR struct _worktask size(2) Largest target is 360
		 -> WorkQue(BIGRAM[360]), 

    SendAsicData@work	PTR struct _worktask size(2) Largest target is 360
		 -> WorkQue(BIGRAM[360]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(1) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(1) Largest target is 32
		 -> configDescriptor1(CODE[32]), 

    sp__memset	PTR void  size(2) Largest target is 32
		 -> USBAlternateInterface(BANK2[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@data	PTR unsigned char  size(1) Largest target is 64
		 -> INPacket(BANK4[64]), OUTPacket(BANK5[64]), 

    sp__USBTransferOnePacket	PTR void  size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    S118$pFunc	PTR FTN()void  size(1) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(1) Largest target is 0

    S108$wRam	PTR unsigned short  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned short  size(1) Largest target is 0

    S108$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S66$wRom	PTR const unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned short  size(1) Largest target is 0

    S66$wRam	PTR unsigned short  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned short  size(1) Largest target is 0

    S66$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S66$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRCode in COMMON

    _ISRCode->_ResultRx
    _ResultRx->i1_SendCmdReply
    i1_SendCmdReply->i1___wmul

Critical Paths under _main in BANK0

    _SendCmdReply->___wmul
    _AsicPreCalc->_rotate
    _SendAsicData->___wmul
    _UserInit->_DetectAsics
    _UpdateClock->___lltoft
    ___lltoft->___ftpack
    ___lldiv->___lmul
    ___ftdiv->___lltoft
    _DetectAsics->___awdiv
    _UpdateFanLevel->___awtoft
    ___fttol->___awtoft
    ___fttol->___lltoft
    ___ftneg->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCBInitEP
    _USBCBInitEP->_USBEnableEndpoint
    _USBTransferOnePacket->___bmul
    _USBEnableEndpoint->_USBConfigureEndpoint
    ___ftadd->___awtoft
    ___ftadd->___lltoft

Critical Paths under _ISRCode in BANK0

    _ResultRx->i1_SendCmdReply

Critical Paths under _main in BANK1

    _ProcessCmd->_UpdateClock
    _AsicPushWork->_AsicPreCalc
    _InitWorkTick->_UpdateClock
    _UpdateClock->___fttol
    ___ftdiv->___ftadd
    _WorkTick->_UpdateFanLevel
    _UpdateFanLevel->___fttol
    ___fttol->___ftdiv
    ___ftneg->___ftmul
    _USBDeviceTasks->_USBCtrlEPService
    _USBCtrlEPService->_USBCtrlTrfSetupHandler
    _USBCtrlTrfSetupHandler->_USBCheckStdRequest
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    ___ftadd->___ftneg

Critical Paths under _ISRCode in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_ProcessIO
    _ProcessIO->_ProcessCmd
    _ProcessCmd->_UpdateClock
    _InitWorkTick->_UpdateClock

Critical Paths under _ISRCode in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRCode in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRCode in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRCode in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRCode in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRCode in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRCode in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRCode in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRCode in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRCode in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRCode in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   23790
                     _USBDeviceTasks
                       _AsicPushWork
                           _WorkTick
                   _InitializeSystem
                          _ProcessIO
 ---------------------------------------------------------------------------------
 (1) _ProcessIO                                            8     8      0    6479
                                             23 BANK2      8     8      0
               _USBTransferOnePacket
                         _ProcessCmd
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _ProcessCmd                                           7     7      0    5829
                                             16 BANK2      7     7      0
                       _AsicPushWork
                       _SendCmdReply
                        _UpdateClock
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _SendCmdReply                                        14     9      5     495
                                             14 BANK0      6     1      5
                                              0 BANK1      8     8      0
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     136
                                              8 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _AsicPushWork                                         5     5      0    2034
                                             69 BANK1      5     5      0
                       _SendAsicData
                        _AsicPreCalc
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     136
                                              8 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _AsicPreCalc                                         69    67      2    1836
                                              0 BANK1     69    67      2
                             _rotate
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _rotate                                              13     8      5      88
                                              8 BANK0     13     8      5
 ---------------------------------------------------------------------------------
 (4) _SendAsicData                                         6     4      2      62
                                             14 BANK0      6     4      2
                             _Send32
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _Send32                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     0     0      0    3729
                      _USBDeviceInit
                           _UserInit
 ---------------------------------------------------------------------------------
 (2) _UserInit                                             0     0      0    3333
                        _DetectAsics
                            _InitFAN
                     _InitTempSensor
                       _InitWorkTick
                       _InitResultRx
 ---------------------------------------------------------------------------------
 (3) _InitResultRx                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitWorkTick                                         0     0      0    2755
                        _UpdateClock
 ---------------------------------------------------------------------------------
 (3) _UpdateClock                                         32    28      4    2755
                                             62 BANK1     16    12      4
                                              0 BANK2     16    16      0
                            ___ftadd
                            ___ftdiv
                            ___fttol
                            ___lldiv
                           ___lltoft
                             ___lmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     162
                                              8 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8      92
                                              8 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             6     2      4     278
                                             16 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     162
                                             20 BANK0      1     1      0
                                              0 BANK1     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6     489
                                             32 BANK1     16    10      6
                           ___ftpack
                            ___ftadd (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitTempSensor                                       1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _InitFAN                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DetectAsics                                         10    10      0     578
                                             17 BANK0      7     7      0
                                              0 BANK1      3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     445
                                              8 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _WorkTick                                             3     3      0    2500
                                             69 BANK1      3     3      0
                     _UpdateFanLevel
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     296
                                              8 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _UpdateFanLevel                                       7     7      0    2204
                                             62 BANK1      7     7      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     252
                                             48 BANK1     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      45
                                             16 BANK1      3     0      3
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6     535
                                              0 BANK1     16    10      6
                           ___ftpack
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3     300
                                             16 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       3     3      0    9048
                                             18 BANK1      3     3      0
                      _USBDeviceInit
                 _USBWakeFromSuspend
                         _USBSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
          _USBCtrlEPAllowStatusStage
                    _USBStallHandler
                   _USBCtrlEPService
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     4     4      0    5563
                                             14 BANK1      4     4      0
             _USBCtrlTrfSetupHandler
               _USBCtrlTrfOutHandler
                _USBCtrlTrfInHandler
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  3     3      0     170
                                             11 BANK0      3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 2     2      0     167
                                             14 BANK0      2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  4     4      0     167
                                             10 BANK0      4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               1     1      0    5127
                                             13 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCtrlEPServiceComplete
                 _USBCheckStdRequest
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   1     1      0    3984
                                             12 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                _USBStdSetCfgHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
            _USBStdFeatureReqHandler
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    1530
                                              6 BANK1      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               2     2      0      68
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  3     3      0       0
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  5     5      0    1379
                                              6 BANK1      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               9     3      6     137
                                              8 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             2     2      0     136
                                             13 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
            _USBCtrlEPAllowDataStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              2     2      0     136
                                             11 BANK0      2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfTxService                                  3     3      0     136
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              8 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           1     1      0    1007
                                              6 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   1     1      0    1007
                                              6 BANK1      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    1007
                                              0 BANK1      6     0      6
                       _USBCBSuspend
               _USBCBWakeFromSuspend
                  _USBCB_SOF_Handler
                  _USBCBErrorHandler
                 _USBCBCheckOtherReq
              _USBCBStdSetDscHandler
                        _USBCBInitEP
 ---------------------------------------------------------------------------------
 (7) _USBCBInitEP                                          3     3      0     976
                                             21 BANK0      3     3      0
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                 7     4      3     440
                                             12 BANK0      7     4      3
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _USBEnableEndpoint                                    6     5      1     536
                                             15 BANK0      6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) _USBConfigureEndpoint                                 7     6      1     316
                                              8 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (7) _USBCBStdSetDscHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBCheckOtherReq                                   0     0      0       0
              _USBCheckVendorRequest
 ---------------------------------------------------------------------------------
 (8) _USBCheckVendorRequest                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBErrorHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCB_SOF_Handler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBWakeFromSuspend                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCBSuspend                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        6     6      0     396
                                              8 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    1049
                                             19 BANK1     13     7      6
                           ___ftpack
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5     209
                                              8 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5     209
                                              8 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISRCode                                             1     1      0    1210
                                             13 COMMON     1     1      0
                           _ResultRx
 ---------------------------------------------------------------------------------
 (11) _ResultRx                                            1     1      0    1210
                                             12 COMMON     1     1      0
                     i1_SendCmdReply
 ---------------------------------------------------------------------------------
 (12) i1_SendCmdReply                                     14     9      5    1210
                                              6 COMMON     6     1      5
                                              0 BANK0      8     8      0
                           i1___wmul
                           i1___bmul
 ---------------------------------------------------------------------------------
 (13) i1___bmul                                            4     3      1     212
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (13) i1___wmul                                            6     2      4     372
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USBDeviceTasks
     _USBDeviceInit
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
         _USBCBErrorHandler
         _USBCBCheckOtherReq
           _USBCheckVendorRequest
         _USBCBStdSetDscHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
             ___bmul (ARG)
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCBSuspend
         _USBCBWakeFromSuspend
         _USBCB_SOF_Handler
         _USBCBErrorHandler
         _USBCBCheckOtherReq
           _USBCheckVendorRequest
         _USBCBStdSetDscHandler
         _USBCBInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
             ___bmul (ARG)
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCBSuspend
       _USBCBWakeFromSuspend
       _USBCB_SOF_Handler
       _USBCBErrorHandler
       _USBCBCheckOtherReq
         _USBCheckVendorRequest
       _USBCBStdSetDscHandler
       _USBCBInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
           ___bmul (ARG)
     _USBCtrlEPAllowStatusStage
     _USBStallHandler
     _USBCtrlEPService
       _USBCtrlTrfSetupHandler
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCBSuspend
           _USBCBWakeFromSuspend
           _USBCB_SOF_Handler
           _USBCBErrorHandler
           _USBCBCheckOtherReq
             _USBCheckVendorRequest
           _USBCBStdSetDscHandler
           _USBCBInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
               ___bmul (ARG)
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
         _USBCheckStdRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCBSuspend
             _USBCBWakeFromSuspend
             _USBCB_SOF_Handler
             _USBCBErrorHandler
             _USBCBCheckOtherReq
               _USBCheckVendorRequest
             _USBCBStdSetDscHandler
             _USBCBInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
                 ___bmul (ARG)
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
               _USBCBErrorHandler
               _USBCBCheckOtherReq
                 _USBCheckVendorRequest
               _USBCBStdSetDscHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
                   ___bmul (ARG)
             _memset
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCBSuspend
               _USBCBWakeFromSuspend
               _USBCB_SOF_Handler
               _USBCBErrorHandler
               _USBCBCheckOtherReq
                 _USBCheckVendorRequest
               _USBCBStdSetDscHandler
               _USBCBInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
                   ___bmul (ARG)
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
   _AsicPushWork
     _SendAsicData
       _Send32
       ___wmul (ARG)
     _AsicPreCalc
       _rotate
       ___wmul (ARG)
     ___wmul
   _WorkTick
     _UpdateFanLevel
       ___awtoft
         ___ftpack
       ___ftadd
         ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___awtoft (ARG)
           ___ftpack
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftpack
           ___ftadd (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
         ___lltoft (ARG)
           ___ftpack
     ___awmod
   _InitializeSystem
     _USBDeviceInit
     _UserInit
       _DetectAsics
         ___awdiv
       _InitFAN
       _InitTempSensor
       _InitWorkTick
         _UpdateClock
           ___ftadd
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___ftdiv
             ___ftpack
             ___ftadd (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
               ___lltoft (ARG)
                 ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
               ___lltoft (ARG)
                 ___ftpack
             ___ftdiv (ARG)
               ___ftpack
               ___ftadd (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                 ___lltoft (ARG)
                   ___ftpack
               ___lltoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___lldiv
             ___lmul (ARG)
           ___lltoft
             ___ftpack
           ___lmul
           ___lwdiv
       _InitResultRx
   _ProcessIO
     _USBTransferOnePacket
       ___bmul (ARG)
     _ProcessCmd
       _AsicPushWork
         _SendAsicData
           _Send32
           ___wmul (ARG)
         _AsicPreCalc
           _rotate
           ___wmul (ARG)
         ___wmul
       _SendCmdReply
         ___bmul
         ___wmul
       _UpdateClock
         ___ftadd
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftpack
           ___ftadd (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___ftdiv (ARG)
             ___ftpack
             ___ftadd (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
               ___lltoft (ARG)
                 ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___lldiv
           ___lmul (ARG)
         ___lltoft
           ___ftpack
         ___lmul
         ___lwdiv
       ___wmul
     ___bmul

 _ISRCode (ROOT)
   _ResultRx
     i1_SendCmdReply
       i1___wmul
       i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0      11       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20     18      20       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4E      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     1F      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4A      11       92.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            10      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               10      0       C      13       75.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            10      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               10      0      10      15      100.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     174      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8                8      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     185      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Wed Dec 25 01:35:24 2013

                              _USB_SD_Ptr 0801                                         pc 0002  
                          ___bmul@product 005A                               _SSPSTATbits 0214  
                                      _ID 089F                    ?_USBCheckVendorRequest 0070  
                            ___awdiv@sign 005E                             _USBDeviceInit 1756  
                     ___wmul@multiplicand 005A                          i1___wmul@product 0074  
                            ___ftadd@exp1 00BF                              ___ftadd@exp2 00BE  
                     __end_of_AsicPreCalc 0491                                       LATC 010E  
                              _BankRanges 0340      USER_USB_CALLBACK_EVENT_HANDLER@event 00A0  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 00A2                              ___ftadd@sign 00BD  
                     __end_of_DetectAsics 0A60                                       l140 0BE6  
                                     l142 0BEA                                       l128 179B  
                                     l208 1102                                       l330 1F40  
                                     l146 0C10                                       l315 1021  
                                     l155 0C77                                       l332 1EEB  
                                     l156 0CCD                                       l341 1F15  
             __end_of_USBStdGetDscHandler 12B6                                       l318 1057  
                                     l271 1D90                                       l353 0F49  
                                     l274 1DCF                                       l354 0F4A  
                                     l275 1D9C                                       l276 1D9F  
                                     l366 0FBC                                       l358 0F7D  
                                     l722 07D8                                       l910 1C61  
                                     l742 0589                                       l673 0EE2  
                                     _BDT 0020                                       l829 19A3  
                                     l679 0E53                                       _GIE 005F  
                                     _PR2 001B                                       _UIE 0E92  
                                     _UIR 0E90                                       _Cfg 01E2  
                                     _WQI 0142                                       _WQX 0143  
                                     _buf 02E0                                _USBSuspend 19EE  
                                     _ptr 006F                              ___awmod@sign 005E  
                    USBStdSetCfgHandler@i 00AA                      USBStdSetCfgHandler@p 00A7  
                                     wreg 0009                            _USBDeviceTasks 0BD9  
                          _USBDeviceState 00EE                    ??_USBCBWakeFromSuspend 0058  
                                    S8031 1800                     ??_USBCtrlTrfRxService 005A  
                USBEnableEndpoint@options 005F                                      INDF1 0001  
                            __CFG_LVP$OFF 0000                                      FSR1H 0007  
                                    FSR1L 0006                              ___ftdiv@cntr 00CA  
                            ___ftdiv@sign 00CF                                      l1063 1FE9  
                                    l1057 1FD2                                      l1086 0D6F  
                                    l1269 1A2F                USBConfigureEndpoint@handle 005E  
                                    l6021 1CBA                                      l6013 1CB4  
                                    l6103 0D3B                                      l6023 1CC6  
                                    l6031 1CDB                                      l6121 0D81  
                                    l6105 0D45                                      l6009 1CAD  
                                    l6115 0D61                                      l6107 0D4A  
                                    l7011 161F                                      l6035 1CE3  
                                    l6027 1CD2                                      l6125 0D93  
                                    l6117 0D6B                                      l6109 0D4E  
                                    l7101 1A6B                                      l7021 1638  
                                    l6221 0BA3                                      l6205 0B7F  
                                    l6135 0DAE                                      l7031 1685  
                                    l7023 1654                                      l6047 1AF2  
                                    l6151 0A8D                                      l6303 1E7E  
                                    l6311 1B33                                      l7121 12A3  
                                    l6217 0B9B                                      l6209 0B87  
                                    l6145 0A77                                      l6313 1B43  
                                    l6075 0CF8                                      l7051 145C  
                                    l7123 12A6                                      l7115 1281  
                                    l7107 1242                                      l6323 1B98  
                                    l5283 00DB                                      l6085 0D0E  
                                    l7109 124C                                      l7037 16A6  
                                    l7029 167D                                      l7205 101B  
                                    l6245 1355                                      l6173 0AE7  
                                    l6165 0ACE                                      l6341 1BBE  
                                    l5277 00A5                                      l6079 0CFF  
                                    l7127 12A9                                      l7215 1043  
                                    l6271 13A0                                      l6263 1385  
                                    l6319 1B8E                                      l6343 1BCA  
                                    l6097 0D28                                      l8033 1C42  
                                    l4665 1ADE                                      l7305 0F58  
                                    l7225 1060                                      l6193 0B44  
                                    l6273 13A9                                      l6265 1393  
                                    l5721 1F66                                      l6353 1BE5  
                                    l8035 1C5C                                      l4667 1AE0  
                                    l7091 14CB                                      l7075 1498  
                                    l7059 146C                                      l7139 1DAB  
                                    l7315 0F76                                      l7251 1F09  
                                    l7235 1EF3                                      l7227 1061  
                                    l7219 104F                                      l6187 0B2E  
                                    l6275 13AC                                      l5723 1F6C  
                                    l6291 1E53                                      l6605 17E5  
                                    l7069 1484                                      l7149 1DC3  
                                    l7341 0FE2                                      l7317 0F86  
                                    l7261 1F25                                      l7237 1EF6  
                                    l6701 0C6F                                      l6349 1BDC  
                                    l7343 0FEA                                      l7327 0FAB  
                                    l7247 1F03                                      l7239 1EF9  
                                    l6711 0C7D                                      l6631 0BED  
                                    l6279 13BA                                      l5751 07BB  
                                    l5671 0515                                      l7337 0FC3  
                                    l7329 0FB0                                      l7281 0EFA  
                                    l7249 1F06                                      l7265 1F35  
                                    l7193 1B82                                      l6721 0C98  
                                    l6289 1E43                                      l5931 1FA8  
                                    l7283 0EFC                                      l7187 1B60  
                                    l6651 0C0A                                      l6643 0BFD  
                                    l5747 07A2                                      l6299 1E73  
                                    l6565 1782                                      l6557 1775  
                                    l6549 1765                                      l5935 1FAF  
                                    l6911 1D22                                      l6727 0CB1  
                                    l6671 0C2C                                      l6663 0C20  
                                    l5945 1FD7                                      l5937 1FB9  
                                    l6585 17A0                                      l6761 1C2D  
                                    l7297 0F2B                                      l6841 122C  
                                    l6729 0CC1                                      l7801 1190  
                                    l5947 1FDF                                      l5939 1FBE  
                                    l6587 17B0                                      l6763 1C30  
                                    l6755 1C24                                      l6771 1C39  
                                    l6907 1D0D                                      l6835 1218  
                                    l6683 0C4C                                      l7723 1713  
                                    l7635 0DD7                                      l6853 1B1A  
                                    l6765 1C33                                      l6757 1C27  
                                    l6925 13DC                                      l6829 11EF  
                                    l6693 0C59                                      l6677 0C40  
                                    l7725 174D                                      l7661 0E2F  
                                    l6599 17C6                                      l6767 1C36  
                                    l6759 1C2A                                      l6839 1229  
                                    l6687 0C52                                      l7743 0A07  
                                    l7671 0E5E                                      l7655 0E1A  
                                    l7647 0E16                                      l6849 1B12  
                                    l6793 1088                                      l6929 13E6  
                                    l7745 0A57                                      l7681 0E8F  
                                    l7657 0E2D                                      l6867 1C90  
                                    l6939 140D                                      l6947 142A  
                                    l7851 1DF4                                      l7755 19AB  
                                    l6885 08C7                                      l6877 08B9  
                                    l6949 142F                                      l6957 144C  
                                    l6981 110E                                      l6973 10DF  
                                    l7861 1DFC                                      l7845 1DE9  
                                    l7677 0E75                                      l6895 08F2  
                                    l7863 1E08                                      l7687 0EAC  
                                    l7679 0E7B                                      l7695 0ECA  
                                    l7759 19B3                                      l6969 10DB  
                                    l7873 1E23                                      l7793 117A  
                                    l7785 115A                                      l7883 193D  
                                    l7787 115C                                      l6989 1118  
                                    l7877 1E2B                                      l7869 1E1A  
                                    l7887 1943                                      l7799 118E  
                                    l7899 1A29                                      _LATC 010E  
                                    u5005 0266                                      u5015 027B  
                                    u5105 03CD                                      u5025 0290  
                                    u5115 03E2                                      u5035 02A5  
                                    u5125 0422                                      u5045 02BB  
                                    u5135 043A                                      u5055 02EA  
                                    u5145 044F                                      u5065 032D  
                                    u5155 0465                                      u5075 0371  
                                    u5165 047A                                      u5085 0386  
                                    u6055 1CBD                                      u5095 03A8  
                                    u7105 1785                                      u5505 0524  
                                    u5514 05E2                                      u6235 0D29  
                                    u6075 1CCC                                      u5515 05E0  
                                    _RCIF 008D                                      u6325 0D62  
                                    u6085 1CD3                                      u5605 1F5F  
                                    u6405 0AAF                                      u5525 061F  
                                    u6415 0ACF                                      u5535 063A  
                                    u4840 1BFF                                      u6265 0D3C  
                                    u6505 0B88                                      u6425 0ADE  
                                    u5545 0655                                      u4850 1C10  
                                    u6515 0B8E                                      u6435 0AE8  
                                    u4915 00E4                                      u4860 009B  
                                    u5645 0781                                      u5485 04A0  
                                    u4845 1BFA                                      u4925 00F9  
                                    u6295 0D4F                                      u5655 0798  
                                    u5495 04B0                                      u4855 1C0C  
                                    u4935 011A                     ??_USBCtrlTrfTxService 0058  
                                    u5905 1FF0                                      u6545 0BA4  
                                    u6625 1386                                      u5665 07B7  
                                    u4945 013E                                      u5835 1FB4  
                                    u6555 0BAA                                      u6475 0B50  
                                    u5675 07D0                                      u6395 0A9F  
                                    u6715 1E54                                      u4955 0161  
                                    u8420 0E06                                      u6485 0B60  
                                    u6725 1E68                                      u4965 0190  
                                    u4885 00C3                                      u5855 1FCD  
                                    u7535 1C6B                                      u7615 1D17  
                                    u6655 13A1                                      u6735 1E74  
                                    u4975 01A5                                      _UCFG 0E91  
                                    u7545 1C71                                      u7465 11CA  
                                    u6825 1BC1                                      u4985 01D4  
                                    u8505 16E0                                      u8450 0E43  
                                    u5875 1FDA                                      u7555 1C79  
                                    u6595 135C                                      u6755 1B38  
                                    u4995 0217                                      _UEP0 0E98  
                                    u8525 0A12                                      u6845 1BCB  
                                    _UEP1 0E99                                      u8535 0A29  
                                    u6695 1E46                                      u6855 1BD5  
                                    u8545 0A40                                      u6785 1B99  
                                    u6865 1BDD                                      u7755 1618  
                                    u6795 1BA0                                      _UEIE 0E97  
                                    u8725 1DFF                                      u7865 1A75  
                                    u8745 1E09                                      u8825 1A30  
                                    u8755 1E13                                      u8835 1A35  
                                    u8765 1E1B                                      _UEIR 0E93  
                                    _UCON 0E8E                                      _TMR0 0015  
                         __end_of_ISRCode 0013                                      _Step 0120  
  USBStdFeatureReqHandler@current_ep_data 00AA                                      _pDst 0137  
                                    _main 19A0                              ___ftpack@arg 0058  
                            ___ftpack@exp 005B                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf0 0000                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                    __end_of_AsicPushWork 133C                                      start 0013  
                           __CFG_IESO$OFF 0000                        _USBCBCheckOtherReq 07FC  
              __end_of_USBCheckStdRequest 1F41                    ??_USBCtrlTrfOutHandler 005E  
                       ___bmul@multiplier 005B                              ___ftmul@cntr 00AE  
                            ___ftmul@sign 00AF                 ??_USBStdFeatureReqHandler 00A6  
                         __end_of_InitFAN 1A26                  ??_USBStdGetStatusHandler 0058  
                            ___fttol@exp1 00DD                              ___fttol@lval 00D9  
                          ?_USBDeviceInit 0070                             ?_InitResultRx 0070  
                     ?_USBCBCheckOtherReq 0070                           i1SendCmdReply@n 007B  
                                   ?_main 0070                           __end_of___awdiv 1E32  
                         __end_of___ftadd 0DD4                             __CFG_WDTE$OFF 0000  
                         __end_of___awmod 1CEA         __size_of_USBCtrlEPServiceComplete 0079  
                         __end_of___ftdiv 0B17                           __end_of___ftneg 1904  
                         __end_of___lldiv 1E87                           __end_of___ftmul 0BD9  
                         ___awdiv@divisor 0058                    __end_of_USBDeviceTasks 0CD0  
                         __end_of___fttol 13C3                 ?_USBCtrlEPServiceComplete 0070  
                                   _IOCBF 0396                           __end_of___lwdiv 1BEC  
                                   i1l712 1EB2                                     i1l826 000F  
                                   _UADDR 0E96                           ___awdiv@counter 005D  
                                   _RCREG 0199                             ?_InitWorkTick 0070  
                                   _USTAT 0E8F        __size_of_USBCtrlEPAllowStatusStage 0064  
                     ___lmul@multiplicand 005C                             __CFG_PWRTE$ON 0000  
                            ___lltoft@exp 0065                                     _Error 01E0  
                          __CFG_FCMEN$OFF 0000           __end_of_USBCtrlEPAllowDataStage 1D3A  
                                   _sd000 08AB                                     _sd001 0805  
                                   _sd002 0839                  UpdateClock@CLOCK_F_VALUE 014C  
                           ___awtoft@sign 0065                             ___ftpack@sign 005C  
                    ??_USBCBCheckOtherReq 0058                          __end_ofi1___bmul 193A  
                        __end_ofi1___wmul 1A64                  UpdateClock@CLOCK_R_VALUE 0148  
                        ??i1_SendCmdReply 0050                                     status 0003  
                     i1___wmul@multiplier 0070                                     wtemp0 007E  
            __size_of_USBStdSetCfgHandler 008F                            __CFG_MCLRE$OFF 0000  
                         __initialization 0015                               _AsicPreCalc 0091  
                            __end_of_main 19B7                               _DetectAsics 09A9  
                          ??_InitResultRx 0058                 __size_of_USBCtrlEPService 007C  
                                  ??_main 0068                             ___fttol@sign1 00D8  
                          ??_InitWorkTick 0066                 __size_of_InitializeSystem 0017  
                         ?_USBDeviceTasks 0070                               ?_USBSuspend 0070  
                        __end_of_ResultRx 1EE3                          UpdateClock@SPEED 00DE  
                               ??_ISRCode 007D                            _InitTempSensor 1972  
                        __end_of_UserInit 1972                                    _I2CCmd 006A  
                                  _ACTCON 039B                                    _ADRESH 009C  
                        ___awdiv@dividend 005A                          __end_of___awtoft 1B09  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                          __end_of___ftpack 2000  
                        __end_of_WorkTick 1F9F                          __end_of___lltoft 1B58  
                                  i1l1269 1A4E                                    i1l6383 192A  
                                  i1l6387 1930                                    i1l7911 1A46  
                                  i1l7913 1A4A                                    i1l7931 1539  
                                  i1l7933 1569                                    i1l7943 1EA3  
                                  i1l7951 1E89                                    i1l7953 1EBE  
                                  i1l7959 1EDB                                    _OSCCON 0099  
                                  _TMR0IF 005A                                    _TMR0CS 04AD  
                                  _PWM1OE 309E                                    _TMR2IF 0089  
                                  _TMR2ON 00E2                                    _SSP1EN 10AD  
                                  _SSP1IF 008B                                    u886_25 1A4F  
                                  u887_25 1A54                                    u889_25 150A  
                                  _SSPADD 0212                                    _SSPBUF 0211  
                               ??_InitFAN 0058                                _TempTarget 01E9  
                                  _Send32 08FD                         _shortPacketStatus 0139  
                           ?_SendCmdReply 005E                           USBDeviceTasks@i 00B4  
                           ?_SendAsicData 005E               USBStdFeatureReqHandler@pUEP 00A8  
                USBTransferOnePacket@data 005D                USBCtrlTrfInHandler@lastDTS 005D  
                                  _Status 0163                           ??_USBDeviceInit 0058  
                                  ___bmul 193A                                    ___lmul 1B85  
                                  ___wmul 1A26                                 ??___awdiv 005C  
                               ??___ftadd 00B9                                 ??___awmod 005C  
                               ??___ftdiv 00C6                                 ??___ftneg 0066  
                               ??___lldiv 0064                                 ??___ftmul 00A6  
                               ??___fttol 00D4                              ?_USBCBInitEP 0070  
                               ??___lwdiv 005C                         _USBEnableEndpoint 1B09  
         __size_of_USBStdGetStatusHandler 0053                                    _memset 1A64  
                        ___awdiv@quotient 005F                           ___awmod@divisor 0058  
                              _ProcessCmd 0DD4                           ___awmod@counter 005D  
                      ?_USBEnableEndpoint 005F                                    _rotate 1BEC  
                   _USBCBStdSetDscHandler 07FF                     ___ftmul@f3_as_product 00AB  
           __size_of_USBTransferOnePacket 004E                        __size_of_ProcessIO 007A  
                  __end_of_InitTempSensor 1989                       ??_USBEnableEndpoint 0060  
                             _CtrlTrfData 0048                     __size_of_AsicPushWork 0086  
                    _controlTransferState 006C                             ??_UpdateClock 00E2  
                 __end_of__initialization 008E                                ___ftadd@f1 00B3  
                              ___ftadd@f2 00B6                                ___ftdiv@f1 00C3  
                              ___ftdiv@f2 00C0                                ___ftdiv@f3 00CB  
                __size_of_USBStallHandler 0022                            ??_SendCmdReply 00A0  
                              ___ftneg@f1 00B0                                ___awtoft@c 0060  
                     ___bmul@multiplicand 0058                            ??_SendAsicData 0060  
                     __size_of_USBSuspend 001C                                ___ftmul@f1 00A0  
                              ___ftmul@f2 00A3                   ??_USBCheckVendorRequest 0058  
                              ___fttol@f1 00D0                            __pcstackCOMMON 0070  
               __end_of_USBEnableEndpoint 1B2E                             __end_of_sd000 08AF  
                           __end_of_sd001 0839                             __end_of_sd002 086D  
                            __pidataBANK2 07EF                              __pidataBANK3 18F5  
                            __pidataBANK4 191C                              __pidataBANK6 1A84  
                       _USBCB_SOF_Handler 1000                                ___lltoft@c 0060  
        __size_of_USBCtrlEPAllowDataStage 0050             __size_of_USBConfigureEndpoint 0040  
             __end_of_USBCtrlTrfInHandler 1064                        ?_USBCB_SOF_Handler 0070  
                              __end_of_ID 08AB                                 ?i1___bmul 0070  
                               ?i1___wmul 0070                            _OPTION_REGbits 0095  
                            _AsicPushWork 12B6                           ?_InitTempSensor 0070  
                     i1SendCmdReply@count 007A                       ??_USBCB_SOF_Handler 0058  
                ??_USBCtrlTrfSetupHandler 00AD                          i1___bmul@product 0073  
                  _USBStdGetStatusHandler 1D8B                      __end_of_InitResultRx 195F  
                              __pbssBANK0 0068                                __pbssBANK1 00EE  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                              __pbssBANK5 02E0                                __pbssBANK6 0320  
                       i1SendCmdReply@cmd 0076                      __end_of_InitWorkTick 1AC5  
             __size_of_USBWakeFromSuspend 001B                               _pBDTEntryIn 0068  
                       __end_of_ProcessIO 11BB          __end_of_USBCtrlEPServiceComplete 1141  
                                 ?_Send32 0070                 __end_of_USBCB_SOF_Handler 1001  
                              __pmaintext 19A0                      USBCtrlTrfRxService@i 005C  
                               ?_ResultRx 0070                       __end_of_UpdateClock 06A7  
                                 ?___bmul 0058                                   ?___lmul 0058  
                                 ?___wmul 0058                                __pintentry 0004  
                               ?_UserInit 0070                                   _I2CAddr 01B3  
                                 ?_memset 0058                    ?_USBCBStdSetDscHandler 0070  
                          ___lmul@product 0060                                _device_dsc 088D  
                               ?___awtoft 0060                                 ?___ftpack 0058  
                        _USBCtrlEPService 11BB                                 ?_WorkTick 0070  
                             ?_ProcessCmd 0070                                ??i1___bmul 0071  
                              _ep_data_in 01AE                                 ?___lltoft 0060  
                                 ?_rotate 0058                                ??i1___wmul 0074  
                        _InitializeSystem 1989                               _NonceRanges 0320  
             __end_of_USBCtrlTrfRxService 16AE                        _USBCheckStdRequest 1EE3  
                       _configDescriptor1 086D               __end_of_USBCtrlTrfTxService 1451  
                     _USBStdSetCfgHandler 1451                                   _ISRCode 0004  
                                 _PWM1DCH 0612                                   _PWM1DCL 0611  
                                 _OSCTUNE 0098                                   _PWM1CON 0613  
                     ?_USBCheckStdRequest 0070              __size_of_USBStdGetDscHandler 007F  
                                 _UIEbits 0E92             __size_of_USBCBWakeFromSuspend 0001  
                              __stringtab 0800                                   _UIRbits 0E90  
                                 _InitFAN 1A0A                      ?_USBStdSetCfgHandler 0070  
                         __size_of_Send32 00AC                                   _TimeOut 01B7  
                              ??_ResultRx 007C                __size_of_USBEnableEndpoint 0025  
                            ?_AsicPreCalc 00A0                              ?_DetectAsics 0070  
                    ??_USBCheckStdRequest 00AC                           __size_of___bmul 0012  
           __size_of_USBCtrlTrfOutHandler 002D                                   ___awdiv 1DDE  
                         __size_of___lmul 0030                                   ___ftadd 0CD0  
                                 ___awmod 1CA2                                   ___ftdiv 0A60  
                                 ___ftneg 18FB                                   ___lldiv 1E32  
                        ??_USBDeviceTasks 00B2                           __size_of___wmul 001E  
                                 _WorkNow 0133                                   ___ftmul 0B17  
                                 _WorkQue 2288                                   ___fttol 133C  
                                 ___lwdiv 1BB5                         ??_USBStallHandler 0058  
                              ??_UserInit 0068                                ??___awtoft 0063  
                              ??___ftpack 005D                           __size_of_memset 0020  
                              ??_WorkTick 00E5                 __end_of_configDescriptor1 088D  
                    __size_of_USBCBInitEP 001C                                ??___lltoft 0064  
                                 __ptext1 1141                                   __ptext2 0DD4  
                                 __ptext3 16AE                                   __ptext4 193A  
                                 __ptext5 12B6                                   __ptext6 1A26  
                                 __ptext7 0091                                   __ptext8 1BEC  
                                 __ptext9 1572                                   _inPipes 013A  
                        _DetectAsics$2774 00A0                   __size_of_UpdateFanLevel 0148  
             _USBDeferOUTDataStagePackets 012D                           __size_of_rotate 0037  
                            ??_USBSuspend 00A6                                 _T2CONbits 001C  
                       _USBCBErrorHandler 0002                          ___awmod@dividend 005A  
                    __end_of_SendCmdReply 1756                       i1___bmul@multiplier 0072  
                               _IOCBPbits 0394                      __end_of_SendAsicData 1606  
                      ?_USBCBErrorHandler 0070                             ?_USBCBSuspend 0070  
                      __end_of_USB_CD_Ptr 0805           __size_of_USBCtrlTrfSetupHandler 0051  
                                 clrloop0 1911                      end_of_initialization 008E  
                          _ProcessIO$2311 0161                            _ProcessIO$2277 015F  
             __size_of_USBCBCheckOtherReq 0003                        __end_of_USB_SD_Ptr 0804  
                     _pBDTEntryEP0OutNext 006E                                   init_ram 1904  
                     ??_USBCBErrorHandler 0058                                   memset@c 005A  
                                 memset@n 005C                                   memset@p 005F  
                                 initloop 1905                               _UpdateClock 0491  
                     __size_of_ProcessCmd 0111                  ?_USBStdFeatureReqHandler 0070  
                   ??_USBStdSetCfgHandler 00A6                           ___lldiv@divisor 00A0  
                         ___lldiv@counter 00AC                          SendCmdReply@data 0060  
              __size_of_USBCB_SOF_Handler 0001                        __end_of_USBSuspend 1A0A  
                 _USBCtrlEPAllowDataStage 1CEA                                 _RCSTAbits 019D  
                                 rotate@x 0058                                   rotate@y 005C  
                         AsicPreCalc@work 00A0                  _USBCtrlEPServiceComplete 10C8  
                   i1___wmul@multiplicand 0072                _USBStatusStageEnabledFlag1 0130  
              _USBStatusStageEnabledFlag2 0131                        USBEnableEndpoint@p 0062  
               __end_of_USBCBErrorHandler 0003                          _UpdateClock$2776 0144  
                        __CFG_FOSC$INTOSC 0000                     __size_of_InitResultRx 0013  
                               _TRISAbits 008C                                 _TRISBbits 008D  
                               _TRISCbits 008E                            ??_USBCBSuspend 0058  
                      _BothEP0OutUOWNsSet 01B2                 USBStdSetCfgHandler@i_1089 00A9  
                               _OUTPacket 02A0                 USBConfigureEndpoint@EPNum 005D  
              ?_USBCtrlEPAllowStatusStage 0070                     __size_of_InitWorkTick 0021  
     USER_USB_CALLBACK_EVENT_HANDLER@size 00A4                                 _USTATcopy 00EF  
            __end_of_USBTransferOnePacket 08FD                               ___ftdiv@exp 00CE  
                               _TXSTAbits 019E                             _PrecalcHashes 01BA  
                             ___ftmul@exp 00AA                        USBDeviceInit@i_718 005C  
                          __end_of_Send32 09A9                    _USBCtrlTrfSetupHandler 1D3A  
          __size_of_USBCheckVendorRequest 0001             __end_of_USBCheckVendorRequest 0004  
                 __size_ofi1_SendCmdReply 0092                            __end_of___bmul 194C  
                   __end_of_USBDeviceInit 1800                            __end_of___lmul 1BB5  
                            _InitResultRx 194C                            __end_of___wmul 1A44  
                        ??_InitTempSensor 0058                               _BAUDCONbits 019F  
                          __end_of_memset 1A84                         _USBBusIsSuspended 01B8  
                          __end_of_rotate 1C23                              _InitWorkTick 1AA4  
                       __size_ofi1___bmul 0012                                 _LastError 01AC  
                     start_initialization 0015                         __size_ofi1___wmul 0020  
                 ?_USBStdGetStatusHandler 0070                             _CLOCK_LOW_CHG 01A6  
           USBCtrlTrfRxService@byteToRead 005D              __end_of_USBConfigureEndpoint 1CA2  
         __end_of_USBStdFeatureReqHandler 1000         __end_of_USBCtrlEPAllowStatusStage 10C8  
                __end_of_USBCtrlEPService 1237                          SendAsicData@work 005E  
                __end_of_InitializeSystem 19A0                 ??_USBCtrlEPAllowDataStage 005B  
                          USBDeviceInit@i 005D                                  ??_Send32 0058  
                          USBDeviceInit@p 005A                    _pBDTEntryEP0OutCurrent 006D  
                 USBTransferOnePacket@dir 005C                   USBTransferOnePacket@len 005E  
                 ??_USBCBStdSetDscHandler 0058                                  ??___bmul 0059  
                                ??___lmul 0060                                 _ResultQue 01DA  
                                ??___wmul 005C                       _USBStdGetDscHandler 1237  
                               _ProcessIO 1141                               __pdataBANK2 0163  
                             __pdataBANK3 01E2                               __pdataBANK4 0260  
                             __pdataBANK6 0340                         __size_of_ResultRx 005C  
                    __size_of_AsicPreCalc 0400                                  ??_memset 005E  
                    __size_of_DetectAsics 00B7                              ??_ProcessCmd 0154  
                   __size_of_SendCmdReply 00A8                            _UpdateFanLevel 06A7  
                                ??_rotate 005D                __size_of_USBCBErrorHandler 0001  
                   __size_of_SendAsicData 0094                         __size_of_UserInit 0013  
                  _USBActiveConfiguration 0140            __end_of_USBStdGetStatusHandler 1DDE  
                       __size_of___awtoft 0022                         __size_of___ftpack 0061  
                             __pbssBIGRAM 2288                         __size_of_WorkTick 005E  
                       __size_of___lltoft 002A                             __pcstackBANK0 0050  
                           __pcstackBANK1 00A0                             __pcstackBANK2 0144  
            __size_of_USBCtrlTrfInHandler 0063                                  ?_ISRCode 0070  
                    ?_USBStdGetDscHandler 0070                        i1SendCmdReply@data 0078  
              __end_of_USBWakeFromSuspend 19D2                           _USBStallHandler 1AC5  
                            _pBDTEntryOut 0122                                  ?_InitFAN 0070  
                            _send32_count 0138                                 __pnvBANK3 01E8  
                      __end_of_ProcessCmd 0EE5                          ___lwdiv@dividend 005A  
                            _SendCmdReply 16AE                              _SendAsicData 1572  
                    __end_of_USBCBSuspend 18F4              __end_of_USBCBWakeFromSuspend 18F5  
                                ?___awdiv 0058                                  ?___ftadd 00B3  
                                ?___awmod 0058                                  ?___ftdiv 00C0  
                                ?___ftneg 00B0                                  ?___lldiv 00A0  
                              ?_ProcessIO 0070                                  ?___ftmul 00A0  
                                ?___fttol 00D0                                  ?___lwdiv 0058  
                  __end_of_UpdateFanLevel 07EF                              AsicPreCalc@K 00AC  
                            AsicPreCalc@m 00B8                              AsicPreCalc@n 00E4  
                            AsicPreCalc@x 00E0                              AsicPreCalc@y 00DC  
                            AsicPreCalc@z 00D8                                 __pstrings 0800  
              USBCBSendResume@delay_count 01AA                                 __pswtext1 1800  
                    _USBTransferOnePacket 08AF                                  _I2CInBuf 01B4  
                            DetectAsics@x 00A2                                  _I2CCount 0127  
                                _I2CState 0128                                 _last_bit0 0135  
                               _last_bit1 0136              __end_of_USBCtrlTrfOutHandler 1B85  
                   ??_USBStdGetDscHandler 0058                               _ep_data_out 01B0  
                        ___lwdiv@quotient 005D              __size_of_USBCtrlTrfRxService 00A8  
           USBConfigureEndpoint@direction 0058              __size_of_USBCtrlTrfTxService 008E  
                            ?_UpdateClock 00DE                            ___wmul@product 005C  
                                _LATAbits 010C                ??_USBCtrlEPServiceComplete 005D  
                               clear_ram0 1910                                  _PIE2bits 0092  
                   i1___bmul@multiplicand 0070                           SendCmdReply@cmd 005E  
                                _PIR2bits 0012                                  _INPacket 0220  
               USBCtrlEPService@setup_cnt 00B1                                  _UEP0bits 0E98  
              _USBDeferINDataStagePackets 012C                            i1_SendCmdReply 14E0  
                           ??_USBCBInitEP 0065               __size_of_USBCheckStdRequest 005E  
                                _UCONbits 0E8E                           ?_UpdateFanLevel 0070  
                     _UpdateFanLevel$2775 00E2                      _USBConfigureEndpoint 1C62  
                           ProcessCmd@cmd 015A          __size_of_USBStdFeatureReqHandler 011B  
                                i1___bmul 1928                                _ADCON0bits 009D  
                              _ADCON1bits 009E                                _ADCON2bits 009F  
                       ___wmul@multiplier 0058                     ?_USBTransferOnePacket 005C  
                                i1___wmul 1A44                                  _BankSize 013F  
                                _FanLevel 01E8                              _RemoteWakeup 0129  
                                _ClockCfg 01D2                __end_of_USBCBCheckOtherReq 07FF  
                                _HashTime 0126                   __end_of_USBStallHandler 1AE7  
                        __size_of_ISRCode 000F                         ___lmul@multiplier 0058  
             ??_USBCtrlEPAllowStatusStage 0058               __end_of_USBStdSetCfgHandler 14E0  
                                _LastTemp 01B5                              _SlaveAddress 012B  
                      __end_of_device_dsc 089F                   ?_USBCtrlTrfSetupHandler 0070  
                        __size_of_InitFAN 001C                   USBStdGetStatusHandler@p 0059  
               UpdateClock@CLOCK_OD_VALUE 0150                    __end_ofi1_SendCmdReply 1572  
                  USBTransferOnePacket@ep 0061                                  _ResultQC 012A  
                                _ResultRx 1E87                                  _SetupPkt 0040  
                                _SlowTick 01B6                               ??_ProcessIO 015B  
                   ?_USBConfigureEndpoint 0058                                  _UserInit 195F  
                        __size_of___awdiv 0054                          __size_of___ftadd 0104  
                        __size_of___awmod 0048                          __size_of___ftdiv 00B7  
                        __size_of___ftneg 0009                          __size_of___lldiv 0055  
                        __size_of___ftmul 00C2                          __size_of___fttol 0087  
                        __size_of___lwdiv 0037                                  ___awtoft 1AE7  
                                ___ftpack 1F9F                                  _WorkTick 1F41  
                      __end_of__stringtab 0801                                  ___lltoft 1B2E  
                              _ANSELBbits 018D                       __end_of_USBCBInitEP 19EE  
                           ?_AsicPushWork 0070                               _send32_data 0124  
                 __size_of_USBDeviceTasks 00F7                           ___lwdiv@divisor 0058  
                         ___lwdiv@counter 005F                                  __ptext10 08FD  
                                __ptext11 1989                                  __ptext20 0A60  
                                __ptext12 195F                                  __ptext21 1972  
                                __ptext13 194C                                  __ptext30 0B17  
                                __ptext22 1A0A                                  __ptext14 1AA4  
                                __ptext31 1AE7                                  __ptext23 09A9  
                                __ptext15 0491                                  __ptext40 1D8B  
                                __ptext32 0BD9                                  __ptext24 1DDE  
                                __ptext16 1BB5                                  __ptext41 1237  
                                __ptext33 11BB                                  __ptext25 1F41  
                                __ptext17 1B85                                  __ptext50 19B7  
                                __ptext42 1451                                  __ptext34 1001  
                                __ptext26 1CA2                                  __ptext18 1B2E  
                                __ptext51 1C23                                  __ptext43 1A64  
                                __ptext35 1B58                                  __ptext27 06A7  
                                __ptext19 1E32                                  __ptext60 1000  
                                __ptext52 19D2                                  __ptext44 10C8  
                                __ptext36 1606                                  __ptext28 133C  
                                __ptext61 18F4                                  __ptext53 08AF  
                                __ptext45 1CEA                                  __ptext37 1D3A  
                                __ptext29 18FB                                  __ptext70 1A44  
                                __ptext62 18F3                                  __ptext54 1B09  
                                __ptext46 13C3                                  __ptext38 1EE3  
                                __ptext63 1756                                  __ptext55 1C62  
                                __ptext47 1064                                  __ptext39 0EE5  
                                __ptext64 0CD0                                  __ptext56 07FF  
                                __ptext48 1AC5                                  __ptext65 1F9F  
                                __ptext57 07FC                                  __ptext49 19EE  
                                __ptext58 0003                                  __ptext67 1E87  
                                __ptext59 0002                                  __ptext68 14E0  
                                __ptext69 1928                      _USBCBWakeFromSuspend 18F4  
          __end_of_USBCtrlTrfSetupHandler 1D8B                             __size_of_main 0017  
                       ?_USBCtrlEPService 0070                     __size_of_USBCBSuspend 0001  
                       ?_InitializeSystem 0070                        ??_USBCtrlEPService 00AE  
                     _USBGenericOutHandle 012F                       _USBCtrlTrfInHandler 1001  
                         ?i1_SendCmdReply 0076                        ??_InitializeSystem 0068  
                                _outPipes 01A0                      _USBCtrlTrfOutHandler 1B58  
               _USBCtrlEPAllowStatusStage 1064            __size_of_USBCBStdSetDscHandler 0001  
           __end_of_USBCBStdSetDscHandler 0800                    ??_USBTransferOnePacket 005F  
                   _USBCheckVendorRequest 0003                            ??_AsicPushWork 00E5  
               _USBDeferStatusStagePacket 006B                                _INTCONbits 000B  
                      _USBGenericInHandle 012E                      ?_USBCtrlTrfInHandler 0070  
           USBCtrlTrfTxService@byteToSend 005A                                  memset@p1 0058  
                            _USBCBSuspend 18F3                          ?_USBStallHandler 0070  
                USBStdFeatureReqHandler@p 00AB                     ?_USBCBWakeFromSuspend 0070  
                                intlevel1 0000                    __size_of_USBDeviceInit 00AA  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 1C62  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 003F  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0068          ?_USER_USB_CALLBACK_EVENT_HANDLER 00A0  
         _USER_USB_CALLBACK_EVENT_HANDLER 1C23                          ___lldiv@dividend 00A4  
                        AsicPreCalc@F3344 0260                                  next_word 0902  
                    __size_of_UpdateClock 0216                         SendCmdReply@count 0062  
                           SendCmdReply@n 0063                             ??_AsicPreCalc 00A2  
                            _VerySlowTick 01B9                             ??_DetectAsics 0061  
                         _ProcessCmd$1977 0158                    ??_USBConfigureEndpoint 0059  
                   ?_USBCtrlTrfOutHandler 0070                      __CFG_CPUDIV$NOCLKDIV 0000  
                     _USBCtrlTrfRxService 1606                               _USBCBInitEP 19D2  
                      _USBWakeFromSuspend 19B7                   _USBStdFeatureReqHandler 0EE5  
                     _USBCtrlTrfTxService 13C3                       ?_USBWakeFromSuspend 0070  
                        ___lldiv@quotient 00A8                     ??_USBCtrlTrfInHandler 005B  
                   _USBAlternateInterface 0141                               _SSPCON1bits 0215  
                             _SSPCON2bits 0216                       USBEnableEndpoint@ep 0064  
                             _SSPCON3bits 0217                           _endpoint_number 0134  
                 __size_of_InitTempSensor 0017                      ?_USBCtrlTrfRxService 0070  
                ?_USBCtrlEPAllowDataStage 0070                      ?_USBCtrlTrfTxService 0070  
            _USBStatusStageTimeoutCounter 0132                      ??_USBWakeFromSuspend 00A6  
              USBTransferOnePacket@handle 0062                          ??_UpdateFanLevel 00DE  
                              _USB_CD_Ptr 0804  
